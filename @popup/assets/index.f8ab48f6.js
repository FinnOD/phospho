(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();function ot(){}const rs=i=>i;function xr(i,e){for(const t in e)i[t]=e[t];return i}function rf(i){return i()}function al(){return Object.create(null)}function Gt(i){i.forEach(rf)}function ni(i){return typeof i=="function"}function Ze(i,e){return i!=i?e==e:i!==e||i&&typeof i=="object"||typeof i=="function"}function kd(i){return Object.keys(i).length===0}function lo(i,...e){if(i==null)return ot;const t=i.subscribe(...e);return t.unsubscribe?()=>t.unsubscribe():t}function bi(i){let e;return lo(i,t=>e=t)(),e}function Ue(i,e,t){i.$$.on_destroy.push(lo(e,t))}function mt(i,e,t,n){if(i){const r=sf(i,e,t,n);return i[0](r)}}function sf(i,e,t,n){return i[1]&&n?xr(t.ctx.slice(),i[1](n(e))):t.ctx}function gt(i,e,t,n){if(i[2]&&n){const r=i[2](n(t));if(e.dirty===void 0)return r;if(typeof r=="object"){const s=[],o=Math.max(e.dirty.length,r.length);for(let a=0;a<o;a+=1)s[a]=e.dirty[a]|r[a];return s}return e.dirty|r}return e.dirty}function _t(i,e,t,n,r,s){if(r){const o=sf(e,t,n,s);i.p(o,r)}}function vt(i){if(i.ctx.length>32){const e=[],t=i.ctx.length/32;for(let n=0;n<t;n++)e[n]=-1;return e}return-1}function Nd(i){const e={};for(const t in i)e[t]=!0;return e}function jt(i){return i==null?"":i}function Kt(i,e,t){return i.set(t),e}function yi(i){return i&&ni(i.destroy)?i.destroy:ot}const of=typeof window<"u";let co=of?()=>window.performance.now():()=>Date.now(),Oa=of?i=>requestAnimationFrame(i):ot;const vr=new Set;function af(i){vr.forEach(e=>{e.c(i)||(vr.delete(e),e.f())}),vr.size!==0&&Oa(af)}function uo(i){let e;return vr.size===0&&Oa(af),{promise:new Promise(t=>{vr.add(e={c:i,f:t})}),abort(){vr.delete(e)}}}function le(i,e){i.appendChild(e)}function lf(i){if(!i)return document;const e=i.getRootNode?i.getRootNode():i.ownerDocument;return e&&e.host?e:i.ownerDocument}function Fd(i){const e=Ce("style");return zd(lf(i),e),e.sheet}function zd(i,e){return le(i.head||i,e),e.sheet}function Me(i,e,t){i.insertBefore(e,t||null)}function ye(i){i.parentNode.removeChild(i)}function ka(i,e){for(let t=0;t<i.length;t+=1)i[t]&&i[t].d(e)}function Ce(i){return document.createElement(i)}function Dn(i){return document.createElementNS("http://www.w3.org/2000/svg",i)}function Ot(i){return document.createTextNode(i)}function ke(){return Ot(" ")}function $t(){return Ot("")}function $e(i,e,t,n){return i.addEventListener(e,t,n),()=>i.removeEventListener(e,t,n)}function Wi(i){return function(e){return e.preventDefault(),i.call(this,e)}}function Mr(i){return function(e){return e.stopPropagation(),i.call(this,e)}}function Q(i,e,t){t==null?i.removeAttribute(e):i.getAttribute(e)!==t&&i.setAttribute(e,t)}function Sr(i,e){const t=Object.getOwnPropertyDescriptors(i.__proto__);for(const n in e)e[n]==null?i.removeAttribute(n):n==="style"?i.style.cssText=e[n]:n==="__value"?i.value=i[n]=e[n]:t[n]&&t[n].set?i[n]=e[n]:Q(i,n,e[n])}function Ud(i){return i===""?null:+i}function Gd(i){return Array.from(i.childNodes)}function Fn(i,e){e=""+e,i.wholeText!==e&&(i.data=e)}function Zs(i,e){i.value=e==null?"":e}function Bd(i,e,t,n){t===null?i.style.removeProperty(e):i.style.setProperty(e,t,n?"important":"")}function st(i,e,t){i.classList[t?"add":"remove"](e)}function cf(i,e,{bubbles:t=!1,cancelable:n=!1}={}){const r=document.createEvent("CustomEvent");return r.initCustomEvent(i,t,n,e),r}const Ks=new Map;let Js=0;function Vd(i){let e=5381,t=i.length;for(;t--;)e=(e<<5)-e^i.charCodeAt(t);return e>>>0}function Hd(i,e){const t={stylesheet:Fd(e),rules:{}};return Ks.set(i,t),t}function Qs(i,e,t,n,r,s,o,a=0){const l=16.666/n;let c=`{
`;for(let p=0;p<=1;p+=l){const _=e+(t-e)*s(p);c+=p*100+`%{${o(_,1-_)}}
`}const u=c+`100% {${o(t,1-t)}}
}`,f=`__svelte_${Vd(u)}_${a}`,d=lf(i),{stylesheet:m,rules:g}=Ks.get(d)||Hd(d,i);g[f]||(g[f]=!0,m.insertRule(`@keyframes ${f} ${u}`,m.cssRules.length));const h=i.style.animation||"";return i.style.animation=`${h?`${h}, `:""}${f} ${n}ms linear ${r}ms 1 both`,Js+=1,f}function $s(i,e){const t=(i.style.animation||"").split(", "),n=t.filter(e?s=>s.indexOf(e)<0:s=>s.indexOf("__svelte")===-1),r=t.length-n.length;r&&(i.style.animation=n.join(", "),Js-=r,Js||Wd())}function Wd(){Oa(()=>{Js||(Ks.forEach(i=>{const{ownerNode:e}=i.stylesheet;e&&ye(e)}),Ks.clear())})}let Kr;function Xr(i){Kr=i}function qi(){if(!Kr)throw new Error("Function called outside component initialization");return Kr}function jd(i){qi().$$.before_update.push(i)}function ss(i){qi().$$.on_mount.push(i)}function Rt(i){qi().$$.on_destroy.push(i)}function Ti(){const i=qi();return(e,t,{cancelable:n=!1}={})=>{const r=i.$$.callbacks[e];if(r){const s=cf(e,t,{cancelable:n});return r.slice().forEach(o=>{o.call(i,s)}),!s.defaultPrevented}return!0}}function Pn(i,e){return qi().$$.context.set(i,e),e}function Bn(i){return qi().$$.context.get(i)}function ut(i,e){const t=i.$$.callbacks[e.type];t&&t.slice().forEach(n=>n.call(this,e))}const Hr=[],St=[],Hs=[],va=[],uf=Promise.resolve();let ba=!1;function ff(){ba||(ba=!0,uf.then(df))}function Jr(){return ff(),uf}function xi(i){Hs.push(i)}function Xt(i){va.push(i)}const Lo=new Set;let gs=0;function df(){const i=Kr;do{for(;gs<Hr.length;){const e=Hr[gs];gs++,Xr(e),qd(e.$$)}for(Xr(null),Hr.length=0,gs=0;St.length;)St.pop()();for(let e=0;e<Hs.length;e+=1){const t=Hs[e];Lo.has(t)||(Lo.add(t),t())}Hs.length=0}while(Hr.length);for(;va.length;)va.pop()();ba=!1,Lo.clear(),Xr(i)}function qd(i){if(i.fragment!==null){i.update(),Gt(i.before_update);const e=i.dirty;i.dirty=[-1],i.fragment&&i.fragment.p(i.ctx,e),i.after_update.forEach(xi)}}let Nr;function Na(){return Nr||(Nr=Promise.resolve(),Nr.then(()=>{Nr=null})),Nr}function Bi(i,e,t){i.dispatchEvent(cf(`${e?"intro":"outro"}${t}`))}const Ws=new Set;let zn;function Tt(){zn={r:0,c:[],p:zn}}function Ct(){zn.r||Gt(zn.c),zn=zn.p}function X(i,e){i&&i.i&&(Ws.delete(i),i.i(e))}function J(i,e,t,n){if(i&&i.o){if(Ws.has(i))return;Ws.add(i),zn.c.push(()=>{Ws.delete(i),n&&(t&&i.d(1),n())}),i.o(e)}else n&&n()}const Fa={duration:0};function Xd(i,e,t){let n=e(i,t),r=!1,s,o,a=0;function l(){s&&$s(i,s)}function c(){const{delay:f=0,duration:d=300,easing:m=rs,tick:g=ot,css:h}=n||Fa;h&&(s=Qs(i,0,1,d,f,m,h,a++)),g(0,1);const p=co()+f,_=p+d;o&&o.abort(),r=!0,xi(()=>Bi(i,!0,"start")),o=uo(b=>{if(r){if(b>=_)return g(1,0),Bi(i,!0,"end"),l(),r=!1;if(b>=p){const y=m((b-p)/d);g(y,1-y)}}return r})}let u=!1;return{start(){u||(u=!0,$s(i),ni(n)?(n=n(),Na().then(c)):c())},invalidate(){u=!1},end(){r&&(l(),r=!1)}}}function Yd(i,e,t){let n=e(i,t),r=!0,s;const o=zn;o.r+=1;function a(){const{delay:l=0,duration:c=300,easing:u=rs,tick:f=ot,css:d}=n||Fa;d&&(s=Qs(i,1,0,c,l,u,d));const m=co()+l,g=m+c;xi(()=>Bi(i,!1,"start")),uo(h=>{if(r){if(h>=g)return f(0,1),Bi(i,!1,"end"),--o.r||Gt(o.c),!1;if(h>=m){const p=u((h-m)/c);f(1-p,p)}}return r})}return ni(n)?Na().then(()=>{n=n(),a()}):a(),{end(l){l&&n.tick&&n.tick(1,0),r&&(s&&$s(i,s),r=!1)}}}function ll(i,e,t,n){let r=e(i,t),s=n?0:1,o=null,a=null,l=null;function c(){l&&$s(i,l)}function u(d,m){const g=d.b-s;return m*=Math.abs(g),{a:s,b:d.b,d:g,duration:m,start:d.start,end:d.start+m,group:d.group}}function f(d){const{delay:m=0,duration:g=300,easing:h=rs,tick:p=ot,css:_}=r||Fa,b={start:co()+m,b:d};d||(b.group=zn,zn.r+=1),o||a?a=b:(_&&(c(),l=Qs(i,s,d,g,m,h,_)),d&&p(0,1),o=u(b,g),xi(()=>Bi(i,d,"start")),uo(y=>{if(a&&y>a.start&&(o=u(a,g),a=null,Bi(i,o.b,"start"),_&&(c(),l=Qs(i,s,o.b,o.duration,0,h,r.css))),o){if(y>=o.end)p(s=o.b,1-s),Bi(i,o.b,"end"),a||(o.b?c():--o.group.r||Gt(o.group.c)),o=null;else if(y>=o.start){const w=y-o.start;s=o.a+o.d*h(w/o.duration),p(s,1-s)}}return!!(o||a)}))}return{run(d){ni(r)?Na().then(()=>{r=r(),f(d)}):f(d)},end(){c(),o=a=null}}}function hf(i,e){J(i,1,1,()=>{e.delete(i.key)})}function pf(i,e,t,n,r,s,o,a,l,c,u,f){let d=i.length,m=s.length,g=d;const h={};for(;g--;)h[i[g].key]=g;const p=[],_=new Map,b=new Map;for(g=m;g--;){const M=f(r,s,g),P=t(M);let v=o.get(P);v?n&&v.p(M,e):(v=c(P,M),v.c()),_.set(P,p[g]=v),P in h&&b.set(P,Math.abs(g-h[P]))}const y=new Set,w=new Set;function x(M){X(M,1),M.m(a,u),o.set(M.key,M),u=M.first,m--}for(;d&&m;){const M=p[m-1],P=i[d-1],v=M.key,E=P.key;M===P?(u=M.first,d--,m--):_.has(E)?!o.has(v)||y.has(v)?x(M):w.has(E)?d--:b.get(v)>b.get(E)?(w.add(v),x(M)):(y.add(E),d--):(l(P,o),d--)}for(;d--;){const M=i[d];_.has(M.key)||l(M,o)}for(;m;)x(p[m-1]);return p}function za(i,e){const t={},n={},r={$$scope:1};let s=i.length;for(;s--;){const o=i[s],a=e[s];if(a){for(const l in o)l in a||(n[l]=1);for(const l in a)r[l]||(t[l]=a[l],r[l]=1);i[s]=a}else for(const l in o)r[l]=1}for(const o in n)o in t||(t[o]=void 0);return t}function Yt(i,e,t){const n=i.$$.props[e];n!==void 0&&(i.$$.bound[n]=t,t(i.$$.ctx[n]))}function Oe(i){i&&i.c()}function Pe(i,e,t,n){const{fragment:r,on_mount:s,on_destroy:o,after_update:a}=i.$$;r&&r.m(e,t),n||xi(()=>{const l=s.map(rf).filter(ni);o?o.push(...l):Gt(l),i.$$.on_mount=[]}),a.forEach(xi)}function Re(i,e){const t=i.$$;t.fragment!==null&&(Gt(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function Zd(i,e){i.$$.dirty[0]===-1&&(Hr.push(i),ff(),i.$$.dirty.fill(0)),i.$$.dirty[e/31|0]|=1<<e%31}function et(i,e,t,n,r,s,o,a=[-1]){const l=Kr;Xr(i);const c=i.$$={fragment:null,ctx:null,props:s,update:ot,not_equal:r,bound:al(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(l?l.$$.context:[])),callbacks:al(),dirty:a,skip_bound:!1,root:e.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=t?t(i,e.props||{},(f,d,...m)=>{const g=m.length?m[0]:d;return c.ctx&&r(c.ctx[f],c.ctx[f]=g)&&(!c.skip_bound&&c.bound[f]&&c.bound[f](g),u&&Zd(i,f)),d}):[],c.update(),u=!0,Gt(c.before_update),c.fragment=n?n(c.ctx):!1,e.target){if(e.hydrate){const f=Gd(e.target);c.fragment&&c.fragment.l(f),f.forEach(ye)}else c.fragment&&c.fragment.c();e.intro&&X(i.$$.fragment),Pe(i,e.target,e.anchor,e.customElement),df()}Xr(l)}class tt{$destroy(){Re(this,1),this.$destroy=ot}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}$set(e){this.$$set&&!kd(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const Ji=[];function mf(i,e){return{subscribe:ft(i,e).subscribe}}function ft(i,e=ot){let t;const n=new Set;function r(a){if(Ze(i,a)&&(i=a,t)){const l=!Ji.length;for(const c of n)c[1](),Ji.push(c,i);if(l){for(let c=0;c<Ji.length;c+=2)Ji[c][0](Ji[c+1]);Ji.length=0}}}function s(a){r(a(i))}function o(a,l=ot){const c=[a,l];return n.add(c),n.size===1&&(t=e(r)||ot),a(i),()=>{n.delete(c),n.size===0&&(t(),t=null)}}return{set:r,update:s,subscribe:o}}function Ln(i,e,t){const n=!Array.isArray(i),r=n?[i]:i,s=e.length<2;return mf(t,o=>{let a=!1;const l=[];let c=0,u=ot;const f=()=>{if(c)return;u();const m=e(n?l[0]:l,o);s?o(m):u=ni(m)?m:ot},d=r.map((m,g)=>lo(m,h=>{l[g]=h,c&=~(1<<g),a&&f()},()=>{c|=1<<g}));return a=!0,f(),function(){Gt(d),u()}})}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ua="144",Qi={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},$i={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Kd=0,cl=1,Jd=2,gf=1,_f=2,Wr=3,Er=0,bn=1,vi=2,wi=0,br=1,ul=2,fl=3,dl=4,Qd=5,mr=100,$d=101,eh=102,hl=103,pl=104,th=200,nh=201,ih=202,rh=203,vf=204,bf=205,sh=206,oh=207,ah=208,lh=209,ch=210,uh=0,fh=1,dh=2,wa=3,hh=4,ph=5,mh=6,gh=7,Ga=0,_h=1,vh=2,Gn=0,bh=1,wh=2,yh=3,wf=4,xh=5,yf=300,Ar=301,Tr=302,ya=303,xa=304,fo=306,Ma=1e3,Rn=1001,Sa=1002,rn=1003,ml=1004,gl=1005,mn=1006,Mh=1007,ho=1008,ji=1009,Sh=1010,Eh=1011,xf=1012,Ah=1013,zi=1014,Ui=1015,Qr=1016,Th=1017,Ch=1018,wr=1020,Lh=1021,Dh=1022,Un=1023,Ph=1024,Rh=1025,Vi=1026,Cr=1027,Ih=1028,Oh=1029,kh=1030,Nh=1031,Fh=1033,Do=33776,Po=33777,Ro=33778,Io=33779,_l=35840,vl=35841,bl=35842,wl=35843,zh=36196,yl=37492,xl=37496,Ml=37808,Sl=37809,El=37810,Al=37811,Tl=37812,Cl=37813,Ll=37814,Dl=37815,Pl=37816,Rl=37817,Il=37818,Ol=37819,kl=37820,Nl=37821,Fl=36492,Mi=3e3,Lt=3001,Uh=3200,Gh=3201,Mf=0,Bh=1,$n="srgb",Gi="srgb-linear",Oo=7680,Vh=519,zl=35044,Ul="300 es",Ea=1035;class Xi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Ht=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],ko=Math.PI/180,Gl=180/Math.PI;function os(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Ht[i&255]+Ht[i>>8&255]+Ht[i>>16&255]+Ht[i>>24&255]+"-"+Ht[e&255]+Ht[e>>8&255]+"-"+Ht[e>>16&15|64]+Ht[e>>24&255]+"-"+Ht[t&63|128]+Ht[t>>8&255]+"-"+Ht[t>>16&255]+Ht[t>>24&255]+Ht[n&255]+Ht[n>>8&255]+Ht[n>>16&255]+Ht[n>>24&255]).toLowerCase()}function sn(i,e,t){return Math.max(e,Math.min(t,i))}function Hh(i,e){return(i%e+e)%e}function No(i,e,t){return(1-t)*i+t*e}function Bl(i){return(i&i-1)===0&&i!==0}function Aa(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function _s(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function an(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}class Be{constructor(e=0,t=0){Be.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class gn{constructor(){gn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],f=n[7],d=n[2],m=n[5],g=n[8],h=r[0],p=r[3],_=r[6],b=r[1],y=r[4],w=r[7],x=r[2],M=r[5],P=r[8];return s[0]=o*h+a*b+l*x,s[3]=o*p+a*y+l*M,s[6]=o*_+a*w+l*P,s[1]=c*h+u*b+f*x,s[4]=c*p+u*y+f*M,s[7]=c*_+u*w+f*P,s[2]=d*h+m*b+g*x,s[5]=d*p+m*y+g*M,s[8]=d*_+m*w+g*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=u*o-a*c,d=a*l-u*s,m=c*s-o*l,g=t*f+n*d+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const h=1/g;return e[0]=f*h,e[1]=(r*c-u*n)*h,e[2]=(a*n-r*o)*h,e[3]=d*h,e[4]=(u*t-r*l)*h,e[5]=(r*s-a*t)*h,e[6]=m*h,e[7]=(n*l-c*t)*h,e[8]=(o*t-n*s)*h,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*s+n*l,r[3]=t*o+n*c,r[6]=t*a+n*u,r[1]=-n*s+t*l,r[4]=-n*o+t*c,r[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Sf(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function $r(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Hi(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function js(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const Fo={[$n]:{[Gi]:Hi},[Gi]:{[$n]:js}},Sn={legacyMode:!0,get workingColorSpace(){return Gi},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,e,t){if(this.legacyMode||e===t||!e||!t)return i;if(Fo[e]&&Fo[e][t]!==void 0){const n=Fo[e][t];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)}},Ef={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},kt={r:0,g:0,b:0},En={h:0,s:0,l:0},vs={h:0,s:0,l:0};function zo(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}function bs(i,e){return e.r=i.r,e.g=i.g,e.b=i.b,e}class qe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=$n){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Sn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=Gi){return this.r=e,this.g=t,this.b=n,Sn.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=Gi){if(e=Hh(e,1),t=sn(t,0,1),n=sn(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=zo(o,s,e+1/3),this.g=zo(o,s,e),this.b=zo(o,s,e-1/3)}return Sn.toWorkingColorSpace(this,r),this}setStyle(e,t=$n){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Sn.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Sn.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseFloat(s[2])/100,u=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,c,u,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Sn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Sn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=$n){const n=Ef[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Hi(e.r),this.g=Hi(e.g),this.b=Hi(e.b),this}copyLinearToSRGB(e){return this.r=js(e.r),this.g=js(e.g),this.b=js(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$n){return Sn.fromWorkingColorSpace(bs(this,kt),e),sn(kt.r*255,0,255)<<16^sn(kt.g*255,0,255)<<8^sn(kt.b*255,0,255)<<0}getHexString(e=$n){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Gi){Sn.fromWorkingColorSpace(bs(this,kt),t);const n=kt.r,r=kt.g,s=kt.b,o=Math.max(n,r,s),a=Math.min(n,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const f=o-a;switch(c=u<=.5?f/(o+a):f/(2-o-a),o){case n:l=(r-s)/f+(r<s?6:0);break;case r:l=(s-n)/f+2;break;case s:l=(n-r)/f+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Gi){return Sn.fromWorkingColorSpace(bs(this,kt),t),e.r=kt.r,e.g=kt.g,e.b=kt.b,e}getStyle(e=$n){return Sn.fromWorkingColorSpace(bs(this,kt),e),e!==$n?`color(${e} ${kt.r} ${kt.g} ${kt.b})`:`rgb(${kt.r*255|0},${kt.g*255|0},${kt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(En),En.h+=e,En.s+=t,En.l+=n,this.setHSL(En.h,En.s,En.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(En),e.getHSL(vs);const n=No(En.h,vs.h,t),r=No(En.s,vs.s,t),s=No(En.l,vs.l,t);return this.setHSL(n,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}qe.NAMES=Ef;let er;class Af{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{er===void 0&&(er=$r("canvas")),er.width=e.width,er.height=e.height;const n=er.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=er}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=$r("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Hi(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Hi(t[n]/255)*255):t[n]=Hi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Tf{constructor(e=null){this.isSource=!0,this.uuid=os(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(Uo(r[o].image)):s.push(Uo(r[o]))}else s=Uo(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function Uo(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Af.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Wh=0;class yn extends Xi{constructor(e=yn.DEFAULT_IMAGE,t=yn.DEFAULT_MAPPING,n=Rn,r=Rn,s=mn,o=ho,a=Un,l=ji,c=1,u=Mi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Wh++}),this.uuid=os(),this.name="",this.source=new Tf(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Be(0,0),this.repeat=new Be(1,1),this.center=new Be(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==yf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ma:e.x=e.x-Math.floor(e.x);break;case Rn:e.x=e.x<0?0:1;break;case Sa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ma:e.y=e.y-Math.floor(e.y);break;case Rn:e.y=e.y<0?0:1;break;case Sa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}yn.DEFAULT_IMAGE=null;yn.DEFAULT_MAPPING=yf;class Ut{constructor(e=0,t=0,n=0,r=1){Ut.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],f=l[8],d=l[1],m=l[5],g=l[9],h=l[2],p=l[6],_=l[10];if(Math.abs(u-d)<.01&&Math.abs(f-h)<.01&&Math.abs(g-p)<.01){if(Math.abs(u+d)<.1&&Math.abs(f+h)<.1&&Math.abs(g+p)<.1&&Math.abs(c+m+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,w=(m+1)/2,x=(_+1)/2,M=(u+d)/4,P=(f+h)/4,v=(g+p)/4;return y>w&&y>x?y<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(y),r=M/n,s=P/n):w>x?w<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(w),n=M/r,s=v/r):x<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(x),n=P/s,r=v/s),this.set(n,r,s,t),this}let b=Math.sqrt((p-g)*(p-g)+(f-h)*(f-h)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(p-g)/b,this.y=(f-h)/b,this.z=(d-u)/b,this.w=Math.acos((c+m+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Si extends Xi{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Ut(0,0,e,t),this.scissorTest=!1,this.viewport=new Ut(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new yn(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:mn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Tf(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Cf extends yn{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=rn,this.minFilter=rn,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class jh extends yn{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=rn,this.minFilter=rn,this.wrapR=Rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ei{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],f=n[r+3];const d=s[o+0],m=s[o+1],g=s[o+2],h=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=d,e[t+1]=m,e[t+2]=g,e[t+3]=h;return}if(f!==h||l!==d||c!==m||u!==g){let p=1-a;const _=l*d+c*m+u*g+f*h,b=_>=0?1:-1,y=1-_*_;if(y>Number.EPSILON){const x=Math.sqrt(y),M=Math.atan2(x,_*b);p=Math.sin(p*M)/x,a=Math.sin(a*M)/x}const w=a*b;if(l=l*p+d*w,c=c*p+m*w,u=u*p+g*w,f=f*p+h*w,p===1-a){const x=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=x,c*=x,u*=x,f*=x}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],f=s[o],d=s[o+1],m=s[o+2],g=s[o+3];return e[t]=a*g+u*f+l*m-c*d,e[t+1]=l*g+u*d+c*f-a*m,e[t+2]=c*g+u*m+a*d-l*f,e[t+3]=u*g-a*f-l*d-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),f=a(s/2),d=l(n/2),m=l(r/2),g=l(s/2);switch(o){case"XYZ":this._x=d*u*f+c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f-d*m*g;break;case"YXZ":this._x=d*u*f+c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f+d*m*g;break;case"ZXY":this._x=d*u*f-c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f-d*m*g;break;case"ZYX":this._x=d*u*f-c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f+d*m*g;break;case"YZX":this._x=d*u*f+c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f-d*m*g;break;case"XZY":this._x=d*u*f-c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f+d*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],f=t[10],d=n+a+f;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(u-l)*m,this._y=(s-c)*m,this._z=(o-r)*m}else if(n>a&&n>f){const m=2*Math.sqrt(1+n-a-f);this._w=(u-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(s+c)/m}else if(a>f){const m=2*Math.sqrt(1+a-n-f);this._w=(s-c)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+f-n-a);this._w=(o-r)/m,this._x=(s+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(sn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*n+t*this._x,this._y=m*r+t*this._y,this._z=m*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*f+this._w*d,this._x=n*f+this._x*d,this._y=r*f+this._y*d,this._z=s*f+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(s),n*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class G{constructor(e=0,t=0,n=0){G.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Vl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Vl.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*n,u=l*n+a*t-s*r,f=l*r+s*n-o*t,d=-s*t-o*n-a*r;return this.x=c*l+d*-s+u*-a-f*-o,this.y=u*l+d*-o+f*-s-c*-a,this.z=f*l+d*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Go.copy(this).projectOnVector(e),this.sub(Go)}reflect(e){return this.sub(Go.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(sn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Go=new G,Vl=new Ei;class as{constructor(e=new G(1/0,1/0,1/0),t=new G(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],f=e[l+1],d=e[l+2];u<t&&(t=u),f<n&&(n=f),d<r&&(r=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),f=e.getY(l),d=e.getZ(l);u<t&&(t=u),f<n&&(n=f),d<r&&(r=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ri.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Ri.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Ri)}else n.boundingBox===null&&n.computeBoundingBox(),Bo.copy(n.boundingBox),Bo.applyMatrix4(e.matrixWorld),this.union(Bo);const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ri),Ri.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Fr),ws.subVectors(this.max,Fr),tr.subVectors(e.a,Fr),nr.subVectors(e.b,Fr),ir.subVectors(e.c,Fr),fi.subVectors(nr,tr),di.subVectors(ir,nr),Ii.subVectors(tr,ir);let t=[0,-fi.z,fi.y,0,-di.z,di.y,0,-Ii.z,Ii.y,fi.z,0,-fi.x,di.z,0,-di.x,Ii.z,0,-Ii.x,-fi.y,fi.x,0,-di.y,di.x,0,-Ii.y,Ii.x,0];return!Vo(t,tr,nr,ir,ws)||(t=[1,0,0,0,1,0,0,0,1],!Vo(t,tr,nr,ir,ws))?!1:(ys.crossVectors(fi,di),t=[ys.x,ys.y,ys.z],Vo(t,tr,nr,ir,ws))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ri.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ri).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Yn=[new G,new G,new G,new G,new G,new G,new G,new G],Ri=new G,Bo=new as,tr=new G,nr=new G,ir=new G,fi=new G,di=new G,Ii=new G,Fr=new G,ws=new G,ys=new G,Oi=new G;function Vo(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Oi.fromArray(i,s);const a=r.x*Math.abs(Oi.x)+r.y*Math.abs(Oi.y)+r.z*Math.abs(Oi.z),l=e.dot(Oi),c=t.dot(Oi),u=n.dot(Oi);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const qh=new as,Hl=new G,xs=new G,Ho=new G;class po{constructor(e=new G,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):qh.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Ho.subVectors(e,this.center);const t=Ho.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.add(Ho.multiplyScalar(r/n)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?xs.set(0,0,1).multiplyScalar(e.radius):xs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Hl.copy(e.center).add(xs)),this.expandByPoint(Hl.copy(e.center).sub(xs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Zn=new G,Wo=new G,Ms=new G,hi=new G,jo=new G,Ss=new G,qo=new G;class Ba{constructor(e=new G,t=new G(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Zn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Zn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Zn.copy(this.direction).multiplyScalar(t).add(this.origin),Zn.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Wo.copy(e).add(t).multiplyScalar(.5),Ms.copy(t).sub(e).normalize(),hi.copy(this.origin).sub(Wo);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Ms),a=hi.dot(this.direction),l=-hi.dot(Ms),c=hi.lengthSq(),u=Math.abs(1-o*o);let f,d,m,g;if(u>0)if(f=o*l-a,d=o*a-l,g=s*u,f>=0)if(d>=-g)if(d<=g){const h=1/u;f*=h,d*=h,m=f*(f+o*d+2*a)+d*(o*f+d+2*l)+c}else d=s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;else d=-s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;else d<=-g?(f=Math.max(0,-(-o*s+a)),d=f>0?-s:Math.min(Math.max(-s,-l),s),m=-f*f+d*(d+2*l)+c):d<=g?(f=0,d=Math.min(Math.max(-s,-l),s),m=d*(d+2*l)+c):(f=Math.max(0,-(o*s+a)),d=f>0?s:Math.min(Math.max(-s,-l),s),m=-f*f+d*(d+2*l)+c);else d=o>0?-s:s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),r&&r.copy(Ms).multiplyScalar(d).add(Wo),m}intersectSphere(e,t){Zn.subVectors(e.center,this.origin);const n=Zn.dot(this.direction),r=Zn.dot(Zn)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,r=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,r=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>r||((s>n||n!==n)&&(n=s),(o<r||r!==r)&&(r=o),f>=0?(a=(e.min.z-d.z)*f,l=(e.max.z-d.z)*f):(a=(e.max.z-d.z)*f,l=(e.min.z-d.z)*f),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,Zn)!==null}intersectTriangle(e,t,n,r,s){jo.subVectors(t,e),Ss.subVectors(n,e),qo.crossVectors(jo,Ss);let o=this.direction.dot(qo),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;hi.subVectors(this.origin,e);const l=a*this.direction.dot(Ss.crossVectors(hi,Ss));if(l<0)return null;const c=a*this.direction.dot(jo.cross(hi));if(c<0||l+c>o)return null;const u=-a*hi.dot(qo);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class yt{constructor(){yt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=r,_[1]=s,_[5]=o,_[9]=a,_[13]=l,_[2]=c,_[6]=u,_[10]=f,_[14]=d,_[3]=m,_[7]=g,_[11]=h,_[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new yt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/rr.setFromMatrixColumn(e,0).length(),s=1/rr.setFromMatrixColumn(e,1).length(),o=1/rr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const d=o*u,m=o*f,g=a*u,h=a*f;t[0]=l*u,t[4]=-l*f,t[8]=c,t[1]=m+g*c,t[5]=d-h*c,t[9]=-a*l,t[2]=h-d*c,t[6]=g+m*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,m=l*f,g=c*u,h=c*f;t[0]=d+h*a,t[4]=g*a-m,t[8]=o*c,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=m*a-g,t[6]=h+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,m=l*f,g=c*u,h=c*f;t[0]=d-h*a,t[4]=-o*f,t[8]=g+m*a,t[1]=m+g*a,t[5]=o*u,t[9]=h-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,m=o*f,g=a*u,h=a*f;t[0]=l*u,t[4]=g*c-m,t[8]=d*c+h,t[1]=l*f,t[5]=h*c+d,t[9]=m*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,m=o*c,g=a*l,h=a*c;t[0]=l*u,t[4]=h-d*f,t[8]=g*f+m,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=m*f+g,t[10]=d-h*f}else if(e.order==="XZY"){const d=o*l,m=o*c,g=a*l,h=a*c;t[0]=l*u,t[4]=-f,t[8]=c*u,t[1]=d*f+h,t[5]=o*u,t[9]=m*f-g,t[2]=g*f-m,t[6]=a*u,t[10]=h*f+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Xh,e,Yh)}lookAt(e,t,n){const r=this.elements;return ln.subVectors(e,t),ln.lengthSq()===0&&(ln.z=1),ln.normalize(),pi.crossVectors(n,ln),pi.lengthSq()===0&&(Math.abs(n.z)===1?ln.x+=1e-4:ln.z+=1e-4,ln.normalize(),pi.crossVectors(n,ln)),pi.normalize(),Es.crossVectors(ln,pi),r[0]=pi.x,r[4]=Es.x,r[8]=ln.x,r[1]=pi.y,r[5]=Es.y,r[9]=ln.y,r[2]=pi.z,r[6]=Es.z,r[10]=ln.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],f=n[5],d=n[9],m=n[13],g=n[2],h=n[6],p=n[10],_=n[14],b=n[3],y=n[7],w=n[11],x=n[15],M=r[0],P=r[4],v=r[8],E=r[12],S=r[1],O=r[5],F=r[9],L=r[13],I=r[2],k=r[6],R=r[10],W=r[14],Y=r[3],H=r[7],B=r[11],j=r[15];return s[0]=o*M+a*S+l*I+c*Y,s[4]=o*P+a*O+l*k+c*H,s[8]=o*v+a*F+l*R+c*B,s[12]=o*E+a*L+l*W+c*j,s[1]=u*M+f*S+d*I+m*Y,s[5]=u*P+f*O+d*k+m*H,s[9]=u*v+f*F+d*R+m*B,s[13]=u*E+f*L+d*W+m*j,s[2]=g*M+h*S+p*I+_*Y,s[6]=g*P+h*O+p*k+_*H,s[10]=g*v+h*F+p*R+_*B,s[14]=g*E+h*L+p*W+_*j,s[3]=b*M+y*S+w*I+x*Y,s[7]=b*P+y*O+w*k+x*H,s[11]=b*v+y*F+w*R+x*B,s[15]=b*E+y*L+w*W+x*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],f=e[6],d=e[10],m=e[14],g=e[3],h=e[7],p=e[11],_=e[15];return g*(+s*l*f-r*c*f-s*a*d+n*c*d+r*a*m-n*l*m)+h*(+t*l*m-t*c*d+s*o*d-r*o*m+r*c*u-s*l*u)+p*(+t*c*f-t*a*m-s*o*f+n*o*m+s*a*u-n*c*u)+_*(-r*a*u-t*l*f+t*a*d+r*o*f-n*o*d+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],d=e[10],m=e[11],g=e[12],h=e[13],p=e[14],_=e[15],b=f*p*c-h*d*c+h*l*m-a*p*m-f*l*_+a*d*_,y=g*d*c-u*p*c-g*l*m+o*p*m+u*l*_-o*d*_,w=u*h*c-g*f*c+g*a*m-o*h*m-u*a*_+o*f*_,x=g*f*l-u*h*l-g*a*d+o*h*d+u*a*p-o*f*p,M=t*b+n*y+r*w+s*x;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/M;return e[0]=b*P,e[1]=(h*d*s-f*p*s-h*r*m+n*p*m+f*r*_-n*d*_)*P,e[2]=(a*p*s-h*l*s+h*r*c-n*p*c-a*r*_+n*l*_)*P,e[3]=(f*l*s-a*d*s-f*r*c+n*d*c+a*r*m-n*l*m)*P,e[4]=y*P,e[5]=(u*p*s-g*d*s+g*r*m-t*p*m-u*r*_+t*d*_)*P,e[6]=(g*l*s-o*p*s-g*r*c+t*p*c+o*r*_-t*l*_)*P,e[7]=(o*d*s-u*l*s+u*r*c-t*d*c-o*r*m+t*l*m)*P,e[8]=w*P,e[9]=(g*f*s-u*h*s-g*n*m+t*h*m+u*n*_-t*f*_)*P,e[10]=(o*h*s-g*a*s+g*n*c-t*h*c-o*n*_+t*a*_)*P,e[11]=(u*a*s-o*f*s-u*n*c+t*f*c+o*n*m-t*a*m)*P,e[12]=x*P,e[13]=(u*h*r-g*f*r+g*n*d-t*h*d-u*n*p+t*f*p)*P,e[14]=(g*a*r-o*h*r-g*n*l+t*h*l+o*n*p-t*a*p)*P,e[15]=(o*f*r-u*a*r+u*n*l-t*f*l-o*n*d+t*a*d)*P,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,f=a+a,d=s*c,m=s*u,g=s*f,h=o*u,p=o*f,_=a*f,b=l*c,y=l*u,w=l*f,x=n.x,M=n.y,P=n.z;return r[0]=(1-(h+_))*x,r[1]=(m+w)*x,r[2]=(g-y)*x,r[3]=0,r[4]=(m-w)*M,r[5]=(1-(d+_))*M,r[6]=(p+b)*M,r[7]=0,r[8]=(g+y)*P,r[9]=(p-b)*P,r[10]=(1-(d+h))*P,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=rr.set(r[0],r[1],r[2]).length();const o=rr.set(r[4],r[5],r[6]).length(),a=rr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],An.copy(this);const c=1/s,u=1/o,f=1/a;return An.elements[0]*=c,An.elements[1]*=c,An.elements[2]*=c,An.elements[4]*=u,An.elements[5]*=u,An.elements[6]*=u,An.elements[8]*=f,An.elements[9]*=f,An.elements[10]*=f,t.setFromRotationMatrix(An),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o){const a=this.elements,l=2*s/(t-e),c=2*s/(n-r),u=(t+e)/(t-e),f=(n+r)/(n-r),d=-(o+s)/(o-s),m=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,s,o){const a=this.elements,l=1/(t-e),c=1/(n-r),u=1/(o-s),f=(t+e)*l,d=(n+r)*c,m=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const rr=new G,An=new yt,Xh=new G(0,0,0),Yh=new G(1,1,1),pi=new G,Es=new G,ln=new G,Wl=new yt,jl=new Ei;class ls{constructor(e=0,t=0,n=0,r=ls.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],f=r[2],d=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(sn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-sn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(sn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-sn(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(sn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-sn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Wl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Wl,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return jl.setFromEuler(this),this.setFromQuaternion(jl,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}ls.DefaultOrder="XYZ";ls.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Va{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Zh=0;const ql=new G,sr=new Ei,Kn=new yt,As=new G,zr=new G,Kh=new G,Jh=new Ei,Xl=new G(1,0,0),Yl=new G(0,1,0),Zl=new G(0,0,1),Qh={type:"added"},Kl={type:"removed"};class ht extends Xi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Zh++}),this.uuid=os(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ht.DefaultUp.clone();const e=new G,t=new ls,n=new Ei,r=new G(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new yt},normalMatrix:{value:new gn}}),this.matrix=new yt,this.matrixWorld=new yt,this.matrixAutoUpdate=ht.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ht.DefaultMatrixWorldAutoUpdate,this.layers=new Va,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return sr.setFromAxisAngle(e,t),this.quaternion.multiply(sr),this}rotateOnWorldAxis(e,t){return sr.setFromAxisAngle(e,t),this.quaternion.premultiply(sr),this}rotateX(e){return this.rotateOnAxis(Xl,e)}rotateY(e){return this.rotateOnAxis(Yl,e)}rotateZ(e){return this.rotateOnAxis(Zl,e)}translateOnAxis(e,t){return ql.copy(e).applyQuaternion(this.quaternion),this.position.add(ql.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Xl,e)}translateY(e){return this.translateOnAxis(Yl,e)}translateZ(e){return this.translateOnAxis(Zl,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Kn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?As.copy(e):As.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),zr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Kn.lookAt(zr,As,this.up):Kn.lookAt(As,zr,this.up),this.quaternion.setFromRotationMatrix(Kn),r&&(Kn.extractRotation(r.matrixWorld),sr.setFromRotationMatrix(Kn),this.quaternion.premultiply(sr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Qh)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Kl)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Kl)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Kn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Kn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Kn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zr,e,Kh),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(zr,Jh,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++){const a=r[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];s(e.shapes,f)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),f=o(e.shapes),d=o(e.skeletons),m=o(e.animations),g=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),d.length>0&&(n.skeletons=d),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}ht.DefaultUp=new G(0,1,0);ht.DefaultMatrixAutoUpdate=!0;ht.DefaultMatrixWorldAutoUpdate=!0;const Tn=new G,Jn=new G,Xo=new G,Qn=new G,or=new G,ar=new G,Jl=new G,Yo=new G,Zo=new G,Ko=new G;class ei{constructor(e=new G,t=new G,n=new G){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Tn.subVectors(e,t),r.cross(Tn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){Tn.subVectors(r,t),Jn.subVectors(n,t),Xo.subVectors(e,t);const o=Tn.dot(Tn),a=Tn.dot(Jn),l=Tn.dot(Xo),c=Jn.dot(Jn),u=Jn.dot(Xo),f=o*c-a*a;if(f===0)return s.set(-2,-1,-1);const d=1/f,m=(c*l-a*u)*d,g=(o*u-a*l)*d;return s.set(1-m-g,g,m)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Qn),Qn.x>=0&&Qn.y>=0&&Qn.x+Qn.y<=1}static getUV(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,Qn),l.set(0,0),l.addScaledVector(s,Qn.x),l.addScaledVector(o,Qn.y),l.addScaledVector(a,Qn.z),l}static isFrontFacing(e,t,n,r){return Tn.subVectors(n,t),Jn.subVectors(e,t),Tn.cross(Jn).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Tn.subVectors(this.c,this.b),Jn.subVectors(this.a,this.b),Tn.cross(Jn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ei.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ei.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,s){return ei.getUV(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return ei.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ei.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;or.subVectors(r,n),ar.subVectors(s,n),Yo.subVectors(e,n);const l=or.dot(Yo),c=ar.dot(Yo);if(l<=0&&c<=0)return t.copy(n);Zo.subVectors(e,r);const u=or.dot(Zo),f=ar.dot(Zo);if(u>=0&&f<=u)return t.copy(r);const d=l*f-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(or,o);Ko.subVectors(e,s);const m=or.dot(Ko),g=ar.dot(Ko);if(g>=0&&m<=g)return t.copy(s);const h=m*c-l*g;if(h<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(n).addScaledVector(ar,a);const p=u*g-m*f;if(p<=0&&f-u>=0&&m-g>=0)return Jl.subVectors(s,r),a=(f-u)/(f-u+(m-g)),t.copy(r).addScaledVector(Jl,a);const _=1/(p+h+d);return o=h*_,a=d*_,t.copy(n).addScaledVector(or,o).addScaledVector(ar,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let $h=0;class Dr extends Xi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:$h++}),this.uuid=os(),this.name="",this.type="Material",this.blending=br,this.side=Er,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=vf,this.blendDst=bf,this.blendEquation=mr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=wa,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Vh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Oo,this.stencilZFail=Oo,this.stencilZPass=Oo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==br&&(n.blending=this.blending),this.side!==Er&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ha extends Dr{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new qe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const It=new G,Ts=new Be;class In{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=zl,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Ts.fromBufferAttribute(this,t),Ts.applyMatrix3(e),this.setXY(t,Ts.x,Ts.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)It.fromBufferAttribute(this,t),It.applyMatrix3(e),this.setXYZ(t,It.x,It.y,It.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)It.fromBufferAttribute(this,t),It.applyMatrix4(e),this.setXYZ(t,It.x,It.y,It.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)It.fromBufferAttribute(this,t),It.applyNormalMatrix(e),this.setXYZ(t,It.x,It.y,It.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)It.fromBufferAttribute(this,t),It.transformDirection(e),this.setXYZ(t,It.x,It.y,It.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=_s(t,this.array)),t}setX(e,t){return this.normalized&&(t=an(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=_s(t,this.array)),t}setY(e,t){return this.normalized&&(t=an(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=_s(t,this.array)),t}setZ(e,t){return this.normalized&&(t=an(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=_s(t,this.array)),t}setW(e,t){return this.normalized&&(t=an(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=an(t,this.array),n=an(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=an(t,this.array),n=an(n,this.array),r=an(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=an(t,this.array),n=an(n,this.array),r=an(r,this.array),s=an(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==zl&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Lf extends In{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Df extends In{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Ft extends In{constructor(e,t,n){super(new Float32Array(e),t,n)}}let ep=0;const dn=new yt,Jo=new ht,lr=new G,cn=new as,Ur=new as,zt=new G;class un extends Xi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ep++}),this.uuid=os(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Sf(e)?Df:Lf)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new gn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return dn.makeRotationFromQuaternion(e),this.applyMatrix4(dn),this}rotateX(e){return dn.makeRotationX(e),this.applyMatrix4(dn),this}rotateY(e){return dn.makeRotationY(e),this.applyMatrix4(dn),this}rotateZ(e){return dn.makeRotationZ(e),this.applyMatrix4(dn),this}translate(e,t,n){return dn.makeTranslation(e,t,n),this.applyMatrix4(dn),this}scale(e,t,n){return dn.makeScale(e,t,n),this.applyMatrix4(dn),this}lookAt(e){return Jo.lookAt(e),Jo.updateMatrix(),this.applyMatrix4(Jo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(lr).negate(),this.translate(lr.x,lr.y,lr.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Ft(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new as);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new G(-1/0,-1/0,-1/0),new G(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];cn.setFromBufferAttribute(s),this.morphTargetsRelative?(zt.addVectors(this.boundingBox.min,cn.min),this.boundingBox.expandByPoint(zt),zt.addVectors(this.boundingBox.max,cn.max),this.boundingBox.expandByPoint(zt)):(this.boundingBox.expandByPoint(cn.min),this.boundingBox.expandByPoint(cn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new po);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new G,1/0);return}if(e){const n=this.boundingSphere.center;if(cn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Ur.setFromBufferAttribute(a),this.morphTargetsRelative?(zt.addVectors(cn.min,Ur.min),cn.expandByPoint(zt),zt.addVectors(cn.max,Ur.max),cn.expandByPoint(zt)):(cn.expandByPoint(Ur.min),cn.expandByPoint(Ur.max))}cn.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)zt.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(zt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)zt.fromBufferAttribute(a,c),l&&(lr.fromBufferAttribute(e,c),zt.add(lr)),r=Math.max(r,n.distanceToSquared(zt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new In(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let S=0;S<a;S++)c[S]=new G,u[S]=new G;const f=new G,d=new G,m=new G,g=new Be,h=new Be,p=new Be,_=new G,b=new G;function y(S,O,F){f.fromArray(r,S*3),d.fromArray(r,O*3),m.fromArray(r,F*3),g.fromArray(o,S*2),h.fromArray(o,O*2),p.fromArray(o,F*2),d.sub(f),m.sub(f),h.sub(g),p.sub(g);const L=1/(h.x*p.y-p.x*h.y);!isFinite(L)||(_.copy(d).multiplyScalar(p.y).addScaledVector(m,-h.y).multiplyScalar(L),b.copy(m).multiplyScalar(h.x).addScaledVector(d,-p.x).multiplyScalar(L),c[S].add(_),c[O].add(_),c[F].add(_),u[S].add(b),u[O].add(b),u[F].add(b))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let S=0,O=w.length;S<O;++S){const F=w[S],L=F.start,I=F.count;for(let k=L,R=L+I;k<R;k+=3)y(n[k+0],n[k+1],n[k+2])}const x=new G,M=new G,P=new G,v=new G;function E(S){P.fromArray(s,S*3),v.copy(P);const O=c[S];x.copy(O),x.sub(P.multiplyScalar(P.dot(O))).normalize(),M.crossVectors(v,O);const L=M.dot(u[S])<0?-1:1;l[S*4]=x.x,l[S*4+1]=x.y,l[S*4+2]=x.z,l[S*4+3]=L}for(let S=0,O=w.length;S<O;++S){const F=w[S],L=F.start,I=F.count;for(let k=L,R=L+I;k<R;k+=3)E(n[k+0]),E(n[k+1]),E(n[k+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new In(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,m=n.count;d<m;d++)n.setXYZ(d,0,0,0);const r=new G,s=new G,o=new G,a=new G,l=new G,c=new G,u=new G,f=new G;if(e)for(let d=0,m=e.count;d<m;d+=3){const g=e.getX(d+0),h=e.getX(d+1),p=e.getX(d+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,h),o.fromBufferAttribute(t,p),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,h),c.fromBufferAttribute(n,p),a.add(u),l.add(u),c.add(u),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(h,l.x,l.y,l.z),n.setXYZ(p,c.x,c.y,c.z)}else for(let d=0,m=t.count;d<m;d+=3)r.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)zt.fromBufferAttribute(e,t),zt.normalize(),e.setXYZ(t,zt.x,zt.y,zt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,f=a.normalized,d=new c.constructor(l.length*u);let m=0,g=0;for(let h=0,p=l.length;h<p;h++){a.isInterleavedBufferAttribute?m=l[h]*a.data.stride+a.offset:m=l[h]*u;for(let _=0;_<u;_++)d[g++]=c[m++]}return new In(d,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new un,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,f=c.length;u<f;u++){const d=c[u],m=e(d,n);l.push(m)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,d=c.length;f<d;f++){const m=c[f];u.push(m.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],f=s[c];for(let d=0,m=f.length;d<m;d++)u.push(f[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ql=new yt,cr=new Ba,Qo=new po,mi=new G,gi=new G,_i=new G,$o=new G,ea=new G,ta=new G,Cs=new G,Ls=new G,Ds=new G,Ps=new Be,Rs=new Be,Is=new Be,na=new G,Os=new G;class _n extends ht{constructor(e=new un,t=new Ha){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Qo.copy(n.boundingSphere),Qo.applyMatrix4(s),e.ray.intersectsSphere(Qo)===!1)||(Ql.copy(s).invert(),cr.copy(e.ray).applyMatrix4(Ql),n.boundingBox!==null&&cr.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,d=n.attributes.uv2,m=n.groups,g=n.drawRange;if(a!==null)if(Array.isArray(r))for(let h=0,p=m.length;h<p;h++){const _=m[h],b=r[_.materialIndex],y=Math.max(_.start,g.start),w=Math.min(a.count,Math.min(_.start+_.count,g.start+g.count));for(let x=y,M=w;x<M;x+=3){const P=a.getX(x),v=a.getX(x+1),E=a.getX(x+2);o=ks(this,b,e,cr,l,c,u,f,d,P,v,E),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=_.materialIndex,t.push(o))}}else{const h=Math.max(0,g.start),p=Math.min(a.count,g.start+g.count);for(let _=h,b=p;_<b;_+=3){const y=a.getX(_),w=a.getX(_+1),x=a.getX(_+2);o=ks(this,r,e,cr,l,c,u,f,d,y,w,x),o&&(o.faceIndex=Math.floor(_/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let h=0,p=m.length;h<p;h++){const _=m[h],b=r[_.materialIndex],y=Math.max(_.start,g.start),w=Math.min(l.count,Math.min(_.start+_.count,g.start+g.count));for(let x=y,M=w;x<M;x+=3){const P=x,v=x+1,E=x+2;o=ks(this,b,e,cr,l,c,u,f,d,P,v,E),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=_.materialIndex,t.push(o))}}else{const h=Math.max(0,g.start),p=Math.min(l.count,g.start+g.count);for(let _=h,b=p;_<b;_+=3){const y=_,w=_+1,x=_+2;o=ks(this,r,e,cr,l,c,u,f,d,y,w,x),o&&(o.faceIndex=Math.floor(_/3),t.push(o))}}}}function tp(i,e,t,n,r,s,o,a){let l;if(e.side===bn?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side!==vi,a),l===null)return null;Os.copy(a),Os.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(Os);return c<t.near||c>t.far?null:{distance:c,point:Os.clone(),object:i}}function ks(i,e,t,n,r,s,o,a,l,c,u,f){mi.fromBufferAttribute(r,c),gi.fromBufferAttribute(r,u),_i.fromBufferAttribute(r,f);const d=i.morphTargetInfluences;if(s&&d){Cs.set(0,0,0),Ls.set(0,0,0),Ds.set(0,0,0);for(let g=0,h=s.length;g<h;g++){const p=d[g],_=s[g];p!==0&&($o.fromBufferAttribute(_,c),ea.fromBufferAttribute(_,u),ta.fromBufferAttribute(_,f),o?(Cs.addScaledVector($o,p),Ls.addScaledVector(ea,p),Ds.addScaledVector(ta,p)):(Cs.addScaledVector($o.sub(mi),p),Ls.addScaledVector(ea.sub(gi),p),Ds.addScaledVector(ta.sub(_i),p)))}mi.add(Cs),gi.add(Ls),_i.add(Ds)}i.isSkinnedMesh&&(i.boneTransform(c,mi),i.boneTransform(u,gi),i.boneTransform(f,_i));const m=tp(i,e,t,n,mi,gi,_i,na);if(m){a&&(Ps.fromBufferAttribute(a,c),Rs.fromBufferAttribute(a,u),Is.fromBufferAttribute(a,f),m.uv=ei.getUV(na,mi,gi,_i,Ps,Rs,Is,new Be)),l&&(Ps.fromBufferAttribute(l,c),Rs.fromBufferAttribute(l,u),Is.fromBufferAttribute(l,f),m.uv2=ei.getUV(na,mi,gi,_i,Ps,Rs,Is,new Be));const g={a:c,b:u,c:f,normal:new G,materialIndex:0};ei.getNormal(mi,gi,_i,g.normal),m.face=g}return m}class cs extends un{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],f=[];let d=0,m=0;g("z","y","x",-1,-1,n,t,e,o,s,0),g("z","y","x",1,-1,n,t,-e,o,s,1),g("x","z","y",1,1,e,n,t,r,o,2),g("x","z","y",1,-1,e,n,-t,r,o,3),g("x","y","z",1,-1,e,t,n,r,s,4),g("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new Ft(c,3)),this.setAttribute("normal",new Ft(u,3)),this.setAttribute("uv",new Ft(f,2));function g(h,p,_,b,y,w,x,M,P,v,E){const S=w/P,O=x/v,F=w/2,L=x/2,I=M/2,k=P+1,R=v+1;let W=0,Y=0;const H=new G;for(let B=0;B<R;B++){const j=B*O-L;for(let ne=0;ne<k;ne++){const oe=ne*S-F;H[h]=oe*b,H[p]=j*y,H[_]=I,c.push(H.x,H.y,H.z),H[h]=0,H[p]=0,H[_]=M>0?1:-1,u.push(H.x,H.y,H.z),f.push(ne/P),f.push(1-B/v),W+=1}}for(let B=0;B<v;B++)for(let j=0;j<P;j++){const ne=d+j+k*B,oe=d+j+k*(B+1),me=d+(j+1)+k*(B+1),be=d+(j+1)+k*B;l.push(ne,oe,be),l.push(oe,me,be),Y+=6}a.addGroup(m,Y,E),m+=Y,d+=W}}static fromJSON(e){return new cs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Lr(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function Wt(i){const e={};for(let t=0;t<i.length;t++){const n=Lr(i[t]);for(const r in n)e[r]=n[r]}return e}function np(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}const Pf={clone:Lr,merge:Wt};var ip=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,rp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ii extends Dr{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ip,this.fragmentShader=rp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Lr(e.uniforms),this.uniformsGroups=np(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Wa extends ht{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new yt,this.projectionMatrix=new yt,this.projectionMatrixInverse=new yt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class qt extends Wa{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Gl*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ko*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Gl*2*Math.atan(Math.tan(ko*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ko*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ur=90,fr=1;class sp extends ht{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const r=new qt(ur,fr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new G(1,0,0)),this.add(r);const s=new qt(ur,fr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new G(-1,0,0)),this.add(s);const o=new qt(ur,fr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new G(0,1,0)),this.add(o);const a=new qt(ur,fr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new G(0,-1,0)),this.add(a);const l=new qt(ur,fr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new G(0,0,1)),this.add(l);const c=new qt(ur,fr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new G(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,o,a,l,c]=this.children,u=e.getRenderTarget(),f=e.toneMapping,d=e.xr.enabled;e.toneMapping=Gn,e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Rf extends yn{constructor(e,t,n,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:Ar,super(e,t,n,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class op extends Si{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new Rf(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:mn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new cs(5,5,5),s=new ii({name:"CubemapFromEquirect",uniforms:Lr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:bn,blending:wi});s.uniforms.tEquirect.value=t;const o=new _n(r,s),a=t.minFilter;return t.minFilter===ho&&(t.minFilter=mn),new sp(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}const ia=new G,ap=new G,lp=new gn;class ki{constructor(e=new G(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=ia.subVectors(n,t).cross(ap.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(ia),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||lp.getNormalMatrix(e),r=this.coplanarPoint(ia).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const dr=new po,Ns=new G;class mo{constructor(e=new ki,t=new ki,n=new ki,r=new ki,s=new ki,o=new ki){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],f=n[7],d=n[8],m=n[9],g=n[10],h=n[11],p=n[12],_=n[13],b=n[14],y=n[15];return t[0].setComponents(a-r,f-l,h-d,y-p).normalize(),t[1].setComponents(a+r,f+l,h+d,y+p).normalize(),t[2].setComponents(a+s,f+c,h+m,y+_).normalize(),t[3].setComponents(a-s,f-c,h-m,y-_).normalize(),t[4].setComponents(a-o,f-u,h-g,y-b).normalize(),t[5].setComponents(a+o,f+u,h+g,y+b).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),dr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(dr)}intersectsSprite(e){return dr.center.set(0,0,0),dr.radius=.7071067811865476,dr.applyMatrix4(e.matrixWorld),this.intersectsSphere(dr)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Ns.x=r.normal.x>0?e.max.x:e.min.x,Ns.y=r.normal.y>0?e.max.y:e.min.y,Ns.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Ns)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function If(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function cp(i,e){const t=e.isWebGL2,n=new WeakMap;function r(c,u){const f=c.array,d=c.usage,m=i.createBuffer();i.bindBuffer(u,m),i.bufferData(u,f,d),c.onUploadCallback();let g;if(f instanceof Float32Array)g=5126;else if(f instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(f instanceof Int16Array)g=5122;else if(f instanceof Uint32Array)g=5125;else if(f instanceof Int32Array)g=5124;else if(f instanceof Int8Array)g=5120;else if(f instanceof Uint8Array)g=5121;else if(f instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:m,type:g,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,f){const d=u.array,m=u.updateRange;i.bindBuffer(f,c),m.count===-1?i.bufferSubData(f,0,d):(t?i.bufferSubData(f,m.offset*d.BYTES_PER_ELEMENT,d,m.offset,m.count):i.bufferSubData(f,m.offset*d.BYTES_PER_ELEMENT,d.subarray(m.offset,m.offset+m.count)),m.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(i.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=n.get(c);f===void 0?n.set(c,r(c,u)):f.version<c.version&&(s(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}class ja extends un{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,f=e/a,d=t/l,m=[],g=[],h=[],p=[];for(let _=0;_<u;_++){const b=_*d-o;for(let y=0;y<c;y++){const w=y*f-s;g.push(w,-b,0),h.push(0,0,1),p.push(y/a),p.push(1-_/l)}}for(let _=0;_<l;_++)for(let b=0;b<a;b++){const y=b+c*_,w=b+c*(_+1),x=b+1+c*(_+1),M=b+1+c*_;m.push(y,w,M),m.push(w,x,M)}this.setIndex(m),this.setAttribute("position",new Ft(g,3)),this.setAttribute("normal",new Ft(h,3)),this.setAttribute("uv",new Ft(p,2))}static fromJSON(e){return new ja(e.width,e.height,e.widthSegments,e.heightSegments)}}var up=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,fp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,dp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,hp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,pp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,mp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,gp="vec3 transformed = vec3( position );",_p=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,vp=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,bp=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,wp=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,yp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,xp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Mp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Sp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Ep=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Ap=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Tp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,Cp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Lp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Dp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Pp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Rp=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Ip=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Op=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,kp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Np="gl_FragColor = linearToOutputTexel( gl_FragColor );",Fp=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,zp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Up=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Gp=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Bp=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Vp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Hp=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Wp=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,jp=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,qp=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Xp=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Yp=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Zp=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Kp=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Jp=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,Qp=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,$p=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,em=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,tm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,nm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,im=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,rm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,sm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,om=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,am=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,cm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,um=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,fm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,dm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,hm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,pm=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,mm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,gm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_m=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,vm=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,bm=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,wm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,ym=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,xm=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Mm=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Sm=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Em=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Am=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Tm=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Cm=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Lm=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Dm=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Pm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Rm=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Im=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Om=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,km=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Nm=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Fm=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,zm=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Um=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Gm=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Bm=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Vm=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Hm=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Wm=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,jm=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qm=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,Xm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Ym=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Zm=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,Km=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Jm=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Qm=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,$m=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,eg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,tg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,ng=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,ig=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,rg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,sg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,og=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,ag=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const lg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,cg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ug=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,fg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,dg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,hg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,pg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,mg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,gg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,_g=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,vg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,bg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,wg=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,yg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xg=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Mg=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Sg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Eg=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ag=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Tg=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Cg=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Lg=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Dg=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Pg=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Rg=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ig=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Og=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,kg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Ng=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Fg=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,zg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ug=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Je={alphamap_fragment:up,alphamap_pars_fragment:fp,alphatest_fragment:dp,alphatest_pars_fragment:hp,aomap_fragment:pp,aomap_pars_fragment:mp,begin_vertex:gp,beginnormal_vertex:_p,bsdfs:vp,iridescence_fragment:bp,bumpmap_pars_fragment:wp,clipping_planes_fragment:yp,clipping_planes_pars_fragment:xp,clipping_planes_pars_vertex:Mp,clipping_planes_vertex:Sp,color_fragment:Ep,color_pars_fragment:Ap,color_pars_vertex:Tp,color_vertex:Cp,common:Lp,cube_uv_reflection_fragment:Dp,defaultnormal_vertex:Pp,displacementmap_pars_vertex:Rp,displacementmap_vertex:Ip,emissivemap_fragment:Op,emissivemap_pars_fragment:kp,encodings_fragment:Np,encodings_pars_fragment:Fp,envmap_fragment:zp,envmap_common_pars_fragment:Up,envmap_pars_fragment:Gp,envmap_pars_vertex:Bp,envmap_physical_pars_fragment:$p,envmap_vertex:Vp,fog_vertex:Hp,fog_pars_vertex:Wp,fog_fragment:jp,fog_pars_fragment:qp,gradientmap_pars_fragment:Xp,lightmap_fragment:Yp,lightmap_pars_fragment:Zp,lights_lambert_fragment:Kp,lights_lambert_pars_fragment:Jp,lights_pars_begin:Qp,lights_toon_fragment:em,lights_toon_pars_fragment:tm,lights_phong_fragment:nm,lights_phong_pars_fragment:im,lights_physical_fragment:rm,lights_physical_pars_fragment:sm,lights_fragment_begin:om,lights_fragment_maps:am,lights_fragment_end:lm,logdepthbuf_fragment:cm,logdepthbuf_pars_fragment:um,logdepthbuf_pars_vertex:fm,logdepthbuf_vertex:dm,map_fragment:hm,map_pars_fragment:pm,map_particle_fragment:mm,map_particle_pars_fragment:gm,metalnessmap_fragment:_m,metalnessmap_pars_fragment:vm,morphcolor_vertex:bm,morphnormal_vertex:wm,morphtarget_pars_vertex:ym,morphtarget_vertex:xm,normal_fragment_begin:Mm,normal_fragment_maps:Sm,normal_pars_fragment:Em,normal_pars_vertex:Am,normal_vertex:Tm,normalmap_pars_fragment:Cm,clearcoat_normal_fragment_begin:Lm,clearcoat_normal_fragment_maps:Dm,clearcoat_pars_fragment:Pm,iridescence_pars_fragment:Rm,output_fragment:Im,packing:Om,premultiplied_alpha_fragment:km,project_vertex:Nm,dithering_fragment:Fm,dithering_pars_fragment:zm,roughnessmap_fragment:Um,roughnessmap_pars_fragment:Gm,shadowmap_pars_fragment:Bm,shadowmap_pars_vertex:Vm,shadowmap_vertex:Hm,shadowmask_pars_fragment:Wm,skinbase_vertex:jm,skinning_pars_vertex:qm,skinning_vertex:Xm,skinnormal_vertex:Ym,specularmap_fragment:Zm,specularmap_pars_fragment:Km,tonemapping_fragment:Jm,tonemapping_pars_fragment:Qm,transmission_fragment:$m,transmission_pars_fragment:eg,uv_pars_fragment:tg,uv_pars_vertex:ng,uv_vertex:ig,uv2_pars_fragment:rg,uv2_pars_vertex:sg,uv2_vertex:og,worldpos_vertex:ag,background_vert:lg,background_frag:cg,cube_vert:ug,cube_frag:fg,depth_vert:dg,depth_frag:hg,distanceRGBA_vert:pg,distanceRGBA_frag:mg,equirect_vert:gg,equirect_frag:_g,linedashed_vert:vg,linedashed_frag:bg,meshbasic_vert:wg,meshbasic_frag:yg,meshlambert_vert:xg,meshlambert_frag:Mg,meshmatcap_vert:Sg,meshmatcap_frag:Eg,meshnormal_vert:Ag,meshnormal_frag:Tg,meshphong_vert:Cg,meshphong_frag:Lg,meshphysical_vert:Dg,meshphysical_frag:Pg,meshtoon_vert:Rg,meshtoon_frag:Ig,points_vert:Og,points_frag:kg,shadow_vert:Ng,shadow_frag:Fg,sprite_vert:zg,sprite_frag:Ug},_e={common:{diffuse:{value:new qe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new gn},uv2Transform:{value:new gn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Be(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new qe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new qe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gn}},sprite:{diffuse:{value:new qe(16777215)},opacity:{value:1},center:{value:new Be(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new gn}}},kn={basic:{uniforms:Wt([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.fog]),vertexShader:Je.meshbasic_vert,fragmentShader:Je.meshbasic_frag},lambert:{uniforms:Wt([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new qe(0)}}]),vertexShader:Je.meshlambert_vert,fragmentShader:Je.meshlambert_frag},phong:{uniforms:Wt([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new qe(0)},specular:{value:new qe(1118481)},shininess:{value:30}}]),vertexShader:Je.meshphong_vert,fragmentShader:Je.meshphong_frag},standard:{uniforms:Wt([_e.common,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.roughnessmap,_e.metalnessmap,_e.fog,_e.lights,{emissive:{value:new qe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Je.meshphysical_vert,fragmentShader:Je.meshphysical_frag},toon:{uniforms:Wt([_e.common,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.gradientmap,_e.fog,_e.lights,{emissive:{value:new qe(0)}}]),vertexShader:Je.meshtoon_vert,fragmentShader:Je.meshtoon_frag},matcap:{uniforms:Wt([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,{matcap:{value:null}}]),vertexShader:Je.meshmatcap_vert,fragmentShader:Je.meshmatcap_frag},points:{uniforms:Wt([_e.points,_e.fog]),vertexShader:Je.points_vert,fragmentShader:Je.points_frag},dashed:{uniforms:Wt([_e.common,_e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Je.linedashed_vert,fragmentShader:Je.linedashed_frag},depth:{uniforms:Wt([_e.common,_e.displacementmap]),vertexShader:Je.depth_vert,fragmentShader:Je.depth_frag},normal:{uniforms:Wt([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,{opacity:{value:1}}]),vertexShader:Je.meshnormal_vert,fragmentShader:Je.meshnormal_frag},sprite:{uniforms:Wt([_e.sprite,_e.fog]),vertexShader:Je.sprite_vert,fragmentShader:Je.sprite_frag},background:{uniforms:{uvTransform:{value:new gn},t2D:{value:null}},vertexShader:Je.background_vert,fragmentShader:Je.background_frag},cube:{uniforms:Wt([_e.envmap,{opacity:{value:1}}]),vertexShader:Je.cube_vert,fragmentShader:Je.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Je.equirect_vert,fragmentShader:Je.equirect_frag},distanceRGBA:{uniforms:Wt([_e.common,_e.displacementmap,{referencePosition:{value:new G},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Je.distanceRGBA_vert,fragmentShader:Je.distanceRGBA_frag},shadow:{uniforms:Wt([_e.lights,_e.fog,{color:{value:new qe(0)},opacity:{value:1}}]),vertexShader:Je.shadow_vert,fragmentShader:Je.shadow_frag}};kn.physical={uniforms:Wt([kn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Be(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new qe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Be},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new qe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new qe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Je.meshphysical_vert,fragmentShader:Je.meshphysical_frag};function Gg(i,e,t,n,r,s){const o=new qe(0);let a=r===!0?0:1,l,c,u=null,f=0,d=null;function m(h,p){let _=!1,b=p.isScene===!0?p.background:null;b&&b.isTexture&&(b=e.get(b));const y=i.xr,w=y.getSession&&y.getSession();w&&w.environmentBlendMode==="additive"&&(b=null),b===null?g(o,a):b&&b.isColor&&(g(b,1),_=!0),(i.autoClear||_)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),b&&(b.isCubeTexture||b.mapping===fo)?(c===void 0&&(c=new _n(new cs(1,1,1),new ii({name:"BackgroundCubeMaterial",uniforms:Lr(kn.cube.uniforms),vertexShader:kn.cube.vertexShader,fragmentShader:kn.cube.fragmentShader,side:bn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(x,M,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=b,c.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,(u!==b||f!==b.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,u=b,f=b.version,d=i.toneMapping),c.layers.enableAll(),h.unshift(c,c.geometry,c.material,0,0,null)):b&&b.isTexture&&(l===void 0&&(l=new _n(new ja(2,2),new ii({name:"BackgroundMaterial",uniforms:Lr(kn.background.uniforms),vertexShader:kn.background.vertexShader,fragmentShader:kn.background.fragmentShader,side:Er,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=b,b.matrixAutoUpdate===!0&&b.updateMatrix(),l.material.uniforms.uvTransform.value.copy(b.matrix),(u!==b||f!==b.version||d!==i.toneMapping)&&(l.material.needsUpdate=!0,u=b,f=b.version,d=i.toneMapping),l.layers.enableAll(),h.unshift(l,l.geometry,l.material,0,0,null))}function g(h,p){t.buffers.color.setClear(h.r,h.g,h.b,p,s)}return{getClearColor:function(){return o},setClearColor:function(h,p=1){o.set(h),a=p,g(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(h){a=h,g(o,a)},render:m}}function Bg(i,e,t,n){const r=i.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=p(null);let c=l,u=!1;function f(I,k,R,W,Y){let H=!1;if(o){const B=h(W,R,k);c!==B&&(c=B,m(c.object)),H=_(I,W,R,Y),H&&b(I,W,R,Y)}else{const B=k.wireframe===!0;(c.geometry!==W.id||c.program!==R.id||c.wireframe!==B)&&(c.geometry=W.id,c.program=R.id,c.wireframe=B,H=!0)}Y!==null&&t.update(Y,34963),(H||u)&&(u=!1,v(I,k,R,W),Y!==null&&i.bindBuffer(34963,t.get(Y).buffer))}function d(){return n.isWebGL2?i.createVertexArray():s.createVertexArrayOES()}function m(I){return n.isWebGL2?i.bindVertexArray(I):s.bindVertexArrayOES(I)}function g(I){return n.isWebGL2?i.deleteVertexArray(I):s.deleteVertexArrayOES(I)}function h(I,k,R){const W=R.wireframe===!0;let Y=a[I.id];Y===void 0&&(Y={},a[I.id]=Y);let H=Y[k.id];H===void 0&&(H={},Y[k.id]=H);let B=H[W];return B===void 0&&(B=p(d()),H[W]=B),B}function p(I){const k=[],R=[],W=[];for(let Y=0;Y<r;Y++)k[Y]=0,R[Y]=0,W[Y]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:R,attributeDivisors:W,object:I,attributes:{},index:null}}function _(I,k,R,W){const Y=c.attributes,H=k.attributes;let B=0;const j=R.getAttributes();for(const ne in j)if(j[ne].location>=0){const me=Y[ne];let be=H[ne];if(be===void 0&&(ne==="instanceMatrix"&&I.instanceMatrix&&(be=I.instanceMatrix),ne==="instanceColor"&&I.instanceColor&&(be=I.instanceColor)),me===void 0||me.attribute!==be||be&&me.data!==be.data)return!0;B++}return c.attributesNum!==B||c.index!==W}function b(I,k,R,W){const Y={},H=k.attributes;let B=0;const j=R.getAttributes();for(const ne in j)if(j[ne].location>=0){let me=H[ne];me===void 0&&(ne==="instanceMatrix"&&I.instanceMatrix&&(me=I.instanceMatrix),ne==="instanceColor"&&I.instanceColor&&(me=I.instanceColor));const be={};be.attribute=me,me&&me.data&&(be.data=me.data),Y[ne]=be,B++}c.attributes=Y,c.attributesNum=B,c.index=W}function y(){const I=c.newAttributes;for(let k=0,R=I.length;k<R;k++)I[k]=0}function w(I){x(I,0)}function x(I,k){const R=c.newAttributes,W=c.enabledAttributes,Y=c.attributeDivisors;R[I]=1,W[I]===0&&(i.enableVertexAttribArray(I),W[I]=1),Y[I]!==k&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,k),Y[I]=k)}function M(){const I=c.newAttributes,k=c.enabledAttributes;for(let R=0,W=k.length;R<W;R++)k[R]!==I[R]&&(i.disableVertexAttribArray(R),k[R]=0)}function P(I,k,R,W,Y,H){n.isWebGL2===!0&&(R===5124||R===5125)?i.vertexAttribIPointer(I,k,R,Y,H):i.vertexAttribPointer(I,k,R,W,Y,H)}function v(I,k,R,W){if(n.isWebGL2===!1&&(I.isInstancedMesh||W.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const Y=W.attributes,H=R.getAttributes(),B=k.defaultAttributeValues;for(const j in H){const ne=H[j];if(ne.location>=0){let oe=Y[j];if(oe===void 0&&(j==="instanceMatrix"&&I.instanceMatrix&&(oe=I.instanceMatrix),j==="instanceColor"&&I.instanceColor&&(oe=I.instanceColor)),oe!==void 0){const me=oe.normalized,be=oe.itemSize,V=t.get(oe);if(V===void 0)continue;const ce=V.buffer,Se=V.type,ue=V.bytesPerElement;if(oe.isInterleavedBufferAttribute){const ge=oe.data,je=ge.stride,K=oe.offset;if(ge.isInstancedInterleavedBuffer){for(let ae=0;ae<ne.locationSize;ae++)x(ne.location+ae,ge.meshPerAttribute);I.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=ge.meshPerAttribute*ge.count)}else for(let ae=0;ae<ne.locationSize;ae++)w(ne.location+ae);i.bindBuffer(34962,ce);for(let ae=0;ae<ne.locationSize;ae++)P(ne.location+ae,be/ne.locationSize,Se,me,je*ue,(K+be/ne.locationSize*ae)*ue)}else{if(oe.isInstancedBufferAttribute){for(let ge=0;ge<ne.locationSize;ge++)x(ne.location+ge,oe.meshPerAttribute);I.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=oe.meshPerAttribute*oe.count)}else for(let ge=0;ge<ne.locationSize;ge++)w(ne.location+ge);i.bindBuffer(34962,ce);for(let ge=0;ge<ne.locationSize;ge++)P(ne.location+ge,be/ne.locationSize,Se,me,be*ue,be/ne.locationSize*ge*ue)}}else if(B!==void 0){const me=B[j];if(me!==void 0)switch(me.length){case 2:i.vertexAttrib2fv(ne.location,me);break;case 3:i.vertexAttrib3fv(ne.location,me);break;case 4:i.vertexAttrib4fv(ne.location,me);break;default:i.vertexAttrib1fv(ne.location,me)}}}}M()}function E(){F();for(const I in a){const k=a[I];for(const R in k){const W=k[R];for(const Y in W)g(W[Y].object),delete W[Y];delete k[R]}delete a[I]}}function S(I){if(a[I.id]===void 0)return;const k=a[I.id];for(const R in k){const W=k[R];for(const Y in W)g(W[Y].object),delete W[Y];delete k[R]}delete a[I.id]}function O(I){for(const k in a){const R=a[k];if(R[I.id]===void 0)continue;const W=R[I.id];for(const Y in W)g(W[Y].object),delete W[Y];delete R[I.id]}}function F(){L(),u=!0,c!==l&&(c=l,m(c.object))}function L(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:f,reset:F,resetDefaultState:L,dispose:E,releaseStatesOfGeometry:S,releaseStatesOfProgram:O,initAttributes:y,enableAttribute:w,disableUnusedAttributes:M}}function Vg(i,e,t,n){const r=n.isWebGL2;let s;function o(c){s=c}function a(c,u){i.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,f){if(f===0)return;let d,m;if(r)d=i,m="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[m](s,c,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=l}function Hg(i,e,t){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const P=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(P){if(P==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";P="mediump"}return P==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&i instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=i.getParameter(34930),d=i.getParameter(35660),m=i.getParameter(3379),g=i.getParameter(34076),h=i.getParameter(34921),p=i.getParameter(36347),_=i.getParameter(36348),b=i.getParameter(36349),y=d>0,w=o||e.has("OES_texture_float"),x=y&&w,M=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:d,maxTextureSize:m,maxCubemapSize:g,maxAttributes:h,maxVertexUniforms:p,maxVaryings:_,maxFragmentUniforms:b,vertexTextures:y,floatFragmentTextures:w,floatVertexTextures:x,maxSamples:M}}function Wg(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new ki,a=new gn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,d,m){const g=f.length!==0||d||n!==0||r;return r=d,t=u(f,m,0),n=f.length,g},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(f,d,m){const g=f.clippingPlanes,h=f.clipIntersection,p=f.clipShadows,_=i.get(f);if(!r||g===null||g.length===0||s&&!p)s?u(null):c();else{const b=s?0:n,y=b*4;let w=_.clippingState||null;l.value=w,w=u(g,d,y,m);for(let x=0;x!==y;++x)w[x]=t[x];_.clippingState=w,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=b}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,d,m,g){const h=f!==null?f.length:0;let p=null;if(h!==0){if(p=l.value,g!==!0||p===null){const _=m+h*4,b=d.matrixWorldInverse;a.getNormalMatrix(b),(p===null||p.length<_)&&(p=new Float32Array(_));for(let y=0,w=m;y!==h;++y,w+=4)o.copy(f[y]).applyMatrix4(b,a),o.normal.toArray(p,w),p[w+3]=o.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=h,e.numIntersection=0,p}}function jg(i){let e=new WeakMap;function t(o,a){return a===ya?o.mapping=Ar:a===xa&&(o.mapping=Tr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===ya||a===xa)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new op(l.height/2);return c.fromEquirectangularTexture(i,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Yi extends Wa{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const gr=4,$l=[.125,.215,.35,.446,.526,.582],Fi=20,ra=new Yi,ec=new qe;let sa=null;const Ni=(1+Math.sqrt(5))/2,hr=1/Ni,tc=[new G(1,1,1),new G(-1,1,1),new G(1,1,-1),new G(-1,1,-1),new G(0,Ni,hr),new G(0,Ni,-hr),new G(hr,0,Ni),new G(-hr,0,Ni),new G(Ni,hr,0),new G(-Ni,hr,0)];class nc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){sa=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=sc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=rc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(sa),e.scissorTest=!1,Fs(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ar||e.mapping===Tr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),sa=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:mn,minFilter:mn,generateMipmaps:!1,type:Qr,format:Un,encoding:Mi,depthBuffer:!1},r=ic(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ic(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=qg(s)),this._blurMaterial=Xg(s,e,t)}return r}_compileMaterial(e){const t=new _n(this._lodPlanes[0],e);this._renderer.compile(t,ra)}_sceneToCubeUV(e,t,n,r){const a=new qt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,d=u.toneMapping;u.getClearColor(ec),u.toneMapping=Gn,u.autoClear=!1;const m=new Ha({name:"PMREM.Background",side:bn,depthWrite:!1,depthTest:!1}),g=new _n(new cs,m);let h=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,h=!0):(m.color.copy(ec),h=!0);for(let _=0;_<6;_++){const b=_%3;b===0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):b===1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_]));const y=this._cubeSize;Fs(r,b*y,_>2?y:0,y,y),u.setRenderTarget(r),h&&u.render(g,a),u.render(e,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.autoClear=f,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Ar||e.mapping===Tr;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=sc()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=rc());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new _n(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Fs(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,ra)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=tc[(r-1)%tc.length];this._blur(e,r-1,r,s,o)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new _n(this._lodPlanes[r],c),d=c.uniforms,m=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*Fi-1),h=s/g,p=isFinite(s)?1+Math.floor(u*h):Fi;p>Fi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Fi}`);const _=[];let b=0;for(let P=0;P<Fi;++P){const v=P/h,E=Math.exp(-v*v/2);_.push(E),P===0?b+=E:P<p&&(b+=2*E)}for(let P=0;P<_.length;P++)_[P]=_[P]/b;d.envMap.value=e.texture,d.samples.value=p,d.weights.value=_,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=g,d.mipInt.value=y-n;const w=this._sizeLods[r],x=3*w*(r>y-gr?r-y+gr:0),M=4*(this._cubeSize-w);Fs(t,x,M,3*w,2*w),l.setRenderTarget(t),l.render(f,ra)}}function qg(i){const e=[],t=[],n=[];let r=i;const s=i-gr+1+$l.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>i-gr?l=$l[o-i+gr-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,f=1+c,d=[u,u,f,u,f,f,u,u,f,f,u,f],m=6,g=6,h=3,p=2,_=1,b=new Float32Array(h*g*m),y=new Float32Array(p*g*m),w=new Float32Array(_*g*m);for(let M=0;M<m;M++){const P=M%3*2/3-1,v=M>2?0:-1,E=[P,v,0,P+2/3,v,0,P+2/3,v+1,0,P,v,0,P+2/3,v+1,0,P,v+1,0];b.set(E,h*g*M),y.set(d,p*g*M);const S=[M,M,M,M,M,M];w.set(S,_*g*M)}const x=new un;x.setAttribute("position",new In(b,h)),x.setAttribute("uv",new In(y,p)),x.setAttribute("faceIndex",new In(w,_)),e.push(x),r>gr&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function ic(i,e,t){const n=new Si(i,e,t);return n.texture.mapping=fo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Fs(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function Xg(i,e,t){const n=new Float32Array(Fi),r=new G(0,1,0);return new ii({name:"SphericalGaussianBlur",defines:{n:Fi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:qa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:wi,depthTest:!1,depthWrite:!1})}function rc(){return new ii({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:qa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:wi,depthTest:!1,depthWrite:!1})}function sc(){return new ii({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:qa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:wi,depthTest:!1,depthWrite:!1})}function qa(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Yg(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===ya||l===xa,u=l===Ar||l===Tr;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new nc(i)),f=c?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(c&&f&&f.height>0||u&&f&&r(f)){t===null&&(t=new nc(i));const d=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Zg(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const r=t(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function Kg(i,e,t,n){const r={},s=new WeakMap;function o(f){const d=f.target;d.index!==null&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",o),delete r[d.id];const m=s.get(d);m&&(e.remove(m),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(f,d){return r[d.id]===!0||(d.addEventListener("dispose",o),r[d.id]=!0,t.memory.geometries++),d}function l(f){const d=f.attributes;for(const g in d)e.update(d[g],34962);const m=f.morphAttributes;for(const g in m){const h=m[g];for(let p=0,_=h.length;p<_;p++)e.update(h[p],34962)}}function c(f){const d=[],m=f.index,g=f.attributes.position;let h=0;if(m!==null){const b=m.array;h=m.version;for(let y=0,w=b.length;y<w;y+=3){const x=b[y+0],M=b[y+1],P=b[y+2];d.push(x,M,M,P,P,x)}}else{const b=g.array;h=g.version;for(let y=0,w=b.length/3-1;y<w;y+=3){const x=y+0,M=y+1,P=y+2;d.push(x,M,M,P,P,x)}}const p=new(Sf(d)?Df:Lf)(d,1);p.version=h;const _=s.get(f);_&&e.remove(_),s.set(f,p)}function u(f){const d=s.get(f);if(d){const m=f.index;m!==null&&d.version<m.version&&c(f)}else c(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function Jg(i,e,t,n){const r=n.isWebGL2;let s;function o(d){s=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,m){i.drawElements(s,m,a,d*l),t.update(m,s,1)}function f(d,m,g){if(g===0)return;let h,p;if(r)h=i,p="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",h===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[p](s,m,a,d*l,g),t.update(m,s,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function Qg(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function $g(i,e){return i[0]-e[0]}function e_(i,e){return Math.abs(e[1])-Math.abs(i[1])}function t_(i,e,t){const n={},r=new Float32Array(8),s=new WeakMap,o=new Ut,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,f,d){const m=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,h=g!==void 0?g.length:0;let p=s.get(u);if(p===void 0||p.count!==h){let k=function(){L.dispose(),s.delete(u),u.removeEventListener("dispose",k)};p!==void 0&&p.texture.dispose();const y=u.morphAttributes.position!==void 0,w=u.morphAttributes.normal!==void 0,x=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],P=u.morphAttributes.normal||[],v=u.morphAttributes.color||[];let E=0;y===!0&&(E=1),w===!0&&(E=2),x===!0&&(E=3);let S=u.attributes.position.count*E,O=1;S>e.maxTextureSize&&(O=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const F=new Float32Array(S*O*4*h),L=new Cf(F,S,O,h);L.type=Ui,L.needsUpdate=!0;const I=E*4;for(let R=0;R<h;R++){const W=M[R],Y=P[R],H=v[R],B=S*O*4*R;for(let j=0;j<W.count;j++){const ne=j*I;y===!0&&(o.fromBufferAttribute(W,j),F[B+ne+0]=o.x,F[B+ne+1]=o.y,F[B+ne+2]=o.z,F[B+ne+3]=0),w===!0&&(o.fromBufferAttribute(Y,j),F[B+ne+4]=o.x,F[B+ne+5]=o.y,F[B+ne+6]=o.z,F[B+ne+7]=0),x===!0&&(o.fromBufferAttribute(H,j),F[B+ne+8]=o.x,F[B+ne+9]=o.y,F[B+ne+10]=o.z,F[B+ne+11]=H.itemSize===4?o.w:1)}}p={count:h,texture:L,size:new Be(S,O)},s.set(u,p),u.addEventListener("dispose",k)}let _=0;for(let y=0;y<m.length;y++)_+=m[y];const b=u.morphTargetsRelative?1:1-_;d.getUniforms().setValue(i,"morphTargetBaseInfluence",b),d.getUniforms().setValue(i,"morphTargetInfluences",m),d.getUniforms().setValue(i,"morphTargetsTexture",p.texture,t),d.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}else{const g=m===void 0?0:m.length;let h=n[u.id];if(h===void 0||h.length!==g){h=[];for(let w=0;w<g;w++)h[w]=[w,0];n[u.id]=h}for(let w=0;w<g;w++){const x=h[w];x[0]=w,x[1]=m[w]}h.sort(e_);for(let w=0;w<8;w++)w<g&&h[w][1]?(a[w][0]=h[w][0],a[w][1]=h[w][1]):(a[w][0]=Number.MAX_SAFE_INTEGER,a[w][1]=0);a.sort($g);const p=u.morphAttributes.position,_=u.morphAttributes.normal;let b=0;for(let w=0;w<8;w++){const x=a[w],M=x[0],P=x[1];M!==Number.MAX_SAFE_INTEGER&&P?(p&&u.getAttribute("morphTarget"+w)!==p[M]&&u.setAttribute("morphTarget"+w,p[M]),_&&u.getAttribute("morphNormal"+w)!==_[M]&&u.setAttribute("morphNormal"+w,_[M]),r[w]=P,b+=P):(p&&u.hasAttribute("morphTarget"+w)===!0&&u.deleteAttribute("morphTarget"+w),_&&u.hasAttribute("morphNormal"+w)===!0&&u.deleteAttribute("morphNormal"+w),r[w]=0)}const y=u.morphTargetsRelative?1:1-b;d.getUniforms().setValue(i,"morphTargetBaseInfluence",y),d.getUniforms().setValue(i,"morphTargetInfluences",r)}}return{update:l}}function n_(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,f=e.get(l,u);return r.get(f)!==c&&(e.update(f),r.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),f}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const Of=new yn,kf=new Cf,Nf=new jh,Ff=new Rf,oc=[],ac=[],lc=new Float32Array(16),cc=new Float32Array(9),uc=new Float32Array(4);function Pr(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=oc[r];if(s===void 0&&(s=new Float32Array(r),oc[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function Jt(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function Qt(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function go(i,e){let t=ac[e];t===void 0&&(t=new Int32Array(e),ac[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function i_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function r_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Jt(t,e))return;i.uniform2fv(this.addr,e),Qt(t,e)}}function s_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Jt(t,e))return;i.uniform3fv(this.addr,e),Qt(t,e)}}function o_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Jt(t,e))return;i.uniform4fv(this.addr,e),Qt(t,e)}}function a_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Jt(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),Qt(t,e)}else{if(Jt(t,n))return;uc.set(n),i.uniformMatrix2fv(this.addr,!1,uc),Qt(t,n)}}function l_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Jt(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),Qt(t,e)}else{if(Jt(t,n))return;cc.set(n),i.uniformMatrix3fv(this.addr,!1,cc),Qt(t,n)}}function c_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(Jt(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),Qt(t,e)}else{if(Jt(t,n))return;lc.set(n),i.uniformMatrix4fv(this.addr,!1,lc),Qt(t,n)}}function u_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function f_(i,e){const t=this.cache;Jt(t,e)||(i.uniform2iv(this.addr,e),Qt(t,e))}function d_(i,e){const t=this.cache;Jt(t,e)||(i.uniform3iv(this.addr,e),Qt(t,e))}function h_(i,e){const t=this.cache;Jt(t,e)||(i.uniform4iv(this.addr,e),Qt(t,e))}function p_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function m_(i,e){const t=this.cache;Jt(t,e)||(i.uniform2uiv(this.addr,e),Qt(t,e))}function g_(i,e){const t=this.cache;Jt(t,e)||(i.uniform3uiv(this.addr,e),Qt(t,e))}function __(i,e){const t=this.cache;Jt(t,e)||(i.uniform4uiv(this.addr,e),Qt(t,e))}function v_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2D(e||Of,r)}function b_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||Nf,r)}function w_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||Ff,r)}function y_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||kf,r)}function x_(i){switch(i){case 5126:return i_;case 35664:return r_;case 35665:return s_;case 35666:return o_;case 35674:return a_;case 35675:return l_;case 35676:return c_;case 5124:case 35670:return u_;case 35667:case 35671:return f_;case 35668:case 35672:return d_;case 35669:case 35673:return h_;case 5125:return p_;case 36294:return m_;case 36295:return g_;case 36296:return __;case 35678:case 36198:case 36298:case 36306:case 35682:return v_;case 35679:case 36299:case 36307:return b_;case 35680:case 36300:case 36308:case 36293:return w_;case 36289:case 36303:case 36311:case 36292:return y_}}function M_(i,e){i.uniform1fv(this.addr,e)}function S_(i,e){const t=Pr(e,this.size,2);i.uniform2fv(this.addr,t)}function E_(i,e){const t=Pr(e,this.size,3);i.uniform3fv(this.addr,t)}function A_(i,e){const t=Pr(e,this.size,4);i.uniform4fv(this.addr,t)}function T_(i,e){const t=Pr(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function C_(i,e){const t=Pr(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function L_(i,e){const t=Pr(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function D_(i,e){i.uniform1iv(this.addr,e)}function P_(i,e){i.uniform2iv(this.addr,e)}function R_(i,e){i.uniform3iv(this.addr,e)}function I_(i,e){i.uniform4iv(this.addr,e)}function O_(i,e){i.uniform1uiv(this.addr,e)}function k_(i,e){i.uniform2uiv(this.addr,e)}function N_(i,e){i.uniform3uiv(this.addr,e)}function F_(i,e){i.uniform4uiv(this.addr,e)}function z_(i,e,t){const n=e.length,r=go(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||Of,r[s])}function U_(i,e,t){const n=e.length,r=go(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Nf,r[s])}function G_(i,e,t){const n=e.length,r=go(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Ff,r[s])}function B_(i,e,t){const n=e.length,r=go(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||kf,r[s])}function V_(i){switch(i){case 5126:return M_;case 35664:return S_;case 35665:return E_;case 35666:return A_;case 35674:return T_;case 35675:return C_;case 35676:return L_;case 5124:case 35670:return D_;case 35667:case 35671:return P_;case 35668:case 35672:return R_;case 35669:case 35673:return I_;case 5125:return O_;case 36294:return k_;case 36295:return N_;case 36296:return F_;case 35678:case 36198:case 36298:case 36306:case 35682:return z_;case 35679:case 36299:case 36307:return U_;case 35680:case 36300:case 36308:case 36293:return G_;case 36289:case 36303:case 36311:case 36292:return B_}}class H_{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=x_(t.type)}}class W_{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=V_(t.type)}}class j_{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const oa=/(\w+)(\])?(\[|\.)?/g;function fc(i,e){i.seq.push(e),i.map[e.id]=e}function q_(i,e,t){const n=i.name,r=n.length;for(oa.lastIndex=0;;){const s=oa.exec(n),o=oa.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){fc(t,c===void 0?new H_(a,i,e):new W_(a,i,e));break}else{let f=t.map[a];f===void 0&&(f=new j_(a),fc(t,f)),t=f}}}class qs{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);q_(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function dc(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}let X_=0;function Y_(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function Z_(i){switch(i){case Mi:return["Linear","( value )"];case Lt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function hc(i,e,t){const n=i.getShaderParameter(e,35713),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+Y_(i.getShaderSource(e),o)}else return r}function K_(i,e){const t=Z_(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function J_(i,e){let t;switch(e){case bh:t="Linear";break;case wh:t="Reinhard";break;case yh:t="OptimizedCineon";break;case wf:t="ACESFilmic";break;case xh:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function Q_(i){return[i.extensionDerivatives||!!i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(jr).join(`
`)}function $_(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function e0(i,e){const t={},n=i.getProgramParameter(e,35721);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function jr(i){return i!==""}function pc(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function mc(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const t0=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ta(i){return i.replace(t0,n0)}function n0(i,e){const t=Je[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Ta(t)}const i0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function gc(i){return i.replace(i0,r0)}function r0(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function _c(i){let e="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function s0(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===gf?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===_f?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Wr&&(e="SHADOWMAP_TYPE_VSM"),e}function o0(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Ar:case Tr:e="ENVMAP_TYPE_CUBE";break;case fo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function a0(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Tr:e="ENVMAP_MODE_REFRACTION";break}return e}function l0(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Ga:e="ENVMAP_BLENDING_MULTIPLY";break;case _h:e="ENVMAP_BLENDING_MIX";break;case vh:e="ENVMAP_BLENDING_ADD";break}return e}function c0(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function u0(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=s0(t),c=o0(t),u=a0(t),f=l0(t),d=c0(t),m=t.isWebGL2?"":Q_(t),g=$_(s),h=r.createProgram();let p,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[g].filter(jr).join(`
`),p.length>0&&(p+=`
`),_=[m,g].filter(jr).join(`
`),_.length>0&&(_+=`
`)):(p=[_c(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(jr).join(`
`),_=[m,_c(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Gn?"#define TONE_MAPPING":"",t.toneMapping!==Gn?Je.tonemapping_pars_fragment:"",t.toneMapping!==Gn?J_("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Je.encodings_pars_fragment,K_("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(jr).join(`
`)),o=Ta(o),o=pc(o,t),o=mc(o,t),a=Ta(a),a=pc(a,t),a=mc(a,t),o=gc(o),a=gc(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,_=["#define varying in",t.glslVersion===Ul?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Ul?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const y=b+p+o,w=b+_+a,x=dc(r,35633,y),M=dc(r,35632,w);if(r.attachShader(h,x),r.attachShader(h,M),t.index0AttributeName!==void 0?r.bindAttribLocation(h,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(h,0,"position"),r.linkProgram(h),i.debug.checkShaderErrors){const E=r.getProgramInfoLog(h).trim(),S=r.getShaderInfoLog(x).trim(),O=r.getShaderInfoLog(M).trim();let F=!0,L=!0;if(r.getProgramParameter(h,35714)===!1){F=!1;const I=hc(r,x,"vertex"),k=hc(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(h,35715)+`

Program Info Log: `+E+`
`+I+`
`+k)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(S===""||O==="")&&(L=!1);L&&(this.diagnostics={runnable:F,programLog:E,vertexShader:{log:S,prefix:p},fragmentShader:{log:O,prefix:_}})}r.deleteShader(x),r.deleteShader(M);let P;this.getUniforms=function(){return P===void 0&&(P=new qs(r,h)),P};let v;return this.getAttributes=function(){return v===void 0&&(v=e0(r,h)),v},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(h),this.program=void 0},this.name=t.shaderName,this.id=X_++,this.cacheKey=e,this.usedTimes=1,this.program=h,this.vertexShader=x,this.fragmentShader=M,this}let f0=0;class d0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new h0(e),t.set(e,n)),n}}class h0{constructor(e){this.id=f0++,this.code=e,this.usedTimes=0}}function p0(i,e,t,n,r,s,o){const a=new Va,l=new d0,c=[],u=r.isWebGL2,f=r.logarithmicDepthBuffer,d=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function h(v,E,S,O,F){const L=O.fog,I=F.geometry,k=v.isMeshStandardMaterial?O.environment:null,R=(v.isMeshStandardMaterial?t:e).get(v.envMap||k),W=!!R&&R.mapping===fo?R.image.height:null,Y=g[v.type];v.precision!==null&&(m=r.getMaxPrecision(v.precision),m!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",m,"instead."));const H=I.morphAttributes.position||I.morphAttributes.normal||I.morphAttributes.color,B=H!==void 0?H.length:0;let j=0;I.morphAttributes.position!==void 0&&(j=1),I.morphAttributes.normal!==void 0&&(j=2),I.morphAttributes.color!==void 0&&(j=3);let ne,oe,me,be;if(Y){const je=kn[Y];ne=je.vertexShader,oe=je.fragmentShader}else ne=v.vertexShader,oe=v.fragmentShader,l.update(v),me=l.getVertexShaderID(v),be=l.getFragmentShaderID(v);const V=i.getRenderTarget(),ce=v.alphaTest>0,Se=v.clearcoat>0,ue=v.iridescence>0;return{isWebGL2:u,shaderID:Y,shaderName:v.type,vertexShader:ne,fragmentShader:oe,defines:v.defines,customVertexShaderID:me,customFragmentShaderID:be,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:m,instancing:F.isInstancedMesh===!0,instancingColor:F.isInstancedMesh===!0&&F.instanceColor!==null,supportsVertexTextures:d,outputEncoding:V===null?i.outputEncoding:V.isXRRenderTarget===!0?V.texture.encoding:Mi,map:!!v.map,matcap:!!v.matcap,envMap:!!R,envMapMode:R&&R.mapping,envMapCubeUVHeight:W,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===Bh,tangentSpaceNormalMap:v.normalMapType===Mf,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===Lt,clearcoat:Se,clearcoatMap:Se&&!!v.clearcoatMap,clearcoatRoughnessMap:Se&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:Se&&!!v.clearcoatNormalMap,iridescence:ue,iridescenceMap:ue&&!!v.iridescenceMap,iridescenceThicknessMap:ue&&!!v.iridescenceThicknessMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===br,alphaMap:!!v.alphaMap,alphaTest:ce,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!I.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!I.attributes.color&&I.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||v.transmission>0||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||v.sheen>0||!!v.sheenColorMap||!!v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!L,useFog:v.fog===!0,fogExp2:L&&L.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:f,skinning:F.isSkinnedMesh===!0,morphTargets:I.morphAttributes.position!==void 0,morphNormals:I.morphAttributes.normal!==void 0,morphColors:I.morphAttributes.color!==void 0,morphTargetsCount:B,morphTextureStride:j,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:i.shadowMap.enabled&&S.length>0,shadowMapType:i.shadowMap.type,toneMapping:v.toneMapped?i.toneMapping:Gn,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===vi,flipSided:v.side===bn,useDepthPacking:!!v.depthPacking,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function p(v){const E=[];if(v.shaderID?E.push(v.shaderID):(E.push(v.customVertexShaderID),E.push(v.customFragmentShaderID)),v.defines!==void 0)for(const S in v.defines)E.push(S),E.push(v.defines[S]);return v.isRawShaderMaterial===!1&&(_(E,v),b(E,v),E.push(i.outputEncoding)),E.push(v.customProgramCacheKey),E.join()}function _(v,E){v.push(E.precision),v.push(E.outputEncoding),v.push(E.envMapMode),v.push(E.envMapCubeUVHeight),v.push(E.combine),v.push(E.vertexUvs),v.push(E.fogExp2),v.push(E.sizeAttenuation),v.push(E.morphTargetsCount),v.push(E.morphAttributeCount),v.push(E.numDirLights),v.push(E.numPointLights),v.push(E.numSpotLights),v.push(E.numSpotLightMaps),v.push(E.numHemiLights),v.push(E.numRectAreaLights),v.push(E.numDirLightShadows),v.push(E.numPointLightShadows),v.push(E.numSpotLightShadows),v.push(E.numSpotLightShadowsWithMaps),v.push(E.shadowMapType),v.push(E.toneMapping),v.push(E.numClippingPlanes),v.push(E.numClipIntersection),v.push(E.depthPacking)}function b(v,E){a.disableAll(),E.isWebGL2&&a.enable(0),E.supportsVertexTextures&&a.enable(1),E.instancing&&a.enable(2),E.instancingColor&&a.enable(3),E.map&&a.enable(4),E.matcap&&a.enable(5),E.envMap&&a.enable(6),E.lightMap&&a.enable(7),E.aoMap&&a.enable(8),E.emissiveMap&&a.enable(9),E.bumpMap&&a.enable(10),E.normalMap&&a.enable(11),E.objectSpaceNormalMap&&a.enable(12),E.tangentSpaceNormalMap&&a.enable(13),E.clearcoat&&a.enable(14),E.clearcoatMap&&a.enable(15),E.clearcoatRoughnessMap&&a.enable(16),E.clearcoatNormalMap&&a.enable(17),E.iridescence&&a.enable(18),E.iridescenceMap&&a.enable(19),E.iridescenceThicknessMap&&a.enable(20),E.displacementMap&&a.enable(21),E.specularMap&&a.enable(22),E.roughnessMap&&a.enable(23),E.metalnessMap&&a.enable(24),E.gradientMap&&a.enable(25),E.alphaMap&&a.enable(26),E.alphaTest&&a.enable(27),E.vertexColors&&a.enable(28),E.vertexAlphas&&a.enable(29),E.vertexUvs&&a.enable(30),E.vertexTangents&&a.enable(31),E.uvsVertexOnly&&a.enable(32),v.push(a.mask),a.disableAll(),E.fog&&a.enable(0),E.useFog&&a.enable(1),E.flatShading&&a.enable(2),E.logarithmicDepthBuffer&&a.enable(3),E.skinning&&a.enable(4),E.morphTargets&&a.enable(5),E.morphNormals&&a.enable(6),E.morphColors&&a.enable(7),E.premultipliedAlpha&&a.enable(8),E.shadowMapEnabled&&a.enable(9),E.physicallyCorrectLights&&a.enable(10),E.doubleSided&&a.enable(11),E.flipSided&&a.enable(12),E.useDepthPacking&&a.enable(13),E.dithering&&a.enable(14),E.specularIntensityMap&&a.enable(15),E.specularColorMap&&a.enable(16),E.transmission&&a.enable(17),E.transmissionMap&&a.enable(18),E.thicknessMap&&a.enable(19),E.sheen&&a.enable(20),E.sheenColorMap&&a.enable(21),E.sheenRoughnessMap&&a.enable(22),E.decodeVideoTexture&&a.enable(23),E.opaque&&a.enable(24),v.push(a.mask)}function y(v){const E=g[v.type];let S;if(E){const O=kn[E];S=Pf.clone(O.uniforms)}else S=v.uniforms;return S}function w(v,E){let S;for(let O=0,F=c.length;O<F;O++){const L=c[O];if(L.cacheKey===E){S=L,++S.usedTimes;break}}return S===void 0&&(S=new u0(i,E,v,s),c.push(S)),S}function x(v){if(--v.usedTimes===0){const E=c.indexOf(v);c[E]=c[c.length-1],c.pop(),v.destroy()}}function M(v){l.remove(v)}function P(){l.dispose()}return{getParameters:h,getProgramCacheKey:p,getUniforms:y,acquireProgram:w,releaseProgram:x,releaseShaderCache:M,programs:c,dispose:P}}function m0(){let i=new WeakMap;function e(s){let o=i.get(s);return o===void 0&&(o={},i.set(s,o)),o}function t(s){i.delete(s)}function n(s,o,a){i.get(s)[o]=a}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function g0(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function vc(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function bc(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(f,d,m,g,h,p){let _=i[e];return _===void 0?(_={id:f.id,object:f,geometry:d,material:m,groupOrder:g,renderOrder:f.renderOrder,z:h,group:p},i[e]=_):(_.id=f.id,_.object=f,_.geometry=d,_.material=m,_.groupOrder=g,_.renderOrder=f.renderOrder,_.z=h,_.group=p),e++,_}function a(f,d,m,g,h,p){const _=o(f,d,m,g,h,p);m.transmission>0?n.push(_):m.transparent===!0?r.push(_):t.push(_)}function l(f,d,m,g,h,p){const _=o(f,d,m,g,h,p);m.transmission>0?n.unshift(_):m.transparent===!0?r.unshift(_):t.unshift(_)}function c(f,d){t.length>1&&t.sort(f||g0),n.length>1&&n.sort(d||vc),r.length>1&&r.sort(d||vc)}function u(){for(let f=e,d=i.length;f<d;f++){const m=i[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function _0(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new bc,i.set(n,[o])):r>=s.length?(o=new bc,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function v0(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new G,color:new qe};break;case"SpotLight":t={position:new G,direction:new G,color:new qe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new G,color:new qe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new G,skyColor:new qe,groundColor:new qe};break;case"RectAreaLight":t={color:new qe,position:new G,halfWidth:new G,halfHeight:new G};break}return i[e.id]=t,t}}}function b0(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Be};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Be};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Be,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let w0=0;function y0(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function x0(i,e){const t=new v0,n=b0(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)r.probe.push(new G);const s=new G,o=new yt,a=new yt;function l(u,f){let d=0,m=0,g=0;for(let O=0;O<9;O++)r.probe[O].set(0,0,0);let h=0,p=0,_=0,b=0,y=0,w=0,x=0,M=0,P=0,v=0;u.sort(y0);const E=f!==!0?Math.PI:1;for(let O=0,F=u.length;O<F;O++){const L=u[O],I=L.color,k=L.intensity,R=L.distance,W=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)d+=I.r*k*E,m+=I.g*k*E,g+=I.b*k*E;else if(L.isLightProbe)for(let Y=0;Y<9;Y++)r.probe[Y].addScaledVector(L.sh.coefficients[Y],k);else if(L.isDirectionalLight){const Y=t.get(L);if(Y.color.copy(L.color).multiplyScalar(L.intensity*E),L.castShadow){const H=L.shadow,B=n.get(L);B.shadowBias=H.bias,B.shadowNormalBias=H.normalBias,B.shadowRadius=H.radius,B.shadowMapSize=H.mapSize,r.directionalShadow[h]=B,r.directionalShadowMap[h]=W,r.directionalShadowMatrix[h]=L.shadow.matrix,w++}r.directional[h]=Y,h++}else if(L.isSpotLight){const Y=t.get(L);Y.position.setFromMatrixPosition(L.matrixWorld),Y.color.copy(I).multiplyScalar(k*E),Y.distance=R,Y.coneCos=Math.cos(L.angle),Y.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),Y.decay=L.decay,r.spot[_]=Y;const H=L.shadow;if(L.map&&(r.spotLightMap[P]=L.map,P++,H.updateMatrices(L),L.castShadow&&v++),r.spotLightMatrix[_]=H.matrix,L.castShadow){const B=n.get(L);B.shadowBias=H.bias,B.shadowNormalBias=H.normalBias,B.shadowRadius=H.radius,B.shadowMapSize=H.mapSize,r.spotShadow[_]=B,r.spotShadowMap[_]=W,M++}_++}else if(L.isRectAreaLight){const Y=t.get(L);Y.color.copy(I).multiplyScalar(k),Y.halfWidth.set(L.width*.5,0,0),Y.halfHeight.set(0,L.height*.5,0),r.rectArea[b]=Y,b++}else if(L.isPointLight){const Y=t.get(L);if(Y.color.copy(L.color).multiplyScalar(L.intensity*E),Y.distance=L.distance,Y.decay=L.decay,L.castShadow){const H=L.shadow,B=n.get(L);B.shadowBias=H.bias,B.shadowNormalBias=H.normalBias,B.shadowRadius=H.radius,B.shadowMapSize=H.mapSize,B.shadowCameraNear=H.camera.near,B.shadowCameraFar=H.camera.far,r.pointShadow[p]=B,r.pointShadowMap[p]=W,r.pointShadowMatrix[p]=L.shadow.matrix,x++}r.point[p]=Y,p++}else if(L.isHemisphereLight){const Y=t.get(L);Y.skyColor.copy(L.color).multiplyScalar(k*E),Y.groundColor.copy(L.groundColor).multiplyScalar(k*E),r.hemi[y]=Y,y++}}b>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=_e.LTC_FLOAT_1,r.rectAreaLTC2=_e.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=_e.LTC_HALF_1,r.rectAreaLTC2=_e.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=d,r.ambient[1]=m,r.ambient[2]=g;const S=r.hash;(S.directionalLength!==h||S.pointLength!==p||S.spotLength!==_||S.rectAreaLength!==b||S.hemiLength!==y||S.numDirectionalShadows!==w||S.numPointShadows!==x||S.numSpotShadows!==M||S.numSpotMaps!==P)&&(r.directional.length=h,r.spot.length=_,r.rectArea.length=b,r.point.length=p,r.hemi.length=y,r.directionalShadow.length=w,r.directionalShadowMap.length=w,r.pointShadow.length=x,r.pointShadowMap.length=x,r.spotShadow.length=M,r.spotShadowMap.length=M,r.directionalShadowMatrix.length=w,r.pointShadowMatrix.length=x,r.spotLightMatrix.length=M+P-v,r.spotLightMap.length=P,r.numSpotLightShadowsWithMaps=v,S.directionalLength=h,S.pointLength=p,S.spotLength=_,S.rectAreaLength=b,S.hemiLength=y,S.numDirectionalShadows=w,S.numPointShadows=x,S.numSpotShadows=M,S.numSpotMaps=P,r.version=w0++)}function c(u,f){let d=0,m=0,g=0,h=0,p=0;const _=f.matrixWorldInverse;for(let b=0,y=u.length;b<y;b++){const w=u[b];if(w.isDirectionalLight){const x=r.directional[d];x.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(_),d++}else if(w.isSpotLight){const x=r.spot[g];x.position.setFromMatrixPosition(w.matrixWorld),x.position.applyMatrix4(_),x.direction.setFromMatrixPosition(w.matrixWorld),s.setFromMatrixPosition(w.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(_),g++}else if(w.isRectAreaLight){const x=r.rectArea[h];x.position.setFromMatrixPosition(w.matrixWorld),x.position.applyMatrix4(_),a.identity(),o.copy(w.matrixWorld),o.premultiply(_),a.extractRotation(o),x.halfWidth.set(w.width*.5,0,0),x.halfHeight.set(0,w.height*.5,0),x.halfWidth.applyMatrix4(a),x.halfHeight.applyMatrix4(a),h++}else if(w.isPointLight){const x=r.point[m];x.position.setFromMatrixPosition(w.matrixWorld),x.position.applyMatrix4(_),m++}else if(w.isHemisphereLight){const x=r.hemi[p];x.direction.setFromMatrixPosition(w.matrixWorld),x.direction.transformDirection(_),p++}}}return{setup:l,setupView:c,state:r}}function wc(i,e){const t=new x0(i,e),n=[],r=[];function s(){n.length=0,r.length=0}function o(f){n.push(f)}function a(f){r.push(f)}function l(f){t.setup(n,f)}function c(f){t.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function M0(i,e){let t=new WeakMap;function n(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new wc(i,e),t.set(s,[l])):o>=a.length?(l=new wc(i,e),a.push(l)):l=a[o],l}function r(){t=new WeakMap}return{get:n,dispose:r}}class S0 extends Dr{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Uh,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class E0 extends Dr{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new G,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const A0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,T0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function C0(i,e,t){let n=new mo;const r=new Be,s=new Be,o=new Ut,a=new S0({depthPacking:Gh}),l=new E0,c={},u=t.maxTextureSize,f={0:bn,1:Er,2:vi},d=new ii({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Be},radius:{value:4}},vertexShader:A0,fragmentShader:T0}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const g=new un;g.setAttribute("position",new In(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const h=new _n(g,d),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=gf,this.render=function(w,x,M){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||w.length===0)return;const P=i.getRenderTarget(),v=i.getActiveCubeFace(),E=i.getActiveMipmapLevel(),S=i.state;S.setBlending(wi),S.buffers.color.setClear(1,1,1,1),S.buffers.depth.setTest(!0),S.setScissorTest(!1);for(let O=0,F=w.length;O<F;O++){const L=w[O],I=L.shadow;if(I===void 0){console.warn("THREE.WebGLShadowMap:",L,"has no shadow.");continue}if(I.autoUpdate===!1&&I.needsUpdate===!1)continue;r.copy(I.mapSize);const k=I.getFrameExtents();if(r.multiply(k),s.copy(I.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/k.x),r.x=s.x*k.x,I.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/k.y),r.y=s.y*k.y,I.mapSize.y=s.y)),I.map===null){const W=this.type!==Wr?{minFilter:rn,magFilter:rn}:{};I.map=new Si(r.x,r.y,W),I.map.texture.name=L.name+".shadowMap",I.camera.updateProjectionMatrix()}i.setRenderTarget(I.map),i.clear();const R=I.getViewportCount();for(let W=0;W<R;W++){const Y=I.getViewport(W);o.set(s.x*Y.x,s.y*Y.y,s.x*Y.z,s.y*Y.w),S.viewport(o),I.updateMatrices(L,W),n=I.getFrustum(),y(x,M,I.camera,L,this.type)}I.isPointLightShadow!==!0&&this.type===Wr&&_(I,M),I.needsUpdate=!1}p.needsUpdate=!1,i.setRenderTarget(P,v,E)};function _(w,x){const M=e.update(h);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,m.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new Si(r.x,r.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,i.setRenderTarget(w.mapPass),i.clear(),i.renderBufferDirect(x,null,M,d,h,null),m.uniforms.shadow_pass.value=w.mapPass.texture,m.uniforms.resolution.value=w.mapSize,m.uniforms.radius.value=w.radius,i.setRenderTarget(w.map),i.clear(),i.renderBufferDirect(x,null,M,m,h,null)}function b(w,x,M,P,v,E){let S=null;const O=M.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(O!==void 0?S=O:S=M.isPointLight===!0?l:a,i.localClippingEnabled&&x.clipShadows===!0&&Array.isArray(x.clippingPlanes)&&x.clippingPlanes.length!==0||x.displacementMap&&x.displacementScale!==0||x.alphaMap&&x.alphaTest>0){const F=S.uuid,L=x.uuid;let I=c[F];I===void 0&&(I={},c[F]=I);let k=I[L];k===void 0&&(k=S.clone(),I[L]=k),S=k}return S.visible=x.visible,S.wireframe=x.wireframe,E===Wr?S.side=x.shadowSide!==null?x.shadowSide:x.side:S.side=x.shadowSide!==null?x.shadowSide:f[x.side],S.alphaMap=x.alphaMap,S.alphaTest=x.alphaTest,S.clipShadows=x.clipShadows,S.clippingPlanes=x.clippingPlanes,S.clipIntersection=x.clipIntersection,S.displacementMap=x.displacementMap,S.displacementScale=x.displacementScale,S.displacementBias=x.displacementBias,S.wireframeLinewidth=x.wireframeLinewidth,S.linewidth=x.linewidth,M.isPointLight===!0&&S.isMeshDistanceMaterial===!0&&(S.referencePosition.setFromMatrixPosition(M.matrixWorld),S.nearDistance=P,S.farDistance=v),S}function y(w,x,M,P,v){if(w.visible===!1)return;if(w.layers.test(x.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&v===Wr)&&(!w.frustumCulled||n.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,w.matrixWorld);const O=e.update(w),F=w.material;if(Array.isArray(F)){const L=O.groups;for(let I=0,k=L.length;I<k;I++){const R=L[I],W=F[R.materialIndex];if(W&&W.visible){const Y=b(w,W,P,M.near,M.far,v);i.renderBufferDirect(M,null,O,Y,w,R)}}}else if(F.visible){const L=b(w,F,P,M.near,M.far,v);i.renderBufferDirect(M,null,O,L,w,null)}}const S=w.children;for(let O=0,F=S.length;O<F;O++)y(S[O],x,M,P,v)}}function L0(i,e,t){const n=t.isWebGL2;function r(){let U=!1;const pe=new Ut;let ee=null;const Ee=new Ut(0,0,0,0);return{setMask:function(xe){ee!==xe&&!U&&(i.colorMask(xe,xe,xe,xe),ee=xe)},setLocked:function(xe){U=xe},setClear:function(xe,Qe,ct,wt,en){en===!0&&(xe*=wt,Qe*=wt,ct*=wt),pe.set(xe,Qe,ct,wt),Ee.equals(pe)===!1&&(i.clearColor(xe,Qe,ct,wt),Ee.copy(pe))},reset:function(){U=!1,ee=null,Ee.set(-1,0,0,0)}}}function s(){let U=!1,pe=null,ee=null,Ee=null;return{setTest:function(xe){xe?ce(2929):Se(2929)},setMask:function(xe){pe!==xe&&!U&&(i.depthMask(xe),pe=xe)},setFunc:function(xe){if(ee!==xe){if(xe)switch(xe){case uh:i.depthFunc(512);break;case fh:i.depthFunc(519);break;case dh:i.depthFunc(513);break;case wa:i.depthFunc(515);break;case hh:i.depthFunc(514);break;case ph:i.depthFunc(518);break;case mh:i.depthFunc(516);break;case gh:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);ee=xe}},setLocked:function(xe){U=xe},setClear:function(xe){Ee!==xe&&(i.clearDepth(xe),Ee=xe)},reset:function(){U=!1,pe=null,ee=null,Ee=null}}}function o(){let U=!1,pe=null,ee=null,Ee=null,xe=null,Qe=null,ct=null,wt=null,en=null;return{setTest:function(Mt){U||(Mt?ce(2960):Se(2960))},setMask:function(Mt){pe!==Mt&&!U&&(i.stencilMask(Mt),pe=Mt)},setFunc:function(Mt,Mn,tn){(ee!==Mt||Ee!==Mn||xe!==tn)&&(i.stencilFunc(Mt,Mn,tn),ee=Mt,Ee=Mn,xe=tn)},setOp:function(Mt,Mn,tn){(Qe!==Mt||ct!==Mn||wt!==tn)&&(i.stencilOp(Mt,Mn,tn),Qe=Mt,ct=Mn,wt=tn)},setLocked:function(Mt){U=Mt},setClear:function(Mt){en!==Mt&&(i.clearStencil(Mt),en=Mt)},reset:function(){U=!1,pe=null,ee=null,Ee=null,xe=null,Qe=null,ct=null,wt=null,en=null}}}const a=new r,l=new s,c=new o,u=new WeakMap,f=new WeakMap;let d={},m={},g=new WeakMap,h=[],p=null,_=!1,b=null,y=null,w=null,x=null,M=null,P=null,v=null,E=!1,S=null,O=null,F=null,L=null,I=null;const k=i.getParameter(35661);let R=!1,W=0;const Y=i.getParameter(7938);Y.indexOf("WebGL")!==-1?(W=parseFloat(/^WebGL (\d)/.exec(Y)[1]),R=W>=1):Y.indexOf("OpenGL ES")!==-1&&(W=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),R=W>=2);let H=null,B={};const j=i.getParameter(3088),ne=i.getParameter(2978),oe=new Ut().fromArray(j),me=new Ut().fromArray(ne);function be(U,pe,ee){const Ee=new Uint8Array(4),xe=i.createTexture();i.bindTexture(U,xe),i.texParameteri(U,10241,9728),i.texParameteri(U,10240,9728);for(let Qe=0;Qe<ee;Qe++)i.texImage2D(pe+Qe,0,6408,1,1,0,6408,5121,Ee);return xe}const V={};V[3553]=be(3553,3553,1),V[34067]=be(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ce(2929),l.setFunc(wa),dt(!1),xt(cl),ce(2884),He(wi);function ce(U){d[U]!==!0&&(i.enable(U),d[U]=!0)}function Se(U){d[U]!==!1&&(i.disable(U),d[U]=!1)}function ue(U,pe){return m[U]!==pe?(i.bindFramebuffer(U,pe),m[U]=pe,n&&(U===36009&&(m[36160]=pe),U===36160&&(m[36009]=pe)),!0):!1}function ge(U,pe){let ee=h,Ee=!1;if(U)if(ee=g.get(pe),ee===void 0&&(ee=[],g.set(pe,ee)),U.isWebGLMultipleRenderTargets){const xe=U.texture;if(ee.length!==xe.length||ee[0]!==36064){for(let Qe=0,ct=xe.length;Qe<ct;Qe++)ee[Qe]=36064+Qe;ee.length=xe.length,Ee=!0}}else ee[0]!==36064&&(ee[0]=36064,Ee=!0);else ee[0]!==1029&&(ee[0]=1029,Ee=!0);Ee&&(t.isWebGL2?i.drawBuffers(ee):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ee))}function je(U){return p!==U?(i.useProgram(U),p=U,!0):!1}const K={[mr]:32774,[$d]:32778,[eh]:32779};if(n)K[hl]=32775,K[pl]=32776;else{const U=e.get("EXT_blend_minmax");U!==null&&(K[hl]=U.MIN_EXT,K[pl]=U.MAX_EXT)}const ae={[th]:0,[nh]:1,[ih]:768,[vf]:770,[ch]:776,[ah]:774,[sh]:772,[rh]:769,[bf]:771,[lh]:775,[oh]:773};function He(U,pe,ee,Ee,xe,Qe,ct,wt){if(U===wi){_===!0&&(Se(3042),_=!1);return}if(_===!1&&(ce(3042),_=!0),U!==Qd){if(U!==b||wt!==E){if((y!==mr||M!==mr)&&(i.blendEquation(32774),y=mr,M=mr),wt)switch(U){case br:i.blendFuncSeparate(1,771,1,771);break;case ul:i.blendFunc(1,1);break;case fl:i.blendFuncSeparate(0,769,0,1);break;case dl:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case br:i.blendFuncSeparate(770,771,1,771);break;case ul:i.blendFunc(770,1);break;case fl:i.blendFuncSeparate(0,769,0,1);break;case dl:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}w=null,x=null,P=null,v=null,b=U,E=wt}return}xe=xe||pe,Qe=Qe||ee,ct=ct||Ee,(pe!==y||xe!==M)&&(i.blendEquationSeparate(K[pe],K[xe]),y=pe,M=xe),(ee!==w||Ee!==x||Qe!==P||ct!==v)&&(i.blendFuncSeparate(ae[ee],ae[Ee],ae[Qe],ae[ct]),w=ee,x=Ee,P=Qe,v=ct),b=U,E=null}function Fe(U,pe){U.side===vi?Se(2884):ce(2884);let ee=U.side===bn;pe&&(ee=!ee),dt(ee),U.blending===br&&U.transparent===!1?He(wi):He(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.premultipliedAlpha),l.setFunc(U.depthFunc),l.setTest(U.depthTest),l.setMask(U.depthWrite),a.setMask(U.colorWrite);const Ee=U.stencilWrite;c.setTest(Ee),Ee&&(c.setMask(U.stencilWriteMask),c.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),c.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),Ie(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?ce(32926):Se(32926)}function dt(U){S!==U&&(U?i.frontFace(2304):i.frontFace(2305),S=U)}function xt(U){U!==Kd?(ce(2884),U!==O&&(U===cl?i.cullFace(1029):U===Jd?i.cullFace(1028):i.cullFace(1032))):Se(2884),O=U}function bt(U){U!==F&&(R&&i.lineWidth(U),F=U)}function Ie(U,pe,ee){U?(ce(32823),(L!==pe||I!==ee)&&(i.polygonOffset(pe,ee),L=pe,I=ee)):Se(32823)}function Le(U){U?ce(3089):Se(3089)}function it(U){U===void 0&&(U=33984+k-1),H!==U&&(i.activeTexture(U),H=U)}function D(U,pe){H===null&&it();let ee=B[H];ee===void 0&&(ee={type:void 0,texture:void 0},B[H]=ee),(ee.type!==U||ee.texture!==pe)&&(i.bindTexture(U,pe||V[U]),ee.type=U,ee.texture=pe)}function A(){const U=B[H];U!==void 0&&U.type!==void 0&&(i.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function $(){try{i.compressedTexImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function se(){try{i.texSubImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function fe(){try{i.texSubImage3D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ve(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ge(){try{i.texStorage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function T(){try{i.texStorage3D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function re(){try{i.texImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function de(){try{i.texImage3D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function we(U){oe.equals(U)===!1&&(i.scissor(U.x,U.y,U.z,U.w),oe.copy(U))}function z(U){me.equals(U)===!1&&(i.viewport(U.x,U.y,U.z,U.w),me.copy(U))}function Te(U,pe){let ee=f.get(pe);ee===void 0&&(ee=new WeakMap,f.set(pe,ee));let Ee=ee.get(U);Ee===void 0&&(Ee=i.getUniformBlockIndex(pe,U.name),ee.set(U,Ee))}function Xe(U,pe){const Ee=f.get(pe).get(U);u.get(U)!==Ee&&(i.uniformBlockBinding(pe,Ee,U.__bindingPointIndex),u.set(U,Ee))}function lt(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},H=null,B={},m={},g=new WeakMap,h=[],p=null,_=!1,b=null,y=null,w=null,x=null,M=null,P=null,v=null,E=!1,S=null,O=null,F=null,L=null,I=null,oe.set(0,0,i.canvas.width,i.canvas.height),me.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ce,disable:Se,bindFramebuffer:ue,drawBuffers:ge,useProgram:je,setBlending:He,setMaterial:Fe,setFlipSided:dt,setCullFace:xt,setLineWidth:bt,setPolygonOffset:Ie,setScissorTest:Le,activeTexture:it,bindTexture:D,unbindTexture:A,compressedTexImage2D:$,texImage2D:re,texImage3D:de,updateUBOMapping:Te,uniformBlockBinding:Xe,texStorage2D:Ge,texStorage3D:T,texSubImage2D:se,texSubImage3D:fe,compressedTexSubImage2D:ve,scissor:we,viewport:z,reset:lt}}function D0(i,e,t,n,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,f=r.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let h;const p=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(D,A){return _?new OffscreenCanvas(D,A):$r("canvas")}function y(D,A,$,se){let fe=1;if((D.width>se||D.height>se)&&(fe=se/Math.max(D.width,D.height)),fe<1||A===!0)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap){const ve=A?Aa:Math.floor,Ge=ve(fe*D.width),T=ve(fe*D.height);h===void 0&&(h=b(Ge,T));const re=$?b(Ge,T):h;return re.width=Ge,re.height=T,re.getContext("2d").drawImage(D,0,0,Ge,T),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+Ge+"x"+T+")."),re}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function w(D){return Bl(D.width)&&Bl(D.height)}function x(D){return a?!1:D.wrapS!==Rn||D.wrapT!==Rn||D.minFilter!==rn&&D.minFilter!==mn}function M(D,A){return D.generateMipmaps&&A&&D.minFilter!==rn&&D.minFilter!==mn}function P(D){i.generateMipmap(D)}function v(D,A,$,se,fe=!1){if(a===!1)return A;if(D!==null){if(i[D]!==void 0)return i[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let ve=A;return A===6403&&($===5126&&(ve=33326),$===5131&&(ve=33325),$===5121&&(ve=33321)),A===33319&&($===5126&&(ve=33328),$===5131&&(ve=33327),$===5121&&(ve=33323)),A===6408&&($===5126&&(ve=34836),$===5131&&(ve=34842),$===5121&&(ve=se===Lt&&fe===!1?35907:32856),$===32819&&(ve=32854),$===32820&&(ve=32855)),(ve===33325||ve===33326||ve===33327||ve===33328||ve===34842||ve===34836)&&e.get("EXT_color_buffer_float"),ve}function E(D,A,$){return M(D,$)===!0||D.isFramebufferTexture&&D.minFilter!==rn&&D.minFilter!==mn?Math.log2(Math.max(A.width,A.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?A.mipmaps.length:1}function S(D){return D===rn||D===ml||D===gl?9728:9729}function O(D){const A=D.target;A.removeEventListener("dispose",O),L(A),A.isVideoTexture&&g.delete(A)}function F(D){const A=D.target;A.removeEventListener("dispose",F),k(A)}function L(D){const A=n.get(D);if(A.__webglInit===void 0)return;const $=D.source,se=p.get($);if(se){const fe=se[A.__cacheKey];fe.usedTimes--,fe.usedTimes===0&&I(D),Object.keys(se).length===0&&p.delete($)}n.remove(D)}function I(D){const A=n.get(D);i.deleteTexture(A.__webglTexture);const $=D.source,se=p.get($);delete se[A.__cacheKey],o.memory.textures--}function k(D){const A=D.texture,$=n.get(D),se=n.get(A);if(se.__webglTexture!==void 0&&(i.deleteTexture(se.__webglTexture),o.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let fe=0;fe<6;fe++)i.deleteFramebuffer($.__webglFramebuffer[fe]),$.__webglDepthbuffer&&i.deleteRenderbuffer($.__webglDepthbuffer[fe]);else{if(i.deleteFramebuffer($.__webglFramebuffer),$.__webglDepthbuffer&&i.deleteRenderbuffer($.__webglDepthbuffer),$.__webglMultisampledFramebuffer&&i.deleteFramebuffer($.__webglMultisampledFramebuffer),$.__webglColorRenderbuffer)for(let fe=0;fe<$.__webglColorRenderbuffer.length;fe++)$.__webglColorRenderbuffer[fe]&&i.deleteRenderbuffer($.__webglColorRenderbuffer[fe]);$.__webglDepthRenderbuffer&&i.deleteRenderbuffer($.__webglDepthRenderbuffer)}if(D.isWebGLMultipleRenderTargets)for(let fe=0,ve=A.length;fe<ve;fe++){const Ge=n.get(A[fe]);Ge.__webglTexture&&(i.deleteTexture(Ge.__webglTexture),o.memory.textures--),n.remove(A[fe])}n.remove(A),n.remove(D)}let R=0;function W(){R=0}function Y(){const D=R;return D>=l&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+l),R+=1,D}function H(D){const A=[];return A.push(D.wrapS),A.push(D.wrapT),A.push(D.magFilter),A.push(D.minFilter),A.push(D.anisotropy),A.push(D.internalFormat),A.push(D.format),A.push(D.type),A.push(D.generateMipmaps),A.push(D.premultiplyAlpha),A.push(D.flipY),A.push(D.unpackAlignment),A.push(D.encoding),A.join()}function B(D,A){const $=n.get(D);if(D.isVideoTexture&&Le(D),D.isRenderTargetTexture===!1&&D.version>0&&$.__version!==D.version){const se=D.image;if(se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Se($,D,A);return}}t.activeTexture(33984+A),t.bindTexture(3553,$.__webglTexture)}function j(D,A){const $=n.get(D);if(D.version>0&&$.__version!==D.version){Se($,D,A);return}t.activeTexture(33984+A),t.bindTexture(35866,$.__webglTexture)}function ne(D,A){const $=n.get(D);if(D.version>0&&$.__version!==D.version){Se($,D,A);return}t.activeTexture(33984+A),t.bindTexture(32879,$.__webglTexture)}function oe(D,A){const $=n.get(D);if(D.version>0&&$.__version!==D.version){ue($,D,A);return}t.activeTexture(33984+A),t.bindTexture(34067,$.__webglTexture)}const me={[Ma]:10497,[Rn]:33071,[Sa]:33648},be={[rn]:9728,[ml]:9984,[gl]:9986,[mn]:9729,[Mh]:9985,[ho]:9987};function V(D,A,$){if($?(i.texParameteri(D,10242,me[A.wrapS]),i.texParameteri(D,10243,me[A.wrapT]),(D===32879||D===35866)&&i.texParameteri(D,32882,me[A.wrapR]),i.texParameteri(D,10240,be[A.magFilter]),i.texParameteri(D,10241,be[A.minFilter])):(i.texParameteri(D,10242,33071),i.texParameteri(D,10243,33071),(D===32879||D===35866)&&i.texParameteri(D,32882,33071),(A.wrapS!==Rn||A.wrapT!==Rn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(D,10240,S(A.magFilter)),i.texParameteri(D,10241,S(A.minFilter)),A.minFilter!==rn&&A.minFilter!==mn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const se=e.get("EXT_texture_filter_anisotropic");if(A.type===Ui&&e.has("OES_texture_float_linear")===!1||a===!1&&A.type===Qr&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||n.get(A).__currentAnisotropy)&&(i.texParameterf(D,se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy)}}function ce(D,A){let $=!1;D.__webglInit===void 0&&(D.__webglInit=!0,A.addEventListener("dispose",O));const se=A.source;let fe=p.get(se);fe===void 0&&(fe={},p.set(se,fe));const ve=H(A);if(ve!==D.__cacheKey){fe[ve]===void 0&&(fe[ve]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,$=!0),fe[ve].usedTimes++;const Ge=fe[D.__cacheKey];Ge!==void 0&&(fe[D.__cacheKey].usedTimes--,Ge.usedTimes===0&&I(A)),D.__cacheKey=ve,D.__webglTexture=fe[ve].texture}return $}function Se(D,A,$){let se=3553;A.isDataArrayTexture&&(se=35866),A.isData3DTexture&&(se=32879);const fe=ce(D,A),ve=A.source;if(t.activeTexture(33984+$),t.bindTexture(se,D.__webglTexture),ve.version!==ve.__currentVersion||fe===!0){i.pixelStorei(37440,A.flipY),i.pixelStorei(37441,A.premultiplyAlpha),i.pixelStorei(3317,A.unpackAlignment),i.pixelStorei(37443,0);const Ge=x(A)&&w(A.image)===!1;let T=y(A.image,Ge,!1,u);T=it(A,T);const re=w(T)||a,de=s.convert(A.format,A.encoding);let we=s.convert(A.type),z=v(A.internalFormat,de,we,A.encoding,A.isVideoTexture);V(se,A,re);let Te;const Xe=A.mipmaps,lt=a&&A.isVideoTexture!==!0,U=ve.__currentVersion===void 0||fe===!0,pe=E(A,T,re);if(A.isDepthTexture)z=6402,a?A.type===Ui?z=36012:A.type===zi?z=33190:A.type===wr?z=35056:z=33189:A.type===Ui&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Vi&&z===6402&&A.type!==xf&&A.type!==zi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=zi,we=s.convert(A.type)),A.format===Cr&&z===6402&&(z=34041,A.type!==wr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=wr,we=s.convert(A.type))),U&&(lt?t.texStorage2D(3553,1,z,T.width,T.height):t.texImage2D(3553,0,z,T.width,T.height,0,de,we,null));else if(A.isDataTexture)if(Xe.length>0&&re){lt&&U&&t.texStorage2D(3553,pe,z,Xe[0].width,Xe[0].height);for(let ee=0,Ee=Xe.length;ee<Ee;ee++)Te=Xe[ee],lt?t.texSubImage2D(3553,ee,0,0,Te.width,Te.height,de,we,Te.data):t.texImage2D(3553,ee,z,Te.width,Te.height,0,de,we,Te.data);A.generateMipmaps=!1}else lt?(U&&t.texStorage2D(3553,pe,z,T.width,T.height),t.texSubImage2D(3553,0,0,0,T.width,T.height,de,we,T.data)):t.texImage2D(3553,0,z,T.width,T.height,0,de,we,T.data);else if(A.isCompressedTexture){lt&&U&&t.texStorage2D(3553,pe,z,Xe[0].width,Xe[0].height);for(let ee=0,Ee=Xe.length;ee<Ee;ee++)Te=Xe[ee],A.format!==Un?de!==null?lt?t.compressedTexSubImage2D(3553,ee,0,0,Te.width,Te.height,de,Te.data):t.compressedTexImage2D(3553,ee,z,Te.width,Te.height,0,Te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):lt?t.texSubImage2D(3553,ee,0,0,Te.width,Te.height,de,we,Te.data):t.texImage2D(3553,ee,z,Te.width,Te.height,0,de,we,Te.data)}else if(A.isDataArrayTexture)lt?(U&&t.texStorage3D(35866,pe,z,T.width,T.height,T.depth),t.texSubImage3D(35866,0,0,0,0,T.width,T.height,T.depth,de,we,T.data)):t.texImage3D(35866,0,z,T.width,T.height,T.depth,0,de,we,T.data);else if(A.isData3DTexture)lt?(U&&t.texStorage3D(32879,pe,z,T.width,T.height,T.depth),t.texSubImage3D(32879,0,0,0,0,T.width,T.height,T.depth,de,we,T.data)):t.texImage3D(32879,0,z,T.width,T.height,T.depth,0,de,we,T.data);else if(A.isFramebufferTexture){if(U)if(lt)t.texStorage2D(3553,pe,z,T.width,T.height);else{let ee=T.width,Ee=T.height;for(let xe=0;xe<pe;xe++)t.texImage2D(3553,xe,z,ee,Ee,0,de,we,null),ee>>=1,Ee>>=1}}else if(Xe.length>0&&re){lt&&U&&t.texStorage2D(3553,pe,z,Xe[0].width,Xe[0].height);for(let ee=0,Ee=Xe.length;ee<Ee;ee++)Te=Xe[ee],lt?t.texSubImage2D(3553,ee,0,0,de,we,Te):t.texImage2D(3553,ee,z,de,we,Te);A.generateMipmaps=!1}else lt?(U&&t.texStorage2D(3553,pe,z,T.width,T.height),t.texSubImage2D(3553,0,0,0,de,we,T)):t.texImage2D(3553,0,z,de,we,T);M(A,re)&&P(se),ve.__currentVersion=ve.version,A.onUpdate&&A.onUpdate(A)}D.__version=A.version}function ue(D,A,$){if(A.image.length!==6)return;const se=ce(D,A),fe=A.source;if(t.activeTexture(33984+$),t.bindTexture(34067,D.__webglTexture),fe.version!==fe.__currentVersion||se===!0){i.pixelStorei(37440,A.flipY),i.pixelStorei(37441,A.premultiplyAlpha),i.pixelStorei(3317,A.unpackAlignment),i.pixelStorei(37443,0);const ve=A.isCompressedTexture||A.image[0].isCompressedTexture,Ge=A.image[0]&&A.image[0].isDataTexture,T=[];for(let ee=0;ee<6;ee++)!ve&&!Ge?T[ee]=y(A.image[ee],!1,!0,c):T[ee]=Ge?A.image[ee].image:A.image[ee],T[ee]=it(A,T[ee]);const re=T[0],de=w(re)||a,we=s.convert(A.format,A.encoding),z=s.convert(A.type),Te=v(A.internalFormat,we,z,A.encoding),Xe=a&&A.isVideoTexture!==!0,lt=fe.__currentVersion===void 0||se===!0;let U=E(A,re,de);V(34067,A,de);let pe;if(ve){Xe&&lt&&t.texStorage2D(34067,U,Te,re.width,re.height);for(let ee=0;ee<6;ee++){pe=T[ee].mipmaps;for(let Ee=0;Ee<pe.length;Ee++){const xe=pe[Ee];A.format!==Un?we!==null?Xe?t.compressedTexSubImage2D(34069+ee,Ee,0,0,xe.width,xe.height,we,xe.data):t.compressedTexImage2D(34069+ee,Ee,Te,xe.width,xe.height,0,xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Xe?t.texSubImage2D(34069+ee,Ee,0,0,xe.width,xe.height,we,z,xe.data):t.texImage2D(34069+ee,Ee,Te,xe.width,xe.height,0,we,z,xe.data)}}}else{pe=A.mipmaps,Xe&&lt&&(pe.length>0&&U++,t.texStorage2D(34067,U,Te,T[0].width,T[0].height));for(let ee=0;ee<6;ee++)if(Ge){Xe?t.texSubImage2D(34069+ee,0,0,0,T[ee].width,T[ee].height,we,z,T[ee].data):t.texImage2D(34069+ee,0,Te,T[ee].width,T[ee].height,0,we,z,T[ee].data);for(let Ee=0;Ee<pe.length;Ee++){const Qe=pe[Ee].image[ee].image;Xe?t.texSubImage2D(34069+ee,Ee+1,0,0,Qe.width,Qe.height,we,z,Qe.data):t.texImage2D(34069+ee,Ee+1,Te,Qe.width,Qe.height,0,we,z,Qe.data)}}else{Xe?t.texSubImage2D(34069+ee,0,0,0,we,z,T[ee]):t.texImage2D(34069+ee,0,Te,we,z,T[ee]);for(let Ee=0;Ee<pe.length;Ee++){const xe=pe[Ee];Xe?t.texSubImage2D(34069+ee,Ee+1,0,0,we,z,xe.image[ee]):t.texImage2D(34069+ee,Ee+1,Te,we,z,xe.image[ee])}}}M(A,de)&&P(34067),fe.__currentVersion=fe.version,A.onUpdate&&A.onUpdate(A)}D.__version=A.version}function ge(D,A,$,se,fe){const ve=s.convert($.format,$.encoding),Ge=s.convert($.type),T=v($.internalFormat,ve,Ge,$.encoding);n.get(A).__hasExternalTextures||(fe===32879||fe===35866?t.texImage3D(fe,0,T,A.width,A.height,A.depth,0,ve,Ge,null):t.texImage2D(fe,0,T,A.width,A.height,0,ve,Ge,null)),t.bindFramebuffer(36160,D),Ie(A)?d.framebufferTexture2DMultisampleEXT(36160,se,fe,n.get($).__webglTexture,0,bt(A)):i.framebufferTexture2D(36160,se,fe,n.get($).__webglTexture,0),t.bindFramebuffer(36160,null)}function je(D,A,$){if(i.bindRenderbuffer(36161,D),A.depthBuffer&&!A.stencilBuffer){let se=33189;if($||Ie(A)){const fe=A.depthTexture;fe&&fe.isDepthTexture&&(fe.type===Ui?se=36012:fe.type===zi&&(se=33190));const ve=bt(A);Ie(A)?d.renderbufferStorageMultisampleEXT(36161,ve,se,A.width,A.height):i.renderbufferStorageMultisample(36161,ve,se,A.width,A.height)}else i.renderbufferStorage(36161,se,A.width,A.height);i.framebufferRenderbuffer(36160,36096,36161,D)}else if(A.depthBuffer&&A.stencilBuffer){const se=bt(A);$&&Ie(A)===!1?i.renderbufferStorageMultisample(36161,se,35056,A.width,A.height):Ie(A)?d.renderbufferStorageMultisampleEXT(36161,se,35056,A.width,A.height):i.renderbufferStorage(36161,34041,A.width,A.height),i.framebufferRenderbuffer(36160,33306,36161,D)}else{const se=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let fe=0;fe<se.length;fe++){const ve=se[fe],Ge=s.convert(ve.format,ve.encoding),T=s.convert(ve.type),re=v(ve.internalFormat,Ge,T,ve.encoding),de=bt(A);$&&Ie(A)===!1?i.renderbufferStorageMultisample(36161,de,re,A.width,A.height):Ie(A)?d.renderbufferStorageMultisampleEXT(36161,de,re,A.width,A.height):i.renderbufferStorage(36161,re,A.width,A.height)}}i.bindRenderbuffer(36161,null)}function K(D,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,D),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),B(A.depthTexture,0);const se=n.get(A.depthTexture).__webglTexture,fe=bt(A);if(A.depthTexture.format===Vi)Ie(A)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,se,0,fe):i.framebufferTexture2D(36160,36096,3553,se,0);else if(A.depthTexture.format===Cr)Ie(A)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,se,0,fe):i.framebufferTexture2D(36160,33306,3553,se,0);else throw new Error("Unknown depthTexture format")}function ae(D){const A=n.get(D),$=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!A.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");K(A.__webglFramebuffer,D)}else if($){A.__webglDepthbuffer=[];for(let se=0;se<6;se++)t.bindFramebuffer(36160,A.__webglFramebuffer[se]),A.__webglDepthbuffer[se]=i.createRenderbuffer(),je(A.__webglDepthbuffer[se],D,!1)}else t.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=i.createRenderbuffer(),je(A.__webglDepthbuffer,D,!1);t.bindFramebuffer(36160,null)}function He(D,A,$){const se=n.get(D);A!==void 0&&ge(se.__webglFramebuffer,D,D.texture,36064,3553),$!==void 0&&ae(D)}function Fe(D){const A=D.texture,$=n.get(D),se=n.get(A);D.addEventListener("dispose",F),D.isWebGLMultipleRenderTargets!==!0&&(se.__webglTexture===void 0&&(se.__webglTexture=i.createTexture()),se.__version=A.version,o.memory.textures++);const fe=D.isWebGLCubeRenderTarget===!0,ve=D.isWebGLMultipleRenderTargets===!0,Ge=w(D)||a;if(fe){$.__webglFramebuffer=[];for(let T=0;T<6;T++)$.__webglFramebuffer[T]=i.createFramebuffer()}else{if($.__webglFramebuffer=i.createFramebuffer(),ve)if(r.drawBuffers){const T=D.texture;for(let re=0,de=T.length;re<de;re++){const we=n.get(T[re]);we.__webglTexture===void 0&&(we.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&D.samples>0&&Ie(D)===!1){const T=ve?A:[A];$.__webglMultisampledFramebuffer=i.createFramebuffer(),$.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,$.__webglMultisampledFramebuffer);for(let re=0;re<T.length;re++){const de=T[re];$.__webglColorRenderbuffer[re]=i.createRenderbuffer(),i.bindRenderbuffer(36161,$.__webglColorRenderbuffer[re]);const we=s.convert(de.format,de.encoding),z=s.convert(de.type),Te=v(de.internalFormat,we,z,de.encoding),Xe=bt(D);i.renderbufferStorageMultisample(36161,Xe,Te,D.width,D.height),i.framebufferRenderbuffer(36160,36064+re,36161,$.__webglColorRenderbuffer[re])}i.bindRenderbuffer(36161,null),D.depthBuffer&&($.__webglDepthRenderbuffer=i.createRenderbuffer(),je($.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(36160,null)}}if(fe){t.bindTexture(34067,se.__webglTexture),V(34067,A,Ge);for(let T=0;T<6;T++)ge($.__webglFramebuffer[T],D,A,36064,34069+T);M(A,Ge)&&P(34067),t.unbindTexture()}else if(ve){const T=D.texture;for(let re=0,de=T.length;re<de;re++){const we=T[re],z=n.get(we);t.bindTexture(3553,z.__webglTexture),V(3553,we,Ge),ge($.__webglFramebuffer,D,we,36064+re,3553),M(we,Ge)&&P(3553)}t.unbindTexture()}else{let T=3553;(D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(a?T=D.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(T,se.__webglTexture),V(T,A,Ge),ge($.__webglFramebuffer,D,A,36064,T),M(A,Ge)&&P(T),t.unbindTexture()}D.depthBuffer&&ae(D)}function dt(D){const A=w(D)||a,$=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let se=0,fe=$.length;se<fe;se++){const ve=$[se];if(M(ve,A)){const Ge=D.isWebGLCubeRenderTarget?34067:3553,T=n.get(ve).__webglTexture;t.bindTexture(Ge,T),P(Ge),t.unbindTexture()}}}function xt(D){if(a&&D.samples>0&&Ie(D)===!1){const A=D.isWebGLMultipleRenderTargets?D.texture:[D.texture],$=D.width,se=D.height;let fe=16384;const ve=[],Ge=D.stencilBuffer?33306:36096,T=n.get(D),re=D.isWebGLMultipleRenderTargets===!0;if(re)for(let de=0;de<A.length;de++)t.bindFramebuffer(36160,T.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+de,36161,null),t.bindFramebuffer(36160,T.__webglFramebuffer),i.framebufferTexture2D(36009,36064+de,3553,null,0);t.bindFramebuffer(36008,T.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,T.__webglFramebuffer);for(let de=0;de<A.length;de++){ve.push(36064+de),D.depthBuffer&&ve.push(Ge);const we=T.__ignoreDepthValues!==void 0?T.__ignoreDepthValues:!1;if(we===!1&&(D.depthBuffer&&(fe|=256),D.stencilBuffer&&(fe|=1024)),re&&i.framebufferRenderbuffer(36008,36064,36161,T.__webglColorRenderbuffer[de]),we===!0&&(i.invalidateFramebuffer(36008,[Ge]),i.invalidateFramebuffer(36009,[Ge])),re){const z=n.get(A[de]).__webglTexture;i.framebufferTexture2D(36009,36064,3553,z,0)}i.blitFramebuffer(0,0,$,se,0,0,$,se,fe,9728),m&&i.invalidateFramebuffer(36008,ve)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),re)for(let de=0;de<A.length;de++){t.bindFramebuffer(36160,T.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+de,36161,T.__webglColorRenderbuffer[de]);const we=n.get(A[de]).__webglTexture;t.bindFramebuffer(36160,T.__webglFramebuffer),i.framebufferTexture2D(36009,36064+de,3553,we,0)}t.bindFramebuffer(36009,T.__webglMultisampledFramebuffer)}}function bt(D){return Math.min(f,D.samples)}function Ie(D){const A=n.get(D);return a&&D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Le(D){const A=o.render.frame;g.get(D)!==A&&(g.set(D,A),D.update())}function it(D,A){const $=D.encoding,se=D.format,fe=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===Ea||$!==Mi&&($===Lt?a===!1?e.has("EXT_sRGB")===!0&&se===Un?(D.format=Ea,D.minFilter=mn,D.generateMipmaps=!1):A=Af.sRGBToLinear(A):(se!==Un||fe!==ji)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",$)),A}this.allocateTextureUnit=Y,this.resetTextureUnits=W,this.setTexture2D=B,this.setTexture2DArray=j,this.setTexture3D=ne,this.setTextureCube=oe,this.rebindTextures=He,this.setupRenderTarget=Fe,this.updateRenderTargetMipmap=dt,this.updateMultisampleRenderTarget=xt,this.setupDepthRenderbuffer=ae,this.setupFrameBufferTexture=ge,this.useMultisampledRTT=Ie}function P0(i,e,t){const n=t.isWebGL2;function r(s,o=null){let a;if(s===ji)return 5121;if(s===Th)return 32819;if(s===Ch)return 32820;if(s===Sh)return 5120;if(s===Eh)return 5122;if(s===xf)return 5123;if(s===Ah)return 5124;if(s===zi)return 5125;if(s===Ui)return 5126;if(s===Qr)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===Lh)return 6406;if(s===Un)return 6408;if(s===Ph)return 6409;if(s===Rh)return 6410;if(s===Vi)return 6402;if(s===Cr)return 34041;if(s===Ih)return 6403;if(s===Dh)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Ea)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===Oh)return 36244;if(s===kh)return 33319;if(s===Nh)return 33320;if(s===Fh)return 36249;if(s===Do||s===Po||s===Ro||s===Io)if(o===Lt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Do)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Po)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ro)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Io)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Do)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Po)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ro)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Io)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===_l||s===vl||s===bl||s===wl)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===_l)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===vl)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===bl)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===wl)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===zh)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===yl||s===xl)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===yl)return o===Lt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===xl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Ml||s===Sl||s===El||s===Al||s===Tl||s===Cl||s===Ll||s===Dl||s===Pl||s===Rl||s===Il||s===Ol||s===kl||s===Nl)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Ml)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Sl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===El)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Al)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Tl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Cl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Ll)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Dl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Pl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Rl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Il)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Ol)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===kl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Nl)return o===Lt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Fl)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Fl)return o===Lt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===wr?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[s]!==void 0?i[s]:null}return{convert:r}}class R0 extends qt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class qr extends ht{constructor(){super(),this.isGroup=!0,this.type="Group"}}const I0={type:"move"};class aa{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new qr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new qr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new G,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new G),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new qr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new G,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new G),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const h of e.hand.values()){const p=t.getJointPose(h,n);if(c.joints[h.jointName]===void 0){const b=new qr;b.matrixAutoUpdate=!1,b.visible=!1,c.joints[h.jointName]=b,c.add(b)}const _=c.joints[h.jointName];p!==null&&(_.matrix.fromArray(p.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=p.radius),_.visible=p!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],d=u.position.distanceTo(f.position),m=.02,g=.005;c.inputState.pinching&&d>m+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=m-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(I0)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class O0 extends yn{constructor(e,t,n,r,s,o,a,l,c,u){if(u=u!==void 0?u:Vi,u!==Vi&&u!==Cr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Vi&&(n=zi),n===void 0&&u===Cr&&(n=wr),super(null,r,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:rn,this.minFilter=l!==void 0?l:rn,this.flipY=!1,this.generateMipmaps=!1}}class k0 extends Xi{constructor(e,t){super();const n=this;let r=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,f=null,d=null,m=null;const g=t.getContextAttributes();let h=null,p=null;const _=[],b=[],y=new qt;y.layers.enable(1),y.viewport=new Ut;const w=new qt;w.layers.enable(2),w.viewport=new Ut;const x=[y,w],M=new R0;M.layers.enable(1),M.layers.enable(2);let P=null,v=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let B=_[H];return B===void 0&&(B=new aa,_[H]=B),B.getTargetRaySpace()},this.getControllerGrip=function(H){let B=_[H];return B===void 0&&(B=new aa,_[H]=B),B.getGripSpace()},this.getHand=function(H){let B=_[H];return B===void 0&&(B=new aa,_[H]=B),B.getHandSpace()};function E(H){const B=b.indexOf(H.inputSource);if(B===-1)return;const j=_[B];j!==void 0&&j.dispatchEvent({type:H.type,data:H.inputSource})}function S(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",S),r.removeEventListener("inputsourceschange",O);for(let H=0;H<_.length;H++){const B=b[H];B!==null&&(b[H]=null,_[H].disconnect(B))}P=null,v=null,e.setRenderTarget(h),d=null,f=null,u=null,r=null,p=null,Y.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(H){s=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){a=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(H){l=H},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return r},this.setSession=async function(H){if(r=H,r!==null){if(h=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",S),r.addEventListener("inputsourceschange",O),g.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const B={antialias:r.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,B),r.updateRenderState({baseLayer:d}),p=new Si(d.framebufferWidth,d.framebufferHeight,{format:Un,type:ji,encoding:e.outputEncoding,stencilBuffer:g.stencil})}else{let B=null,j=null,ne=null;g.depth&&(ne=g.stencil?35056:33190,B=g.stencil?Cr:Vi,j=g.stencil?wr:zi);const oe={colorFormat:32856,depthFormat:ne,scaleFactor:s};u=new XRWebGLBinding(r,t),f=u.createProjectionLayer(oe),r.updateRenderState({layers:[f]}),p=new Si(f.textureWidth,f.textureHeight,{format:Un,type:ji,depthTexture:new O0(f.textureWidth,f.textureHeight,j,void 0,void 0,void 0,void 0,void 0,void 0,B),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const me=e.properties.get(p);me.__ignoreDepthValues=f.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(a),Y.setContext(r),Y.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function O(H){for(let B=0;B<H.removed.length;B++){const j=H.removed[B],ne=b.indexOf(j);ne>=0&&(b[ne]=null,_[ne].dispatchEvent({type:"disconnected",data:j}))}for(let B=0;B<H.added.length;B++){const j=H.added[B];let ne=b.indexOf(j);if(ne===-1){for(let me=0;me<_.length;me++)if(me>=b.length){b.push(j),ne=me;break}else if(b[me]===null){b[me]=j,ne=me;break}if(ne===-1)break}const oe=_[ne];oe&&oe.dispatchEvent({type:"connected",data:j})}}const F=new G,L=new G;function I(H,B,j){F.setFromMatrixPosition(B.matrixWorld),L.setFromMatrixPosition(j.matrixWorld);const ne=F.distanceTo(L),oe=B.projectionMatrix.elements,me=j.projectionMatrix.elements,be=oe[14]/(oe[10]-1),V=oe[14]/(oe[10]+1),ce=(oe[9]+1)/oe[5],Se=(oe[9]-1)/oe[5],ue=(oe[8]-1)/oe[0],ge=(me[8]+1)/me[0],je=be*ue,K=be*ge,ae=ne/(-ue+ge),He=ae*-ue;B.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(He),H.translateZ(ae),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert();const Fe=be+ae,dt=V+ae,xt=je-He,bt=K+(ne-He),Ie=ce*V/dt*Fe,Le=Se*V/dt*Fe;H.projectionMatrix.makePerspective(xt,bt,Ie,Le,Fe,dt)}function k(H,B){B===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(B.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(r===null)return;M.near=w.near=y.near=H.near,M.far=w.far=y.far=H.far,(P!==M.near||v!==M.far)&&(r.updateRenderState({depthNear:M.near,depthFar:M.far}),P=M.near,v=M.far);const B=H.parent,j=M.cameras;k(M,B);for(let oe=0;oe<j.length;oe++)k(j[oe],B);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),H.matrix.copy(M.matrix),H.matrix.decompose(H.position,H.quaternion,H.scale);const ne=H.children;for(let oe=0,me=ne.length;oe<me;oe++)ne[oe].updateMatrixWorld(!0);j.length===2?I(M,y,w):M.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(f!==null)return f.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(H){f!==null&&(f.fixedFoveation=H),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=H)};let R=null;function W(H,B){if(c=B.getViewerPose(l||o),m=B,c!==null){const j=c.views;d!==null&&(e.setRenderTargetFramebuffer(p,d.framebuffer),e.setRenderTarget(p));let ne=!1;j.length!==M.cameras.length&&(M.cameras.length=0,ne=!0);for(let oe=0;oe<j.length;oe++){const me=j[oe];let be=null;if(d!==null)be=d.getViewport(me);else{const ce=u.getViewSubImage(f,me);be=ce.viewport,oe===0&&(e.setRenderTargetTextures(p,ce.colorTexture,f.ignoreDepthValues?void 0:ce.depthStencilTexture),e.setRenderTarget(p))}let V=x[oe];V===void 0&&(V=new qt,V.layers.enable(oe),V.viewport=new Ut,x[oe]=V),V.matrix.fromArray(me.transform.matrix),V.projectionMatrix.fromArray(me.projectionMatrix),V.viewport.set(be.x,be.y,be.width,be.height),oe===0&&M.matrix.copy(V.matrix),ne===!0&&M.cameras.push(V)}}for(let j=0;j<_.length;j++){const ne=b[j],oe=_[j];ne!==null&&oe!==void 0&&oe.update(ne,B,l||o)}R&&R(H,B),m=null}const Y=new If;Y.setAnimationLoop(W),this.setAnimationLoop=function(H){R=H},this.dispose=function(){}}}function N0(i,e){function t(h,p){h.fogColor.value.copy(p.color),p.isFog?(h.fogNear.value=p.near,h.fogFar.value=p.far):p.isFogExp2&&(h.fogDensity.value=p.density)}function n(h,p,_,b,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(h,p):p.isMeshToonMaterial?(r(h,p),u(h,p)):p.isMeshPhongMaterial?(r(h,p),c(h,p)):p.isMeshStandardMaterial?(r(h,p),f(h,p),p.isMeshPhysicalMaterial&&d(h,p,y)):p.isMeshMatcapMaterial?(r(h,p),m(h,p)):p.isMeshDepthMaterial?r(h,p):p.isMeshDistanceMaterial?(r(h,p),g(h,p)):p.isMeshNormalMaterial?r(h,p):p.isLineBasicMaterial?(s(h,p),p.isLineDashedMaterial&&o(h,p)):p.isPointsMaterial?a(h,p,_,b):p.isSpriteMaterial?l(h,p):p.isShadowMaterial?(h.color.value.copy(p.color),h.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(h,p){h.opacity.value=p.opacity,p.color&&h.diffuse.value.copy(p.color),p.emissive&&h.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.bumpMap&&(h.bumpMap.value=p.bumpMap,h.bumpScale.value=p.bumpScale,p.side===bn&&(h.bumpScale.value*=-1)),p.displacementMap&&(h.displacementMap.value=p.displacementMap,h.displacementScale.value=p.displacementScale,h.displacementBias.value=p.displacementBias),p.emissiveMap&&(h.emissiveMap.value=p.emissiveMap),p.normalMap&&(h.normalMap.value=p.normalMap,h.normalScale.value.copy(p.normalScale),p.side===bn&&h.normalScale.value.negate()),p.specularMap&&(h.specularMap.value=p.specularMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);const _=e.get(p).envMap;if(_&&(h.envMap.value=_,h.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,h.reflectivity.value=p.reflectivity,h.ior.value=p.ior,h.refractionRatio.value=p.refractionRatio),p.lightMap){h.lightMap.value=p.lightMap;const w=i.physicallyCorrectLights!==!0?Math.PI:1;h.lightMapIntensity.value=p.lightMapIntensity*w}p.aoMap&&(h.aoMap.value=p.aoMap,h.aoMapIntensity.value=p.aoMapIntensity);let b;p.map?b=p.map:p.specularMap?b=p.specularMap:p.displacementMap?b=p.displacementMap:p.normalMap?b=p.normalMap:p.bumpMap?b=p.bumpMap:p.roughnessMap?b=p.roughnessMap:p.metalnessMap?b=p.metalnessMap:p.alphaMap?b=p.alphaMap:p.emissiveMap?b=p.emissiveMap:p.clearcoatMap?b=p.clearcoatMap:p.clearcoatNormalMap?b=p.clearcoatNormalMap:p.clearcoatRoughnessMap?b=p.clearcoatRoughnessMap:p.iridescenceMap?b=p.iridescenceMap:p.iridescenceThicknessMap?b=p.iridescenceThicknessMap:p.specularIntensityMap?b=p.specularIntensityMap:p.specularColorMap?b=p.specularColorMap:p.transmissionMap?b=p.transmissionMap:p.thicknessMap?b=p.thicknessMap:p.sheenColorMap?b=p.sheenColorMap:p.sheenRoughnessMap&&(b=p.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),h.uvTransform.value.copy(b.matrix));let y;p.aoMap?y=p.aoMap:p.lightMap&&(y=p.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),h.uv2Transform.value.copy(y.matrix))}function s(h,p){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity}function o(h,p){h.dashSize.value=p.dashSize,h.totalSize.value=p.dashSize+p.gapSize,h.scale.value=p.scale}function a(h,p,_,b){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity,h.size.value=p.size*_,h.scale.value=b*.5,p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);let y;p.map?y=p.map:p.alphaMap&&(y=p.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),h.uvTransform.value.copy(y.matrix))}function l(h,p){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity,h.rotation.value=p.rotation,p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),h.uvTransform.value.copy(_.matrix))}function c(h,p){h.specular.value.copy(p.specular),h.shininess.value=Math.max(p.shininess,1e-4)}function u(h,p){p.gradientMap&&(h.gradientMap.value=p.gradientMap)}function f(h,p){h.roughness.value=p.roughness,h.metalness.value=p.metalness,p.roughnessMap&&(h.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(h.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(h.envMapIntensity.value=p.envMapIntensity)}function d(h,p,_){h.ior.value=p.ior,p.sheen>0&&(h.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),h.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(h.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(h.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(h.clearcoat.value=p.clearcoat,h.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(h.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(h.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(h.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),h.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===bn&&h.clearcoatNormalScale.value.negate())),p.iridescence>0&&(h.iridescence.value=p.iridescence,h.iridescenceIOR.value=p.iridescenceIOR,h.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],h.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(h.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(h.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(h.transmission.value=p.transmission,h.transmissionSamplerMap.value=_.texture,h.transmissionSamplerSize.value.set(_.width,_.height),p.transmissionMap&&(h.transmissionMap.value=p.transmissionMap),h.thickness.value=p.thickness,p.thicknessMap&&(h.thicknessMap.value=p.thicknessMap),h.attenuationDistance.value=p.attenuationDistance,h.attenuationColor.value.copy(p.attenuationColor)),h.specularIntensity.value=p.specularIntensity,h.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(h.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(h.specularColorMap.value=p.specularColorMap)}function m(h,p){p.matcap&&(h.matcap.value=p.matcap)}function g(h,p){h.referencePosition.value.copy(p.referencePosition),h.nearDistance.value=p.nearDistance,h.farDistance.value=p.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function F0(i,e,t,n){let r={},s={},o=[];const a=t.isWebGL2?i.getParameter(35375):0;function l(b,y){const w=y.program;n.uniformBlockBinding(b,w)}function c(b,y){let w=r[b.id];w===void 0&&(g(b),w=u(b),r[b.id]=w,b.addEventListener("dispose",p));const x=y.program;n.updateUBOMapping(b,x);const M=e.render.frame;s[b.id]!==M&&(d(b),s[b.id]=M)}function u(b){const y=f();b.__bindingPointIndex=y;const w=i.createBuffer(),x=b.__size,M=b.usage;return i.bindBuffer(35345,w),i.bufferData(35345,x,M),i.bindBuffer(35345,null),i.bindBufferBase(35345,y,w),w}function f(){for(let b=0;b<a;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(b){const y=r[b.id],w=b.uniforms,x=b.__cache;i.bindBuffer(35345,y);for(let M=0,P=w.length;M<P;M++){const v=w[M];if(m(v,M,x)===!0){const E=v.value,S=v.__offset;typeof E=="number"?(v.__data[0]=E,i.bufferSubData(35345,S,v.__data)):(v.value.isMatrix3?(v.__data[0]=v.value.elements[0],v.__data[1]=v.value.elements[1],v.__data[2]=v.value.elements[2],v.__data[3]=v.value.elements[0],v.__data[4]=v.value.elements[3],v.__data[5]=v.value.elements[4],v.__data[6]=v.value.elements[5],v.__data[7]=v.value.elements[0],v.__data[8]=v.value.elements[6],v.__data[9]=v.value.elements[7],v.__data[10]=v.value.elements[8],v.__data[11]=v.value.elements[0]):E.toArray(v.__data),i.bufferSubData(35345,S,v.__data))}}i.bindBuffer(35345,null)}function m(b,y,w){const x=b.value;if(w[y]===void 0)return typeof x=="number"?w[y]=x:w[y]=x.clone(),!0;if(typeof x=="number"){if(w[y]!==x)return w[y]=x,!0}else{const M=w[y];if(M.equals(x)===!1)return M.copy(x),!0}return!1}function g(b){const y=b.uniforms;let w=0;const x=16;let M=0;for(let P=0,v=y.length;P<v;P++){const E=y[P],S=h(E);if(E.__data=new Float32Array(S.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=w,P>0){M=w%x;const O=x-M;M!==0&&O-S.boundary<0&&(w+=x-M,E.__offset=w)}w+=S.storage}return M=w%x,M>0&&(w+=x-M),b.__size=w,b.__cache={},this}function h(b){const y=b.value,w={boundary:0,storage:0};return typeof y=="number"?(w.boundary=4,w.storage=4):y.isVector2?(w.boundary=8,w.storage=8):y.isVector3||y.isColor?(w.boundary=16,w.storage=12):y.isVector4?(w.boundary=16,w.storage=16):y.isMatrix3?(w.boundary=48,w.storage=48):y.isMatrix4?(w.boundary=64,w.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),w}function p(b){const y=b.target;y.removeEventListener("dispose",p);const w=o.indexOf(y.__bindingPointIndex);o.splice(w,1),i.deleteBuffer(r[y.id]),delete r[y.id],delete s[y.id]}function _(){for(const b in r)i.deleteBuffer(r[b]);o=[],r={},s={}}return{bind:l,update:c,dispose:_}}function z0(){const i=$r("canvas");return i.style.display="block",i}function zf(i={}){this.isWebGLRenderer=!0;const e=i.canvas!==void 0?i.canvas:z0(),t=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,r=i.stencil!==void 0?i.stencil:!0,s=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,l=i.powerPreference!==void 0?i.powerPreference:"default",c=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=i.alpha!==void 0?i.alpha:!1;let f=null,d=null;const m=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Mi,this.physicallyCorrectLights=!1,this.toneMapping=Gn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const h=this;let p=!1,_=0,b=0,y=null,w=-1,x=null;const M=new Ut,P=new Ut;let v=null,E=e.width,S=e.height,O=1,F=null,L=null;const I=new Ut(0,0,E,S),k=new Ut(0,0,E,S);let R=!1;const W=new mo;let Y=!1,H=!1,B=null;const j=new yt,ne=new Be,oe=new G,me={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function be(){return y===null?O:1}let V=t;function ce(C,Z){for(let te=0;te<C.length;te++){const q=C[te],ie=e.getContext(q,Z);if(ie!==null)return ie}return null}try{const C={alpha:!0,depth:n,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ua}`),e.addEventListener("webglcontextlost",Te,!1),e.addEventListener("webglcontextrestored",Xe,!1),e.addEventListener("webglcontextcreationerror",lt,!1),V===null){const Z=["webgl2","webgl","experimental-webgl"];if(h.isWebGL1Renderer===!0&&Z.shift(),V=ce(Z,C),V===null)throw ce(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Se,ue,ge,je,K,ae,He,Fe,dt,xt,bt,Ie,Le,it,D,A,$,se,fe,ve,Ge,T,re,de;function we(){Se=new Zg(V),ue=new Hg(V,Se,i),Se.init(ue),T=new P0(V,Se,ue),ge=new L0(V,Se,ue),je=new Qg,K=new m0,ae=new D0(V,Se,ge,K,ue,T,je),He=new jg(h),Fe=new Yg(h),dt=new cp(V,ue),re=new Bg(V,Se,dt,ue),xt=new Kg(V,dt,je,re),bt=new n_(V,xt,dt,je),fe=new t_(V,ue,ae),A=new Wg(K),Ie=new p0(h,He,Fe,Se,ue,re,A),Le=new N0(h,K),it=new _0,D=new M0(Se,ue),se=new Gg(h,He,ge,bt,u,o),$=new C0(h,bt,ue),de=new F0(V,je,ue,ge),ve=new Vg(V,Se,je,ue),Ge=new Jg(V,Se,je,ue),je.programs=Ie.programs,h.capabilities=ue,h.extensions=Se,h.properties=K,h.renderLists=it,h.shadowMap=$,h.state=ge,h.info=je}we();const z=new k0(h,V);this.xr=z,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const C=Se.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Se.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return O},this.setPixelRatio=function(C){C!==void 0&&(O=C,this.setSize(E,S,!1))},this.getSize=function(C){return C.set(E,S)},this.setSize=function(C,Z,te){if(z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=C,S=Z,e.width=Math.floor(C*O),e.height=Math.floor(Z*O),te!==!1&&(e.style.width=C+"px",e.style.height=Z+"px"),this.setViewport(0,0,C,Z)},this.getDrawingBufferSize=function(C){return C.set(E*O,S*O).floor()},this.setDrawingBufferSize=function(C,Z,te){E=C,S=Z,O=te,e.width=Math.floor(C*te),e.height=Math.floor(Z*te),this.setViewport(0,0,C,Z)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(I)},this.setViewport=function(C,Z,te,q){C.isVector4?I.set(C.x,C.y,C.z,C.w):I.set(C,Z,te,q),ge.viewport(M.copy(I).multiplyScalar(O).floor())},this.getScissor=function(C){return C.copy(k)},this.setScissor=function(C,Z,te,q){C.isVector4?k.set(C.x,C.y,C.z,C.w):k.set(C,Z,te,q),ge.scissor(P.copy(k).multiplyScalar(O).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(C){ge.setScissorTest(R=C)},this.setOpaqueSort=function(C){F=C},this.setTransparentSort=function(C){L=C},this.getClearColor=function(C){return C.copy(se.getClearColor())},this.setClearColor=function(){se.setClearColor.apply(se,arguments)},this.getClearAlpha=function(){return se.getClearAlpha()},this.setClearAlpha=function(){se.setClearAlpha.apply(se,arguments)},this.clear=function(C=!0,Z=!0,te=!0){let q=0;C&&(q|=16384),Z&&(q|=256),te&&(q|=1024),V.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Te,!1),e.removeEventListener("webglcontextrestored",Xe,!1),e.removeEventListener("webglcontextcreationerror",lt,!1),it.dispose(),D.dispose(),K.dispose(),He.dispose(),Fe.dispose(),bt.dispose(),re.dispose(),de.dispose(),Ie.dispose(),z.dispose(),z.removeEventListener("sessionstart",Qe),z.removeEventListener("sessionend",ct),B&&(B.dispose(),B=null),wt.stop()};function Te(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Xe(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const C=je.autoReset,Z=$.enabled,te=$.autoUpdate,q=$.needsUpdate,ie=$.type;we(),je.autoReset=C,$.enabled=Z,$.autoUpdate=te,$.needsUpdate=q,$.type=ie}function lt(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function U(C){const Z=C.target;Z.removeEventListener("dispose",U),pe(Z)}function pe(C){ee(C),K.remove(C)}function ee(C){const Z=K.get(C).programs;Z!==void 0&&(Z.forEach(function(te){Ie.releaseProgram(te)}),C.isShaderMaterial&&Ie.releaseShaderCache(C))}this.renderBufferDirect=function(C,Z,te,q,ie,Ne){Z===null&&(Z=me);const Ve=ie.isMesh&&ie.matrixWorld.determinant()<0,Ye=Co(C,Z,te,q,ie);ge.setMaterial(q,Ve);let We=te.index;const rt=te.attributes.position;if(We===null){if(rt===void 0||rt.count===0)return}else if(We.count===0)return;let Ke=1;q.wireframe===!0&&(We=xt.getWireframeAttribute(te),Ke=2),re.setup(ie,q,Ye,te,We);let nt,At=ve;We!==null&&(nt=dt.get(We),At=Ge,At.setIndex(nt));const Wn=We!==null?We.count:rt.count,li=te.drawRange.start*Ke,ci=te.drawRange.count*Ke,fn=Ne!==null?Ne.start*Ke:0,at=Ne!==null?Ne.count*Ke:1/0,ui=Math.max(li,fn),Dt=Math.min(Wn,li+ci,fn+at)-1,nn=Math.max(0,Dt-ui+1);if(nn!==0){if(ie.isMesh)q.wireframe===!0?(ge.setLineWidth(q.wireframeLinewidth*be()),At.setMode(1)):At.setMode(4);else if(ie.isLine){let On=q.linewidth;On===void 0&&(On=1),ge.setLineWidth(On*be()),ie.isLineSegments?At.setMode(1):ie.isLineLoop?At.setMode(2):At.setMode(3)}else ie.isPoints?At.setMode(0):ie.isSprite&&At.setMode(4);if(ie.isInstancedMesh)At.renderInstances(ui,nn,ie.count);else if(te.isInstancedBufferGeometry){const On=Math.min(te.instanceCount,te._maxInstanceCount);At.renderInstances(ui,nn,On)}else At.render(ui,nn)}},this.compile=function(C,Z){function te(q,ie,Ne){q.transparent===!0&&q.side===vi?(q.side=bn,q.needsUpdate=!0,Li(q,ie,Ne),q.side=Er,q.needsUpdate=!0,Li(q,ie,Ne),q.side=vi):Li(q,ie,Ne)}d=D.get(C),d.init(),g.push(d),C.traverseVisible(function(q){q.isLight&&q.layers.test(Z.layers)&&(d.pushLight(q),q.castShadow&&d.pushShadow(q))}),d.setupLights(h.physicallyCorrectLights),C.traverse(function(q){const ie=q.material;if(ie)if(Array.isArray(ie))for(let Ne=0;Ne<ie.length;Ne++){const Ve=ie[Ne];te(Ve,C,q)}else te(ie,C,q)}),g.pop(),d=null};let Ee=null;function xe(C){Ee&&Ee(C)}function Qe(){wt.stop()}function ct(){wt.start()}const wt=new If;wt.setAnimationLoop(xe),typeof self<"u"&&wt.setContext(self),this.setAnimationLoop=function(C){Ee=C,z.setAnimationLoop(C),C===null?wt.stop():wt.start()},z.addEventListener("sessionstart",Qe),z.addEventListener("sessionend",ct),this.render=function(C,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),z.enabled===!0&&z.isPresenting===!0&&(z.cameraAutoUpdate===!0&&z.updateCamera(Z),Z=z.getCamera()),C.isScene===!0&&C.onBeforeRender(h,C,Z,y),d=D.get(C,g.length),d.init(),g.push(d),j.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),W.setFromProjectionMatrix(j),H=this.localClippingEnabled,Y=A.init(this.clippingPlanes,H,Z),f=it.get(C,m.length),f.init(),m.push(f),en(C,Z,0,h.sortObjects),f.finish(),h.sortObjects===!0&&f.sort(F,L),Y===!0&&A.beginShadows();const te=d.state.shadowsArray;if($.render(te,C,Z),Y===!0&&A.endShadows(),this.info.autoReset===!0&&this.info.reset(),se.render(f,C),d.setupLights(h.physicallyCorrectLights),Z.isArrayCamera){const q=Z.cameras;for(let ie=0,Ne=q.length;ie<Ne;ie++){const Ve=q[ie];Mt(f,C,Ve,Ve.viewport)}}else Mt(f,C,Z);y!==null&&(ae.updateMultisampleRenderTarget(y),ae.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(h,C,Z),re.resetDefaultState(),w=-1,x=null,g.pop(),g.length>0?d=g[g.length-1]:d=null,m.pop(),m.length>0?f=m[m.length-1]:f=null};function en(C,Z,te,q){if(C.visible===!1)return;if(C.layers.test(Z.layers)){if(C.isGroup)te=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(Z);else if(C.isLight)d.pushLight(C),C.castShadow&&d.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||W.intersectsSprite(C)){q&&oe.setFromMatrixPosition(C.matrixWorld).applyMatrix4(j);const Ve=bt.update(C),Ye=C.material;Ye.visible&&f.push(C,Ve,Ye,te,oe.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==je.render.frame&&(C.skeleton.update(),C.skeleton.frame=je.render.frame),!C.frustumCulled||W.intersectsObject(C))){q&&oe.setFromMatrixPosition(C.matrixWorld).applyMatrix4(j);const Ve=bt.update(C),Ye=C.material;if(Array.isArray(Ye)){const We=Ve.groups;for(let rt=0,Ke=We.length;rt<Ke;rt++){const nt=We[rt],At=Ye[nt.materialIndex];At&&At.visible&&f.push(C,Ve,At,te,oe.z,nt)}}else Ye.visible&&f.push(C,Ve,Ye,te,oe.z,null)}}const Ne=C.children;for(let Ve=0,Ye=Ne.length;Ve<Ye;Ve++)en(Ne[Ve],Z,te,q)}function Mt(C,Z,te,q){const ie=C.opaque,Ne=C.transmissive,Ve=C.transparent;d.setupLightsView(te),Ne.length>0&&Mn(ie,Z,te),q&&ge.viewport(M.copy(q)),ie.length>0&&tn(ie,Z,te),Ne.length>0&&tn(Ne,Z,te),Ve.length>0&&tn(Ve,Z,te),ge.buffers.depth.setTest(!0),ge.buffers.depth.setMask(!0),ge.buffers.color.setMask(!0),ge.setPolygonOffset(!1)}function Mn(C,Z,te){const q=ue.isWebGL2;B===null&&(B=new Si(1,1,{generateMipmaps:!0,type:Se.has("EXT_color_buffer_half_float")?Qr:ji,minFilter:ho,samples:q&&s===!0?4:0})),h.getDrawingBufferSize(ne),q?B.setSize(ne.x,ne.y):B.setSize(Aa(ne.x),Aa(ne.y));const ie=h.getRenderTarget();h.setRenderTarget(B),h.clear();const Ne=h.toneMapping;h.toneMapping=Gn,tn(C,Z,te),h.toneMapping=Ne,ae.updateMultisampleRenderTarget(B),ae.updateRenderTargetMipmap(B),h.setRenderTarget(ie)}function tn(C,Z,te){const q=Z.isScene===!0?Z.overrideMaterial:null;for(let ie=0,Ne=C.length;ie<Ne;ie++){const Ve=C[ie],Ye=Ve.object,We=Ve.geometry,rt=q===null?Ve.material:q,Ke=Ve.group;Ye.layers.test(te.layers)&&Zt(Ye,Z,te,We,rt,Ke)}}function Zt(C,Z,te,q,ie,Ne){C.onBeforeRender(h,Z,te,q,ie,Ne),C.modelViewMatrix.multiplyMatrices(te.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),ie.onBeforeRender(h,Z,te,q,C,Ne),ie.transparent===!0&&ie.side===vi?(ie.side=bn,ie.needsUpdate=!0,h.renderBufferDirect(te,Z,q,ie,C,Ne),ie.side=Er,ie.needsUpdate=!0,h.renderBufferDirect(te,Z,q,ie,C,Ne),ie.side=vi):h.renderBufferDirect(te,Z,q,ie,C,Ne),C.onAfterRender(h,Z,te,q,ie,Ne)}function Li(C,Z,te){Z.isScene!==!0&&(Z=me);const q=K.get(C),ie=d.state.lights,Ne=d.state.shadowsArray,Ve=ie.state.version,Ye=Ie.getParameters(C,ie.state,Ne,Z,te),We=Ie.getProgramCacheKey(Ye);let rt=q.programs;q.environment=C.isMeshStandardMaterial?Z.environment:null,q.fog=Z.fog,q.envMap=(C.isMeshStandardMaterial?Fe:He).get(C.envMap||q.environment),rt===void 0&&(C.addEventListener("dispose",U),rt=new Map,q.programs=rt);let Ke=rt.get(We);if(Ke!==void 0){if(q.currentProgram===Ke&&q.lightsStateVersion===Ve)return ps(C,Ye),Ke}else Ye.uniforms=Ie.getUniforms(C),C.onBuild(te,Ye,h),C.onBeforeCompile(Ye,h),Ke=Ie.acquireProgram(Ye,We),rt.set(We,Ke),q.uniforms=Ye.uniforms;const nt=q.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(nt.clippingPlanes=A.uniform),ps(C,Ye),q.needsLights=ms(C),q.lightsStateVersion=Ve,q.needsLights&&(nt.ambientLightColor.value=ie.state.ambient,nt.lightProbe.value=ie.state.probe,nt.directionalLights.value=ie.state.directional,nt.directionalLightShadows.value=ie.state.directionalShadow,nt.spotLights.value=ie.state.spot,nt.spotLightShadows.value=ie.state.spotShadow,nt.rectAreaLights.value=ie.state.rectArea,nt.ltc_1.value=ie.state.rectAreaLTC1,nt.ltc_2.value=ie.state.rectAreaLTC2,nt.pointLights.value=ie.state.point,nt.pointLightShadows.value=ie.state.pointShadow,nt.hemisphereLights.value=ie.state.hemi,nt.directionalShadowMap.value=ie.state.directionalShadowMap,nt.directionalShadowMatrix.value=ie.state.directionalShadowMatrix,nt.spotShadowMap.value=ie.state.spotShadowMap,nt.spotLightMatrix.value=ie.state.spotLightMatrix,nt.spotLightMap.value=ie.state.spotLightMap,nt.pointShadowMap.value=ie.state.pointShadowMap,nt.pointShadowMatrix.value=ie.state.pointShadowMatrix);const At=Ke.getUniforms(),Wn=qs.seqWithValue(At.seq,nt);return q.currentProgram=Ke,q.uniformsList=Wn,Ke}function ps(C,Z){const te=K.get(C);te.outputEncoding=Z.outputEncoding,te.instancing=Z.instancing,te.skinning=Z.skinning,te.morphTargets=Z.morphTargets,te.morphNormals=Z.morphNormals,te.morphColors=Z.morphColors,te.morphTargetsCount=Z.morphTargetsCount,te.numClippingPlanes=Z.numClippingPlanes,te.numIntersection=Z.numClipIntersection,te.vertexAlphas=Z.vertexAlphas,te.vertexTangents=Z.vertexTangents,te.toneMapping=Z.toneMapping}function Co(C,Z,te,q,ie){Z.isScene!==!0&&(Z=me),ae.resetTextureUnits();const Ne=Z.fog,Ve=q.isMeshStandardMaterial?Z.environment:null,Ye=y===null?h.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:Mi,We=(q.isMeshStandardMaterial?Fe:He).get(q.envMap||Ve),rt=q.vertexColors===!0&&!!te.attributes.color&&te.attributes.color.itemSize===4,Ke=!!q.normalMap&&!!te.attributes.tangent,nt=!!te.morphAttributes.position,At=!!te.morphAttributes.normal,Wn=!!te.morphAttributes.color,li=q.toneMapped?h.toneMapping:Gn,ci=te.morphAttributes.position||te.morphAttributes.normal||te.morphAttributes.color,fn=ci!==void 0?ci.length:0,at=K.get(q),ui=d.state.lights;if(Y===!0&&(H===!0||C!==x)){const N=C===x&&q.id===w;A.setState(q,C,N)}let Dt=!1;q.version===at.__version?(at.needsLights&&at.lightsStateVersion!==ui.state.version||at.outputEncoding!==Ye||ie.isInstancedMesh&&at.instancing===!1||!ie.isInstancedMesh&&at.instancing===!0||ie.isSkinnedMesh&&at.skinning===!1||!ie.isSkinnedMesh&&at.skinning===!0||at.envMap!==We||q.fog===!0&&at.fog!==Ne||at.numClippingPlanes!==void 0&&(at.numClippingPlanes!==A.numPlanes||at.numIntersection!==A.numIntersection)||at.vertexAlphas!==rt||at.vertexTangents!==Ke||at.morphTargets!==nt||at.morphNormals!==At||at.morphColors!==Wn||at.toneMapping!==li||ue.isWebGL2===!0&&at.morphTargetsCount!==fn)&&(Dt=!0):(Dt=!0,at.__version=q.version);let nn=at.currentProgram;Dt===!0&&(nn=Li(q,Z,ie));let On=!1,Pi=!1,Or=!1;const Bt=nn.getUniforms(),jn=at.uniforms;if(ge.useProgram(nn.program)&&(On=!0,Pi=!0,Or=!0),q.id!==w&&(w=q.id,Pi=!0),On||x!==C){if(Bt.setValue(V,"projectionMatrix",C.projectionMatrix),ue.logarithmicDepthBuffer&&Bt.setValue(V,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),x!==C&&(x=C,Pi=!0,Or=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const N=Bt.map.cameraPosition;N!==void 0&&N.setValue(V,oe.setFromMatrixPosition(C.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&Bt.setValue(V,"isOrthographic",C.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||ie.isSkinnedMesh)&&Bt.setValue(V,"viewMatrix",C.matrixWorldInverse)}if(ie.isSkinnedMesh){Bt.setOptional(V,ie,"bindMatrix"),Bt.setOptional(V,ie,"bindMatrixInverse");const N=ie.skeleton;N&&(ue.floatVertexTextures?(N.boneTexture===null&&N.computeBoneTexture(),Bt.setValue(V,"boneTexture",N.boneTexture,ae),Bt.setValue(V,"boneTextureSize",N.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const kr=te.morphAttributes;if((kr.position!==void 0||kr.normal!==void 0||kr.color!==void 0&&ue.isWebGL2===!0)&&fe.update(ie,te,q,nn),(Pi||at.receiveShadow!==ie.receiveShadow)&&(at.receiveShadow=ie.receiveShadow,Bt.setValue(V,"receiveShadow",ie.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(jn.envMap.value=We,jn.flipEnvMap.value=We.isCubeTexture&&We.isRenderTargetTexture===!1?-1:1),Pi&&(Bt.setValue(V,"toneMappingExposure",h.toneMappingExposure),at.needsLights&&Di(jn,Or),Ne&&q.fog===!0&&Le.refreshFogUniforms(jn,Ne),Le.refreshMaterialUniforms(jn,q,O,S,B),qs.upload(V,at.uniformsList,jn,ae)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(qs.upload(V,at.uniformsList,jn,ae),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&Bt.setValue(V,"center",ie.center),Bt.setValue(V,"modelViewMatrix",ie.modelViewMatrix),Bt.setValue(V,"normalMatrix",ie.normalMatrix),Bt.setValue(V,"modelMatrix",ie.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const N=q.uniformsGroups;for(let De=0,Pt=N.length;De<Pt;De++)if(ue.isWebGL2){const qn=N[De];de.update(qn,nn),de.bind(qn,nn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return nn}function Di(C,Z){C.ambientLightColor.needsUpdate=Z,C.lightProbe.needsUpdate=Z,C.directionalLights.needsUpdate=Z,C.directionalLightShadows.needsUpdate=Z,C.pointLights.needsUpdate=Z,C.pointLightShadows.needsUpdate=Z,C.spotLights.needsUpdate=Z,C.spotLightShadows.needsUpdate=Z,C.rectAreaLights.needsUpdate=Z,C.hemisphereLights.needsUpdate=Z}function ms(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,Z,te){K.get(C.texture).__webglTexture=Z,K.get(C.depthTexture).__webglTexture=te;const q=K.get(C);q.__hasExternalTextures=!0,q.__hasExternalTextures&&(q.__autoAllocateDepthBuffer=te===void 0,q.__autoAllocateDepthBuffer||Se.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,Z){const te=K.get(C);te.__webglFramebuffer=Z,te.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(C,Z=0,te=0){y=C,_=Z,b=te;let q=!0;if(C){const We=K.get(C);We.__useDefaultFramebuffer!==void 0?(ge.bindFramebuffer(36160,null),q=!1):We.__webglFramebuffer===void 0?ae.setupRenderTarget(C):We.__hasExternalTextures&&ae.rebindTextures(C,K.get(C.texture).__webglTexture,K.get(C.depthTexture).__webglTexture)}let ie=null,Ne=!1,Ve=!1;if(C){const We=C.texture;(We.isData3DTexture||We.isDataArrayTexture)&&(Ve=!0);const rt=K.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(ie=rt[Z],Ne=!0):ue.isWebGL2&&C.samples>0&&ae.useMultisampledRTT(C)===!1?ie=K.get(C).__webglMultisampledFramebuffer:ie=rt,M.copy(C.viewport),P.copy(C.scissor),v=C.scissorTest}else M.copy(I).multiplyScalar(O).floor(),P.copy(k).multiplyScalar(O).floor(),v=R;if(ge.bindFramebuffer(36160,ie)&&ue.drawBuffers&&q&&ge.drawBuffers(C,ie),ge.viewport(M),ge.scissor(P),ge.setScissorTest(v),Ne){const We=K.get(C.texture);V.framebufferTexture2D(36160,36064,34069+Z,We.__webglTexture,te)}else if(Ve){const We=K.get(C.texture),rt=Z||0;V.framebufferTextureLayer(36160,36064,We.__webglTexture,te||0,rt)}w=-1},this.readRenderTargetPixels=function(C,Z,te,q,ie,Ne,Ve){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ye=K.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ve!==void 0&&(Ye=Ye[Ve]),Ye){ge.bindFramebuffer(36160,Ye);try{const We=C.texture,rt=We.format,Ke=We.type;if(rt!==Un&&T.convert(rt)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const nt=Ke===Qr&&(Se.has("EXT_color_buffer_half_float")||ue.isWebGL2&&Se.has("EXT_color_buffer_float"));if(Ke!==ji&&T.convert(Ke)!==V.getParameter(35738)&&!(Ke===Ui&&(ue.isWebGL2||Se.has("OES_texture_float")||Se.has("WEBGL_color_buffer_float")))&&!nt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=C.width-q&&te>=0&&te<=C.height-ie&&V.readPixels(Z,te,q,ie,T.convert(rt),T.convert(Ke),Ne)}finally{const We=y!==null?K.get(y).__webglFramebuffer:null;ge.bindFramebuffer(36160,We)}}},this.copyFramebufferToTexture=function(C,Z,te=0){const q=Math.pow(2,-te),ie=Math.floor(Z.image.width*q),Ne=Math.floor(Z.image.height*q);ae.setTexture2D(Z,0),V.copyTexSubImage2D(3553,te,0,0,C.x,C.y,ie,Ne),ge.unbindTexture()},this.copyTextureToTexture=function(C,Z,te,q=0){const ie=Z.image.width,Ne=Z.image.height,Ve=T.convert(te.format),Ye=T.convert(te.type);ae.setTexture2D(te,0),V.pixelStorei(37440,te.flipY),V.pixelStorei(37441,te.premultiplyAlpha),V.pixelStorei(3317,te.unpackAlignment),Z.isDataTexture?V.texSubImage2D(3553,q,C.x,C.y,ie,Ne,Ve,Ye,Z.image.data):Z.isCompressedTexture?V.compressedTexSubImage2D(3553,q,C.x,C.y,Z.mipmaps[0].width,Z.mipmaps[0].height,Ve,Z.mipmaps[0].data):V.texSubImage2D(3553,q,C.x,C.y,Ve,Ye,Z.image),q===0&&te.generateMipmaps&&V.generateMipmap(3553),ge.unbindTexture()},this.copyTextureToTexture3D=function(C,Z,te,q,ie=0){if(h.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ne=C.max.x-C.min.x+1,Ve=C.max.y-C.min.y+1,Ye=C.max.z-C.min.z+1,We=T.convert(q.format),rt=T.convert(q.type);let Ke;if(q.isData3DTexture)ae.setTexture3D(q,0),Ke=32879;else if(q.isDataArrayTexture)ae.setTexture2DArray(q,0),Ke=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(37440,q.flipY),V.pixelStorei(37441,q.premultiplyAlpha),V.pixelStorei(3317,q.unpackAlignment);const nt=V.getParameter(3314),At=V.getParameter(32878),Wn=V.getParameter(3316),li=V.getParameter(3315),ci=V.getParameter(32877),fn=te.isCompressedTexture?te.mipmaps[0]:te.image;V.pixelStorei(3314,fn.width),V.pixelStorei(32878,fn.height),V.pixelStorei(3316,C.min.x),V.pixelStorei(3315,C.min.y),V.pixelStorei(32877,C.min.z),te.isDataTexture||te.isData3DTexture?V.texSubImage3D(Ke,ie,Z.x,Z.y,Z.z,Ne,Ve,Ye,We,rt,fn.data):te.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),V.compressedTexSubImage3D(Ke,ie,Z.x,Z.y,Z.z,Ne,Ve,Ye,We,fn.data)):V.texSubImage3D(Ke,ie,Z.x,Z.y,Z.z,Ne,Ve,Ye,We,rt,fn),V.pixelStorei(3314,nt),V.pixelStorei(32878,At),V.pixelStorei(3316,Wn),V.pixelStorei(3315,li),V.pixelStorei(32877,ci),ie===0&&q.generateMipmaps&&V.generateMipmap(Ke),ge.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?ae.setTextureCube(C,0):C.isData3DTexture?ae.setTexture3D(C,0):C.isDataArrayTexture?ae.setTexture2DArray(C,0):ae.setTexture2D(C,0),ge.unbindTexture()},this.resetState=function(){_=0,b=0,y=null,ge.reset(),re.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class U0 extends zf{}U0.prototype.isWebGL1Renderer=!0;class G0 extends ht{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class yc extends In{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const xc=new yt,Mc=new yt,zs=[],Gr=new _n;class _r extends _n{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new yc(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,r=this.count;if(Gr.geometry=this.geometry,Gr.material=this.material,Gr.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,xc),Mc.multiplyMatrices(n,xc),Gr.matrixWorld=Mc,Gr.raycast(e,zs);for(let o=0,a=zs.length;o<a;o++){const l=zs[o];l.instanceId=s,l.object=this,t.push(l)}zs.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new yc(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Uf extends Dr{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new qe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Sc=new G,Ec=new G,Ac=new yt,la=new Ba,Us=new po;class B0 extends ht{constructor(e=new un,t=new Uf){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)Sc.fromBufferAttribute(t,r-1),Ec.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=Sc.distanceTo(Ec);e.setAttribute("lineDistance",new Ft(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Us.copy(n.boundingSphere),Us.applyMatrix4(r),Us.radius+=s,e.ray.intersectsSphere(Us)===!1)return;Ac.copy(r).invert(),la.copy(e.ray).applyMatrix4(Ac);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new G,u=new G,f=new G,d=new G,m=this.isLineSegments?2:1,g=n.index,p=n.attributes.position;if(g!==null){const _=Math.max(0,o.start),b=Math.min(g.count,o.start+o.count);for(let y=_,w=b-1;y<w;y+=m){const x=g.getX(y),M=g.getX(y+1);if(c.fromBufferAttribute(p,x),u.fromBufferAttribute(p,M),la.distanceSqToSegment(c,u,d,f)>l)continue;d.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(d);v<e.near||v>e.far||t.push({distance:v,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),b=Math.min(p.count,o.start+o.count);for(let y=_,w=b-1;y<w;y+=m){if(c.fromBufferAttribute(p,y),u.fromBufferAttribute(p,y+1),la.distanceSqToSegment(c,u,d,f)>l)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}class us extends un{constructor(e=1,t=1,n=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],f=[],d=[],m=[];let g=0;const h=[],p=n/2;let _=0;b(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Ft(f,3)),this.setAttribute("normal",new Ft(d,3)),this.setAttribute("uv",new Ft(m,2));function b(){const w=new G,x=new G;let M=0;const P=(t-e)/n;for(let v=0;v<=s;v++){const E=[],S=v/s,O=S*(t-e)+e;for(let F=0;F<=r;F++){const L=F/r,I=L*l+a,k=Math.sin(I),R=Math.cos(I);x.x=O*k,x.y=-S*n+p,x.z=O*R,f.push(x.x,x.y,x.z),w.set(k,P,R).normalize(),d.push(w.x,w.y,w.z),m.push(L,1-S),E.push(g++)}h.push(E)}for(let v=0;v<r;v++)for(let E=0;E<s;E++){const S=h[E][v],O=h[E+1][v],F=h[E+1][v+1],L=h[E][v+1];u.push(S,O,L),u.push(O,F,L),M+=6}c.addGroup(_,M,0),_+=M}function y(w){const x=g,M=new Be,P=new G;let v=0;const E=w===!0?e:t,S=w===!0?1:-1;for(let F=1;F<=r;F++)f.push(0,p*S,0),d.push(0,S,0),m.push(.5,.5),g++;const O=g;for(let F=0;F<=r;F++){const I=F/r*l+a,k=Math.cos(I),R=Math.sin(I);P.x=E*R,P.y=p*S,P.z=E*k,f.push(P.x,P.y,P.z),d.push(0,S,0),M.x=k*.5+.5,M.y=R*.5*S+.5,m.push(M.x,M.y),g++}for(let F=0;F<r;F++){const L=x+F,I=O+F;w===!0?u.push(I,I+1,L):u.push(I+1,I,L),v+=3}c.addGroup(_,v,w===!0?1:2),_+=v}}static fromJSON(e){return new us(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Xa extends us{constructor(e=1,t=1,n=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Xa(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ya extends un{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];a(r),c(n),u(),this.setAttribute("position",new Ft(s,3)),this.setAttribute("normal",new Ft(s.slice(),3)),this.setAttribute("uv",new Ft(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(b){const y=new G,w=new G,x=new G;for(let M=0;M<t.length;M+=3)m(t[M+0],y),m(t[M+1],w),m(t[M+2],x),l(y,w,x,b)}function l(b,y,w,x){const M=x+1,P=[];for(let v=0;v<=M;v++){P[v]=[];const E=b.clone().lerp(w,v/M),S=y.clone().lerp(w,v/M),O=M-v;for(let F=0;F<=O;F++)F===0&&v===M?P[v][F]=E:P[v][F]=E.clone().lerp(S,F/O)}for(let v=0;v<M;v++)for(let E=0;E<2*(M-v)-1;E++){const S=Math.floor(E/2);E%2===0?(d(P[v][S+1]),d(P[v+1][S]),d(P[v][S])):(d(P[v][S+1]),d(P[v+1][S+1]),d(P[v+1][S]))}}function c(b){const y=new G;for(let w=0;w<s.length;w+=3)y.x=s[w+0],y.y=s[w+1],y.z=s[w+2],y.normalize().multiplyScalar(b),s[w+0]=y.x,s[w+1]=y.y,s[w+2]=y.z}function u(){const b=new G;for(let y=0;y<s.length;y+=3){b.x=s[y+0],b.y=s[y+1],b.z=s[y+2];const w=p(b)/2/Math.PI+.5,x=_(b)/Math.PI+.5;o.push(w,1-x)}g(),f()}function f(){for(let b=0;b<o.length;b+=6){const y=o[b+0],w=o[b+2],x=o[b+4],M=Math.max(y,w,x),P=Math.min(y,w,x);M>.9&&P<.1&&(y<.2&&(o[b+0]+=1),w<.2&&(o[b+2]+=1),x<.2&&(o[b+4]+=1))}}function d(b){s.push(b.x,b.y,b.z)}function m(b,y){const w=b*3;y.x=e[w+0],y.y=e[w+1],y.z=e[w+2]}function g(){const b=new G,y=new G,w=new G,x=new G,M=new Be,P=new Be,v=new Be;for(let E=0,S=0;E<s.length;E+=9,S+=6){b.set(s[E+0],s[E+1],s[E+2]),y.set(s[E+3],s[E+4],s[E+5]),w.set(s[E+6],s[E+7],s[E+8]),M.set(o[S+0],o[S+1]),P.set(o[S+2],o[S+3]),v.set(o[S+4],o[S+5]),x.copy(b).add(y).add(w).divideScalar(3);const O=p(x);h(M,S+0,b,O),h(P,S+2,y,O),h(v,S+4,w,O)}}function h(b,y,w,x){x<0&&b.x===1&&(o[y]=b.x-1),w.x===0&&w.z===0&&(o[y]=x/2/Math.PI+.5)}function p(b){return Math.atan2(b.z,-b.x)}function _(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}static fromJSON(e){return new Ya(e.vertices,e.indices,e.radius,e.details)}}class Za extends Ya{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Za(e.radius,e.detail)}}class Xs extends Dr{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new qe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new qe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Mf,this.normalScale=new Be(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ga,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const Tc={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class V0{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,f){return c.push(u,f),this},this.removeHandler=function(u){const f=c.indexOf(u);return f!==-1&&c.splice(f,2),this},this.getHandler=function(u){for(let f=0,d=c.length;f<d;f+=2){const m=c[f],g=c[f+1];if(m.global&&(m.lastIndex=0),m.test(u))return g}return null}}}const H0=new V0;class Gf{constructor(e){this.manager=e!==void 0?e:H0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}class W0 extends Gf{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Tc.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=$r("img");function l(){u(),Tc.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(f){u(),r&&r(f),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Cc extends Gf{constructor(e){super(e)}load(e,t,n,r){const s=new yn,o=new W0(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class Bf extends ht{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new qe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const Lc=new yt,Dc=new G,Pc=new G;class j0{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Be(512,512),this.map=null,this.mapPass=null,this.matrix=new yt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new mo,this._frameExtents=new Be(1,1),this._viewportCount=1,this._viewports=[new Ut(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Dc.setFromMatrixPosition(e.matrixWorld),t.position.copy(Dc),Pc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Pc),t.updateMatrixWorld(),Lc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Lc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class q0 extends j0{constructor(){super(new Yi(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class X0 extends Bf{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ht.DefaultUp),this.updateMatrix(),this.target=new ht,this.shadow=new q0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Y0 extends Bf{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Vf{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Rc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Rc();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Rc(){return(typeof performance>"u"?Date:performance).now()}class Z0{constructor(e,t,n=0,r=1/0){this.ray=new Ba(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Va,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Ca(e,this,n,t),n.sort(Ic),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)Ca(e[r],this,n,t);return n.sort(Ic),n}}function Ic(i,e){return i.distance-e.distance}function Ca(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const r=i.children;for(let s=0,o=r.length;s<o;s++)Ca(r[s],e,t,!0)}}class eo{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(sn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Oc=new G;let Gs,ca;class K0 extends ht{constructor(e=new G(0,0,1),t=new G(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Gs===void 0&&(Gs=new un,Gs.setAttribute("position",new Ft([0,0,0,0,1,0],3)),ca=new us(0,.5,1,5,1),ca.translate(0,-.5,0)),this.position.copy(t),this.line=new B0(Gs,new Uf({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new _n(ca,new Ha({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Oc.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Oc,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ua}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ua);const kc={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class _o{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const J0=new Yi(-1,1,1,-1,0,1),Ka=new un;Ka.setAttribute("position",new Ft([-1,3,0,-1,-1,0,3,-1,0],3));Ka.setAttribute("uv",new Ft([0,2,0,0,2,0],2));class Q0{constructor(e){this._mesh=new _n(Ka,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,J0)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Nc extends _o{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof ii?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=Pf.clone(e.uniforms),this.material=new ii({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new Q0(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}class Fc extends _o{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const r=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),s.buffers.stencil.setFunc(r.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(r.EQUAL,1,4294967295),s.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),s.buffers.stencil.setLocked(!0)}}class $0 extends _o{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class ev{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new Be);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Si(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],kc===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),Nc===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Nc(kc),this.clock=new Vf}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let r=0,s=this.passes.length;r<s;r++){const o=this.passes[r];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Fc!==void 0&&(o instanceof Fc?n=!0:o instanceof $0&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Be);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new Yi(-1,1,1,-1,0,1);const Hf=new un;Hf.setAttribute("position",new Ft([-1,3,0,-1,-1,0,3,-1,0],3));Hf.setAttribute("uv",new Ft([0,2,0,0,2,0],2));class Wf extends _o{constructor(e,t,n,r,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new qe}render(e,t,n){const r=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=r}}const tv=(i,e,t)=>{i.renderer=new zf({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...t}),i.composer=new ev(i.renderer),i.composer.addPass(new Wf(i.scene,bi(i.camera)))},zc=(i,e,t)=>{!i.renderer||(e?i.renderer.outputEncoding=Mi:i.renderer.outputEncoding=Lt,t?i.renderer.toneMapping=Gn:i.renderer.toneMapping=wf)},Uc=(i,e,t)=>{!i.renderer||!i.composer||(i.renderer.setSize(e.width,e.height),i.renderer.setPixelRatio(t),i.composer.setSize(e.width,e.height),i.composer.setPixelRatio(t))},Gc=(i,e,t)=>{!i.renderer||(i.renderer.shadowMap.enabled=e,i.renderer.shadowMap.type=t)},vn=i=>i.userData,nv=(i,e)=>{i.pointer.update(t=>i.renderer?t.set(e.offsetX/i.renderer.domElement.clientWidth*2-1,-(e.offsetY/i.renderer.domElement.clientHeight)*2+1):t)},jf=(i,e,t,n)=>(i.raycaster.setFromCamera(e,t),i.raycaster.intersectObjects(n,!1)),iv=(i,e)=>i.object.uuid!==e.object.uuid||i.instanceId!==e.instanceId,rv=(i,e,t)=>{let n=bi(i.camera);const r=i.camera.subscribe(c=>n=c);Rt(r);let s=bi(i.pointer);const o=i.pointer.subscribe(c=>s=c);Rt(o);let a;const l=c=>{var d,m;c.preventDefault();const u=c.type;i.pointerOverCanvas.set(!0),t.pointerInvalidated=!0,nv(i,c);const f=sv(e,s,n);if(u==="pointerdown"&&(a=f?{object:f.object,instanceId:f.instanceId}:null),u==="click"){if(!ov(f,a)){a=null;return}a=null}!f||(m=(d=vn(f.object)).eventDispatcher)==null||m.call(d,u,{...f,event:c})};return{onClick:l,onContextMenu:l,onPointerUp:l,onPointerDown:l,onPointerMove:l}};function sv(i,e,t){if(i.interactiveObjects.size===0||i.raycastableObjects.size===0)return null;const n=jf(i,e,t,Array.from(i.raycastableObjects));return n.length===0||!i.interactiveObjects.has(n[0].object)?null:n[0]}function ov(i,e){return!i||!e?!1:i.object.uuid===e.object.uuid&&i.instanceId===e.instanceId}const av=(i,e)=>{let t=bi(i.pointerOverCanvas);const n=i.pointerOverCanvas.subscribe(c=>t=c);Rt(n);let r=bi(i.camera);const s=i.camera.subscribe(c=>r=c);Rt(s);let o=bi(i.pointer);const a=i.pointer.subscribe(c=>o=c);return Rt(a),{raycast:()=>{var f,d,m,g,h,p,_,b;if(e.interactiveObjects.size===0||e.raycastableObjects.size===0)return;const c=t?jf(e,o,r,Array.from(e.raycastableObjects)):[],u=c.length&&e.interactiveObjects.has(c[0].object)?c[0]:null;u?e.lastIntersection?e.lastIntersection&&iv(e.lastIntersection,u)&&((p=(h=vn(e.lastIntersection.object)).eventDispatcher)==null||p.call(h,"pointerleave",e.lastIntersection),(b=(_=vn(u.object)).eventDispatcher)==null||b.call(_,"pointerenter",u)):(g=(m=vn(u.object)).eventDispatcher)==null||g.call(m,"pointerenter",u):e.lastIntersection&&((d=(f=vn(e.lastIntersection.object)).eventDispatcher)==null||d.call(f,"pointerleave",e.lastIntersection)),e.lastIntersection=u}}},vo=typeof window<"u",lv=i=>{if(!vo)return;let e;const t=()=>{i(),e=requestAnimationFrame(t)};t(),Rt(()=>{!e||cancelAnimationFrame(e)})},cv=(i,e)=>{if(e.frameHandlers.size===0)return;if(e.debugFrameloop){let r=0;e.frameHandlers.forEach(s=>{s.debugFrameloopMessage?e.invalidations[s.debugFrameloopMessage]=s.debugFrameloopMessage in e.invalidations?e.invalidations[s.debugFrameloopMessage]+1:1:++r}),r>0&&(e.invalidations.onFrame=e.frameHandlers.size)}const t=Array.from(e.frameHandlers).reduce((r,s)=>s.order?!0:r,!1),n=i.clock.getDelta();t?Array.from(e.frameHandlers).sort((r,s)=>{var o,a;return((o=r.order)!=null?o:0)>((a=s.order)!=null?a:0)?1:-1}).forEach(r=>r.fn(i,n)):e.frameHandlers.forEach(r=>r.fn(i,n))},uv=i=>{!i.debugFrameloop||(i.frame+=1,console.log(`frame: ${i.frame}${Object.keys(i.invalidations).length>0?", requested by \u21B4":""}`),Object.keys(i.invalidations).length>0&&console.table(i.invalidations),i.invalidations={})},fv=(i,e,t,n)=>{let r=bi(i.camera);const s=i.camera.subscribe(a=>r=a);Rt(s);const{raycast:o}=av(i,e);lv(()=>{n.dispose();const a=t.frameloop==="always"||t.frameloop==="demand"&&(t.frameInvalidated||t.frameHandlers.size>0)||t.frameloop==="never"&&t.advance;(a||t.pointerInvalidated)&&(o(),t.pointerInvalidated=!1),a&&(!r||!i.composer||!i.renderer||(cv(i,t),i.composer.passes.length>1?i.composer.render():i.renderer.render(i.scene,r),uv(t),t.frameInvalidated=!1,t.advance=!1))})},dv=()=>{const i=new qt(75,0,.1,1e3);return vn(i).threlteDefaultCamera=!0,i.position.z=5,i.lookAt(0,0,0),i},hv=i=>{const e=i.size.subscribe(t=>{vn(bi(i.camera)).threlteDefaultCamera&&i.camera.update(n=>{const r=n;return r.aspect=t.width/t.height,r.updateProjectionMatrix(),i.invalidate("Default camera: aspect ratio changed"),r})});Rt(e)},pv=(i,e,t,n,r,s,o)=>{const a={audioListeners:new Map,addAudioListener:(_,b)=>{if(b=b!=null?b:"default",a.audioListeners.has(b)){console.warn(`An AudioListener with the id "${b}" has already been added, aborting.`);return}a.audioListeners.set(b,_)},removeAudioListener:_=>{if(_=_!=null?_:"default",!a.audioListeners.has(_)){console.warn(`No AudioListener with the id "${_}" found, aborting.`);return}a.audioListeners.delete(_)},getAudioListener:_=>{if(_=_!=null?_:"default",!a.audioListeners.has(_)){console.warn(`No AudioListener with the id "${_}" found, aborting.`);return}return a.audioListeners.get(_)}},l={debugFrameloop:s,frameloop:o,frame:0,frameInvalidated:!0,pointerInvalidated:!0,invalidations:{},frameHandlers:new Set,advance:!1},c={size:Ln([n,r],([_,b])=>_||b),pointer:ft(new Be),pointerOverCanvas:ft(!1),clock:new Vf,camera:ft(dv()),scene:new G0,renderer:void 0,composer:void 0,invalidate:_=>{l.frameInvalidated=!0,l.debugFrameloop&&_&&(l.invalidations[_]=l.invalidations[_]?l.invalidations[_]+1:1)},advance:()=>{l.advance=!0}},u={flat:ft(e),linear:ft(i),dpr:ft(t),setCamera:_=>{c.camera.set(_),c.composer&&(c.composer.passes.forEach(b=>{b instanceof Wf&&(b.camera=_)}),c.invalidate("Canvas: setting camera"))},raycastableObjects:new Set,interactiveObjects:new Set,raycaster:new Z0,lastIntersection:null,addRaycastableObject:_=>{u.raycastableObjects.add(_)},removeRaycastableObject:_=>{u.raycastableObjects.delete(_)},addInteractiveObject:_=>{u.interactiveObjects.add(_)},removeInteractiveObject:_=>{u.interactiveObjects.delete(_)},addPass:_=>{!c.composer||(c.composer.addPass(_),c.invalidate("Canvas: adding pass"))},removePass:_=>{!c.composer||(c.composer.removePass(_),c.invalidate("Canvas: removing pass"))}},f={dispose:async(_=!1)=>{await Jr(),!(!f.shouldDispose&&!_)&&(f.disposableObjects.forEach((b,y)=>{var w;(b===0||_)&&((w=y==null?void 0:y.dispose)==null||w.call(y),f.disposableObjects.delete(y))}),f.shouldDispose=!1)},collectDisposableObjects:(_,b)=>{const y=b!=null?b:[];return _&&((_==null?void 0:_.dispose)&&typeof _.dispose=="function"&&_.type!=="Scene"&&y.push(_),Object.entries(_).forEach(([w,x])=>{if(w==="parent"||w==="children"||typeof x!="object")return;const M=x;M!=null&&M.dispose&&f.collectDisposableObjects(M,y)})),y},addDisposableObjects:_=>{_.forEach(b=>{const y=f.disposableObjects.get(b);y?f.disposableObjects.set(b,y+1):f.disposableObjects.set(b,1)})},removeDisposableObjects:_=>{_.length!==0&&(_.forEach(b=>{const y=f.disposableObjects.get(b);y&&y>0&&f.disposableObjects.set(b,y-1)}),f.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1};return Pn("threlte",c),Pn("threlte-root",u),Pn("threlte-render-context",l),Pn("threlte-audio-context",a),Pn("threlte-disposal-context",f),{ctx:c,rootCtx:u,renderCtx:l,audioCtx:a,disposalCtx:f,getCtx:()=>c,getRootCtx:()=>u,getRenderCtx:()=>l,getAudioCtx:()=>a,getDisposalCtx:()=>f}};function bo(i,e){const t=ft(i);let n=i;const r=t.subscribe(a=>n=a);return Rt(r),{...t,set:a=>{if((a==null?void 0:a.uuid)===(n==null?void 0:n.uuid))return;const l=n;t.set(a),e==null||e(a,l)},update:a=>{const l=a(n);if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const c=n;t.set(l),e==null||e(l,c)}}}const xn=()=>Bn("threlte");function mv(i){let e;const t=i[8].default,n=mt(t,i,i[7],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,[s]){n&&n.p&&(!e||s&128)&&_t(n,t,r,r[7],e?gt(t,r[7],s,null):vt(r[7]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}const gv=()=>({onChildMount:Bn("threlte-hierarchical-object-on-mount"),onChildDestroy:Bn("threlte-hierarchical-object-on-destroy")}),qf=()=>Bn("threlte-hierarchical-parent-context");function _v(i,e,t){var _;let n,{$$slots:r={},$$scope:s}=e,{object:o=void 0}=e,{children:a=[]}=e,{onChildMount:l=void 0}=e;const c=b=>{a.push(b),t(1,a),l==null||l(b)};let{onChildDestroy:u=void 0}=e;const f=b=>{const y=a.findIndex(w=>w.uuid===b.uuid);y!==-1&&a.splice(y,1),t(1,a),u==null||u(b)},{invalidate:d}=xn(),m=qf();Ue(i,m,b=>t(6,n=b));let{parent:g=n}=e;const h=gv();o&&((_=h.onChildMount)==null||_.call(h,o),d("HierarchicalObject: object added"));const p=bo(o,(b,y)=>{var w,x;y&&((w=h.onChildDestroy)==null||w.call(h,y),d("HierarchicalObject: object added")),b&&((x=h.onChildMount)==null||x.call(h,b),d("HierarchicalObject: object removed"))});return Rt(()=>{var b;o&&((b=h.onChildDestroy)==null||b.call(h,o),d("HierarchicalObject: object removed"))}),Pn("threlte-hierarchical-object-on-mount",c),Pn("threlte-hierarchical-object-on-destroy",f),Pn("threlte-hierarchical-parent-context",p),i.$$set=b=>{"object"in b&&t(3,o=b.object),"children"in b&&t(1,a=b.children),"onChildMount"in b&&t(4,l=b.onChildMount),"onChildDestroy"in b&&t(5,u=b.onChildDestroy),"parent"in b&&t(2,g=b.parent),"$$scope"in b&&t(7,s=b.$$scope)},i.$$.update=()=>{i.$$.dirty&64&&t(2,g=n),i.$$.dirty&8&&p.set(o)},[m,a,g,o,l,u,n,s,r]}class vv extends tt{constructor(e){super(),et(this,e,_v,mv,Ze,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function bv(i){let e;const t=i[1].default,n=mt(t,i,i[4],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&16)&&_t(n,t,r,r[4],e?gt(t,r[4],s,null):vt(r[4]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function wv(i){let e,t;return e=new vv({props:{object:i[0],onChildMount:i[2],onChildDestroy:i[3],$$slots:{default:[bv]},$$scope:{ctx:i}}}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,[r]){const s={};r&1&&(s.object=n[0]),r&1&&(s.onChildMount=n[2]),r&1&&(s.onChildDestroy=n[3]),r&16&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function yv(i,e,t){let{$$slots:n={},$$scope:r}=e,{object:s}=e;const o=l=>s.add(l),a=l=>s.remove(l);return i.$$set=l=>{"object"in l&&t(0,s=l.object),"$$scope"in l&&t(4,r=l.$$scope)},[s,n,o,a,r]}class wo extends tt{constructor(e){super(),et(this,e,yv,wv,Ze,{object:0})}}const xv=()=>{const i=ft({width:0,height:0});let e={width:0,height:0};const t=i.subscribe(o=>e=o);Rt(t);let n;const r=()=>{const o=e;if(!n||!n.parentElement)return;const{clientWidth:a,clientHeight:l}=n.parentElement;(a!==o.width||l!==o.height)&&i.set({width:a,height:l})},s=o=>{n=o,r(),window.addEventListener("resize",r)};return vo?(Rt(()=>{window.removeEventListener("resize",r)}),{parentSizeAction:s,parentSize:i}):{parentSize:i,parentSizeAction:s}};function Bc(i){let e,t;return e=new wo({props:{object:i[0].scene,$$slots:{default:[Mv]},$$scope:{ctx:i}}}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,r){const s={};r[1]&4&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Mv(i){let e;const t=i[29].default,n=mt(t,i,i[33],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4)&&_t(n,t,r,r[33],e?gt(t,r[33],s,null):vt(r[33]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Sv(i){let e,t,n,r,s=i[2]&&Bc(i);return{c(){e=Ce("canvas"),s&&s.c(),Q(e,"class","svelte-o3oskp")},m(o,a){Me(o,e,a),s&&s.m(e,null),i[30](e),t=!0,n||(r=[yi(i[3].call(null,e)),$e(e,"click",i[9]),$e(e,"contextmenu",i[10]),$e(e,"pointerup",i[13]),$e(e,"pointerdown",i[11]),$e(e,"pointermove",i[12]),$e(e,"pointerenter",i[31]),$e(e,"pointerleave",i[32])],n=!0)},p(o,a){o[2]?s?(s.p(o,a),a[0]&4&&X(s,1)):(s=Bc(o),s.c(),X(s,1),s.m(e,null)):s&&(Tt(),J(s,1,1,()=>{s=null}),Ct())},i(o){t||(X(s),t=!0)},o(o){J(s),t=!1},d(o){o&&ye(e),s&&s.d(),i[30](null),n=!1,Gt(r)}}}const Vc=new Set;function Ev(i,e,t){let n,r,s,o,{$$slots:a={},$$scope:l}=e,{dpr:c=vo?window.devicePixelRatio:1}=e,{flat:u=!1}=e,{linear:f=!1}=e,{frameloop:d="demand"}=e,{debugFrameloop:m=!1}=e,{shadows:g=!0}=e,{shadowMapType:h=_f}=e,{size:p=void 0}=e,{rendererParameters:_=void 0}=e,b,y=!1;const w=ft(p),{parentSize:x,parentSizeAction:M}=xv(),P=pv(f,u,c,w,x,m,d),{getCtx:v,renderCtx:E,disposalCtx:S}=P,{ctx:O,rootCtx:F,audioCtx:L}=P;hv(O),Vc.add(O.invalidate),Rt(()=>{Vc.delete(O.invalidate)});const{size:I,scene:k}=O;Ue(i,I,ce=>t(26,r=ce));const{flat:R,linear:W,dpr:Y}=F;Ue(i,R,ce=>t(27,s=ce)),Ue(i,W,ce=>t(28,o=ce)),Ue(i,Y,ce=>t(25,n=ce)),Pn("threlte-parent",ft(k)),ss(()=>{!b||(tv(O,b,_),zc(O,o,s),Uc(O,r,n),Gc(O,g,h),t(2,y=!0))}),fv(O,F,E,S);const{onClick:H,onContextMenu:B,onPointerDown:j,onPointerMove:ne,onPointerUp:oe}=rv(O,F,E);Rt(()=>{S.dispose(!0)});function me(ce){St[ce?"unshift":"push"](()=>{b=ce,t(1,b)})}const be=()=>v().pointerOverCanvas.set(!0),V=()=>v().pointerOverCanvas.set(!1);return i.$$set=ce=>{"dpr"in ce&&t(14,c=ce.dpr),"flat"in ce&&t(15,u=ce.flat),"linear"in ce&&t(16,f=ce.linear),"frameloop"in ce&&t(17,d=ce.frameloop),"debugFrameloop"in ce&&t(18,m=ce.debugFrameloop),"shadows"in ce&&t(19,g=ce.shadows),"shadowMapType"in ce&&t(20,h=ce.shadowMapType),"size"in ce&&t(21,p=ce.size),"rendererParameters"in ce&&t(22,_=ce.rendererParameters),"$$scope"in ce&&t(33,l=ce.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&2097152&&w.set(p),i.$$.dirty[0]&65536&&Kt(W,o=f,o),i.$$.dirty[0]&32768&&Kt(R,s=u,s),i.$$.dirty[0]&16384&&Kt(Y,n=c,n),i.$$.dirty[0]&402653184&&zc(v(),o,s),i.$$.dirty[0]&100663296&&Uc(v(),r,n),i.$$.dirty[0]&1572864&&Gc(v(),g,h)},[O,b,y,M,v,I,R,W,Y,H,B,j,ne,oe,c,u,f,d,m,g,h,p,_,F,L,n,r,s,o,a,me,be,V,l]}class Av extends tt{constructor(e){super(),et(this,e,Ev,Sv,Ze,{dpr:14,flat:15,linear:16,frameloop:17,debugFrameloop:18,shadows:19,shadowMapType:20,size:21,rendererParameters:22,ctx:0,rootCtx:23,audioCtx:24},null,[-1,-1])}get ctx(){return this.$$.ctx[0]}get rootCtx(){return this.$$.ctx[23]}get audioCtx(){return this.$$.ctx[24]}}const yo=()=>Bn("threlte-root"),Tv=()=>Bn("threlte-disposal-context");function Cv(i){let e;const t=i[9].default,n=mt(t,i,i[8],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,[s]){n&&n.p&&(!e||s&256)&&_t(n,t,r,r[8],e?gt(t,r[8],s,null):vt(r[8]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}const Hc="threlte-disposable-object-context";function Lv(i,e,t){var p;let n,r,{$$slots:s={},$$scope:o}=e;const{collectDisposableObjects:a,addDisposableObjects:l,removeDisposableObjects:c}=Tv();let{object:u=void 0}=e,f=u,{dispose:d=void 0}=e;const m=Bn(Hc);Ue(i,m,_=>t(7,r=_));const g=ft((p=d!=null?d:r)!=null?p:!0);Ue(i,g,_=>t(6,n=_)),Pn(Hc,g);let h=n?a(u):[];return l(h),Rt(()=>{c(h)}),i.$$set=_=>{"object"in _&&t(2,u=_.object),"dispose"in _&&t(3,d=_.dispose),"$$scope"in _&&t(8,o=_.$$scope)},i.$$.update=()=>{var _;i.$$.dirty&136&&g.set((_=d!=null?d:r)!=null?_:!0),i.$$.dirty&116&&u!==f&&(c(h),t(5,h=n?a(u):[]),l(h),t(4,f=u))},[m,g,u,d,f,h,n,r,o,s]}class es extends tt{constructor(e){super(),et(this,e,Lv,Cv,Ze,{object:2,dispose:3})}}function Dv(i,e,t){let n,r,{object:s}=e;const o=bo(s);Ue(i,o,c=>t(4,r=c));const a=Bn("threlte-layers");Ue(i,a,c=>t(3,n=c));const{invalidate:l}=xn();return i.$$set=c=>{"object"in c&&t(2,s=c.object)},i.$$.update=()=>{if(i.$$.dirty&4&&o.set(s),i.$$.dirty&24){if(n==="all")r.layers.enableAll();else if(n==="none")r.layers.disableAll();else if(Array.isArray(n))for(let c=0;c<32;c+=1){const u=c;n.includes(u)?r.layers.enable(c):r.layers.disable(c)}else n!==void 0&&r.layers.set(n);l("LayerableObject")}},[o,a,s,n,r]}class Pv extends tt{constructor(e){super(),et(this,e,Dv,null,Ze,{object:2})}}const Zi=(i,e)=>{var a;if(!vo)return{start:()=>{},stop:()=>{},started:mf(!1)};const t=Bn("threlte-render-context"),n={fn:i,order:e==null?void 0:e.order,debugFrameloopMessage:e==null?void 0:e.debugFrameloopMessage},r=ft(!1),s=()=>{t.frameHandlers.delete(n),r.set(!1)},o=()=>{t.frameHandlers.add(n),r.set(!0)};return((a=e==null?void 0:e.autostart)==null||a)&&o(),Rt(()=>{s()}),{start:o,stop:s,started:{subscribe:r.subscribe}}},Xf=()=>{const i=ft(!1);return(async()=>{await Jr(),i.set(!0)})(),i};function Rv(i,e,t){let n,r,{object:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e;const u=new G,f=Ti(),{invalidate:d}=xn(),m=Xf();Ue(i,m,y=>t(8,r=y));const g=async()=>{r||await Jr(),f("transform")},h=async()=>{d("TransformableObject: transformed"),await g()};vn(s).onTransform=h;const{start:p,stop:_}=Zi(async()=>{c&&!l&&c instanceof ht&&(c.getWorldPosition(u),s.lookAt(u),await g())},{autostart:!1,debugFrameloopMessage:"TransformableObject: tracking object"}),b=bo(s);return Ue(i,b,y=>t(7,n=y)),i.$$set=y=>{"object"in y&&t(2,s=y.object),"position"in y&&t(3,o=y.position),"scale"in y&&t(4,a=y.scale),"rotation"in y&&t(5,l=y.rotation),"lookAt"in y&&t(6,c=y.lookAt)},i.$$.update=()=>{var y,w,x,M,P,v,E,S,O,F,L,I,k;i.$$.dirty&4&&b.set(s),i.$$.dirty&232&&(o&&(n.position.set((y=o.x)!=null?y:0,(w=o.y)!=null?w:0,(x=o.z)!=null?x:0),h()),c&&!l&&(c instanceof ht?p():(_(),n.lookAt((M=c.x)!=null?M:0,(P=c.y)!=null?P:0,(v=c.z)!=null?v:0),h())),c||_()),i.$$.dirty&144&&a&&(typeof a=="number"?n.scale.set(a,a,a):n.scale.set((E=a.x)!=null?E:1,(S=a.y)!=null?S:1,(O=a.z)!=null?O:1),h()),i.$$.dirty&160&&l&&(n.rotation.set((F=l.x)!=null?F:0,(L=l.y)!=null?L:0,(I=l.z)!=null?I:0,(k=l.order)!=null?k:"XYZ"),h())},[m,b,s,o,a,l,c,n]}class xo extends tt{constructor(e){super(),et(this,e,Rv,null,Ze,{object:2,position:3,scale:4,rotation:5,lookAt:6})}}function Iv(i,e,t){let n,r,s,{object:o}=e,{viewportAware:a=!1}=e;const l=Ti(),{camera:c,invalidate:u}=xn();Ue(i,c,M=>t(8,s=M));const f=new mo,d=new yt,m=M=>M.type==="Mesh",g=new G,h=()=>s?(d.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),f.setFromProjectionMatrix(d),m(o)?f.intersectsObject(o):(o.getWorldPosition(g),f.containsPoint(g))):!0,p=Xf();Ue(i,p,M=>t(7,r=M));let{inViewport:_=h()}=e;const b=async M=>{M?(r||await Jr(),l("viewportenter",o)):(r||await Jr(),l("viewportleave",o))},{start:y,stop:w,started:x}=Zi(()=>{const M=h();_===void 0?(t(3,_=h()),b(_)):M!==_&&(b(M),t(3,_=M))},{autostart:a,debugFrameloopMessage:"ViewportAwareObject: tracking viewport visibility"});return Ue(i,x,M=>t(6,n=M)),u("ViewportAwareObject"),i.$$set=M=>{"object"in M&&t(4,o=M.object),"viewportAware"in M&&t(5,a=M.viewportAware),"inViewport"in M&&t(3,_=M.inViewport)},i.$$.update=()=>{i.$$.dirty&96&&(a&&!n?y():!a&&n&&w())},[c,p,x,_,o,a,n]}class Ov extends tt{constructor(e){super(),et(this,e,Iv,null,Ze,{object:4,viewportAware:5,inViewport:3})}}function kv(i){let e;const t=i[14].default,n=mt(t,i,i[18],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&262144)&&_t(n,t,r,r[18],e?gt(t,r[18],s,null):vt(r[18]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Nv(i){let e,t;return e=new wo({props:{object:i[1],$$slots:{default:[kv]},$$scope:{ctx:i}}}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.object=n[1]),r&262144&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Fv(i){let e,t,n,r,s,o,a,l,c;e=new Pv({props:{object:i[1]}}),n=new xo({props:{object:i[1],position:i[2],rotation:i[4],scale:i[3],lookAt:i[5]}}),s=new es({props:{object:i[1],dispose:i[7],$$slots:{default:[Nv]},$$scope:{ctx:i}}});function u(d){i[15](d)}let f={object:i[1],viewportAware:i[6]};return i[0]!==void 0&&(f.inViewport=i[0]),a=new Ov({props:f}),St.push(()=>Yt(a,"inViewport",u)),a.$on("viewportenter",i[16]),a.$on("viewportleave",i[17]),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment),r=ke(),Oe(s.$$.fragment),o=ke(),Oe(a.$$.fragment)},m(d,m){Pe(e,d,m),Me(d,t,m),Pe(n,d,m),Me(d,r,m),Pe(s,d,m),Me(d,o,m),Pe(a,d,m),c=!0},p(d,[m]){const g={};m&2&&(g.object=d[1]),e.$set(g);const h={};m&2&&(h.object=d[1]),m&4&&(h.position=d[2]),m&16&&(h.rotation=d[4]),m&8&&(h.scale=d[3]),m&32&&(h.lookAt=d[5]),n.$set(h);const p={};m&2&&(p.object=d[1]),m&128&&(p.dispose=d[7]),m&262146&&(p.$$scope={dirty:m,ctx:d}),s.$set(p);const _={};m&2&&(_.object=d[1]),m&64&&(_.viewportAware=d[6]),!l&&m&1&&(l=!0,_.inViewport=d[0],Xt(()=>l=!1)),a.$set(_)},i(d){c||(X(e.$$.fragment,d),X(n.$$.fragment,d),X(s.$$.fragment,d),X(a.$$.fragment,d),c=!0)},o(d){J(e.$$.fragment,d),J(n.$$.fragment,d),J(s.$$.fragment,d),J(a.$$.fragment,d),c=!1},d(d){Re(e,d),d&&ye(t),Re(n,d),d&&ye(r),Re(s,d),d&&ye(o),Re(a,d)}}}function zv(i,e,t){let{$$slots:n={},$$scope:r}=e,{object:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{viewportAware:u=!1}=e,{inViewport:f=!1}=e,{castShadow:d=void 0}=e,{receiveShadow:m=void 0}=e,{frustumCulled:g=void 0}=e,{renderOrder:h=void 0}=e,{visible:p=void 0}=e,{dispose:_=void 0}=e,{userData:b=void 0}=e;const{invalidate:y}=xn(),w=()=>s;function x(v){f=v,t(0,f)}function M(v){ut.call(this,i,v)}function P(v){ut.call(this,i,v)}return i.$$set=v=>{"object"in v&&t(1,s=v.object),"position"in v&&t(2,o=v.position),"scale"in v&&t(3,a=v.scale),"rotation"in v&&t(4,l=v.rotation),"lookAt"in v&&t(5,c=v.lookAt),"viewportAware"in v&&t(6,u=v.viewportAware),"inViewport"in v&&t(0,f=v.inViewport),"castShadow"in v&&t(8,d=v.castShadow),"receiveShadow"in v&&t(9,m=v.receiveShadow),"frustumCulled"in v&&t(10,g=v.frustumCulled),"renderOrder"in v&&t(11,h=v.renderOrder),"visible"in v&&t(12,p=v.visible),"dispose"in v&&t(7,_=v.dispose),"userData"in v&&t(13,b=v.userData),"$$scope"in v&&t(18,r=v.$$scope)},i.$$.update=()=>{i.$$.dirty&16128&&(p!==void 0&&(w().visible=p),d!==void 0&&(w().castShadow=d),m!==void 0&&(w().receiveShadow=m),g!==void 0&&(w().frustumCulled=g),h!==void 0&&(w().renderOrder=h),b!==void 0&&(w().userData={...w().userData,...b}),y("Object3DInstance: props changed"))},[f,s,o,a,l,c,u,_,d,m,g,h,p,b,n,x,M,P,r]}class fs extends tt{constructor(e){super(),et(this,e,zv,Fv,Ze,{object:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:8,receiveShadow:9,frustumCulled:10,renderOrder:11,visible:12,dispose:7,userData:13})}}function Uv(i){let e;const t=i[17].default,n=mt(t,i,i[21],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&2097152)&&_t(n,t,r,r[21],e?gt(t,r[21],s,null):vt(r[21]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Gv(i){let e,t,n;function r(o){i[18](o)}let s={object:i[1],lookAt:i[5],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],position:i[2],scale:i[3],rotation:i[4],viewportAware:i[6],visible:i[11],userData:i[12],dispose:i[13],$$slots:{default:[Uv]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new fs({props:s}),St.push(()=>Yt(e,"inViewport",r)),e.$on("viewportenter",i[19]),e.$on("viewportleave",i[20]),{c(){Oe(e.$$.fragment)},m(o,a){Pe(e,o,a),n=!0},p(o,[a]){const l={};a&2&&(l.object=o[1]),a&32&&(l.lookAt=o[5]),a&128&&(l.castShadow=o[7]),a&256&&(l.receiveShadow=o[8]),a&512&&(l.frustumCulled=o[9]),a&1024&&(l.renderOrder=o[10]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.viewportAware=o[6]),a&2048&&(l.visible=o[11]),a&4096&&(l.userData=o[12]),a&8192&&(l.dispose=o[13]),a&2097152&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Xt(()=>t=!1)),e.$set(l)},i(o){n||(X(e.$$.fragment,o),n=!0)},o(o){J(e.$$.fragment,o),n=!1},d(o){Re(e,o)}}}function Bv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{camera:o}=e,{position:a=void 0}=e,{scale:l=void 0}=e,{rotation:c=void 0}=e,{lookAt:u=void 0}=e,{viewportAware:f=!1}=e,{inViewport:d=!1}=e,{castShadow:m=void 0}=e,{receiveShadow:g=void 0}=e,{frustumCulled:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:b=void 0}=e,{dispose:y=void 0}=e,{useCamera:w=!1}=e;const x=bo(o);Ue(i,x,S=>t(16,n=S));const{setCamera:M}=yo();function P(S){d=S,t(0,d)}function v(S){ut.call(this,i,S)}function E(S){ut.call(this,i,S)}return i.$$set=S=>{"camera"in S&&t(1,o=S.camera),"position"in S&&t(2,a=S.position),"scale"in S&&t(3,l=S.scale),"rotation"in S&&t(4,c=S.rotation),"lookAt"in S&&t(5,u=S.lookAt),"viewportAware"in S&&t(6,f=S.viewportAware),"inViewport"in S&&t(0,d=S.inViewport),"castShadow"in S&&t(7,m=S.castShadow),"receiveShadow"in S&&t(8,g=S.receiveShadow),"frustumCulled"in S&&t(9,h=S.frustumCulled),"renderOrder"in S&&t(10,p=S.renderOrder),"visible"in S&&t(11,_=S.visible),"userData"in S&&t(12,b=S.userData),"dispose"in S&&t(13,y=S.dispose),"useCamera"in S&&t(15,w=S.useCamera),"$$scope"in S&&t(21,s=S.$$scope)},i.$$.update=()=>{i.$$.dirty&2&&x.set(o),i.$$.dirty&98304&&w&&M(n)},[d,o,a,l,c,u,f,m,g,h,p,_,b,y,x,w,n,r,P,v,E,s]}class Vv extends tt{constructor(e){super(),et(this,e,Bv,Gv,Ze,{camera:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,useCamera:15})}}function Hv(i){let e;const t=i[20].default,n=mt(t,i,i[24],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&16777216)&&_t(n,t,r,r[24],e?gt(t,r[24],s,null):vt(r[24]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Wv(i){let e,t,n;function r(o){i[21](o)}let s={camera:i[0],position:i[2],scale:i[3],rotation:i[4],castShadow:i[6],receiveShadow:i[7],frustumCulled:i[8],renderOrder:i[9],visible:i[10],userData:i[11],dispose:i[12],viewportAware:i[13],lookAt:i[5],useCamera:i[14],$$slots:{default:[Hv]},$$scope:{ctx:i}};return i[1]!==void 0&&(s.inViewport=i[1]),e=new Vv({props:s}),St.push(()=>Yt(e,"inViewport",r)),e.$on("viewportenter",i[22]),e.$on("viewportleave",i[23]),{c(){Oe(e.$$.fragment)},m(o,a){Pe(e,o,a),n=!0},p(o,[a]){const l={};a&1&&(l.camera=o[0]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.castShadow=o[6]),a&128&&(l.receiveShadow=o[7]),a&256&&(l.frustumCulled=o[8]),a&512&&(l.renderOrder=o[9]),a&1024&&(l.visible=o[10]),a&2048&&(l.userData=o[11]),a&4096&&(l.dispose=o[12]),a&8192&&(l.viewportAware=o[13]),a&32&&(l.lookAt=o[5]),a&16384&&(l.useCamera=o[14]),a&16777216&&(l.$$scope={dirty:a,ctx:o}),!t&&a&2&&(t=!0,l.inViewport=o[1],Xt(()=>t=!1)),e.$set(l)},i(o){n||(X(e.$$.fragment,o),n=!0)},o(o){J(e.$$.fragment,o),n=!1},d(o){Re(e,o)}}}function jv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{castShadow:u=void 0}=e,{receiveShadow:f=void 0}=e,{frustumCulled:d=void 0}=e,{renderOrder:m=void 0}=e,{visible:g=void 0}=e,{userData:h=void 0}=e,{dispose:p=void 0}=e,{viewportAware:_=!1}=e,{inViewport:b=!1}=e,{useCamera:y=!0}=e,{near:w=void 0}=e,{far:x=void 0}=e,{fov:M=void 0}=e;const{size:P,invalidate:v}=xn();Ue(i,P,L=>t(19,n=L));const E=new qt(M,n.width/n.height,w,x);function S(L){b=L,t(1,b)}function O(L){ut.call(this,i,L)}function F(L){ut.call(this,i,L)}return i.$$set=L=>{"position"in L&&t(2,o=L.position),"scale"in L&&t(3,a=L.scale),"rotation"in L&&t(4,l=L.rotation),"lookAt"in L&&t(5,c=L.lookAt),"castShadow"in L&&t(6,u=L.castShadow),"receiveShadow"in L&&t(7,f=L.receiveShadow),"frustumCulled"in L&&t(8,d=L.frustumCulled),"renderOrder"in L&&t(9,m=L.renderOrder),"visible"in L&&t(10,g=L.visible),"userData"in L&&t(11,h=L.userData),"dispose"in L&&t(12,p=L.dispose),"viewportAware"in L&&t(13,_=L.viewportAware),"inViewport"in L&&t(1,b=L.inViewport),"useCamera"in L&&t(14,y=L.useCamera),"near"in L&&t(16,w=L.near),"far"in L&&t(17,x=L.far),"fov"in L&&t(18,M=L.fov),"$$scope"in L&&t(24,s=L.$$scope)},i.$$.update=()=>{i.$$.dirty&524289&&(t(0,E.aspect=n.width/n.height,E),E.updateProjectionMatrix(),v("PerspectiveCamera: aspect changed")),i.$$.dirty&458753&&(w!==void 0&&t(0,E.near=w,E),x!==void 0&&t(0,E.far=x,E),M!==void 0&&t(0,E.fov=M,E),E.updateProjectionMatrix(),v("PerspectiveCamera: props changed"))},[E,b,o,a,l,c,u,f,d,m,g,h,p,_,y,P,w,x,M,n,r,S,O,F,s]}class qv extends tt{constructor(e){super(),et(this,e,jv,Wv,Ze,{position:2,scale:3,rotation:4,lookAt:5,castShadow:6,receiveShadow:7,frustumCulled:8,renderOrder:9,visible:10,userData:11,dispose:12,viewportAware:13,inViewport:1,useCamera:14,near:16,far:17,fov:18,camera:0})}get camera(){return this.$$.ctx[0]}}const Wc=[],Xv=(i,e)=>{const t=Wc.find(r=>r instanceof i);if(t)return t;const n=e();return Wc.push(n),n},jc={type:"change"},ua={type:"start"},qc={type:"end"};class Yv extends Xi{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new G,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Qi.ROTATE,MIDDLE:Qi.DOLLY,RIGHT:Qi.PAN},this.touches={ONE:$i.ROTATE,TWO:$i.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(T){T.addEventListener("keydown",it),this._domElementKeyEvents=T},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(jc),n.update(),s=r.NONE},this.update=function(){const T=new G,re=new Ei().setFromUnitVectors(e.up,new G(0,1,0)),de=re.clone().invert(),we=new G,z=new Ei,Te=2*Math.PI;return function(){const lt=n.object.position;T.copy(lt).sub(n.target),T.applyQuaternion(re),a.setFromVector3(T),n.autoRotate&&s===r.NONE&&E(P()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let U=n.minAzimuthAngle,pe=n.maxAzimuthAngle;return isFinite(U)&&isFinite(pe)&&(U<-Math.PI?U+=Te:U>Math.PI&&(U-=Te),pe<-Math.PI?pe+=Te:pe>Math.PI&&(pe-=Te),U<=pe?a.theta=Math.max(U,Math.min(pe,a.theta)):a.theta=a.theta>(U+pe)/2?Math.max(U,a.theta):Math.min(pe,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),T.setFromSpherical(a),T.applyQuaternion(de),lt.copy(n.target).add(T),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,f||we.distanceToSquared(n.object.position)>o||8*(1-z.dot(n.object.quaternion))>o?(n.dispatchEvent(jc),we.copy(n.object.position),z.copy(n.object.quaternion),f=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",$),n.domElement.removeEventListener("pointerdown",He),n.domElement.removeEventListener("pointercancel",xt),n.domElement.removeEventListener("wheel",Le),n.domElement.removeEventListener("pointermove",Fe),n.domElement.removeEventListener("pointerup",dt),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",it)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const o=1e-6,a=new eo,l=new eo;let c=1;const u=new G;let f=!1;const d=new Be,m=new Be,g=new Be,h=new Be,p=new Be,_=new Be,b=new Be,y=new Be,w=new Be,x=[],M={};function P(){return 2*Math.PI/60/60*n.autoRotateSpeed}function v(){return Math.pow(.95,n.zoomSpeed)}function E(T){l.theta-=T}function S(T){l.phi-=T}const O=function(){const T=new G;return function(de,we){T.setFromMatrixColumn(we,0),T.multiplyScalar(-de),u.add(T)}}(),F=function(){const T=new G;return function(de,we){n.screenSpacePanning===!0?T.setFromMatrixColumn(we,1):(T.setFromMatrixColumn(we,0),T.crossVectors(n.object.up,T)),T.multiplyScalar(de),u.add(T)}}(),L=function(){const T=new G;return function(de,we){const z=n.domElement;if(n.object.isPerspectiveCamera){const Te=n.object.position;T.copy(Te).sub(n.target);let Xe=T.length();Xe*=Math.tan(n.object.fov/2*Math.PI/180),O(2*de*Xe/z.clientHeight,n.object.matrix),F(2*we*Xe/z.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(O(de*(n.object.right-n.object.left)/n.object.zoom/z.clientWidth,n.object.matrix),F(we*(n.object.top-n.object.bottom)/n.object.zoom/z.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function I(T){n.object.isPerspectiveCamera?c/=T:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*T)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(T){n.object.isPerspectiveCamera?c*=T:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/T)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(T){d.set(T.clientX,T.clientY)}function W(T){b.set(T.clientX,T.clientY)}function Y(T){h.set(T.clientX,T.clientY)}function H(T){m.set(T.clientX,T.clientY),g.subVectors(m,d).multiplyScalar(n.rotateSpeed);const re=n.domElement;E(2*Math.PI*g.x/re.clientHeight),S(2*Math.PI*g.y/re.clientHeight),d.copy(m),n.update()}function B(T){y.set(T.clientX,T.clientY),w.subVectors(y,b),w.y>0?I(v()):w.y<0&&k(v()),b.copy(y),n.update()}function j(T){p.set(T.clientX,T.clientY),_.subVectors(p,h).multiplyScalar(n.panSpeed),L(_.x,_.y),h.copy(p),n.update()}function ne(T){T.deltaY<0?k(v()):T.deltaY>0&&I(v()),n.update()}function oe(T){let re=!1;switch(T.code){case n.keys.UP:L(0,n.keyPanSpeed),re=!0;break;case n.keys.BOTTOM:L(0,-n.keyPanSpeed),re=!0;break;case n.keys.LEFT:L(n.keyPanSpeed,0),re=!0;break;case n.keys.RIGHT:L(-n.keyPanSpeed,0),re=!0;break}re&&(T.preventDefault(),n.update())}function me(){if(x.length===1)d.set(x[0].pageX,x[0].pageY);else{const T=.5*(x[0].pageX+x[1].pageX),re=.5*(x[0].pageY+x[1].pageY);d.set(T,re)}}function be(){if(x.length===1)h.set(x[0].pageX,x[0].pageY);else{const T=.5*(x[0].pageX+x[1].pageX),re=.5*(x[0].pageY+x[1].pageY);h.set(T,re)}}function V(){const T=x[0].pageX-x[1].pageX,re=x[0].pageY-x[1].pageY,de=Math.sqrt(T*T+re*re);b.set(0,de)}function ce(){n.enableZoom&&V(),n.enablePan&&be()}function Se(){n.enableZoom&&V(),n.enableRotate&&me()}function ue(T){if(x.length==1)m.set(T.pageX,T.pageY);else{const de=Ge(T),we=.5*(T.pageX+de.x),z=.5*(T.pageY+de.y);m.set(we,z)}g.subVectors(m,d).multiplyScalar(n.rotateSpeed);const re=n.domElement;E(2*Math.PI*g.x/re.clientHeight),S(2*Math.PI*g.y/re.clientHeight),d.copy(m)}function ge(T){if(x.length===1)p.set(T.pageX,T.pageY);else{const re=Ge(T),de=.5*(T.pageX+re.x),we=.5*(T.pageY+re.y);p.set(de,we)}_.subVectors(p,h).multiplyScalar(n.panSpeed),L(_.x,_.y),h.copy(p)}function je(T){const re=Ge(T),de=T.pageX-re.x,we=T.pageY-re.y,z=Math.sqrt(de*de+we*we);y.set(0,z),w.set(0,Math.pow(y.y/b.y,n.zoomSpeed)),I(w.y),b.copy(y)}function K(T){n.enableZoom&&je(T),n.enablePan&&ge(T)}function ae(T){n.enableZoom&&je(T),n.enableRotate&&ue(T)}function He(T){n.enabled!==!1&&(x.length===0&&(n.domElement.setPointerCapture(T.pointerId),n.domElement.addEventListener("pointermove",Fe),n.domElement.addEventListener("pointerup",dt)),se(T),T.pointerType==="touch"?D(T):bt(T))}function Fe(T){n.enabled!==!1&&(T.pointerType==="touch"?A(T):Ie(T))}function dt(T){fe(T),x.length===0&&(n.domElement.releasePointerCapture(T.pointerId),n.domElement.removeEventListener("pointermove",Fe),n.domElement.removeEventListener("pointerup",dt)),n.dispatchEvent(qc),s=r.NONE}function xt(T){fe(T)}function bt(T){let re;switch(T.button){case 0:re=n.mouseButtons.LEFT;break;case 1:re=n.mouseButtons.MIDDLE;break;case 2:re=n.mouseButtons.RIGHT;break;default:re=-1}switch(re){case Qi.DOLLY:if(n.enableZoom===!1)return;W(T),s=r.DOLLY;break;case Qi.ROTATE:if(T.ctrlKey||T.metaKey||T.shiftKey){if(n.enablePan===!1)return;Y(T),s=r.PAN}else{if(n.enableRotate===!1)return;R(T),s=r.ROTATE}break;case Qi.PAN:if(T.ctrlKey||T.metaKey||T.shiftKey){if(n.enableRotate===!1)return;R(T),s=r.ROTATE}else{if(n.enablePan===!1)return;Y(T),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&n.dispatchEvent(ua)}function Ie(T){switch(s){case r.ROTATE:if(n.enableRotate===!1)return;H(T);break;case r.DOLLY:if(n.enableZoom===!1)return;B(T);break;case r.PAN:if(n.enablePan===!1)return;j(T);break}}function Le(T){n.enabled===!1||n.enableZoom===!1||s!==r.NONE||(T.preventDefault(),n.dispatchEvent(ua),ne(T),n.dispatchEvent(qc))}function it(T){n.enabled===!1||n.enablePan===!1||oe(T)}function D(T){switch(ve(T),x.length){case 1:switch(n.touches.ONE){case $i.ROTATE:if(n.enableRotate===!1)return;me(),s=r.TOUCH_ROTATE;break;case $i.PAN:if(n.enablePan===!1)return;be(),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(n.touches.TWO){case $i.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ce(),s=r.TOUCH_DOLLY_PAN;break;case $i.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Se(),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&n.dispatchEvent(ua)}function A(T){switch(ve(T),s){case r.TOUCH_ROTATE:if(n.enableRotate===!1)return;ue(T),n.update();break;case r.TOUCH_PAN:if(n.enablePan===!1)return;ge(T),n.update();break;case r.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;K(T),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;ae(T),n.update();break;default:s=r.NONE}}function $(T){n.enabled!==!1&&T.preventDefault()}function se(T){x.push(T)}function fe(T){delete M[T.pointerId];for(let re=0;re<x.length;re++)if(x[re].pointerId==T.pointerId){x.splice(re,1);return}}function ve(T){let re=M[T.pointerId];re===void 0&&(re=new Be,M[T.pointerId]=re),re.set(T.pageX,T.pageY)}function Ge(T){const re=T.pointerId===x[0].pointerId?x[1]:x[0];return M[re.pointerId]}n.domElement.addEventListener("contextmenu",$),n.domElement.addEventListener("pointerdown",He),n.domElement.addEventListener("pointercancel",xt),n.domElement.addEventListener("wheel",Le,{passive:!1}),this.update()}}function Zv(i){let e,t,n,r;return e=new es({props:{dispose:i[2],object:i[0]}}),n=new xo({props:{object:i[4],position:i[1]}}),n.$on("transform",i[5]),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment)},m(s,o){Pe(e,s,o),Me(s,t,o),Pe(n,s,o),r=!0},p(s,o){const a={};o[0]&4&&(a.dispose=s[2]),o[0]&1&&(a.object=s[0]),e.$set(a);const l={};o[0]&2&&(l.position=s[1]),n.$set(l)},i(s){r||(X(e.$$.fragment,s),X(n.$$.fragment,s),r=!0)},o(s){J(e.$$.fragment,s),J(n.$$.fragment,s),r=!1},d(s){Re(e,s),s&&ye(t),Re(n,s)}}}function Kv(i,e,t){let n,{autoRotate:r=void 0}=e,{autoRotateSpeed:s=void 0}=e,{dampingFactor:o=void 0}=e,{enableDamping:a=void 0}=e,{enabled:l=void 0}=e,{enablePan:c=void 0}=e,{enableRotate:u=void 0}=e,{enableZoom:f=void 0}=e,{keyPanSpeed:d=void 0}=e,{keys:m=void 0}=e,{maxAzimuthAngle:g=void 0}=e,{maxDistance:h=void 0}=e,{maxPolarAngle:p=void 0}=e,{maxZoom:_=void 0}=e,{minAzimuthAngle:b=void 0}=e,{minDistance:y=void 0}=e,{minPolarAngle:w=void 0}=e,{minZoom:x=void 0}=e,{mouseButtons:M=void 0}=e,{panSpeed:P=void 0}=e,{rotateSpeed:v=void 0}=e,{screenSpacePanning:E=void 0}=e,{touches:S=void 0}=e,{zoomSpeed:O=void 0}=e,{target:F=void 0}=e,{dispose:L=void 0}=e;const I=qf();Ue(i,I,V=>t(30,n=V));const{renderer:k,invalidate:R}=xn();if(!k)throw new Error("Threlte Context missing: Is <OrbitControls> a child of <Canvas>?");if(!(n instanceof Wa))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const W=Ti(),Y=()=>{R("Orbitcontrols: change event"),W("change")},H=()=>W("start"),B=()=>W("end"),j=new Yv(n,k.domElement);vn(n).orbitControls=j,j.addEventListener("change",Y),j.addEventListener("start",H),j.addEventListener("end",B),Rt(()=>{n&&delete vn(n).orbitControls,j.removeEventListener("change",Y),j.removeEventListener("start",H),j.removeEventListener("end",B)});const{start:ne,stop:oe}=Zi(()=>j.update(),{autostart:!1,debugFrameloopMessage:"OrbitControlts: updating controls"}),me=new ht,be=()=>{t(0,j.target=me.position,j),j.update(),R("OrbitControls: target changed")};return i.$$set=V=>{"autoRotate"in V&&t(6,r=V.autoRotate),"autoRotateSpeed"in V&&t(7,s=V.autoRotateSpeed),"dampingFactor"in V&&t(8,o=V.dampingFactor),"enableDamping"in V&&t(9,a=V.enableDamping),"enabled"in V&&t(10,l=V.enabled),"enablePan"in V&&t(11,c=V.enablePan),"enableRotate"in V&&t(12,u=V.enableRotate),"enableZoom"in V&&t(13,f=V.enableZoom),"keyPanSpeed"in V&&t(14,d=V.keyPanSpeed),"keys"in V&&t(15,m=V.keys),"maxAzimuthAngle"in V&&t(16,g=V.maxAzimuthAngle),"maxDistance"in V&&t(17,h=V.maxDistance),"maxPolarAngle"in V&&t(18,p=V.maxPolarAngle),"maxZoom"in V&&t(19,_=V.maxZoom),"minAzimuthAngle"in V&&t(20,b=V.minAzimuthAngle),"minDistance"in V&&t(21,y=V.minDistance),"minPolarAngle"in V&&t(22,w=V.minPolarAngle),"minZoom"in V&&t(23,x=V.minZoom),"mouseButtons"in V&&t(24,M=V.mouseButtons),"panSpeed"in V&&t(25,P=V.panSpeed),"rotateSpeed"in V&&t(26,v=V.rotateSpeed),"screenSpacePanning"in V&&t(27,E=V.screenSpacePanning),"touches"in V&&t(28,S=V.touches),"zoomSpeed"in V&&t(29,O=V.zoomSpeed),"target"in V&&t(1,F=V.target),"dispose"in V&&t(2,L=V.dispose)},i.$$.update=()=>{i.$$.dirty[0]&1073741761&&(r!==void 0&&t(0,j.autoRotate=r,j),s!==void 0&&t(0,j.autoRotateSpeed=s,j),o!==void 0&&t(0,j.dampingFactor=o,j),a!==void 0&&t(0,j.enableDamping=a,j),l!==void 0&&t(0,j.enabled=l,j),c!==void 0&&t(0,j.enablePan=c,j),u!==void 0&&t(0,j.enableRotate=u,j),f!==void 0&&t(0,j.enableZoom=f,j),d!==void 0&&t(0,j.keyPanSpeed=d,j),m!==void 0&&t(0,j.keys=m,j),g!==void 0&&t(0,j.maxAzimuthAngle=g,j),h!==void 0&&t(0,j.maxDistance=h,j),p!==void 0&&t(0,j.maxPolarAngle=p,j),_!==void 0&&t(0,j.maxZoom=_,j),b!==void 0&&t(0,j.minAzimuthAngle=b,j),y!==void 0&&t(0,j.minDistance=y,j),w!==void 0&&t(0,j.minPolarAngle=w,j),x!==void 0&&t(0,j.minZoom=x,j),M!==void 0&&t(0,j.mouseButtons=M,j),P!==void 0&&t(0,j.panSpeed=P,j),v!==void 0&&t(0,j.rotateSpeed=v,j),E!==void 0&&t(0,j.screenSpacePanning=E,j),S!==void 0&&t(0,j.touches=S,j),O!==void 0&&t(0,j.zoomSpeed=O,j),j.update(),R("OrbitControls: props changed")),i.$$.dirty[0]&576&&(r||a?ne():oe())},[j,F,L,I,me,be,r,s,o,a,l,c,u,f,d,m,g,h,p,_,b,y,w,x,M,P,v,E,S,O]}class Jv extends tt{constructor(e){super(),et(this,e,Kv,Zv,Ze,{autoRotate:6,autoRotateSpeed:7,dampingFactor:8,enableDamping:9,enabled:10,enablePan:11,enableRotate:12,enableZoom:13,keyPanSpeed:14,keys:15,maxAzimuthAngle:16,maxDistance:17,maxPolarAngle:18,maxZoom:19,minAzimuthAngle:20,minDistance:21,minPolarAngle:22,minZoom:23,mouseButtons:24,panSpeed:25,rotateSpeed:26,screenSpacePanning:27,touches:28,zoomSpeed:29,target:1,dispose:2,controls:0},null,[-1,-1])}get controls(){return this.$$.ctx[0]}}const Qv=(i,e)=>e?new qe(i):new qe().setHex(new qe(i).getHex()).convertSRGBToLinear();function $v(i){let e;const t=i[18].default,n=mt(t,i,i[22],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&4194304)&&_t(n,t,r,r[22],e?gt(t,r[22],s,null):vt(r[22]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function eb(i){let e,t,n;function r(o){i[19](o)}let s={object:i[0],lookAt:i[5],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],position:i[2],scale:i[3],rotation:i[4],viewportAware:i[6],visible:i[11],userData:i[12],dispose:i[13],$$slots:{default:[$v]},$$scope:{ctx:i}};return i[1]!==void 0&&(s.inViewport=i[1]),e=new fs({props:s}),St.push(()=>Yt(e,"inViewport",r)),e.$on("viewportenter",i[20]),e.$on("viewportleave",i[21]),{c(){Oe(e.$$.fragment)},m(o,a){Pe(e,o,a),n=!0},p(o,[a]){const l={};a&1&&(l.object=o[0]),a&32&&(l.lookAt=o[5]),a&128&&(l.castShadow=o[7]),a&256&&(l.receiveShadow=o[8]),a&512&&(l.frustumCulled=o[9]),a&1024&&(l.renderOrder=o[10]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.viewportAware=o[6]),a&2048&&(l.visible=o[11]),a&4096&&(l.userData=o[12]),a&8192&&(l.dispose=o[13]),a&4194304&&(l.$$scope={dirty:a,ctx:o}),!t&&a&2&&(t=!0,l.inViewport=o[1],Xt(()=>t=!1)),e.$set(l)},i(o){n||(X(e.$$.fragment,o),n=!0)},o(o){J(e.$$.fragment,o),n=!1},d(o){Re(e,o)}}}function tb(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{light:o}=e,{position:a=void 0}=e,{scale:l=void 0}=e,{rotation:c=void 0}=e,{lookAt:u=void 0}=e,{viewportAware:f=!1}=e,{inViewport:d=!1}=e,{castShadow:m=void 0}=e,{receiveShadow:g=void 0}=e,{frustumCulled:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:b=void 0}=e,{dispose:y=void 0}=e,{color:w=void 0}=e,{intensity:x=void 0}=e;const{invalidate:M}=xn(),{linear:P}=yo();Ue(i,P,O=>t(17,n=O));function v(O){d=O,t(1,d)}function E(O){ut.call(this,i,O)}function S(O){ut.call(this,i,O)}return i.$$set=O=>{"light"in O&&t(0,o=O.light),"position"in O&&t(2,a=O.position),"scale"in O&&t(3,l=O.scale),"rotation"in O&&t(4,c=O.rotation),"lookAt"in O&&t(5,u=O.lookAt),"viewportAware"in O&&t(6,f=O.viewportAware),"inViewport"in O&&t(1,d=O.inViewport),"castShadow"in O&&t(7,m=O.castShadow),"receiveShadow"in O&&t(8,g=O.receiveShadow),"frustumCulled"in O&&t(9,h=O.frustumCulled),"renderOrder"in O&&t(10,p=O.renderOrder),"visible"in O&&t(11,_=O.visible),"userData"in O&&t(12,b=O.userData),"dispose"in O&&t(13,y=O.dispose),"color"in O&&t(15,w=O.color),"intensity"in O&&t(16,x=O.intensity),"$$scope"in O&&t(22,s=O.$$scope)},i.$$.update=()=>{i.$$.dirty&229376&&(x!==void 0&&t(0,o.intensity=x,o),w!==void 0&&t(0,o.color=Qv(w,n),o),M("LightInstance: props changed"))},[o,d,a,l,c,u,f,m,g,h,p,_,b,y,P,w,x,n,r,v,E,S,s]}class Yf extends tt{constructor(e){super(),et(this,e,tb,eb,Ze,{light:0,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:1,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,color:15,intensity:16})}}function nb(i){let e;const t=i[16].default,n=mt(t,i,i[20],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&1048576)&&_t(n,t,r,r[20],e?gt(t,r[20],s,null):vt(r[20]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function ib(i){let e,t,n;function r(o){i[17](o)}let s={light:i[15],lookAt:i[4],position:i[1],scale:i[2],rotation:i[3],castShadow:i[5],receiveShadow:i[6],frustumCulled:i[7],renderOrder:i[8],visible:i[9],userData:i[10],dispose:i[11],viewportAware:i[12],color:i[13],intensity:i[14],$$slots:{default:[nb]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new Yf({props:s}),St.push(()=>Yt(e,"inViewport",r)),e.$on("viewportenter",i[18]),e.$on("viewportleave",i[19]),{c(){Oe(e.$$.fragment)},m(o,a){Pe(e,o,a),n=!0},p(o,[a]){const l={};a&16&&(l.lookAt=o[4]),a&2&&(l.position=o[1]),a&4&&(l.scale=o[2]),a&8&&(l.rotation=o[3]),a&32&&(l.castShadow=o[5]),a&64&&(l.receiveShadow=o[6]),a&128&&(l.frustumCulled=o[7]),a&256&&(l.renderOrder=o[8]),a&512&&(l.visible=o[9]),a&1024&&(l.userData=o[10]),a&2048&&(l.dispose=o[11]),a&4096&&(l.viewportAware=o[12]),a&8192&&(l.color=o[13]),a&16384&&(l.intensity=o[14]),a&1048576&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Xt(()=>t=!1)),e.$set(l)},i(o){n||(X(e.$$.fragment,o),n=!0)},o(o){J(e.$$.fragment,o),n=!1},d(o){Re(e,o)}}}function rb(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{castShadow:c=void 0}=e,{receiveShadow:u=void 0}=e,{frustumCulled:f=void 0}=e,{renderOrder:d=void 0}=e,{visible:m=void 0}=e,{userData:g=void 0}=e,{dispose:h=void 0}=e,{viewportAware:p=!1}=e,{inViewport:_=!1}=e,{color:b=void 0}=e,{intensity:y=void 0}=e;const w=new Y0(b,y);function x(v){_=v,t(0,_)}function M(v){ut.call(this,i,v)}function P(v){ut.call(this,i,v)}return i.$$set=v=>{"position"in v&&t(1,s=v.position),"scale"in v&&t(2,o=v.scale),"rotation"in v&&t(3,a=v.rotation),"lookAt"in v&&t(4,l=v.lookAt),"castShadow"in v&&t(5,c=v.castShadow),"receiveShadow"in v&&t(6,u=v.receiveShadow),"frustumCulled"in v&&t(7,f=v.frustumCulled),"renderOrder"in v&&t(8,d=v.renderOrder),"visible"in v&&t(9,m=v.visible),"userData"in v&&t(10,g=v.userData),"dispose"in v&&t(11,h=v.dispose),"viewportAware"in v&&t(12,p=v.viewportAware),"inViewport"in v&&t(0,_=v.inViewport),"color"in v&&t(13,b=v.color),"intensity"in v&&t(14,y=v.intensity),"$$scope"in v&&t(20,r=v.$$scope)},[_,s,o,a,l,c,u,f,d,m,g,h,p,b,y,w,n,x,M,P,r]}class sb extends tt{constructor(e){super(),et(this,e,rb,ib,Ze,{position:1,scale:2,rotation:3,lookAt:4,castShadow:5,receiveShadow:6,frustumCulled:7,renderOrder:8,visible:9,userData:10,dispose:11,viewportAware:12,inViewport:0,color:13,intensity:14,light:15})}get light(){return this.$$.ctx[15]}}function Xc(i){let e,t,n,r,s,o;return e=new wo({props:{object:i[16]}}),n=new xo({props:{object:i[16],position:i[15]}}),s=new es({props:{dispose:i[10],object:i[15]}}),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment),r=ke(),Oe(s.$$.fragment)},m(a,l){Pe(e,a,l),Me(a,t,l),Pe(n,a,l),Me(a,r,l),Pe(s,a,l),o=!0},p(a,l){const c={};l&32768&&(c.position=a[15]),n.$set(c);const u={};l&1024&&(u.dispose=a[10]),l&32768&&(u.object=a[15]),s.$set(u)},i(a){o||(X(e.$$.fragment,a),X(n.$$.fragment,a),X(s.$$.fragment,a),o=!0)},o(a){J(e.$$.fragment,a),J(n.$$.fragment,a),J(s.$$.fragment,a),o=!1},d(a){Re(e,a),a&&ye(t),Re(n,a),a&&ye(r),Re(s,a)}}}function ob(i){let e;const t=i[18].default,n=mt(t,i,i[22],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&4194304)&&_t(n,t,r,r[22],e?gt(t,r[22],s,null):vt(r[22]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function ab(i){let e,t,n,r,s=i[15]&&!(i[15]instanceof ht)&&Xc(i);function o(l){i[19](l)}let a={light:i[1],position:i[2],scale:i[3],rotation:i[4],castShadow:!!i[14],receiveShadow:i[5],frustumCulled:i[6],renderOrder:i[7],visible:i[8],userData:i[9],dispose:i[10],viewportAware:i[11],color:i[12],intensity:i[13],$$slots:{default:[ob]},$$scope:{ctx:i}};return i[0]!==void 0&&(a.inViewport=i[0]),t=new Yf({props:a}),St.push(()=>Yt(t,"inViewport",o)),t.$on("viewportenter",i[20]),t.$on("viewportleave",i[21]),{c(){s&&s.c(),e=ke(),Oe(t.$$.fragment)},m(l,c){s&&s.m(l,c),Me(l,e,c),Pe(t,l,c),r=!0},p(l,[c]){l[15]&&!(l[15]instanceof ht)?s?(s.p(l,c),c&32768&&X(s,1)):(s=Xc(l),s.c(),X(s,1),s.m(e.parentNode,e)):s&&(Tt(),J(s,1,1,()=>{s=null}),Ct());const u={};c&2&&(u.light=l[1]),c&4&&(u.position=l[2]),c&8&&(u.scale=l[3]),c&16&&(u.rotation=l[4]),c&16384&&(u.castShadow=!!l[14]),c&32&&(u.receiveShadow=l[5]),c&64&&(u.frustumCulled=l[6]),c&128&&(u.renderOrder=l[7]),c&256&&(u.visible=l[8]),c&512&&(u.userData=l[9]),c&1024&&(u.dispose=l[10]),c&2048&&(u.viewportAware=l[11]),c&4096&&(u.color=l[12]),c&8192&&(u.intensity=l[13]),c&4194304&&(u.$$scope={dirty:c,ctx:l}),!n&&c&1&&(n=!0,u.inViewport=l[0],Xt(()=>n=!1)),t.$set(u)},i(l){r||(X(s),X(t.$$.fragment,l),r=!0)},o(l){J(s),J(t.$$.fragment,l),r=!1},d(l){s&&s.d(l),l&&ye(e),Re(t,l)}}}function lb(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{receiveShadow:c=void 0}=e,{frustumCulled:u=void 0}=e,{renderOrder:f=void 0}=e,{visible:d=void 0}=e,{userData:m=void 0}=e,{dispose:g=void 0}=e,{viewportAware:h=!1}=e,{inViewport:p=!1}=e,{color:_=void 0}=e,{intensity:b=void 0}=e,{shadow:y=void 0}=e,{target:w=void 0}=e;const x=new X0(_,b),{invalidate:M}=xn(),P=x.target,{start:v,stop:E,started:S}=Zi(()=>{},{autostart:!1,debugFrameloopMessage:"DirectionalLight: tracking target"});Ue(i,S,R=>t(23,n=R));const O=R=>{R&&R instanceof ht&&!n?(t(1,x.target=R,x),v(),M("DirectionalLight: target changed")):(!R||!(R instanceof ht))&&n&&(t(1,x.target=P,x),E(),M("DirectionalLight: target changed"))},F=R=>{if(R){const{mapSize:W=[512,512],camera:{left:Y=-5,bottom:H=-5,right:B=5,top:j=5,near:ne=.5,far:oe=500}={},bias:me=0,radius:be=1}=R===!0?{}:R;x.shadow.mapSize.set(W[0],W[1]),t(1,x.shadow.camera.left=Y,x),t(1,x.shadow.camera.top=j,x),t(1,x.shadow.camera.right=B,x),t(1,x.shadow.camera.bottom=H,x),t(1,x.shadow.camera.near=ne,x),t(1,x.shadow.camera.far=oe,x),t(1,x.shadow.bias=me,x),t(1,x.shadow.radius=be,x)}M("DirectionalLight: shadow changed")};function L(R){p=R,t(0,p)}function I(R){ut.call(this,i,R)}function k(R){ut.call(this,i,R)}return i.$$set=R=>{"position"in R&&t(2,o=R.position),"scale"in R&&t(3,a=R.scale),"rotation"in R&&t(4,l=R.rotation),"receiveShadow"in R&&t(5,c=R.receiveShadow),"frustumCulled"in R&&t(6,u=R.frustumCulled),"renderOrder"in R&&t(7,f=R.renderOrder),"visible"in R&&t(8,d=R.visible),"userData"in R&&t(9,m=R.userData),"dispose"in R&&t(10,g=R.dispose),"viewportAware"in R&&t(11,h=R.viewportAware),"inViewport"in R&&t(0,p=R.inViewport),"color"in R&&t(12,_=R.color),"intensity"in R&&t(13,b=R.intensity),"shadow"in R&&t(14,y=R.shadow),"target"in R&&t(15,w=R.target),"$$scope"in R&&t(22,s=R.$$scope)},i.$$.update=()=>{i.$$.dirty&32768&&O(w),i.$$.dirty&16384&&F(y)},[p,x,o,a,l,c,u,f,d,m,g,h,_,b,y,w,P,S,r,L,I,k,s]}class cb extends tt{constructor(e){super(),et(this,e,lb,ab,Ze,{position:2,scale:3,rotation:4,receiveShadow:5,frustumCulled:6,renderOrder:7,visible:8,userData:9,dispose:10,viewportAware:11,inViewport:0,color:12,intensity:13,shadow:14,target:15,light:1})}get light(){return this.$$.ctx[1]}}function ub(i,e,t){let{object:n}=e,r=n,{interactive:s=!1}=e,{ignorePointer:o=!1}=e;const a=Ti(),{addInteractiveObject:l,removeInteractiveObject:c,addRaycastableObject:u,removeRaycastableObject:f}=yo(),{invalidate:d}=xn(),m=h=>{f(h),c(h),delete vn(h).eventDispatcher},g=(h,p,_)=>{vn(h).eventDispatcher=a,p?(f(h),c(h)):(u(h),_?l(h):c(h))};return Rt(()=>{m(n),d("InteractiveObject: object removed")}),i.$$set=h=>{"object"in h&&t(0,n=h.object),"interactive"in h&&t(1,s=h.interactive),"ignorePointer"in h&&t(2,o=h.ignorePointer)},i.$$.update=()=>{i.$$.dirty&15&&(n!==r?(m(r),g(n,o,s),d("InteractiveObject: object changed"),t(3,r=n)):n===r&&(g(n,o,s),d("InteractiveObject: props changed")))},[n,s,o,r]}class fb extends tt{constructor(e){super(),et(this,e,ub,null,Ze,{object:0,interactive:1,ignorePointer:2})}}function db(i){let e;const t=i[16].default,n=mt(t,i,i[27],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&134217728)&&_t(n,t,r,r[27],e?gt(t,r[27],s,null):vt(r[27]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function hb(i){let e,t,n,r,s;function o(l){i[17](l)}let a={object:i[1],lookAt:i[5],position:i[2],scale:i[3],rotation:i[4],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],visible:i[11],userData:i[12],dispose:i[13],viewportAware:i[6],$$slots:{default:[db]},$$scope:{ctx:i}};return i[0]!==void 0&&(a.inViewport=i[0]),e=new fs({props:a}),St.push(()=>Yt(e,"inViewport",o)),e.$on("viewportenter",i[18]),e.$on("viewportleave",i[19]),r=new fb({props:{object:i[1],interactive:i[14],ignorePointer:i[15]}}),r.$on("click",i[20]),r.$on("contextmenu",i[21]),r.$on("pointerup",i[22]),r.$on("pointerdown",i[23]),r.$on("pointerenter",i[24]),r.$on("pointerleave",i[25]),r.$on("pointermove",i[26]),{c(){Oe(e.$$.fragment),n=ke(),Oe(r.$$.fragment)},m(l,c){Pe(e,l,c),Me(l,n,c),Pe(r,l,c),s=!0},p(l,[c]){const u={};c&2&&(u.object=l[1]),c&32&&(u.lookAt=l[5]),c&4&&(u.position=l[2]),c&8&&(u.scale=l[3]),c&16&&(u.rotation=l[4]),c&128&&(u.castShadow=l[7]),c&256&&(u.receiveShadow=l[8]),c&512&&(u.frustumCulled=l[9]),c&1024&&(u.renderOrder=l[10]),c&2048&&(u.visible=l[11]),c&4096&&(u.userData=l[12]),c&8192&&(u.dispose=l[13]),c&64&&(u.viewportAware=l[6]),c&134217728&&(u.$$scope={dirty:c,ctx:l}),!t&&c&1&&(t=!0,u.inViewport=l[0],Xt(()=>t=!1)),e.$set(u);const f={};c&2&&(f.object=l[1]),c&16384&&(f.interactive=l[14]),c&32768&&(f.ignorePointer=l[15]),r.$set(f)},i(l){s||(X(e.$$.fragment,l),X(r.$$.fragment,l),s=!0)},o(l){J(e.$$.fragment,l),J(r.$$.fragment,l),s=!1},d(l){Re(e,l),l&&ye(n),Re(r,l)}}}function pb(i,e,t){let{$$slots:n={},$$scope:r}=e,{mesh:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{viewportAware:u=!1}=e,{inViewport:f=!1}=e,{castShadow:d=void 0}=e,{receiveShadow:m=void 0}=e,{frustumCulled:g=void 0}=e,{renderOrder:h=void 0}=e,{visible:p=void 0}=e,{userData:_=void 0}=e,{dispose:b=void 0}=e,{interactive:y=!1}=e,{ignorePointer:w=!1}=e;function x(k){f=k,t(0,f)}function M(k){ut.call(this,i,k)}function P(k){ut.call(this,i,k)}function v(k){ut.call(this,i,k)}function E(k){ut.call(this,i,k)}function S(k){ut.call(this,i,k)}function O(k){ut.call(this,i,k)}function F(k){ut.call(this,i,k)}function L(k){ut.call(this,i,k)}function I(k){ut.call(this,i,k)}return i.$$set=k=>{"mesh"in k&&t(1,s=k.mesh),"position"in k&&t(2,o=k.position),"scale"in k&&t(3,a=k.scale),"rotation"in k&&t(4,l=k.rotation),"lookAt"in k&&t(5,c=k.lookAt),"viewportAware"in k&&t(6,u=k.viewportAware),"inViewport"in k&&t(0,f=k.inViewport),"castShadow"in k&&t(7,d=k.castShadow),"receiveShadow"in k&&t(8,m=k.receiveShadow),"frustumCulled"in k&&t(9,g=k.frustumCulled),"renderOrder"in k&&t(10,h=k.renderOrder),"visible"in k&&t(11,p=k.visible),"userData"in k&&t(12,_=k.userData),"dispose"in k&&t(13,b=k.dispose),"interactive"in k&&t(14,y=k.interactive),"ignorePointer"in k&&t(15,w=k.ignorePointer),"$$scope"in k&&t(27,r=k.$$scope)},[f,s,o,a,l,c,u,d,m,g,h,p,_,b,y,w,n,x,M,P,v,E,S,O,F,L,I,r]}class ts extends tt{constructor(e){super(),et(this,e,pb,hb,Ze,{mesh:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,interactive:14,ignorePointer:15})}}const mb=(i,e)=>{let t=i;return{onChange:(r,s)=>{(e&&!e(r,t)||!e&&r!==t)&&(s(r,t),t=r)}}};function Yc(i){let e,t,n;function r(o){i[24](o)}let s={mesh:i[17],castShadow:i[5],receiveShadow:i[6],frustumCulled:void 0,renderOrder:i[7],visible:i[8],userData:i[9],dispose:i[10],interactive:i[11],ignorePointer:i[12],viewportAware:i[4]};return i[0]!==void 0&&(s.inViewport=i[0]),e=new ts({props:s}),St.push(()=>Yt(e,"inViewport",r)),e.$on("click",i[20]),e.$on("contextmenu",i[20]),e.$on("pointerup",i[20]),e.$on("pointerdown",i[20]),e.$on("pointerenter",i[20]),e.$on("pointerleave",i[20]),e.$on("pointermove",i[20]),e.$on("viewportenter",i[25]),e.$on("viewportleave",i[26]),{c(){Oe(e.$$.fragment)},m(o,a){Pe(e,o,a),n=!0},p(o,a){const l={};a[0]&131072&&(l.mesh=o[17]),a[0]&32&&(l.castShadow=o[5]),a[0]&64&&(l.receiveShadow=o[6]),a[0]&128&&(l.renderOrder=o[7]),a[0]&256&&(l.visible=o[8]),a[0]&512&&(l.userData=o[9]),a[0]&1024&&(l.dispose=o[10]),a[0]&2048&&(l.interactive=o[11]),a[0]&4096&&(l.ignorePointer=o[12]),a[0]&16&&(l.viewportAware=o[4]),!t&&a[0]&1&&(t=!0,l.inViewport=o[0],Xt(()=>t=!1)),e.$set(l)},i(o){n||(X(e.$$.fragment,o),n=!0)},o(o){J(e.$$.fragment,o),n=!1},d(o){Re(e,o)}}}function gb(i){let e=i[17].uuid,t,n,r=Yc(i);const s=i[23].default,o=mt(s,i,i[27],null);return{c(){r.c(),t=ke(),o&&o.c()},m(a,l){r.m(a,l),Me(a,t,l),o&&o.m(a,l),n=!0},p(a,l){l[0]&131072&&Ze(e,e=a[17].uuid)?(Tt(),J(r,1,1,ot),Ct(),r=Yc(a),r.c(),X(r,1),r.m(t.parentNode,t)):r.p(a,l),o&&o.p&&(!n||l[0]&134217728)&&_t(o,s,a,a[27],n?gt(s,a[27],l,null):vt(a[27]),null)},i(a){n||(X(r),X(o,a),n=!0)},o(a){J(r),J(o,a),n=!1},d(a){r.d(a),a&&ye(t),o&&o.d(a)}}}function _b(i){let e,t,n,r,s,o;return e=new es({props:{dispose:i[10],object:i[14]}}),n=new es({props:{dispose:i[10],object:i[15]}}),s=new fs({props:{object:i[18],position:i[1],scale:i[2],rotation:i[3],lookAt:i[13],$$slots:{default:[gb]},$$scope:{ctx:i}}}),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment),r=ke(),Oe(s.$$.fragment)},m(a,l){Pe(e,a,l),Me(a,t,l),Pe(n,a,l),Me(a,r,l),Pe(s,a,l),o=!0},p(a,l){const c={};l[0]&1024&&(c.dispose=a[10]),l[0]&16384&&(c.object=a[14]),e.$set(c);const u={};l[0]&1024&&(u.dispose=a[10]),l[0]&32768&&(u.object=a[15]),n.$set(u);const f={};l[0]&2&&(f.position=a[1]),l[0]&4&&(f.scale=a[2]),l[0]&8&&(f.rotation=a[3]),l[0]&8192&&(f.lookAt=a[13]),l[0]&134356977&&(f.$$scope={dirty:l,ctx:a}),s.$set(f)},i(a){o||(X(e.$$.fragment,a),X(n.$$.fragment,a),X(s.$$.fragment,a),o=!0)},o(a){J(e.$$.fragment,a),J(n.$$.fragment,a),J(s.$$.fragment,a),o=!1},d(a){Re(e,a),a&&ye(t),Re(n,a),a&&ye(r),Re(s,a)}}}const Zf=new ht;Zf.scale.set(0,0,0);const Zc={matrix:Zf.matrix,color:null},vb=new yt().fromArray(new Array(16).fill(0)),fa=new qe(16777215),Kf="threlte-instanced-mesh-context",bb=i=>Bn(Kf+i);function wb(i,e,t){let n,r=ot,s=()=>(r(),r=lo(L,K=>t(17,n=K)),L),o;i.$$.on_destroy.push(()=>r());let{$$slots:a={},$$scope:l}=e,{position:c=void 0}=e,{scale:u=void 0}=e,{rotation:f=void 0}=e,{viewportAware:d=!1}=e,{inViewport:m=!1}=e,{castShadow:g=void 0}=e,{receiveShadow:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:b=void 0}=e,{dispose:y=void 0}=e,{interactive:w=!1}=e,{ignorePointer:x=!1}=e,{lookAt:M=void 0}=e,{geometry:P}=e,{material:v}=e,{count:E=void 0}=e,{id:S=""}=e;const{onChange:O}=mb(v),F=K=>K===void 0,L=ft(new _r(P,v,F(E)?0:E));s();const I=new ht,k=[],{invalidate:R}=xn(),W=(K,ae)=>{const He=k.findIndex(Fe=>Fe===K);if(He===-1){console.warn("Instanced Mesh: Instance not found");return}ae(He)},{start:Y,stop:H,started:B}=Zi(()=>{n.dispose(),Kt(L,n=new _r(P,v,k.length),n),k.forEach((K,ae)=>{be(K,ae),K.color?n.setColorAt(ae,K.color):n.setColorAt(ae,fa)}),Kt(L,n.instanceMatrix.needsUpdate=!0,n),n.instanceColor&&Kt(L,n.instanceColor.needsUpdate=!0,n),H()},{autostart:!1,debugFrameloopMessage:"Instanced Mesh: auto instance count change queued"});Ue(i,B,K=>t(29,o=K));const j=K=>{if(F(E))k.push(K),o||Y();else{const ae=k.findIndex(He=>He===Zc);ae!==-1?k[ae]=K:k.push(K),k.length>E&&console.warn("Instanced Mesh: More instances requested than allocated, increase count on <")}oe(K),R("Instanced Mesh: Instance added")},ne=K=>{if(F(E)){const ae=k.findIndex(He=>He===K);k.splice(ae,1),o||Y()}else{me(K);const ae=k.findIndex(He=>He===K);ae>=E?k.splice(ae,1):k.splice(ae,1,Zc)}R("Instanced Mesh: Instance removed")},oe=K=>{K.color||W(K,ae=>{n.setColorAt(ae,fa),n.instanceColor&&Kt(L,n.instanceColor.needsUpdate=!0,n)})},me=K=>{W(K,ae=>{n.setMatrixAt(ae,vb),Kt(L,n.instanceMatrix.needsUpdate=!0,n),R("Instanced Mesh: instance matrix resetted")})},be=(K,ae)=>{n.setMatrixAt(ae,K.matrix),Kt(L,n.instanceMatrix.needsUpdate=!0,n),R("Instanced Mesh: instance matrix set")},V=K=>{W(K,ae=>{be(K,ae)})},ce=K=>{W(K,ae=>{var He;n.setColorAt(ae,(He=K.color)!=null?He:fa),n.instanceColor&&Kt(L,n.instanceColor.needsUpdate=!0,n),R("Instanced Mesh: instance color set")})};Pn(Kf+S,{registerInstance:j,removeInstance:ne,setInstanceMatrix:V,setInstanceColor:ce,parentObject:I});const Se=K=>{if(K.detail.instanceId===void 0)return;const ae=k[K.detail.instanceId];ae&&ae.pointerEventDispatcher&&ae.pointerEventDispatcher(K.type,K.detail)};function ue(K){m=K,t(0,m)}function ge(K){ut.call(this,i,K)}function je(K){ut.call(this,i,K)}return i.$$set=K=>{"position"in K&&t(1,c=K.position),"scale"in K&&t(2,u=K.scale),"rotation"in K&&t(3,f=K.rotation),"viewportAware"in K&&t(4,d=K.viewportAware),"inViewport"in K&&t(0,m=K.inViewport),"castShadow"in K&&t(5,g=K.castShadow),"receiveShadow"in K&&t(6,h=K.receiveShadow),"renderOrder"in K&&t(7,p=K.renderOrder),"visible"in K&&t(8,_=K.visible),"userData"in K&&t(9,b=K.userData),"dispose"in K&&t(10,y=K.dispose),"interactive"in K&&t(11,w=K.interactive),"ignorePointer"in K&&t(12,x=K.ignorePointer),"lookAt"in K&&t(13,M=K.lookAt),"geometry"in K&&t(14,P=K.geometry),"material"in K&&t(15,v=K.material),"count"in K&&t(21,E=K.count),"id"in K&&t(22,S=K.id),"$$scope"in K&&t(27,l=K.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&32768&&O(v,K=>{Kt(L,n.material=K,n)})},[m,c,u,f,d,g,h,p,_,b,y,w,x,M,P,v,L,n,I,B,Se,E,S,a,ue,ge,je,l]}class Jf extends tt{constructor(e){super(),et(this,e,wb,_b,Ze,{position:1,scale:2,rotation:3,viewportAware:4,inViewport:0,castShadow:5,receiveShadow:6,renderOrder:7,visible:8,userData:9,dispose:10,interactive:11,ignorePointer:12,lookAt:13,geometry:14,material:15,count:21,id:22,instancedMesh:16},null,[-1,-1])}get instancedMesh(){return this.$$.ctx[16]}}function yb(i){let e;const t=i[8].default,n=mt(t,i,i[9],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&512)&&_t(n,t,r,r[9],e?gt(t,r[9],s,null):vt(r[9]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function xb(i){let e,t,n,r;return e=new wo({props:{object:i[4],$$slots:{default:[yb]},$$scope:{ctx:i}}}),n=new xo({props:{object:i[4],position:i[0],scale:i[1],rotation:i[2],lookAt:i[3]}}),n.$on("transform",i[5]),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment)},m(s,o){Pe(e,s,o),Me(s,t,o),Pe(n,s,o),r=!0},p(s,[o]){const a={};o&512&&(a.$$scope={dirty:o,ctx:s}),e.$set(a);const l={};o&1&&(l.position=s[0]),o&2&&(l.scale=s[1]),o&4&&(l.rotation=s[2]),o&8&&(l.lookAt=s[3]),n.$set(l)},i(s){r||(X(e.$$.fragment,s),X(n.$$.fragment,s),r=!0)},o(s){J(e.$$.fragment,s),J(n.$$.fragment,s),r=!1},d(s){Re(e,s),s&&ye(t),Re(n,s)}}}function Mb(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{color:c=void 0}=e,{id:u=""}=e;const{registerInstance:f,setInstanceMatrix:d,removeInstance:m,setInstanceColor:g,parentObject:h}=bb(u),p=new ht,_=new yt,b=Ti(),y=()=>{var F;return h.uuid===((F=p.parent)==null?void 0:F.uuid)},w=F=>F!==void 0?F instanceof qe?F:new qe(F):null,x={color:w(c),matrix:p.matrix,pointerEventDispatcher:b},M=F=>{x.color=w(F),g(x)},P=()=>{let F=p.parent;const L=[];for(;F&&h&&F.uuid!==h.uuid&&(L.push(F),!!F.parent);)F=F.parent;p.updateMatrix(),_.copy(p.matrix),L.forEach(I=>{I.updateMatrix(),_.premultiply(I.matrix)}),x.matrix=_},v=()=>{p.updateMatrix(),x.matrix=p.matrix},E=()=>{v(),d(x)},{start:S}=Zi(()=>{P(),d(x)},{autostart:!1,debugFrameloopMessage:"Instance: tracking non-direct child instance"});f(x),ss(()=>{y()?E():S(),M(c)});const O=()=>{y()&&E()};return Rt(()=>{m(x)}),i.$$set=F=>{"position"in F&&t(0,s=F.position),"scale"in F&&t(1,o=F.scale),"rotation"in F&&t(2,a=F.rotation),"lookAt"in F&&t(3,l=F.lookAt),"color"in F&&t(6,c=F.color),"id"in F&&t(7,u=F.id),"$$scope"in F&&t(9,r=F.$$scope)},i.$$.update=()=>{i.$$.dirty&64&&M(c)},[s,o,a,l,p,O,c,u,n,r]}class Sb extends tt{constructor(e){super(),et(this,e,Mb,xb,Ze,{position:0,scale:1,rotation:2,lookAt:3,color:6,id:7})}}function Eb(i){let e;const t=i[14].default,n=mt(t,i,i[18],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&262144)&&_t(n,t,r,r[18],e?gt(t,r[18],s,null):vt(r[18]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Ab(i){let e,t,n;function r(o){i[15](o)}let s={object:i[13],position:i[1],scale:i[2],rotation:i[3],lookAt:i[4],frustumCulled:i[8],renderOrder:i[9],visible:i[10],userData:i[11],dispose:i[12],castShadow:i[6],receiveShadow:i[7],viewportAware:i[5],$$slots:{default:[Eb]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new fs({props:s}),St.push(()=>Yt(e,"inViewport",r)),e.$on("viewportenter",i[16]),e.$on("viewportleave",i[17]),{c(){Oe(e.$$.fragment)},m(o,a){Pe(e,o,a),n=!0},p(o,[a]){const l={};a&2&&(l.position=o[1]),a&4&&(l.scale=o[2]),a&8&&(l.rotation=o[3]),a&16&&(l.lookAt=o[4]),a&256&&(l.frustumCulled=o[8]),a&512&&(l.renderOrder=o[9]),a&1024&&(l.visible=o[10]),a&2048&&(l.userData=o[11]),a&4096&&(l.dispose=o[12]),a&64&&(l.castShadow=o[6]),a&128&&(l.receiveShadow=o[7]),a&32&&(l.viewportAware=o[5]),a&262144&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Xt(()=>t=!1)),e.$set(l)},i(o){n||(X(e.$$.fragment,o),n=!0)},o(o){J(e.$$.fragment,o),n=!1},d(o){Re(e,o)}}}function Tb(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{viewportAware:c=!1}=e,{inViewport:u=!1}=e,{castShadow:f=void 0}=e,{receiveShadow:d=void 0}=e,{frustumCulled:m=void 0}=e,{renderOrder:g=void 0}=e,{visible:h=void 0}=e,{userData:p=void 0}=e,{dispose:_=void 0}=e;const b=new qr;function y(M){u=M,t(0,u)}function w(M){ut.call(this,i,M)}function x(M){ut.call(this,i,M)}return i.$$set=M=>{"position"in M&&t(1,s=M.position),"scale"in M&&t(2,o=M.scale),"rotation"in M&&t(3,a=M.rotation),"lookAt"in M&&t(4,l=M.lookAt),"viewportAware"in M&&t(5,c=M.viewportAware),"inViewport"in M&&t(0,u=M.inViewport),"castShadow"in M&&t(6,f=M.castShadow),"receiveShadow"in M&&t(7,d=M.receiveShadow),"frustumCulled"in M&&t(8,m=M.frustumCulled),"renderOrder"in M&&t(9,g=M.renderOrder),"visible"in M&&t(10,h=M.visible),"userData"in M&&t(11,p=M.userData),"dispose"in M&&t(12,_=M.dispose),"$$scope"in M&&t(18,r=M.$$scope)},[u,s,o,a,l,c,f,d,m,g,h,p,_,b,n,y,w,x,r]}class Cb extends tt{constructor(e){super(),et(this,e,Tb,Ab,Ze,{position:1,scale:2,rotation:3,lookAt:4,viewportAware:5,inViewport:0,castShadow:6,receiveShadow:7,frustumCulled:8,renderOrder:9,visible:10,userData:11,dispose:12,group:13})}get group(){return this.$$.ctx[13]}}Xv(Cc,()=>new Cc);function Lb(i){const e=i-1;return e*e*e+1}function Kc(i){return-.5*(Math.cos(Math.PI*i)-1)}function Jc(i){return Object.prototype.toString.call(i)==="[object Date]"}function La(i,e){if(i===e||i!==i)return()=>i;const t=typeof i;if(t!==typeof e||Array.isArray(i)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(i)){const n=e.map((r,s)=>La(i[s],r));return r=>n.map(s=>s(r))}if(t==="object"){if(!i||!e)throw new Error("Object cannot be null");if(Jc(i)&&Jc(e)){i=i.getTime(),e=e.getTime();const s=e-i;return o=>new Date(i+o*s)}const n=Object.keys(e),r={};return n.forEach(s=>{r[s]=La(i[s],e[s])}),s=>{const o={};return n.forEach(a=>{o[a]=r[a](s)}),o}}if(t==="number"){const n=e-i;return r=>i+r*n}throw new Error(`Cannot interpolate ${t} values`)}function Qc(i,e={}){const t=ft(i);let n,r=i;function s(o,a){if(i==null)return t.set(i=o),Promise.resolve();r=o;let l=n,c=!1,{delay:u=0,duration:f=400,easing:d=rs,interpolate:m=La}=xr(xr({},e),a);if(f===0)return l&&(l.abort(),l=null),t.set(i=r),Promise.resolve();const g=co()+u;let h;return n=uo(p=>{if(p<g)return!0;c||(h=m(i,o),typeof f=="function"&&(f=f(i,o)),c=!0),l&&(l.abort(),l=null);const _=p-g;return _>f?(t.set(i=o),!1):(t.set(i=h(d(_/f))),!0)}),n.promise}return{set:s,update:(o,a)=>s(o(r,i),a),subscribe:t.subscribe}}function $c(i,{delay:e=0,duration:t=400,easing:n=rs}={}){const r=+getComputedStyle(i).opacity;return{delay:e,duration:t,easing:n,css:s=>`opacity: ${s*r}`}}function eu(i,{delay:e=0,duration:t=400,easing:n=Lb,x:r=0,y:s=0,opacity:o=0}={}){const a=getComputedStyle(i),l=+a.opacity,c=a.transform==="none"?"":a.transform,u=l*(1-o);return{delay:e,duration:t,easing:n,css:(f,d)=>`
			transform: ${c} translate(${(1-f)*r}px, ${(1-f)*s}px);
			opacity: ${l-u*d}`}}const Db=()=>{const i=qi();return{hasEventListeners:t=>{const n=i.$$.callbacks;return t in n&&n[t].length>0}}},ds=new G,Ja=new G,Pb=new G,Rb=(i,e,t)=>{const n=ds.setFromMatrixPosition(i.matrixWorld);n.project(e);const r=t.width/2,s=t.height/2;return[n.x*r+r,-(n.y*s)+s]},Ib=(i,e)=>{const t=ds.setFromMatrixPosition(i.matrixWorld),n=Ja.setFromMatrixPosition(e.matrixWorld),r=t.sub(n),s=e.getWorldDirection(Pb);return r.angleTo(s)>Math.PI/2},Ob=(i,e,t,n)=>{const r=ds.setFromMatrixPosition(i.matrixWorld),s=r.clone();s.project(e),t.setFromCamera(s,e);const o=t.intersectObjects(n,!0);if(o.length){const a=o[0].distance;return r.distanceTo(t.ray.origin)<a}return!0},kb=(i,e)=>{if(e instanceof Yi)return e.zoom;if(e instanceof qt){const t=ds.setFromMatrixPosition(i.matrixWorld),n=Ja.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(n),o=2*Math.tan(r/2)*s;return 1/o}else return 1},Nb=(i,e,t)=>{if(e instanceof qt||e instanceof Yi){const n=ds.setFromMatrixPosition(i.matrixWorld),r=Ja.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*s+a)}},Da=i=>Math.abs(i)<1e-10?0:i,Qf=(i,e,t="")=>{let n="matrix3d(";for(let r=0;r!==16;r++)n+=Da(e[r]*i.elements[r])+(r!==15?",":")");return t+n},Fb=(i=>e=>Qf(e,i))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),zb=(i=>(e,t)=>Qf(e,i(t),"translate(-50%,-50%)"))(i=>[1/i,1/i,1/i,1,-1/i,-1/i,-1/i,-1,1/i,1/i,1/i,1,1,1,1,1]),Ub=i=>i.split(/(?=[A-Z])/).join("-").toLowerCase(),Nn=i=>Object.entries(i).filter(([e,t])=>!!t).map(([e,t])=>`${Ub(e)}: ${t}`).join("; "),hn=(i,e)=>{i.update(t=>({...t,...e}))},Gb=i=>({}),tu=i=>({});function Bb(i){let e;const t=i[44].threlte,n=mt(t,i,i[53],tu);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&_t(n,t,r,r[53],e?gt(t,r[53],s,Gb):vt(r[53]),tu)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Vb(i){let e=i[8],t,n,r=i[8]&&da(i);return{c(){r&&r.c(),t=$t()},m(s,o){r&&r.m(s,o),Me(s,t,o),n=!0},p(s,o){s[8]?e?Ze(e,s[8])?(r.d(1),r=da(s),r.c(),r.m(t.parentNode,t)):r.p(s,o):(r=da(s),r.c(),r.m(t.parentNode,t)):e&&(r.d(1),r=null),e=s[8]},i(s){n||(X(r),n=!0)},o(s){J(r),n=!1},d(s){s&&ye(t),r&&r.d(s)}}}function Hb(i){let e=i[8],t,n,r=i[8]&&ha(i);return{c(){r&&r.c(),t=$t()},m(s,o){r&&r.m(s,o),Me(s,t,o),n=!0},p(s,o){s[8]?e?Ze(e,s[8])?(r.d(1),r=ha(s),r.c(),r.m(t.parentNode,t)):r.p(s,o):(r=ha(s),r.c(),r.m(t.parentNode,t)):e&&(r.d(1),r=null),e=s[8]},i(s){n||(X(r),n=!0)},o(s){J(r),n=!1},d(s){s&&ye(t),r&&r.d(s)}}}function nu(i){let e;const t=i[44].default,n=mt(t,i,i[53],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&_t(n,t,r,r[53],e?gt(t,r[53],s,null):vt(r[53]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function da(i){let e,t,n,r,s,o,a,l=i[13]&&nu(i),c=[{style:r=Nn(i[17])}],u={};for(let f=0;f<c.length;f+=1)u=xr(u,c[f]);return{c(){e=Ce(i[8]),t=Ce("div"),l&&l.c(),Q(t,"style",n=Nn(i[18])),Sr(e,u)},m(f,d){Me(f,e,d),le(e,t),l&&l.m(t,null),i[52](e),s=!0,o||(a=[yi(i[29].call(null,e)),yi(i[28].call(null,e))],o=!0)},p(f,d){f[13]?l?(l.p(f,d),d[0]&8192&&X(l,1)):(l=nu(f),l.c(),X(l,1),l.m(t,null)):l&&(Tt(),J(l,1,1,()=>{l=null}),Ct()),(!s||d[0]&262144&&n!==(n=Nn(f[18])))&&Q(t,"style",n),Sr(e,u=za(c,[(!s||d[0]&131072&&r!==(r=Nn(f[17])))&&{style:r}]))},i(f){s||(X(l),s=!0)},o(f){J(l),s=!1},d(f){f&&ye(e),l&&l.d(),i[52](null),o=!1,Gt(a)}}}function iu(i){let e;const t=i[44].default,n=mt(t,i,i[53],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&_t(n,t,r,r[53],e?gt(t,r[53],s,null):vt(r[53]),null)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function ha(i){let e,t,n,r,s,o,a,l,c,u=i[13]&&iu(i),f=[{style:o=Nn(i[14])}],d={};for(let m=0;m<f.length;m+=1)d=xr(d,f[m]);return{c(){e=Ce(i[8]),t=Ce("div"),n=Ce("div"),u&&u.c(),Q(n,"style",r=Nn(i[16])),Q(t,"style",s=Nn(i[15])),Sr(e,d)},m(m,g){Me(m,e,g),le(e,t),le(t,n),u&&u.m(n,null),i[49](n),i[50](t),i[51](e),a=!0,l||(c=yi(i[29].call(null,e)),l=!0)},p(m,g){m[13]?u?(u.p(m,g),g[0]&8192&&X(u,1)):(u=iu(m),u.c(),X(u,1),u.m(n,null)):u&&(Tt(),J(u,1,1,()=>{u=null}),Ct()),(!a||g[0]&65536&&r!==(r=Nn(m[16])))&&Q(n,"style",r),(!a||g[0]&32768&&s!==(s=Nn(m[15])))&&Q(t,"style",s),Sr(e,d=za(f,[(!a||g[0]&16384&&o!==(o=Nn(m[14])))&&{style:o}]))},i(m){a||(X(u),a=!0)},o(m){J(u),a=!1},d(m){m&&ye(e),u&&u.d(),i[49](null),i[50](null),i[51](null),l=!1,c()}}}function Wb(i){let e,t,n,r,s,o,a,l;function c(h){i[45](h)}function u(h){i[46](h)}let f={position:i[1],scale:i[2],rotation:i[3],lookAt:i[4],viewportAware:i[5],dispose:i[6],$$slots:{default:[Bb]},$$scope:{ctx:i}};i[9]!==void 0&&(f.group=i[9]),i[0]!==void 0&&(f.inViewport=i[0]),e=new Cb({props:f}),St.push(()=>Yt(e,"group",c)),St.push(()=>Yt(e,"inViewport",u)),e.$on("viewportenter",i[47]),e.$on("viewportleave",i[48]);const d=[Hb,Vb],m=[];function g(h,p){return h[7]?0:1}return s=g(i),o=m[s]=d[s](i),{c(){Oe(e.$$.fragment),r=ke(),o.c(),a=$t()},m(h,p){Pe(e,h,p),Me(h,r,p),m[s].m(h,p),Me(h,a,p),l=!0},p(h,p){const _={};p[0]&2&&(_.position=h[1]),p[0]&4&&(_.scale=h[2]),p[0]&8&&(_.rotation=h[3]),p[0]&16&&(_.lookAt=h[4]),p[0]&32&&(_.viewportAware=h[5]),p[0]&64&&(_.dispose=h[6]),p[1]&4194304&&(_.$$scope={dirty:p,ctx:h}),!t&&p[0]&512&&(t=!0,_.group=h[9],Xt(()=>t=!1)),!n&&p[0]&1&&(n=!0,_.inViewport=h[0],Xt(()=>n=!1)),e.$set(_);let b=s;s=g(h),s===b?m[s].p(h,p):(Tt(),J(m[b],1,1,()=>{m[b]=null}),Ct(),o=m[s],o?o.p(h,p):(o=m[s]=d[s](h),o.c()),X(o,1),o.m(a.parentNode,a))},i(h){l||(X(e.$$.fragment,h),X(o),l=!0)},o(h){J(e.$$.fragment,h),J(o),l=!1},d(h){Re(e,h),h&&ye(r),m[s].d(h),h&&ye(a)}}}function jb(i,e,t){let n,r,s,o,a,l,c,u,f,{$$slots:d={},$$scope:m}=e,{position:g=void 0}=e,{scale:h=void 0}=e,{rotation:p=void 0}=e,{lookAt:_=void 0}=e,{viewportAware:b=!1}=e,{inViewport:y=!1}=e,{dispose:w=!1}=e,{transform:x=!1}=e,{calculatePosition:M=Rb}=e,{eps:P=.001}=e,{occlude:v=!1}=e,{zIndexRange:E=[16777271,0]}=e,{sprite:S=!1}=e,{pointerEvents:O="auto"}=e,{center:F=!1}=e,{fullscreen:L=!1}=e,{distanceFactor:I=void 0}=e,{as:k="div"}=e,{portal:R=void 0}=e;const W=Ti();let Y;const{renderer:H,camera:B,scene:j,size:ne}=xn();Ue(i,B,z=>t(57,r=z)),Ue(i,ne,z=>t(41,n=z));const oe=()=>{if(!(r instanceof qt)&&!(r instanceof Yi))throw new Error("Only PerspectiveCamera or OrthographicCamera supported for component <HTML>");return r},{raycaster:me}=yo();let be=[0,0],V=0,{visible:ce=!0}=e,Se=document.createElement(k),ue,ge;const{hasEventListeners:je}=Db();let K=typeof v=="boolean"&&v===!0?[j]:Array.isArray(v)?v:void 0;const ae=Ln(ne,z=>z.width/2);Ue(i,ae,z=>t(43,o=z));const He=Ln(ne,z=>z.height/2);Ue(i,He,z=>t(42,s=z));let Fe={common:{el:ft({})},transform:{el:ft({position:"absolute",top:"0",left:"0",pointerEvents:"none",overflow:"hidden",display:"block",width:`${n.width}px`,height:`${n.height}px`}),outerRef:ft({position:"absolute",top:"0",left:"0",width:`${n.width}px`,height:`${n.height}px`,transformStyle:"preserve-3d",pointerEvents:"none"}),innerRef:ft({position:"absolute",pointerEvents:O})},noTransform:{el:ft({}),div:ft({position:"absolute",transform:F?"translate3d(-50%,-50%,0)":"none",top:L?`${-s}px`:void 0,left:L?`${-o}px`:void 0,width:L?`${n.width}px`:void 0,height:L?`${n.height}px`:void 0})}};const dt=Ln([Fe.transform.el,Fe.common.el],([z,Te])=>({...z,...Te}));Ue(i,dt,z=>t(14,a=z));const xt=Ln(Fe.transform.outerRef,z=>z);Ue(i,xt,z=>t(15,l=z));const bt=Ln(Fe.transform.innerRef,z=>z);Ue(i,bt,z=>t(16,c=z));const Ie=Ln(Fe.noTransform.el,z=>z);Ue(i,Ie,z=>t(17,u=z));const Le=Ln(Fe.noTransform.div,z=>z);Ue(i,Le,z=>t(18,f=z));const it=()=>{if(!Y)return!0;let z=!0,Te=Y.parent;e:for(;Te;){if("visible"in Te&&!Te.visible){z=!1;break e}Te=Te.parent}return z};let D=it();Zi(async()=>{if(!Y)return;t(13,D=it());const z=oe();z.updateMatrixWorld(),Y.updateWorldMatrix(!0,!1);const Te=x?be:M(Y,z,n);if(x||Math.abs(V-z.zoom)>P||Math.abs(be[0]-Te[0])>P||Math.abs(be[1]-Te[1])>P){const Xe=Ib(Y,z),lt=ce;if(K){const U=Ob(Y,z,me,K);t(30,ce=U&&!Xe)}else t(30,ce=!Xe);if(lt!==ce&&(je("visibilitychange")?W("visibilitychange",ce):hn(Fe.common.el,{display:ce?"block":"none"})),hn(Fe.common.el,{zIndex:`${Nb(Y,z,E)}`}),x){const U=z.projectionMatrix.elements[5]*s,{isOrthographicCamera:pe,top:ee,left:Ee,bottom:xe,right:Qe}=z;let ct=Y.matrixWorld;if(S&&(ct=z.matrixWorldInverse.clone().transpose().copyPosition(ct).scale(Y.scale),ct.elements[3]=ct.elements[7]=ct.elements[11]=0,ct.elements[15]=1),hn(Fe.transform.el,{perspective:pe?"":`${U}px`}),ue&&ge){const wt=pe?`scale(${U}) translate(${Da(-(Qe+Ee)/2)}px,${Da((ee+xe)/2)}px)`:`translateZ(${U}px)`,en=Fb(z.matrixWorldInverse);hn(Fe.transform.outerRef,{transform:`${wt}${en}translate(${o}px, ${s}px)`}),hn(Fe.transform.innerRef,{transform:zb(ct,1/((I||10)/400))})}}else{const U=I===void 0?1:kb(Y,z)*I;hn(Fe.noTransform.el,{transform:`translate3d(${Te[0]}px, ${Te[1]}px, 0) scale(${U})`})}be=Te,V=z.zoom}},{debugFrameloopMessage:"HTML: tracking parent"});const A=z=>{if(!Y||x)return;j.updateMatrixWorld();const Te=M(Y,r,n);hn(Fe.noTransform.el,{position:"absolute",top:"0",left:"0",transform:`translate3d(${Te[0]}px, ${Te[1]}px, 0)`,transformOrigin:"0 0"})},$=z=>{if(!H){console.warn("HTML: renderer is undefined. Is this component a child to <Canvas>?");return}const Te=R!=null?R:H.domElement.parentElement;if(!Te){console.warn("HTML: target is undefined.");return}return Te.appendChild(z),{destroy:()=>{!z.parentNode||z.parentNode.removeChild(z)}}};function se(z){Y=z,t(9,Y)}function fe(z){y=z,t(0,y)}function ve(z){ut.call(this,i,z)}function Ge(z){ut.call(this,i,z)}function T(z){St[z?"unshift":"push"](()=>{ge=z,t(12,ge)})}function re(z){St[z?"unshift":"push"](()=>{ue=z,t(11,ue)})}function de(z){St[z?"unshift":"push"](()=>{Se=z,t(10,Se)})}function we(z){St[z?"unshift":"push"](()=>{Se=z,t(10,Se)})}return i.$$set=z=>{"position"in z&&t(1,g=z.position),"scale"in z&&t(2,h=z.scale),"rotation"in z&&t(3,p=z.rotation),"lookAt"in z&&t(4,_=z.lookAt),"viewportAware"in z&&t(5,b=z.viewportAware),"inViewport"in z&&t(0,y=z.inViewport),"dispose"in z&&t(6,w=z.dispose),"transform"in z&&t(7,x=z.transform),"calculatePosition"in z&&t(31,M=z.calculatePosition),"eps"in z&&t(32,P=z.eps),"occlude"in z&&t(33,v=z.occlude),"zIndexRange"in z&&t(34,E=z.zIndexRange),"sprite"in z&&t(35,S=z.sprite),"pointerEvents"in z&&t(36,O=z.pointerEvents),"center"in z&&t(37,F=z.center),"fullscreen"in z&&t(38,L=z.fullscreen),"distanceFactor"in z&&t(39,I=z.distanceFactor),"as"in z&&t(8,k=z.as),"portal"in z&&t(40,R=z.portal),"visible"in z&&t(30,ce=z.visible),"$$scope"in z&&t(53,m=z.$$scope)},i.$$.update=()=>{i.$$.dirty[1]&4&&(K=typeof v=="boolean"&&v===!0?[j]:Array.isArray(v)?v:void 0),i.$$.dirty[1]&1024&&hn(Fe.transform.el,{width:`${n.width}px`,height:`${n.height}px`}),i.$$.dirty[1]&1024&&hn(Fe.transform.outerRef,{width:`${n.width}px`,height:`${n.height}px`}),i.$$.dirty[1]&32&&hn(Fe.transform.innerRef,{pointerEvents:O}),i.$$.dirty[1]&64&&hn(Fe.noTransform.div,{transform:F?"translate3d(-50%, -50%, 0)":"none"}),i.$$.dirty[1]&7296&&hn(Fe.noTransform.div,{top:L?`${-s}px`:void 0,left:L?`${-o}px`:void 0,width:L?`${n.width}px`:void 0,height:L?`${n.height}px`:void 0})},[y,g,h,p,_,b,w,x,k,Y,Se,ue,ge,D,a,l,c,u,f,B,ne,ae,He,dt,xt,bt,Ie,Le,A,$,ce,M,P,v,E,S,O,F,L,I,R,n,s,o,d,se,fe,ve,Ge,T,re,de,we,m]}class qb extends tt{constructor(e){super(),et(this,e,jb,Wb,Ze,{position:1,scale:2,rotation:3,lookAt:4,viewportAware:5,inViewport:0,dispose:6,transform:7,calculatePosition:31,eps:32,occlude:33,zIndexRange:34,sprite:35,pointerEvents:36,center:37,fullscreen:38,distanceFactor:39,as:8,portal:40,visible:30},null,[-1,-1,-1])}}var Qa={exports:{}},yr=typeof Reflect=="object"?Reflect:null,ru=yr&&typeof yr.apply=="function"?yr.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)},Ys;yr&&typeof yr.ownKeys=="function"?Ys=yr.ownKeys:Object.getOwnPropertySymbols?Ys=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Ys=function(e){return Object.getOwnPropertyNames(e)};function Xb(i){console&&console.warn&&console.warn(i)}var $f=Number.isNaN||function(e){return e!==e};function pt(){pt.init.call(this)}Qa.exports=pt;Qa.exports.once=Jb;pt.EventEmitter=pt;pt.prototype._events=void 0;pt.prototype._eventsCount=0;pt.prototype._maxListeners=void 0;var su=10;function Mo(i){if(typeof i!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i)}Object.defineProperty(pt,"defaultMaxListeners",{enumerable:!0,get:function(){return su},set:function(i){if(typeof i!="number"||i<0||$f(i))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+i+".");su=i}});pt.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};pt.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||$f(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function ed(i){return i._maxListeners===void 0?pt.defaultMaxListeners:i._maxListeners}pt.prototype.getMaxListeners=function(){return ed(this)};pt.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=e==="error",s=this._events;if(s!==void 0)r=r&&s.error===void 0;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var l=s[e];if(l===void 0)return!1;if(typeof l=="function")ru(l,this,t);else for(var c=l.length,u=sd(l,c),n=0;n<c;++n)ru(u[n],this,t);return!0};function td(i,e,t,n){var r,s,o;if(Mo(t),s=i._events,s===void 0?(s=i._events=Object.create(null),i._eventsCount=0):(s.newListener!==void 0&&(i.emit("newListener",e,t.listener?t.listener:t),s=i._events),o=s[e]),o===void 0)o=s[e]=t,++i._eventsCount;else if(typeof o=="function"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(t):o.push(t),r=ed(i),r>0&&o.length>r&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=i,a.type=e,a.count=o.length,Xb(a)}return i}pt.prototype.addListener=function(e,t){return td(this,e,t,!1)};pt.prototype.on=pt.prototype.addListener;pt.prototype.prependListener=function(e,t){return td(this,e,t,!0)};function Yb(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function nd(i,e,t){var n={fired:!1,wrapFn:void 0,target:i,type:e,listener:t},r=Yb.bind(n);return r.listener=t,n.wrapFn=r,r}pt.prototype.once=function(e,t){return Mo(t),this.on(e,nd(this,e,t)),this};pt.prototype.prependOnceListener=function(e,t){return Mo(t),this.prependListener(e,nd(this,e,t)),this};pt.prototype.removeListener=function(e,t){var n,r,s,o,a;if(Mo(t),r=this._events,r===void 0)return this;if(n=r[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if(typeof n!="function"){for(s=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,s=o;break}if(s<0)return this;s===0?n.shift():Zb(n,s),n.length===1&&(r[e]=n[0]),r.removeListener!==void 0&&this.emit("removeListener",e,a||t)}return this};pt.prototype.off=pt.prototype.removeListener;pt.prototype.removeAllListeners=function(e){var t,n,r;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var s=Object.keys(n),o;for(r=0;r<s.length;++r)o=s[r],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this};function id(i,e,t){var n=i._events;if(n===void 0)return[];var r=n[e];return r===void 0?[]:typeof r=="function"?t?[r.listener||r]:[r]:t?Kb(r):sd(r,r.length)}pt.prototype.listeners=function(e){return id(this,e,!0)};pt.prototype.rawListeners=function(e){return id(this,e,!1)};pt.listenerCount=function(i,e){return typeof i.listenerCount=="function"?i.listenerCount(e):rd.call(i,e)};pt.prototype.listenerCount=rd;function rd(i){var e=this._events;if(e!==void 0){var t=e[i];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}pt.prototype.eventNames=function(){return this._eventsCount>0?Ys(this._events):[]};function sd(i,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=i[n];return t}function Zb(i,e){for(;e+1<i.length;e++)i[e]=i[e+1];i.pop()}function Kb(i){for(var e=new Array(i.length),t=0;t<e.length;++t)e[t]=i[t].listener||i[t];return e}function Jb(i,e){return new Promise(function(t,n){function r(o){i.removeListener(e,s),n(o)}function s(){typeof i.removeListener=="function"&&i.removeListener("error",r),t([].slice.call(arguments))}od(i,e,s,{once:!0}),e!=="error"&&Qb(i,r,{once:!0})})}function Qb(i,e,t){typeof i.on=="function"&&od(i,"error",e,t)}function od(i,e,t,n){if(typeof i.on=="function")n.once?i.once(e,t):i.on(e,t);else if(typeof i.addEventListener=="function")i.addEventListener(e,function r(s){n.once&&i.removeEventListener(e,r),t(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof i)}function Vn(i){if(typeof i!="function")throw new Error("obliterator/iterator: expecting a function!");this.next=i}typeof Symbol<"u"&&(Vn.prototype[Symbol.iterator]=function(){return this});Vn.of=function(){var i=arguments,e=i.length,t=0;return new Vn(function(){return t>=e?{done:!0}:{done:!1,value:i[t++]}})};Vn.empty=function(){var i=new Vn(function(){return{done:!0}});return i};Vn.fromSequence=function(i){var e=0,t=i.length;return new Vn(function(){return e>=t?{done:!0}:{done:!1,value:i[e++]}})};Vn.is=function(i){return i instanceof Vn?!0:typeof i=="object"&&i!==null&&typeof i.next=="function"};var on=Vn,$a={};$a.ARRAY_BUFFER_SUPPORT=typeof ArrayBuffer<"u";$a.SYMBOL_SUPPORT=typeof Symbol<"u";var $b=on,ad=$a,ew=ad.ARRAY_BUFFER_SUPPORT,tw=ad.SYMBOL_SUPPORT;function nw(i){return typeof i=="string"||Array.isArray(i)||ew&&ArrayBuffer.isView(i)?$b.fromSequence(i):typeof i!="object"||i===null?null:tw&&typeof i[Symbol.iterator]=="function"?i[Symbol.iterator]():typeof i.next=="function"?i:null}var ld=function(e){var t=nw(e);if(!t)throw new Error("obliterator: target is not iterable nor a valid iterator.");return t},iw=ld,cd=function(e,t){for(var n=arguments.length>1?t:1/0,r=n!==1/0?new Array(n):[],s,o=0,a=iw(e);;){if(o===n)return r;if(s=a.next(),s.done)return o!==t&&(r.length=o),r;r[o++]=s.value}},rw=on,sw=ld,ti=function(){var e=arguments,t=null,n=-1;return new rw(function(){var s=null;do{if(t===null){if(n++,n>=e.length)return{done:!0};t=sw(e[n])}if(s=t.next(),s.done===!0){t=null;continue}break}while(!0);return s})};function ow(){const i=arguments[0];for(let e=1,t=arguments.length;e<t;e++)if(!!arguments[e])for(const n in arguments[e])i[n]=arguments[e][n];return i}let Nt=ow;typeof Object.assign=="function"&&(Nt=Object.assign);function wn(i,e,t,n){const r=i._nodes.get(e);let s=null;return r&&(n==="mixed"?s=r.out&&r.out[t]||r.undirected&&r.undirected[t]:n==="directed"?s=r.out&&r.out[t]:s=r.undirected&&r.undirected[t]),s}function aw(i){return i!==null&&typeof i=="object"&&typeof i.addUndirectedEdgeWithKey=="function"&&typeof i.dropNode=="function"}function Vt(i){return typeof i=="object"&&i!==null&&i.constructor===Object}function ud(i){let e;for(e in i)return!1;return!0}function pn(i,e,t){Object.defineProperty(i,e,{enumerable:!1,configurable:!1,writable:!0,value:t})}function Cn(i,e,t){const n={enumerable:!0,configurable:!0};typeof t=="function"?n.get=t:(n.value=t,n.writable=!1),Object.defineProperty(i,e,n)}function ou(i){return!(!Vt(i)||i.attributes&&!Array.isArray(i.attributes))}function lw(){let i=Math.floor(Math.random()*256)&255;return()=>i++}class el extends Error{constructor(e){super(),this.name="GraphError",this.message=e}}class Ae extends el{constructor(e){super(e),this.name="InvalidArgumentsGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ae.prototype.constructor)}}class he extends el{constructor(e){super(e),this.name="NotFoundGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,he.prototype.constructor)}}class ze extends el{constructor(e){super(e),this.name="UsageGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ze.prototype.constructor)}}function fd(i,e){this.key=i,this.attributes=e,this.clear()}fd.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.in={},this.out={},this.undirected={}};function dd(i,e){this.key=i,this.attributes=e,this.clear()}dd.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.in={},this.out={}};function hd(i,e){this.key=i,this.attributes=e,this.clear()}hd.prototype.clear=function(){this.undirectedDegree=0,this.undirected={}};function Rr(i,e,t,n,r){this.key=e,this.attributes=r,this.undirected=i,this.source=t,this.target=n}Rr.prototype.attach=function(){let i="out",e="in";this.undirected&&(i=e="undirected");const t=this.source.key,n=this.target.key;this.source[i][n]=this,!(this.undirected&&t===n)&&(this.target[e][t]=this)};Rr.prototype.attachMulti=function(){let i="out",e="in";const t=this.source.key,n=this.target.key;this.undirected&&(i=e="undirected");const r=this.source[i],s=r[n];if(typeof s>"u"){r[n]=this,this.undirected&&t===n||(this.target[e][t]=this);return}s.previous=this,this.next=s,r[n]=this,this.target[e][t]=this};Rr.prototype.detach=function(){const i=this.source.key,e=this.target.key;let t="out",n="in";this.undirected&&(t=n="undirected"),delete this.source[t][e],delete this.target[n][i]};Rr.prototype.detachMulti=function(){const i=this.source.key,e=this.target.key;let t="out",n="in";this.undirected&&(t=n="undirected"),this.previous===void 0?this.next===void 0?(delete this.source[t][e],delete this.target[n][i]):(this.next.previous=void 0,this.source[t][e]=this.next,this.target[n][i]=this.next):(this.previous.next=this.next,this.next!==void 0&&(this.next.previous=this.previous))};const pd=0,md=1,cw=2,gd=3;function oi(i,e,t,n,r,s,o){let a,l,c,u;if(n=""+n,t===pd){if(a=i._nodes.get(n),!a)throw new he(`Graph.${e}: could not find the "${n}" node in the graph.`);c=r,u=s}else if(t===gd){if(r=""+r,l=i._edges.get(r),!l)throw new he(`Graph.${e}: could not find the "${r}" edge in the graph.`);const f=l.source.key,d=l.target.key;if(n===f)a=l.target;else if(n===d)a=l.source;else throw new he(`Graph.${e}: the "${n}" node is not attached to the "${r}" edge (${f}, ${d}).`);c=s,u=o}else{if(l=i._edges.get(n),!l)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`);t===md?a=l.source:a=l.target,c=r,u=s}return[a,c,u]}function uw(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);return o.attributes[a]}}function fw(i,e,t){i.prototype[e]=function(n,r){const[s]=oi(this,e,t,n,r);return s.attributes}}function dw(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);return o.attributes.hasOwnProperty(a)}}function hw(i,e,t){i.prototype[e]=function(n,r,s,o){const[a,l,c]=oi(this,e,t,n,r,s,o);return a.attributes[l]=c,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:l}),this}}function pw(i,e,t){i.prototype[e]=function(n,r,s,o){const[a,l,c]=oi(this,e,t,n,r,s,o);if(typeof c!="function")throw new Ae(`Graph.${e}: updater should be a function.`);const u=a.attributes,f=c(u[l]);return u[l]=f,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:l}),this}}function mw(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);return delete o.attributes[a],this.emit("nodeAttributesUpdated",{key:o.key,type:"remove",attributes:o.attributes,name:a}),this}}function gw(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);if(!Vt(a))throw new Ae(`Graph.${e}: provided attributes are not a plain object.`);return o.attributes=a,this.emit("nodeAttributesUpdated",{key:o.key,type:"replace",attributes:o.attributes}),this}}function _w(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);if(!Vt(a))throw new Ae(`Graph.${e}: provided attributes are not a plain object.`);return Nt(o.attributes,a),this.emit("nodeAttributesUpdated",{key:o.key,type:"merge",attributes:o.attributes,data:a}),this}}function vw(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);if(typeof a!="function")throw new Ae(`Graph.${e}: provided updater is not a function.`);return o.attributes=a(o.attributes),this.emit("nodeAttributesUpdated",{key:o.key,type:"update",attributes:o.attributes}),this}}const bw=[{name:i=>`get${i}Attribute`,attacher:uw},{name:i=>`get${i}Attributes`,attacher:fw},{name:i=>`has${i}Attribute`,attacher:dw},{name:i=>`set${i}Attribute`,attacher:hw},{name:i=>`update${i}Attribute`,attacher:pw},{name:i=>`remove${i}Attribute`,attacher:mw},{name:i=>`replace${i}Attributes`,attacher:gw},{name:i=>`merge${i}Attributes`,attacher:_w},{name:i=>`update${i}Attributes`,attacher:vw}];function ww(i){bw.forEach(function({name:e,attacher:t}){t(i,e("Node"),pd),t(i,e("Source"),md),t(i,e("Target"),cw),t(i,e("Opposite"),gd)})}function yw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=wn(this,o,a,t),!s)throw new he(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return s.attributes[r]}}function xw(i,e,t){i.prototype[e]=function(n){let r;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>1){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const s=""+n,o=""+arguments[1];if(r=wn(this,s,o,t),!r)throw new he(`Graph.${e}: could not find an edge for the given path ("${s}" - "${o}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,r=this._edges.get(n),!r)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return r.attributes}}function Mw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=wn(this,o,a,t),!s)throw new he(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return s.attributes.hasOwnProperty(r)}}function Sw(i,e,t){i.prototype[e]=function(n,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+n,l=""+r;if(r=arguments[2],s=arguments[3],o=wn(this,a,l,t),!o)throw new he(`Graph.${e}: could not find an edge for the given path ("${a}" - "${l}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,o=this._edges.get(n),!o)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return o.attributes[r]=s,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Ew(i,e,t){i.prototype[e]=function(n,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+n,l=""+r;if(r=arguments[2],s=arguments[3],o=wn(this,a,l,t),!o)throw new he(`Graph.${e}: could not find an edge for the given path ("${a}" - "${l}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,o=this._edges.get(n),!o)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(typeof s!="function")throw new Ae(`Graph.${e}: updater should be a function.`);return o.attributes[r]=s(o.attributes[r]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Aw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=wn(this,o,a,t),!s)throw new he(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return delete s.attributes[r],this.emit("edgeAttributesUpdated",{key:s.key,type:"remove",attributes:s.attributes,name:r}),this}}function Tw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=wn(this,o,a,t),!s)throw new he(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(!Vt(r))throw new Ae(`Graph.${e}: provided attributes are not a plain object.`);return s.attributes=r,this.emit("edgeAttributesUpdated",{key:s.key,type:"replace",attributes:s.attributes}),this}}function Cw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=wn(this,o,a,t),!s)throw new he(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(!Vt(r))throw new Ae(`Graph.${e}: provided attributes are not a plain object.`);return Nt(s.attributes,r),this.emit("edgeAttributesUpdated",{key:s.key,type:"merge",attributes:s.attributes,data:r}),this}}function Lw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new ze(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new ze(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=wn(this,o,a,t),!s)throw new he(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new ze(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new he(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(typeof r!="function")throw new Ae(`Graph.${e}: provided updater is not a function.`);return s.attributes=r(s.attributes),this.emit("edgeAttributesUpdated",{key:s.key,type:"update",attributes:s.attributes}),this}}const Dw=[{name:i=>`get${i}Attribute`,attacher:yw},{name:i=>`get${i}Attributes`,attacher:xw},{name:i=>`has${i}Attribute`,attacher:Mw},{name:i=>`set${i}Attribute`,attacher:Sw},{name:i=>`update${i}Attribute`,attacher:Ew},{name:i=>`remove${i}Attribute`,attacher:Aw},{name:i=>`replace${i}Attributes`,attacher:Tw},{name:i=>`merge${i}Attributes`,attacher:Cw},{name:i=>`update${i}Attributes`,attacher:Lw}];function Pw(i){Dw.forEach(function({name:e,attacher:t}){t(i,e("Edge"),"mixed"),t(i,e("DirectedEdge"),"directed"),t(i,e("UndirectedEdge"),"undirected")})}const Rw=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function Iw(i,e,t,n){let r=!1;for(const s in e){if(s===n)continue;const o=e[s];if(r=t(o.key,o.attributes,o.source.key,o.target.key,o.source.attributes,o.target.attributes,o.undirected),i&&r)return o.key}}function Ow(i,e,t,n){let r,s,o,a=!1;for(const l in e)if(l!==n){r=e[l];do{if(s=r.source,o=r.target,a=t(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected),i&&a)return r.key;r=r.next}while(r!==void 0)}}function pa(i,e){const t=Object.keys(i),n=t.length;let r,s=0;return new on(function(){do if(r)r=r.next;else{if(s>=n)return{done:!0};const a=t[s++];if(a===e){r=void 0;continue}r=i[a]}while(!r);return{done:!1,value:{edge:r.key,attributes:r.attributes,source:r.source.key,target:r.target.key,sourceAttributes:r.source.attributes,targetAttributes:r.target.attributes,undirected:r.undirected}}})}function kw(i,e,t,n){const r=e[t];if(!r)return;const s=r.source,o=r.target;if(n(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected)&&i)return r.key}function Nw(i,e,t,n){let r=e[t];if(!r)return;let s=!1;do{if(s=n(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes,r.undirected),i&&s)return r.key;r=r.next}while(r!==void 0)}function ma(i,e){let t=i[e];return t.next!==void 0?new on(function(){if(!t)return{done:!0};const n={edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected};return t=t.next,{done:!1,value:n}}):on.of({edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected})}function Fw(i,e){if(i.size===0)return[];if(e==="mixed"||e===i.type)return typeof Array.from=="function"?Array.from(i._edges.keys()):cd(i._edges.keys(),i._edges.size);const t=e==="undirected"?i.undirectedSize:i.directedSize,n=new Array(t),r=e==="undirected",s=i._edges.values();let o=0,a,l;for(;a=s.next(),a.done!==!0;)l=a.value,l.undirected===r&&(n[o++]=l.key);return n}function _d(i,e,t,n){if(e.size===0)return;const r=t!=="mixed"&&t!==e.type,s=t==="undirected";let o,a,l=!1;const c=e._edges.values();for(;o=c.next(),o.done!==!0;){if(a=o.value,r&&a.undirected!==s)continue;const{key:u,attributes:f,source:d,target:m}=a;if(l=n(u,f,d.key,m.key,d.attributes,m.attributes,a.undirected),i&&l)return u}}function zw(i,e){if(i.size===0)return on.empty();const t=e!=="mixed"&&e!==i.type,n=e==="undirected",r=i._edges.values();return new on(function(){let o,a;for(;;){if(o=r.next(),o.done)return o;if(a=o.value,!(t&&a.undirected!==n))break}return{value:{edge:a.key,attributes:a.attributes,source:a.source.key,target:a.target.key,sourceAttributes:a.source.attributes,targetAttributes:a.target.attributes,undirected:a.undirected},done:!1}})}function tl(i,e,t,n,r,s){const o=e?Ow:Iw;let a;if(t!=="undirected"&&(n!=="out"&&(a=o(i,r.in,s),i&&a)||n!=="in"&&(a=o(i,r.out,s,n?void 0:r.key),i&&a))||t!=="directed"&&(a=o(i,r.undirected,s),i&&a))return a}function Uw(i,e,t,n){const r=[];return tl(!1,i,e,t,n,function(s){r.push(s)}),r}function Gw(i,e,t){let n=on.empty();return i!=="undirected"&&(e!=="out"&&typeof t.in<"u"&&(n=ti(n,pa(t.in))),e!=="in"&&typeof t.out<"u"&&(n=ti(n,pa(t.out,e?void 0:t.key)))),i!=="directed"&&typeof t.undirected<"u"&&(n=ti(n,pa(t.undirected))),n}function nl(i,e,t,n,r,s,o){const a=t?Nw:kw;let l;if(e!=="undirected"&&(typeof r.in<"u"&&n!=="out"&&(l=a(i,r.in,s,o),i&&l)||typeof r.out<"u"&&n!=="in"&&(n||r.key!==s)&&(l=a(i,r.out,s,o),i&&l))||e!=="directed"&&typeof r.undirected<"u"&&(l=a(i,r.undirected,s,o),i&&l))return l}function Bw(i,e,t,n,r){const s=[];return nl(!1,i,e,t,n,r,function(o){s.push(o)}),s}function Vw(i,e,t,n){let r=on.empty();return i!=="undirected"&&(typeof t.in<"u"&&e!=="out"&&n in t.in&&(r=ti(r,ma(t.in,n))),typeof t.out<"u"&&e!=="in"&&n in t.out&&(e||t.key!==n)&&(r=ti(r,ma(t.out,n)))),i!=="directed"&&typeof t.undirected<"u"&&n in t.undirected&&(r=ti(r,ma(t.undirected,n))),r}function Hw(i,e){const{name:t,type:n,direction:r}=e;i.prototype[t]=function(s,o){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return[];if(!arguments.length)return Fw(this,n);if(arguments.length===1){s=""+s;const a=this._nodes.get(s);if(typeof a>"u")throw new he(`Graph.${t}: could not find the "${s}" node in the graph.`);return Uw(this.multi,n==="mixed"?this.type:n,r,a)}if(arguments.length===2){s=""+s,o=""+o;const a=this._nodes.get(s);if(!a)throw new he(`Graph.${t}:  could not find the "${s}" source node in the graph.`);if(!this._nodes.has(o))throw new he(`Graph.${t}:  could not find the "${o}" target node in the graph.`);return Bw(n,this.multi,r,a,o)}throw new Ae(`Graph.${t}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function Ww(i,e){const{name:t,type:n,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(c,u,f){if(!(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)){if(arguments.length===1)return f=c,_d(!1,this,n,f);if(arguments.length===2){c=""+c,f=u;const d=this._nodes.get(c);if(typeof d>"u")throw new he(`Graph.${s}: could not find the "${c}" node in the graph.`);return tl(!1,this.multi,n==="mixed"?this.type:n,r,d,f)}if(arguments.length===3){c=""+c,u=""+u;const d=this._nodes.get(c);if(!d)throw new he(`Graph.${s}:  could not find the "${c}" source node in the graph.`);if(!this._nodes.has(u))throw new he(`Graph.${s}:  could not find the "${u}" target node in the graph.`);return nl(!1,n,this.multi,r,d,u,f)}throw new Ae(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)}};const o="map"+t[0].toUpperCase()+t.slice(1);i.prototype[o]=function(){const c=Array.prototype.slice.call(arguments),u=c.pop();let f;if(c.length===0){let d=0;n!=="directed"&&(d+=this.undirectedSize),n!=="undirected"&&(d+=this.directedSize),f=new Array(d);let m=0;c.push((g,h,p,_,b,y,w)=>{f[m++]=u(g,h,p,_,b,y,w)})}else f=[],c.push((d,m,g,h,p,_,b)=>{f.push(u(d,m,g,h,p,_,b))});return this[s].apply(this,c),f};const a="filter"+t[0].toUpperCase()+t.slice(1);i.prototype[a]=function(){const c=Array.prototype.slice.call(arguments),u=c.pop(),f=[];return c.push((d,m,g,h,p,_,b)=>{u(d,m,g,h,p,_,b)&&f.push(d)}),this[s].apply(this,c),f};const l="reduce"+t[0].toUpperCase()+t.slice(1);i.prototype[l]=function(){let c=Array.prototype.slice.call(arguments);if(c.length<2||c.length>4)throw new Ae(`Graph.${l}: invalid number of arguments (expecting 2, 3 or 4 and got ${c.length}).`);if(typeof c[c.length-1]=="function"&&typeof c[c.length-2]!="function")throw new Ae(`Graph.${l}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let u,f;c.length===2?(u=c[0],f=c[1],c=[]):c.length===3?(u=c[1],f=c[2],c=[c[0]]):c.length===4&&(u=c[2],f=c[3],c=[c[0],c[1]]);let d=f;return c.push((m,g,h,p,_,b,y)=>{d=u(d,m,g,h,p,_,b,y)}),this[s].apply(this,c),d}}function jw(i,e){const{name:t,type:n,direction:r}=e,s="find"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(l,c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return!1;if(arguments.length===1)return u=l,_d(!0,this,n,u);if(arguments.length===2){l=""+l,u=c;const f=this._nodes.get(l);if(typeof f>"u")throw new he(`Graph.${s}: could not find the "${l}" node in the graph.`);return tl(!0,this.multi,n==="mixed"?this.type:n,r,f,u)}if(arguments.length===3){l=""+l,c=""+c;const f=this._nodes.get(l);if(!f)throw new he(`Graph.${s}:  could not find the "${l}" source node in the graph.`);if(!this._nodes.has(c))throw new he(`Graph.${s}:  could not find the "${c}" target node in the graph.`);return nl(!0,n,this.multi,r,f,c,u)}throw new Ae(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)};const o="some"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[o]=function(){const l=Array.prototype.slice.call(arguments),c=l.pop();return l.push((f,d,m,g,h,p,_)=>c(f,d,m,g,h,p,_)),!!this[s].apply(this,l)};const a="every"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[a]=function(){const l=Array.prototype.slice.call(arguments),c=l.pop();return l.push((f,d,m,g,h,p,_)=>!c(f,d,m,g,h,p,_)),!this[s].apply(this,l)}}function qw(i,e){const{name:t,type:n,direction:r}=e,s=t.slice(0,-1)+"Entries";i.prototype[s]=function(o,a){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return on.empty();if(!arguments.length)return zw(this,n);if(arguments.length===1){o=""+o;const l=this._nodes.get(o);if(!l)throw new he(`Graph.${s}: could not find the "${o}" node in the graph.`);return Gw(n,r,l)}if(arguments.length===2){o=""+o,a=""+a;const l=this._nodes.get(o);if(!l)throw new he(`Graph.${s}:  could not find the "${o}" source node in the graph.`);if(!this._nodes.has(a))throw new he(`Graph.${s}:  could not find the "${a}" target node in the graph.`);return Vw(n,r,l,a)}throw new Ae(`Graph.${s}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function Xw(i){Rw.forEach(e=>{Hw(i,e),Ww(i,e),jw(i,e),qw(i,e)})}const Yw=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function So(){this.A=null,this.B=null}So.prototype.wrap=function(i){this.A===null?this.A=i:this.B===null&&(this.B=i)};So.prototype.has=function(i){return this.A!==null&&i in this.A||this.B!==null&&i in this.B};function Br(i,e,t,n,r){for(const s in n){const o=n[s],a=o.source,l=o.target,c=a===t?l:a;if(e&&e.has(c.key))continue;const u=r(c.key,c.attributes);if(i&&u)return c.key}}function il(i,e,t,n,r){if(e!=="mixed"){if(e==="undirected")return Br(i,null,n,n.undirected,r);if(typeof t=="string")return Br(i,null,n,n[t],r)}const s=new So;let o;if(e!=="undirected"){if(t!=="out"){if(o=Br(i,null,n,n.in,r),i&&o)return o;s.wrap(n.in)}if(t!=="in"){if(o=Br(i,s,n,n.out,r),i&&o)return o;s.wrap(n.out)}}if(e!=="directed"&&(o=Br(i,s,n,n.undirected,r),i&&o))return o}function Zw(i,e,t){if(i!=="mixed"){if(i==="undirected")return Object.keys(t.undirected);if(typeof e=="string")return Object.keys(t[e])}const n=[];return il(!1,i,e,t,function(r){n.push(r)}),n}function Vr(i,e,t){const n=Object.keys(t),r=n.length;let s=0;return new on(function(){let a=null;do{if(s>=r)return i&&i.wrap(t),{done:!0};const l=t[n[s++]],c=l.source,u=l.target;if(a=c===e?u:c,i&&i.has(a.key)){a=null;continue}}while(a===null);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}})}function Kw(i,e,t){if(i!=="mixed"){if(i==="undirected")return Vr(null,t,t.undirected);if(typeof e=="string")return Vr(null,t,t[e])}let n=on.empty();const r=new So;return i!=="undirected"&&(e!=="out"&&(n=ti(n,Vr(r,t,t.in))),e!=="in"&&(n=ti(n,Vr(r,t,t.out)))),i!=="directed"&&(n=ti(n,Vr(r,t,t.undirected))),n}function Jw(i,e){const{name:t,type:n,direction:r}=e;i.prototype[t]=function(s){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return[];s=""+s;const o=this._nodes.get(s);if(typeof o>"u")throw new he(`Graph.${t}: could not find the "${s}" node in the graph.`);return Zw(n==="mixed"?this.type:n,r,o)}}function Qw(i,e){const{name:t,type:n,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return;c=""+c;const f=this._nodes.get(c);if(typeof f>"u")throw new he(`Graph.${s}: could not find the "${c}" node in the graph.`);il(!1,n==="mixed"?this.type:n,r,f,u)};const o="map"+t[0].toUpperCase()+t.slice(1);i.prototype[o]=function(c,u){const f=[];return this[s](c,(d,m)=>{f.push(u(d,m))}),f};const a="filter"+t[0].toUpperCase()+t.slice(1);i.prototype[a]=function(c,u){const f=[];return this[s](c,(d,m)=>{u(d,m)&&f.push(d)}),f};const l="reduce"+t[0].toUpperCase()+t.slice(1);i.prototype[l]=function(c,u,f){if(arguments.length<3)throw new Ae(`Graph.${l}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let d=f;return this[s](c,(m,g)=>{d=u(d,m,g)}),d}}function $w(i,e){const{name:t,type:n,direction:r}=e,s=t[0].toUpperCase()+t.slice(1,-1),o="find"+s;i.prototype[o]=function(c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return;c=""+c;const f=this._nodes.get(c);if(typeof f>"u")throw new he(`Graph.${o}: could not find the "${c}" node in the graph.`);return il(!0,n==="mixed"?this.type:n,r,f,u)};const a="some"+s;i.prototype[a]=function(c,u){return!!this[o](c,u)};const l="every"+s;i.prototype[l]=function(c,u){return!this[o](c,(d,m)=>!u(d,m))}}function e1(i,e){const{name:t,type:n,direction:r}=e,s=t.slice(0,-1)+"Entries";i.prototype[s]=function(o){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return on.empty();o=""+o;const a=this._nodes.get(o);if(typeof a>"u")throw new he(`Graph.${s}: could not find the "${o}" node in the graph.`);return Kw(n==="mixed"?this.type:n,r,a)}}function t1(i){Yw.forEach(e=>{Jw(i,e),Qw(i,e),$w(i,e),e1(i,e)})}function Bs(i,e,t,n,r){const s=n._nodes.values(),o=n.type;let a,l,c,u,f,d,m;for(;a=s.next(),a.done!==!0;){let g=!1;if(l=a.value,o!=="undirected"){u=l.out;for(c in u){f=u[c];do{if(d=f.target,g=!0,m=r(l.key,d.key,l.attributes,d.attributes,f.key,f.attributes,f.undirected),i&&m)return f;f=f.next}while(f)}}if(o!=="directed"){u=l.undirected;for(c in u)if(!(e&&l.key>c)){f=u[c];do{if(d=f.target,d.key!==c&&(d=f.source),g=!0,m=r(l.key,d.key,l.attributes,d.attributes,f.key,f.attributes,f.undirected),i&&m)return f;f=f.next}while(f)}}if(t&&!g&&(m=r(l.key,null,l.attributes,null,null,null,null),i&&m))return null}}function n1(i,e){const t={key:i};return ud(e.attributes)||(t.attributes=Nt({},e.attributes)),t}function i1(i,e){const t={key:i,source:e.source.key,target:e.target.key};return ud(e.attributes)||(t.attributes=Nt({},e.attributes)),e.undirected&&(t.undirected=!0),t}function r1(i){if(!Vt(i))throw new Ae('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in i))throw new Ae("Graph.import: serialized node is missing its key.");if("attributes"in i&&(!Vt(i.attributes)||i.attributes===null))throw new Ae("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.")}function s1(i){if(!Vt(i))throw new Ae('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in i))throw new Ae("Graph.import: serialized edge is missing its source.");if(!("target"in i))throw new Ae("Graph.import: serialized edge is missing its target.");if("attributes"in i&&(!Vt(i.attributes)||i.attributes===null))throw new Ae("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in i&&typeof i.undirected!="boolean")throw new Ae("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.")}const o1=lw(),a1=new Set(["directed","undirected","mixed"]),au=new Set(["domain","_events","_eventsCount","_maxListeners"]),l1=[{name:i=>`${i}Edge`,generateKey:!0},{name:i=>`${i}DirectedEdge`,generateKey:!0,type:"directed"},{name:i=>`${i}UndirectedEdge`,generateKey:!0,type:"undirected"},{name:i=>`${i}EdgeWithKey`},{name:i=>`${i}DirectedEdgeWithKey`,type:"directed"},{name:i=>`${i}UndirectedEdgeWithKey`,type:"undirected"}],c1={allowSelfLoops:!0,multi:!1,type:"mixed"};function u1(i,e,t){if(t&&!Vt(t))throw new Ae(`Graph.addNode: invalid attributes. Expecting an object but got "${t}"`);if(e=""+e,t=t||{},i._nodes.has(e))throw new ze(`Graph.addNode: the "${e}" node already exist in the graph.`);const n=new i.NodeDataClass(e,t);return i._nodes.set(e,n),i.emit("nodeAdded",{key:e,attributes:t}),n}function lu(i,e,t){const n=new i.NodeDataClass(e,t);return i._nodes.set(e,n),i.emit("nodeAdded",{key:e,attributes:t}),n}function vd(i,e,t,n,r,s,o,a){if(!n&&i.type==="undirected")throw new ze(`Graph.${e}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`);if(n&&i.type==="directed")throw new ze(`Graph.${e}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`);if(a&&!Vt(a))throw new Ae(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`);if(s=""+s,o=""+o,a=a||{},!i.allowSelfLoops&&s===o)throw new ze(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);const l=i._nodes.get(s),c=i._nodes.get(o);if(!l)throw new he(`Graph.${e}: source node "${s}" not found.`);if(!c)throw new he(`Graph.${e}: target node "${o}" not found.`);const u={key:null,undirected:n,source:s,target:o,attributes:a};if(t)r=i._edgeKeyGenerator();else if(r=""+r,i._edges.has(r))throw new ze(`Graph.${e}: the "${r}" edge already exists in the graph.`);if(!i.multi&&(n?typeof l.undirected[o]<"u":typeof l.out[o]<"u"))throw new ze(`Graph.${e}: an edge linking "${s}" to "${o}" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`);const f=new Rr(n,r,l,c,a);i._edges.set(r,f);const d=s===o;return n?(l.undirectedDegree++,c.undirectedDegree++,d&&i._undirectedSelfLoopCount++):(l.outDegree++,c.inDegree++,d&&i._directedSelfLoopCount++),i.multi?f.attachMulti():f.attach(),n?i._undirectedSize++:i._directedSize++,u.key=r,i.emit("edgeAdded",u),r}function f1(i,e,t,n,r,s,o,a,l){if(!n&&i.type==="undirected")throw new ze(`Graph.${e}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`);if(n&&i.type==="directed")throw new ze(`Graph.${e}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`);if(a){if(l){if(typeof a!="function")throw new Ae(`Graph.${e}: invalid updater function. Expecting a function but got "${a}"`)}else if(!Vt(a))throw new Ae(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`)}s=""+s,o=""+o;let c;if(l&&(c=a,a=void 0),!i.allowSelfLoops&&s===o)throw new ze(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);let u=i._nodes.get(s),f=i._nodes.get(o),d,m;if(!t&&(d=i._edges.get(r),d)){if((d.source.key!==s||d.target.key!==o)&&(!n||d.source.key!==o||d.target.key!==s))throw new ze(`Graph.${e}: inconsistency detected when attempting to merge the "${r}" edge with "${s}" source & "${o}" target vs. ("${d.source.key}", "${d.target.key}").`);m=d}if(!m&&!i.multi&&u&&(m=n?u.undirected[o]:u.out[o]),m){const b=[m.key,!1,!1,!1];if(l?!c:!a)return b;if(l){const y=m.attributes;m.attributes=c(y),i.emit("edgeAttributesUpdated",{type:"replace",key:m.key,attributes:m.attributes})}else Nt(m.attributes,a),i.emit("edgeAttributesUpdated",{type:"merge",key:m.key,attributes:m.attributes,data:a});return b}a=a||{},l&&c&&(a=c(a));const g={key:null,undirected:n,source:s,target:o,attributes:a};if(t)r=i._edgeKeyGenerator();else if(r=""+r,i._edges.has(r))throw new ze(`Graph.${e}: the "${r}" edge already exists in the graph.`);let h=!1,p=!1;u||(u=lu(i,s,{}),h=!0,s===o&&(f=u,p=!0)),f||(f=lu(i,o,{}),p=!0),d=new Rr(n,r,u,f,a),i._edges.set(r,d);const _=s===o;return n?(u.undirectedDegree++,f.undirectedDegree++,_&&i._undirectedSelfLoopCount++):(u.outDegree++,f.inDegree++,_&&i._directedSelfLoopCount++),i.multi?d.attachMulti():d.attach(),n?i._undirectedSize++:i._directedSize++,g.key=r,i.emit("edgeAdded",g),[r,!0,h,p]}function pr(i,e){i._edges.delete(e.key);const{source:t,target:n,attributes:r}=e,s=e.undirected,o=t===n;s?(t.undirectedDegree--,n.undirectedDegree--,o&&i._undirectedSelfLoopCount--):(t.outDegree--,n.inDegree--,o&&i._directedSelfLoopCount--),i.multi?e.detachMulti():e.detach(),s?i._undirectedSize--:i._directedSize--,i.emit("edgeDropped",{key:e.key,attributes:r,source:t.key,target:n.key,undirected:s})}class Et extends Qa.exports.EventEmitter{constructor(e){if(super(),e=Nt({},c1,e),typeof e.multi!="boolean")throw new Ae(`Graph.constructor: invalid 'multi' option. Expecting a boolean but got "${e.multi}".`);if(!a1.has(e.type))throw new Ae(`Graph.constructor: invalid 'type' option. Should be one of "mixed", "directed" or "undirected" but got "${e.type}".`);if(typeof e.allowSelfLoops!="boolean")throw new Ae(`Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got "${e.allowSelfLoops}".`);const t=e.type==="mixed"?fd:e.type==="directed"?dd:hd;pn(this,"NodeDataClass",t);const n="geid_"+o1()+"_";let r=0;const s=()=>{let o;do o=n+r++;while(this._edges.has(o));return o};pn(this,"_attributes",{}),pn(this,"_nodes",new Map),pn(this,"_edges",new Map),pn(this,"_directedSize",0),pn(this,"_undirectedSize",0),pn(this,"_directedSelfLoopCount",0),pn(this,"_undirectedSelfLoopCount",0),pn(this,"_edgeKeyGenerator",s),pn(this,"_options",e),au.forEach(o=>pn(this,o,this[o])),Cn(this,"order",()=>this._nodes.size),Cn(this,"size",()=>this._edges.size),Cn(this,"directedSize",()=>this._directedSize),Cn(this,"undirectedSize",()=>this._undirectedSize),Cn(this,"selfLoopCount",()=>this._directedSelfLoopCount+this._undirectedSelfLoopCount),Cn(this,"directedSelfLoopCount",()=>this._directedSelfLoopCount),Cn(this,"undirectedSelfLoopCount",()=>this._undirectedSelfLoopCount),Cn(this,"multi",this._options.multi),Cn(this,"type",this._options.type),Cn(this,"allowSelfLoops",this._options.allowSelfLoops),Cn(this,"implementation",()=>"graphology")}_resetInstanceCounters(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0}hasNode(e){return this._nodes.has(""+e)}hasDirectedEdge(e,t){if(this.type==="undirected")return!1;if(arguments.length===1){const n=""+e,r=this._edges.get(n);return!!r&&!r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;const r=n.out[t];return r?this.multi?!!r.size:!0:!1}throw new Ae(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasUndirectedEdge(e,t){if(this.type==="directed")return!1;if(arguments.length===1){const n=""+e,r=this._edges.get(n);return!!r&&r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;const r=n.undirected[t];return r?this.multi?!!r.size:!0:!1}throw new Ae(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasEdge(e,t){if(arguments.length===1){const n=""+e;return this._edges.has(n)}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;let r=typeof n.out<"u"&&n.out[t];return r||(r=typeof n.undirected<"u"&&n.undirected[t]),r?this.multi?!!r.size:!0:!1}throw new Ae(`Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}directedEdge(e,t){if(this.type==="undirected")return;if(e=""+e,t=""+t,this.multi)throw new ze("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");const n=this._nodes.get(e);if(!n)throw new he(`Graph.directedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new he(`Graph.directedEdge: could not find the "${t}" target node in the graph.`);const r=n.out&&n.out[t]||void 0;if(r)return r.key}undirectedEdge(e,t){if(this.type==="directed")return;if(e=""+e,t=""+t,this.multi)throw new ze("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");const n=this._nodes.get(e);if(!n)throw new he(`Graph.undirectedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new he(`Graph.undirectedEdge: could not find the "${t}" target node in the graph.`);const r=n.undirected&&n.undirected[t]||void 0;if(r)return r.key}edge(e,t){if(this.multi)throw new ze("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.edge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new he(`Graph.edge: could not find the "${t}" target node in the graph.`);const r=n.out&&n.out[t]||n.undirected&&n.undirected[t]||void 0;if(r)return r.key}areDirectedNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areDirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.in||t in n.out}areOutNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areOutNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.out}areInNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areInNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.in}areUndirectedNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areUndirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="directed"?!1:t in n.undirected}areNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&(t in n.in||t in n.out)||this.type!=="directed"&&t in n.undirected}areInboundNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areInboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in n.in||this.type!=="directed"&&t in n.undirected}areOutboundNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new he(`Graph.areOutboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in n.out||this.type!=="directed"&&t in n.undirected}inDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.inDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree}outDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.outDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree}directedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.directedDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree}undirectedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.undirectedDegree: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree}inboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.inboundDegree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.inDegree),n}outboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.outboundDegree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.outDegree),n}degree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.degree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.inDegree+t.outDegree),n}inDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.inDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.in[e],r=n?this.multi?n.size:1:0;return t.inDegree-r}outDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.outDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.out[e],r=n?this.multi?n.size:1:0;return t.outDegree-r}directedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.directedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.out[e],r=n?this.multi?n.size:1:0;return t.inDegree+t.outDegree-r*2}undirectedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.undirectedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="directed")return 0;const n=t.undirected[e],r=n?this.multi?n.size:1:0;return t.undirectedDegree-r*2}inboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.inboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.inDegree,n=t.out[e],s+=n?this.multi?n.size:1:0),r-s}outboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.outboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.outDegree,n=t.in[e],s+=n?this.multi?n.size:1:0),r-s}degreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.degreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.inDegree+t.outDegree,n=t.out[e],s+=(n?this.multi?n.size:1:0)*2),r-s}source(e){e=""+e;const t=this._edges.get(e);if(!t)throw new he(`Graph.source: could not find the "${e}" edge in the graph.`);return t.source.key}target(e){e=""+e;const t=this._edges.get(e);if(!t)throw new he(`Graph.target: could not find the "${e}" edge in the graph.`);return t.target.key}extremities(e){e=""+e;const t=this._edges.get(e);if(!t)throw new he(`Graph.extremities: could not find the "${e}" edge in the graph.`);return[t.source.key,t.target.key]}opposite(e,t){e=""+e,t=""+t;const n=this._edges.get(t);if(!n)throw new he(`Graph.opposite: could not find the "${t}" edge in the graph.`);const r=n.source.key,s=n.target.key;if(e===r)return s;if(e===s)return r;throw new he(`Graph.opposite: the "${e}" node is not attached to the "${t}" edge (${r}, ${s}).`)}hasExtremity(e,t){e=""+e,t=""+t;const n=this._edges.get(e);if(!n)throw new he(`Graph.hasExtremity: could not find the "${e}" edge in the graph.`);return n.source.key===t||n.target.key===t}isUndirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new he(`Graph.isUndirected: could not find the "${e}" edge in the graph.`);return t.undirected}isDirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new he(`Graph.isDirected: could not find the "${e}" edge in the graph.`);return!t.undirected}isSelfLoop(e){e=""+e;const t=this._edges.get(e);if(!t)throw new he(`Graph.isSelfLoop: could not find the "${e}" edge in the graph.`);return t.source===t.target}addNode(e,t){return u1(this,e,t).key}mergeNode(e,t){if(t&&!Vt(t))throw new Ae(`Graph.mergeNode: invalid attributes. Expecting an object but got "${t}"`);e=""+e,t=t||{};let n=this._nodes.get(e);return n?(t&&(Nt(n.attributes,t),this.emit("nodeAttributesUpdated",{type:"merge",key:e,attributes:n.attributes,data:t})),[e,!1]):(n=new this.NodeDataClass(e,t),this._nodes.set(e,n),this.emit("nodeAdded",{key:e,attributes:t}),[e,!0])}updateNode(e,t){if(t&&typeof t!="function")throw new Ae(`Graph.updateNode: invalid updater function. Expecting a function but got "${t}"`);e=""+e;let n=this._nodes.get(e);if(n){if(t){const s=n.attributes;n.attributes=t(s),this.emit("nodeAttributesUpdated",{type:"replace",key:e,attributes:n.attributes})}return[e,!1]}const r=t?t({}):{};return n=new this.NodeDataClass(e,r),this._nodes.set(e,n),this.emit("nodeAdded",{key:e,attributes:r}),[e,!0]}dropNode(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new he(`Graph.dropNode: could not find the "${e}" node in the graph.`);let n;if(this.type!=="undirected"){for(const r in t.out){n=t.out[r];do pr(this,n),n=n.next;while(n)}for(const r in t.in){n=t.in[r];do pr(this,n),n=n.next;while(n)}}if(this.type!=="directed")for(const r in t.undirected){n=t.undirected[r];do pr(this,n),n=n.next;while(n)}this._nodes.delete(e),this.emit("nodeDropped",{key:e,attributes:t.attributes})}dropEdge(e){let t;if(arguments.length>1){const n=""+arguments[0],r=""+arguments[1];if(t=wn(this,n,r,this.type),!t)throw new he(`Graph.dropEdge: could not find the "${n}" -> "${r}" edge in the graph.`)}else if(e=""+e,t=this._edges.get(e),!t)throw new he(`Graph.dropEdge: could not find the "${e}" edge in the graph.`);return pr(this,t),this}dropDirectedEdge(e,t){if(arguments.length<2)throw new ze("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new ze("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");e=""+e,t=""+t;const n=wn(this,e,t,"directed");if(!n)throw new he(`Graph.dropDirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return pr(this,n),this}dropUndirectedEdge(e,t){if(arguments.length<2)throw new ze("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new ze("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");const n=wn(this,e,t,"undirected");if(!n)throw new he(`Graph.dropUndirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return pr(this,n),this}clear(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")}clearEdges(){const e=this._nodes.values();let t;for(;t=e.next(),t.done!==!0;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")}getAttribute(e){return this._attributes[e]}getAttributes(){return this._attributes}hasAttribute(e){return this._attributes.hasOwnProperty(e)}setAttribute(e,t){return this._attributes[e]=t,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}updateAttribute(e,t){if(typeof t!="function")throw new Ae("Graph.updateAttribute: updater should be a function.");const n=this._attributes[e];return this._attributes[e]=t(n),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}removeAttribute(e){return delete this._attributes[e],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:e}),this}replaceAttributes(e){if(!Vt(e))throw new Ae("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=e,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this}mergeAttributes(e){if(!Vt(e))throw new Ae("Graph.mergeAttributes: provided attributes are not a plain object.");return Nt(this._attributes,e),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:e}),this}updateAttributes(e){if(typeof e!="function")throw new Ae("Graph.updateAttributes: provided updater is not a function.");return this._attributes=e(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this}updateEachNodeAttributes(e,t){if(typeof e!="function")throw new Ae("Graph.updateEachNodeAttributes: expecting an updater function.");if(t&&!ou(t))throw new Ae("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const n=this._nodes.values();let r,s;for(;r=n.next(),r.done!==!0;)s=r.value,s.attributes=e(s.key,s.attributes);this.emit("eachNodeAttributesUpdated",{hints:t||null})}updateEachEdgeAttributes(e,t){if(typeof e!="function")throw new Ae("Graph.updateEachEdgeAttributes: expecting an updater function.");if(t&&!ou(t))throw new Ae("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const n=this._edges.values();let r,s,o,a;for(;r=n.next(),r.done!==!0;)s=r.value,o=s.source,a=s.target,s.attributes=e(s.key,s.attributes,o.key,a.key,o.attributes,a.attributes,s.undirected);this.emit("eachEdgeAttributesUpdated",{hints:t||null})}forEachAdjacencyEntry(e){if(typeof e!="function")throw new Ae("Graph.forEachAdjacencyEntry: expecting a callback.");Bs(!1,!1,!1,this,e)}forEachAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new Ae("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");Bs(!1,!1,!0,this,e)}forEachAssymetricAdjacencyEntry(e){if(typeof e!="function")throw new Ae("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");Bs(!1,!0,!1,this,e)}forEachAssymetricAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new Ae("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");Bs(!1,!0,!0,this,e)}nodes(){return typeof Array.from=="function"?Array.from(this._nodes.keys()):cd(this._nodes.keys(),this._nodes.size)}forEachNode(e){if(typeof e!="function")throw new Ae("Graph.forEachNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)r=n.value,e(r.key,r.attributes)}findNode(e){if(typeof e!="function")throw new Ae("Graph.findNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,e(r.key,r.attributes))return r.key}mapNodes(e){if(typeof e!="function")throw new Ae("Graph.mapNode: expecting a callback.");const t=this._nodes.values();let n,r;const s=new Array(this.order);let o=0;for(;n=t.next(),n.done!==!0;)r=n.value,s[o++]=e(r.key,r.attributes);return s}someNode(e){if(typeof e!="function")throw new Ae("Graph.someNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,e(r.key,r.attributes))return!0;return!1}everyNode(e){if(typeof e!="function")throw new Ae("Graph.everyNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,!e(r.key,r.attributes))return!1;return!0}filterNodes(e){if(typeof e!="function")throw new Ae("Graph.filterNodes: expecting a callback.");const t=this._nodes.values();let n,r;const s=[];for(;n=t.next(),n.done!==!0;)r=n.value,e(r.key,r.attributes)&&s.push(r.key);return s}reduceNodes(e,t){if(typeof e!="function")throw new Ae("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new Ae("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");let n=t;const r=this._nodes.values();let s,o;for(;s=r.next(),s.done!==!0;)o=s.value,n=e(n,o.key,o.attributes);return n}nodeEntries(){const e=this._nodes.values();return new on(()=>{const t=e.next();if(t.done)return t;const n=t.value;return{value:{node:n.key,attributes:n.attributes},done:!1}})}export(){const e=new Array(this._nodes.size);let t=0;this._nodes.forEach((r,s)=>{e[t++]=n1(s,r)});const n=new Array(this._edges.size);return t=0,this._edges.forEach((r,s)=>{n[t++]=i1(s,r)}),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:n}}import(e,t=!1){if(aw(e))return e.forEachNode((l,c)=>{t?this.mergeNode(l,c):this.addNode(l,c)}),e.forEachEdge((l,c,u,f,d,m,g)=>{t?g?this.mergeUndirectedEdgeWithKey(l,u,f,c):this.mergeDirectedEdgeWithKey(l,u,f,c):g?this.addUndirectedEdgeWithKey(l,u,f,c):this.addDirectedEdgeWithKey(l,u,f,c)}),this;if(!Vt(e))throw new Ae("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(e.attributes){if(!Vt(e.attributes))throw new Ae("Graph.import: invalid attributes. Expecting a plain object.");t?this.mergeAttributes(e.attributes):this.replaceAttributes(e.attributes)}let n,r,s,o,a;if(e.nodes){if(s=e.nodes,!Array.isArray(s))throw new Ae("Graph.import: invalid nodes. Expecting an array.");for(n=0,r=s.length;n<r;n++){o=s[n],r1(o);const{key:l,attributes:c}=o;t?this.mergeNode(l,c):this.addNode(l,c)}}if(e.edges){if(s=e.edges,!Array.isArray(s))throw new Ae("Graph.import: invalid edges. Expecting an array.");for(n=0,r=s.length;n<r;n++){a=s[n],s1(a);const{source:l,target:c,attributes:u,undirected:f=!1}=a;let d;"key"in a?(d=t?f?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:f?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey,d.call(this,a.key,l,c,u)):(d=t?f?this.mergeUndirectedEdge:this.mergeDirectedEdge:f?this.addUndirectedEdge:this.addDirectedEdge,d.call(this,l,c,u))}}return this}nullCopy(e){const t=new Et(Nt({},this._options,e));return t.replaceAttributes(Nt({},this.getAttributes())),t}emptyCopy(e){const t=this.nullCopy(e);return this._nodes.forEach((n,r)=>{const s=Nt({},n.attributes);n=new t.NodeDataClass(r,s),t._nodes.set(r,n)}),t}copy(e){if(e=e||{},typeof e.type=="string"&&e.type!==this.type&&e.type!=="mixed")throw new ze(`Graph.copy: cannot create an incompatible copy from "${this.type}" type to "${e.type}" because this would mean losing information about the current graph.`);if(typeof e.multi=="boolean"&&e.multi!==this.multi&&e.multi!==!0)throw new ze("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if(typeof e.allowSelfLoops=="boolean"&&e.allowSelfLoops!==this.allowSelfLoops&&e.allowSelfLoops!==!0)throw new ze("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");const t=this.emptyCopy(e),n=this._edges.values();let r,s;for(;r=n.next(),r.done!==!0;)s=r.value,vd(t,"copy",!1,s.undirected,s.key,s.source.key,s.target.key,Nt({},s.attributes));return t}toJSON(){return this.export()}toString(){return"[object Graph]"}inspect(){const e={};this._nodes.forEach((s,o)=>{e[o]=s.attributes});const t={},n={};this._edges.forEach((s,o)=>{const a=s.undirected?"--":"->";let l="",c=s.source.key,u=s.target.key,f;s.undirected&&c>u&&(f=c,c=u,u=f);const d=`(${c})${a}(${u})`;o.startsWith("geid_")?this.multi&&(typeof n[d]>"u"?n[d]=0:n[d]++,l+=`${n[d]}. `):l+=`[${o}]: `,l+=d,t[l]=s.attributes});const r={};for(const s in this)this.hasOwnProperty(s)&&!au.has(s)&&typeof this[s]!="function"&&typeof s!="symbol"&&(r[s]=this[s]);return r.attributes=this._attributes,r.nodes=e,r.edges=t,pn(r,"constructor",this.constructor),r}}typeof Symbol<"u"&&(Et.prototype[Symbol.for("nodejs.util.inspect.custom")]=Et.prototype.inspect);l1.forEach(i=>{["add","merge","update"].forEach(e=>{const t=i.name(e),n=e==="add"?vd:f1;i.generateKey?Et.prototype[t]=function(r,s,o){return n(this,t,!0,(i.type||this.type)==="undirected",null,r,s,o,e==="update")}:Et.prototype[t]=function(r,s,o,a){return n(this,t,!1,(i.type||this.type)==="undirected",r,s,o,a,e==="update")}})});ww(Et);Pw(Et);Xw(Et);t1(Et);class bd extends Et{constructor(e){const t=Nt({type:"directed"},e);if("multi"in t&&t.multi!==!1)throw new Ae("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="directed")throw new Ae('DirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class wd extends Et{constructor(e){const t=Nt({type:"undirected"},e);if("multi"in t&&t.multi!==!1)throw new Ae("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="undirected")throw new Ae('UndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class yd extends Et{constructor(e){const t=Nt({multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Ae("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");super(t)}}class rl extends Et{constructor(e){const t=Nt({type:"directed",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Ae("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="directed")throw new Ae('MultiDirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class xd extends Et{constructor(e){const t=Nt({type:"undirected",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Ae("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="undirected")throw new Ae('MultiUndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}function Ir(i){i.from=function(e,t){const n=Nt({},e.options,t),r=new i(n);return r.import(e),r}}Ir(Et);Ir(bd);Ir(wd);Ir(yd);Ir(rl);Ir(xd);Et.Graph=Et;Et.DirectedGraph=bd;Et.UndirectedGraph=wd;Et.MultiGraph=yd;Et.MultiDirectedGraph=rl;Et.MultiUndirectedGraph=xd;Et.InvalidArgumentsGraphError=Ae;Et.NotFoundGraphError=he;Et.UsageGraphError=ze;function cu(i){var t;let e=new rl;return e.import({attributes:{name:(t=i.id)!=null?t:"name-"+Math.floor(Math.random()*1e9),id:i.name},options:{allowSelfLoops:!0,multi:!0,type:"directed"},nodes:i.nodes.map(n=>({key:n.id,attributes:{...n}})),edges:i.links.map(n=>{let r=typeof n.source=="string"?n.source:n.source.id,s=typeof n.target=="string"?n.target:n.target.id;return{key:n.key,source:r,target:s,undirected:!1,attributes:{...n}}})}),e}function uu(i,e){i.updateEachNodeAttributes((r,s)=>{var o;return{...s,x:s.x*e,y:s.y*e,z:s.z*e,maxAbsFC:(o=s==null?void 0:s.maxAbsFC)!=null?o:0}});const t=new Intl.Collator("en",{numeric:!0,sensitivity:"base"});let n=[];return i.forEachNode(r=>{i.forEachNeighbor(r,s=>{if(n.includes(s))return;let o=0;i.someEdge(r,s,a=>{i.setEdgeAttribute(a,"multiNumber",o),o++}),i.someEdge(r,s,a=>{i.setEdgeAttribute(a,"multiTotal",o)})}),n.push(r)}),i.updateEachEdgeAttributes((r,s,o,a,l,c)=>{const u=t.compare(o,a),f=s.multiTotal,d=s.multiNumber;let m=0,g=0;f>1&&(m=.5,g=d/f*2*Math.PI,u===1&&(g=Math.PI-g)),u===0&&(m=.5);let h=new G(l.x,l.y,l.z),p=new G(c.x,c.y,c.z),_=h.lerp(p,.5),b=p.clone().add(h.clone().multiplyScalar(-1)),y=new eo().setFromVector3(b);const w=new G().subVectors(p,h),x=new K0(w.clone().normalize(),p),M=new G(x.rotation.x,x.rotation.y,x.rotation.z);return{curve:m,curveRotation:g,isFirstLink:d===0,cylLength:2*y.radius,cylPos:_,cylRot:M,dotForwards:p.dot(h),...s}}),i}function d1(i,e){let t=e.data;if(t===void 0)return i.updateEachEdgeAttributes((n,r)=>(r.fc=void 0,r.err=void 0,r)),i;{let n=t.sort((s,o)=>s.site===o.site?0:s.site==="Pan-specific"?-1:1),r=Object.fromEntries(i.mapNodes(s=>[s,0]));return i.updateEachEdgeAttributes((s,o,a,l,c,u)=>{var g;let f=n.slice().find(h=>h.targetid===l),d=n.slice().find(h=>h.targetid===l&&h.site===o.substratePhosphosite);d!==void 0&&(f=d),o.fc=f==null?void 0:f.fc,o.err=f==null?void 0:f.err;let m=Math.abs((g=o==null?void 0:o.fc)!=null?g:0);return m>r[a]&&(r[a]=m),m>r[l]&&(r[l]=m),o}),i.updateEachNodeAttributes((s,o)=>({...o,maxAbsFC:r[s]})),i}}let to=ft(!1),Pa=ft(!1),no=ft(!0),io=ft(!0),ns=ft(2),Yr=ft(void 0),h1=ft(100),Ra=ft(void 0),Md=ft(void 0),is=Ln([Md,Ra,h1],(i,e)=>{if(!i[0])e(void 0);else{let t=uu(cu(i[0]),i[2]);t.setAttribute("hasFC",!1),t.setAttribute("id",i[0].id),console.log("reload"),console.log("id: ",i[0].id),e(t)}if(i[0]&&i[1]){console.log("setting FC");let t=uu(d1(cu(i[0]),i[1]),100);t.setAttribute("hasFC",!0),t.setAttribute("id",i[0].id+"_"+i[1].id),console.log("reload"),console.log("id-2: ",i[0].id+"_"+i[1].id),e(t)}});function fu(i){let e,t;return e=new qb({props:{transform:!0,sprite:!0,scale:2*i[6],pointerEvents:"none",$$slots:{default:[p1]},$$scope:{ctx:i}}}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,r){const s={};r&64&&(s.scale=2*n[6]),r&33554460&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function p1(i){let e,t,n,r,s;return{c(){e=Ce("div"),t=Ce("h1"),t.textContent=`${i[8].name}`,Q(e,"class",r=jt("base "+(i[2]?"neighbour ":"")+(i[4]?"clicked ":"")+(i[3]?"hovering ":""))+" svelte-1iujuck")},m(o,a){Me(o,e,a),le(e,t),s=!0},p(o,a){(!s||a&28&&r!==(r=jt("base "+(o[2]?"neighbour ":"")+(o[4]?"clicked ":"")+(o[3]?"hovering ":""))+" svelte-1iujuck"))&&Q(e,"class",r)},i(o){s||(xi(()=>{n||(n=ll(t,$c,{},!0)),n.run(1)}),s=!0)},o(o){n||(n=ll(t,$c,{},!1)),n.run(0),s=!1},d(o){o&&ye(e),o&&n&&n.end()}}}function m1(i){let e,t,n=!i[1]&&(i[6]>1||i[2]||i[4])&&fu(i);return{c(){n&&n.c(),e=$t()},m(r,s){n&&n.m(r,s),Me(r,e,s),t=!0},p(r,s){!r[1]&&(r[6]>1||r[2]||r[4])?n?(n.p(r,s),s&86&&X(n,1)):(n=fu(r),n.c(),X(n,1),n.m(e.parentNode,e)):n&&(Tt(),J(n,1,1,()=>{n=null}),Ct())},i(r){t||(X(n),t=!0)},o(r){J(n),t=!1},d(r){n&&n.d(r),r&&ye(e)}}}function g1(i){let e,t;return e=new Sb({props:{position:{...i[9]},scale:i[6],color:i[1]?new qe(5263440):i[7],$$slots:{default:[m1]},$$scope:{ctx:i}}}),e.$on("pointerenter",i[15]),e.$on("pointerleave",i[16]),e.$on("click",i[17]),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,[r]){const s={};r&64&&(s.scale=n[6]),r&130&&(s.color=n[1]?new qe(5263440):n[7]),r&33554526&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function _1(i,e,t){var F,L;let n,r,s,o,a;Ue(i,ns,I=>t(13,n=I)),Ue(i,Yr,I=>t(5,r=I)),Ue(i,is,I=>t(14,s=I));let{graph:l}=e,{nodeID:c}=e,{greyedOut:u}=e;const f={kinase:"#FF3E00",substrate:"#008080",selected:"#FED000",Kinase:void 0,"Ser/Thr/Tyr Kinase":void 0,"Tyr Kinase":void 0,"Ser/Thr Kinase":void 0,Unclassified:void 0,Transcription:void 0,Regulatory:"#FFC0CB",Structural:void 0,Metabolic:void 0,Phosphatase:void 0,"Adapter/scaffold":void 0,Cytosketetal:void 0},d=l.getNodeAttributes(c),m=l.neighbors(c);let g=!1;const h={x:d.x,y:d.y,z:d.z},p=(F=d.radius)!=null?F:1;let _=!1,b=!1;const y=Qc(p);Ue(i,y,I=>t(6,o=I));const w=Qc(0);let x;d.isKinase?x=f.kinase:x=f.substrate;let M=new qe((L=f[d.type])!=null?L:x),P=new qe(f.selected);const v=Ln(w,I=>new qe().lerpColors(M,P,I));Ue(i,v,I=>t(7,a=I));const E=()=>{t(3,_=!0),Kt(Yr,r=c,r)},S=()=>{t(3,_=!1),Kt(Yr,r=void 0,r)},O=()=>{t(4,b=!b)};return i.$$set=I=>{"graph"in I&&t(12,l=I.graph),"nodeID"in I&&t(0,c=I.nodeID),"greyedOut"in I&&t(1,u=I.greyedOut)},i.$$.update=()=>{if(i.$$.dirty&24613)if(r){let I=s.getAttribute("hasFC");t(2,g=m.includes(r)),I&&g&&t(2,g=s.reduceEdges(r,c,(k,R,W)=>Math.abs(W.fc)>n,!1)||s.reduceEdges(c,r,(k,R,W)=>Math.abs(W.fc)>n,!1))}else t(2,g=!1);i.$$.dirty&30&&(!u&&(_||g||b)?(y.set(p*3,{duration:50,easing:Kc}),_&&w.set(1,{duration:0})):(y.set(p,{duration:250,easing:Kc}),w.set(0,{duration:250})))},[c,u,g,_,b,r,o,a,d,h,y,v,l,n,s,E,S,O]}class Sd extends tt{constructor(e){super(),et(this,e,_1,g1,Ze,{graph:12,nodeID:0,greyedOut:1})}}function du(i,e,t){const n=i.slice();return n[7]=e[t],n}function hu(i,e,t){const n=i.slice();return n[7]=e[t],n}function pu(i,e){let t,n,r;return n=new Sd({props:{graph:e[4],nodeID:e[7],greyedOut:!1}}),{key:i,first:null,c(){t=$t(),Oe(n.$$.fragment),this.first=t},m(s,o){Me(s,t,o),Pe(n,s,o),r=!0},p(s,o){e=s;const a={};o&16&&(a.graph=e[4]),o&8&&(a.nodeID=e[7]),n.$set(a)},i(s){r||(X(n.$$.fragment,s),r=!0)},o(s){J(n.$$.fragment,s),r=!1},d(s){s&&ye(t),Re(n,s)}}}function v1(i){let e=[],t=new Map,n,r,s=i[3][0];const o=a=>a[7]+"_"+String(a[4].getAttribute("id"));for(let a=0;a<s.length;a+=1){let l=hu(i,s,a),c=o(l);t.set(c,e[a]=pu(c,l))}return{c(){for(let a=0;a<e.length;a+=1)e[a].c();n=$t()},m(a,l){for(let c=0;c<e.length;c+=1)e[c].m(a,l);Me(a,n,l),r=!0},p(a,l){l&24&&(s=a[3][0],Tt(),e=pf(e,l,o,1,a,s,t,n.parentNode,hf,pu,n,hu),Ct())},i(a){if(!r){for(let l=0;l<s.length;l+=1)X(e[l]);r=!0}},o(a){for(let l=0;l<e.length;l+=1)J(e[l]);r=!1},d(a){for(let l=0;l<e.length;l+=1)e[l].d(a);a&&ye(n)}}}function mu(i){let e,t;return e=new Jf({props:{geometry:i[0],material:i[2],ignorePointer:!0,$$slots:{default:[b1]},$$scope:{ctx:i}}}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,r){const s={};r&1&&(s.geometry=n[0]),r&4&&(s.material=n[2]),r&4120&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function gu(i,e){let t,n,r;return n=new Sd({props:{graph:e[4],nodeID:e[7],greyedOut:!0}}),{key:i,first:null,c(){t=$t(),Oe(n.$$.fragment),this.first=t},m(s,o){Me(s,t,o),Pe(n,s,o),r=!0},p(s,o){e=s;const a={};o&16&&(a.graph=e[4]),o&8&&(a.nodeID=e[7]),n.$set(a)},i(s){r||(X(n.$$.fragment,s),r=!0)},o(s){J(n.$$.fragment,s),r=!1},d(s){s&&ye(t),Re(n,s)}}}function b1(i){let e=[],t=new Map,n,r,s=i[3][1];const o=a=>a[7]+"_ghost_"+String(a[4].getAttribute("id"));for(let a=0;a<s.length;a+=1){let l=du(i,s,a),c=o(l);t.set(c,e[a]=gu(c,l))}return{c(){for(let a=0;a<e.length;a+=1)e[a].c();n=$t()},m(a,l){for(let c=0;c<e.length;c+=1)e[c].m(a,l);Me(a,n,l),r=!0},p(a,l){l&24&&(s=a[3][1],Tt(),e=pf(e,l,o,1,a,s,t,n.parentNode,hf,gu,n,du),Ct())},i(a){if(!r){for(let l=0;l<s.length;l+=1)X(e[l]);r=!0}},o(a){for(let l=0;l<e.length;l+=1)J(e[l]);r=!1},d(a){for(let l=0;l<e.length;l+=1)e[l].d(a);a&&ye(n)}}}function w1(i){let e,t,n,r;e=new Jf({props:{geometry:i[0],material:i[1],interactive:!0,$$slots:{default:[v1]},$$scope:{ctx:i}}});let s=i[5]&&mu(i);return{c(){Oe(e.$$.fragment),t=ke(),s&&s.c(),n=$t()},m(o,a){Pe(e,o,a),Me(o,t,a),s&&s.m(o,a),Me(o,n,a),r=!0},p(o,[a]){const l={};a&1&&(l.geometry=o[0]),a&2&&(l.material=o[1]),a&4120&&(l.$$scope={dirty:a,ctx:o}),e.$set(l),o[5]?s?(s.p(o,a),a&32&&X(s,1)):(s=mu(o),s.c(),X(s,1),s.m(n.parentNode,n)):s&&(Tt(),J(s,1,1,()=>{s=null}),Ct())},i(o){r||(X(e.$$.fragment,o),X(s),r=!0)},o(o){J(e.$$.fragment,o),J(s),r=!1},d(o){Re(e,o),o&&ye(t),s&&s.d(o),o&&ye(n)}}}function y1(i,e,t){let n=new Set,r=new Set,s=i.getAttribute("hasFC");i.forEachEdge((l,c,u,f,d,m)=>{var g,h;!c.isFirstLink||u===f||(s?t?Math.abs((g=c==null?void 0:c.fc)!=null?g:0)>e?(n.add(u),n.add(f)):(r.add(u),r.add(f)):Math.abs((h=c==null?void 0:c.fc)!=null?h:0)>e?(d.isKinase&&n.add(u),m.isKinase&&n.add(f)):(d.isKinase&&r.add(u),m.isKinase&&r.add(f)):t?(n.add(u),n.add(f)):(d.isKinase&&n.add(u),m.isKinase&&n.add(f)))}),r=new Set([...r].filter(l=>!n.has(l)));let o=Array(...n),a=Array(...r);return[o,a]}function x1(i,e,t){let n,r,s;Ue(i,is,u=>t(4,r=u)),Ue(i,io,u=>t(5,s=u));let{nodeGeometry:o}=e,{nodeMaterial:a}=e,{transparentMaterial:l}=e,c=Ln([is,ns,no],(u,f)=>{f(y1(u[0],u[1],u[2]))});return Ue(i,c,u=>t(3,n=u)),i.$$set=u=>{"nodeGeometry"in u&&t(0,o=u.nodeGeometry),"nodeMaterial"in u&&t(1,a=u.nodeMaterial),"transparentMaterial"in u&&t(2,l=u.transparentMaterial)},[o,a,l,n,r,s,c]}class M1 extends tt{constructor(e){super(),et(this,e,x1,w1,Ze,{nodeGeometry:0,nodeMaterial:1,transparentMaterial:2})}}function _u(i){let e,t,n,r;return e=new ts({props:{mesh:i[3],ignorePointer:!0}}),n=new ts({props:{mesh:i[1],ignorePointer:!0}}),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment)},m(s,o){Pe(e,s,o),Me(s,t,o),Pe(n,s,o),r=!0},p(s,o){const a={};o&8&&(a.mesh=s[3]),e.$set(a);const l={};o&2&&(l.mesh=s[1]),n.$set(l)},i(s){r||(X(e.$$.fragment,s),X(n.$$.fragment,s),r=!0)},o(s){J(e.$$.fragment,s),J(n.$$.fragment,s),r=!1},d(s){Re(e,s),s&&ye(t),Re(n,s)}}}function S1(i){let e,t,n,r,s,o=i[4]&&_u(i);return t=new ts({props:{mesh:i[2],ignorePointer:!0}}),r=new ts({props:{mesh:i[0],ignorePointer:!0}}),{c(){o&&o.c(),e=ke(),Oe(t.$$.fragment),n=ke(),Oe(r.$$.fragment)},m(a,l){o&&o.m(a,l),Me(a,e,l),Pe(t,a,l),Me(a,n,l),Pe(r,a,l),s=!0},p(a,[l]){a[4]?o?(o.p(a,l),l&16&&X(o,1)):(o=_u(a),o.c(),X(o,1),o.m(e.parentNode,e)):o&&(Tt(),J(o,1,1,()=>{o=null}),Ct());const c={};l&4&&(c.mesh=a[2]),t.$set(c);const u={};l&1&&(u.mesh=a[0]),r.$set(u)},i(a){s||(X(o),X(t.$$.fragment,a),X(r.$$.fragment,a),s=!0)},o(a){J(o),J(t.$$.fragment,a),J(r.$$.fragment,a),s=!1},d(a){o&&o.d(a),a&&ye(e),Re(t,a),a&&ye(n),Re(r,a)}}}const Vs=10;function E1(i,e,t){let n,r,s;Ue(i,ns,w=>t(10,n=w)),Ue(i,Yr,w=>t(11,r=w)),Ue(i,io,w=>t(4,s=w));let{graph:o}=e,{width:a}=e,{showSubstrates:l}=e,{geometry:c}=e,{material:u}=e;const f=new qe(2781850),d=new qe(16738573),m=f.clone().lerp(d,.5).offsetHSL(0,-255,0),g=new qe(16699392);let h,p,_,b,y=new Xa(1,1,10);return i.$$set=w=>{"graph"in w&&t(5,o=w.graph),"width"in w&&t(6,a=w.width),"showSubstrates"in w&&t(7,l=w.showSubstrates),"geometry"in w&&t(8,c=w.geometry),"material"in w&&t(9,u=w.material)},i.$$.update=()=>{if(i.$$.dirty&4079&&(o||r)){const w=new Xs({opacity:.05,transparent:!0,color:m});t(0,h=new _r(c,u,1e4)),t(1,p=new _r(c,w,1e4)),t(2,_=new _r(y,u,1e4)),t(3,b=new _r(y,w,1e4));let x=o.getAttribute("hasFC"),M=0,P=0;o.forEachEdge((v,E,S,O,F,L)=>{var ge,je,K;if(!E.isFirstLink||S===O||!l&&!(F.isKinase&&L.isKinase))return;let I=!1;(r==S||r==O)&&(I=!0);const k=new G(F.x,F.y,F.z),R=new G(L.x,L.y,L.z),W=(ge=F.radius)!=null?ge:1,Y=(je=L.radius)!=null?je:1,H=new G().subVectors(R,k),B=H.length(),j=k.clone().lerp(R.clone(),W/B),ne=k.clone().lerp(R.clone(),1-(Y+Vs+W)/B),oe=k.clone().lerp(R.clone(),1-(Y+Vs/2+W)/B),me=j.clone().lerp(ne.clone(),.5),be=ne.clone().add(j.clone().multiplyScalar(-1)),V=new eo().setFromVector3(be);let ce=new yt,Se=new Ei;Se.setFromUnitVectors(new G(0,1,0),H.normalize()),ce.compose(me,Se,new G(a,V.radius,a));let ue=new yt;if(ue.compose(oe,Se,new G(1.5,Vs,1.5)),!x)h.setMatrixAt(M,ce),h.setColorAt(M,I?g:m),_.setMatrixAt(M,ue),_.setColorAt(M,I?g:m),M++;else{let ae=(K=E==null?void 0:E.fc)!=null?K:0,He=Math.min(Math.max(Math.abs(ae),.1)/4,1),Fe=3*a*He;Fe=Math.abs(ae)>n?Fe:.25;let dt=Math.max(1.5*Fe,.2);if(ce.compose(me,Se,new G(Fe,V.radius,Fe)),ue.compose(oe,Se,new G(dt,Vs,dt)),Math.abs(ae)>n){let xt=ae>0?d:ae<0?f:m;h.setMatrixAt(M,ce),h.setColorAt(M,xt),_.setMatrixAt(M,ue),_.setColorAt(M,xt),M++}else p.setMatrixAt(P,ce),b.setMatrixAt(P,ue),P++}})}},[h,p,_,b,s,o,a,l,c,u,n,r]}class A1 extends tt{constructor(e){super(),et(this,e,E1,S1,Ze,{graph:5,width:6,showSubstrates:7,geometry:8,material:9})}}function T1(i){let e,t;return e=new Jv({props:{autoRotate:i[0],enableZoom:!0,enableDamping:!1}}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,r){const s={};r&1&&(s.autoRotate=n[0]),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function vu(i){let e,t,n,r;return e=new A1({props:{geometry:i[5],material:i[6],width:D1,graph:i[1],showSubstrates:i[2]}}),n=new M1({props:{nodeGeometry:i[3],nodeMaterial:i[4],transparentMaterial:i[7]}}),{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment)},m(s,o){Pe(e,s,o),Me(s,t,o),Pe(n,s,o),r=!0},p(s,o){const a={};o&2&&(a.graph=s[1]),o&4&&(a.showSubstrates=s[2]),e.$set(a)},i(s){r||(X(e.$$.fragment,s),X(n.$$.fragment,s),r=!0)},o(s){J(e.$$.fragment,s),J(n.$$.fragment,s),r=!1},d(s){Re(e,s),s&&ye(t),Re(n,s)}}}function C1(i){let e,t,n,r,s,o,a,l;e=new qv({props:{fov:50,far:1e10,position:{x:40,y:20,z:40},lookAt:{},$$slots:{default:[T1]},$$scope:{ctx:i}}}),n=new cb({props:{color:16777215,intensity:.6,position:{x:500,y:500,z:500}}}),s=new sb({props:{color:10066329}});let c=i[1]&&vu(i);return{c(){Oe(e.$$.fragment),t=ke(),Oe(n.$$.fragment),r=ke(),Oe(s.$$.fragment),o=ke(),c&&c.c(),a=$t()},m(u,f){Pe(e,u,f),Me(u,t,f),Pe(n,u,f),Me(u,r,f),Pe(s,u,f),Me(u,o,f),c&&c.m(u,f),Me(u,a,f),l=!0},p(u,[f]){const d={};f&257&&(d.$$scope={dirty:f,ctx:u}),e.$set(d),u[1]?c?(c.p(u,f),f&2&&X(c,1)):(c=vu(u),c.c(),X(c,1),c.m(a.parentNode,a)):c&&(Tt(),J(c,1,1,()=>{c=null}),Ct())},i(u){l||(X(e.$$.fragment,u),X(n.$$.fragment,u),X(s.$$.fragment,u),X(c),l=!0)},o(u){J(e.$$.fragment,u),J(n.$$.fragment,u),J(s.$$.fragment,u),J(c),l=!1},d(u){Re(e,u),u&&ye(t),Re(n,u),u&&ye(r),Re(s,u),u&&ye(o),c&&c.d(u),u&&ye(a)}}}const L1=2,D1=.5,P1=5;function R1(i,e,t){let n,r,s;Ue(i,Pa,f=>t(0,n=f)),Ue(i,is,f=>t(1,r=f)),Ue(i,no,f=>t(2,s=f));const o=new Za(L1,2),a=new Xs({opacity:.8,transparent:!1}),l=new us(1,1,1,P1,1,!1),c=new Xs({opacity:.6,transparent:!0,color:"#9DAABC"}),u=new Xs({opacity:.1,transparent:!0,color:"#9DAABC"});return[n,r,s,o,a,l,c,u]}class I1 extends tt{constructor(e){super(),et(this,e,R1,C1,Ze,{})}}const O1="modulepreload",k1=function(i,e){return new URL(i,e).href},bu={},ga=function(e,t,n){return!t||t.length===0?e():Promise.all(t.map(r=>{if(r=k1(r,n),r in bu)return;bu[r]=!0;const s=r.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${o}`))return;const a=document.createElement("link");if(a.rel=s?"stylesheet":O1,s||(a.as="script",a.crossOrigin=""),a.href=r,document.head.appendChild(a),s)return new Promise((l,c)=>{a.addEventListener("load",l),a.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e())};function N1(i){let e,t,n,r,s,o,a,l;const c=i[7].default,u=mt(c,i,i[6],null);return{c(){e=Ce("aside"),t=Ce("div"),n=ke(),r=Ce("div"),u&&u.c(),Q(t,"class","overlay svelte-1c92i6o"),Q(r,"class",s="panel "+i[1]+" svelte-1c92i6o"),st(r,"size",i[2]),Q(e,"class","drawer svelte-1c92i6o"),Q(e,"style",i[3]),st(e,"open",i[0])},m(f,d){Me(f,e,d),le(e,t),le(e,n),le(e,r),u&&u.m(r,null),o=!0,a||(l=$e(t,"click",i[4]),a=!0)},p(f,[d]){u&&u.p&&(!o||d&64)&&_t(u,c,f,f[6],o?gt(c,f[6],d,null):vt(f[6]),null),(!o||d&2&&s!==(s="panel "+f[1]+" svelte-1c92i6o"))&&Q(r,"class",s),(!o||d&6)&&st(r,"size",f[2]),(!o||d&8)&&Q(e,"style",f[3]),(!o||d&1)&&st(e,"open",f[0])},i(f){o||(X(u,f),o=!0)},o(f){J(u,f),o=!1},d(f){f&&ye(e),u&&u.d(f),a=!1,l()}}}function F1(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{open:o=!1}=e,{duration:a=.2}=e,{placement:l="left"}=e,{size:c=null}=e,u=!1;const f=Ti();function d(g){if(u){const h=document.querySelector("body");h.style.overflow=g?"hidden":"auto"}}function m(){f("clickAway")}return ss(()=>{u=!0,d(o)}),i.$$set=g=>{"open"in g&&t(0,o=g.open),"duration"in g&&t(5,a=g.duration),"placement"in g&&t(1,l=g.placement),"size"in g&&t(2,c=g.size),"$$scope"in g&&t(6,s=g.$$scope)},i.$$.update=()=>{i.$$.dirty&36&&t(3,n=`--duration: ${a}s; --size: ${c};`),i.$$.dirty&1&&d(o)},[o,l,c,n,m,a,s,r]}class z1 extends tt{constructor(e){super(),et(this,e,F1,N1,Ze,{open:0,duration:5,placement:1,size:2})}}function Eo(i){return i.split("-")[0]}function Ed(i){return i.split("-")[1]}function sl(i){return["top","bottom"].includes(Eo(i))?"x":"y"}function U1(i){return i==="y"?"height":"width"}function G1(i){return{top:0,right:0,bottom:0,left:0,...i}}function B1(i){return typeof i!="number"?G1(i):{top:i,right:i,bottom:i,left:i}}function wu(i){return{...i,top:i.y,left:i.x,right:i.x+i.width,bottom:i.y+i.height}}async function Ad(i,e){var t;e===void 0&&(e={});const{x:n,y:r,platform:s,rects:o,elements:a,strategy:l}=i,{boundary:c="clippingAncestors",rootBoundary:u="viewport",elementContext:f="floating",altBoundary:d=!1,padding:m=0}=e,g=B1(m),p=a[d?f==="floating"?"reference":"floating":f],_=wu(await s.getClippingRect({element:(t=await(s.isElement==null?void 0:s.isElement(p)))==null||t?p:p.contextElement||await(s.getDocumentElement==null?void 0:s.getDocumentElement(a.floating)),boundary:c,rootBoundary:u,strategy:l})),b=wu(s.convertOffsetParentRelativeRectToViewportRelativeRect?await s.convertOffsetParentRelativeRectToViewportRelativeRect({rect:f==="floating"?{...o.floating,x:n,y:r}:o.reference,offsetParent:await(s.getOffsetParent==null?void 0:s.getOffsetParent(a.floating)),strategy:l}):o[f]);return{top:_.top-b.top+g.top,bottom:b.bottom-_.bottom+g.bottom,left:_.left-b.left+g.left,right:b.right-_.right+g.right}}const V1=Math.min,H1=Math.max;function yu(i,e,t){return H1(i,V1(e,t))}const W1={left:"right",right:"left",bottom:"top",top:"bottom"};function ro(i){return i.replace(/left|right|bottom|top/g,e=>W1[e])}function j1(i,e,t){t===void 0&&(t=!1);const n=Ed(i),r=sl(i),s=U1(r);let o=r==="x"?n===(t?"end":"start")?"right":"left":n==="start"?"bottom":"top";return e.reference[s]>e.floating[s]&&(o=ro(o)),{main:o,cross:ro(o)}}const q1={start:"end",end:"start"};function xu(i){return i.replace(/start|end/g,e=>q1[e])}function X1(i){const e=ro(i);return[xu(i),e,xu(e)]}const Y1=function(i){return i===void 0&&(i={}),{name:"flip",options:i,async fn(e){var t;const{placement:n,middlewareData:r,rects:s,initialPlacement:o,platform:a,elements:l}=e,{mainAxis:c=!0,crossAxis:u=!0,fallbackPlacements:f,fallbackStrategy:d="bestFit",flipAlignment:m=!0,...g}=i,h=Eo(n),_=f||(h===o||!m?[ro(o)]:X1(o)),b=[o,..._],y=await Ad(e,g),w=[];let x=((t=r.flip)==null?void 0:t.overflows)||[];if(c&&w.push(y[h]),u){const{main:E,cross:S}=j1(n,s,await(a.isRTL==null?void 0:a.isRTL(l.floating)));w.push(y[E],y[S])}if(x=[...x,{placement:n,overflows:w}],!w.every(E=>E<=0)){var M,P;const E=((M=(P=r.flip)==null?void 0:P.index)!=null?M:0)+1,S=b[E];if(S)return{data:{index:E,overflows:x},reset:{placement:S}};let O="bottom";switch(d){case"bestFit":{var v;const F=(v=x.map(L=>[L,L.overflows.filter(I=>I>0).reduce((I,k)=>I+k,0)]).sort((L,I)=>L[1]-I[1])[0])==null?void 0:v[0].placement;F&&(O=F);break}case"initialPlacement":O=o;break}if(n!==O)return{reset:{placement:O}}}return{}}}};async function Z1(i,e){const{placement:t,platform:n,elements:r}=i,s=await(n.isRTL==null?void 0:n.isRTL(r.floating)),o=Eo(t),a=Ed(t),l=sl(t)==="x",c=["left","top"].includes(o)?-1:1,u=s&&l?-1:1,f=typeof e=="function"?e(i):e;let{mainAxis:d,crossAxis:m,alignmentAxis:g}=typeof f=="number"?{mainAxis:f,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...f};return a&&typeof g=="number"&&(m=a==="end"?g*-1:g),l?{x:m*u,y:d*c}:{x:d*c,y:m*u}}const K1=function(i){return i===void 0&&(i=0),{name:"offset",options:i,async fn(e){const{x:t,y:n}=e,r=await Z1(e,i);return{x:t+r.x,y:n+r.y,data:r}}}};function J1(i){return i==="x"?"y":"x"}const Q1=function(i){return i===void 0&&(i={}),{name:"shift",options:i,async fn(e){const{x:t,y:n,placement:r}=e,{mainAxis:s=!0,crossAxis:o=!1,limiter:a={fn:p=>{let{x:_,y:b}=p;return{x:_,y:b}}},...l}=i,c={x:t,y:n},u=await Ad(e,l),f=sl(Eo(r)),d=J1(f);let m=c[f],g=c[d];if(s){const p=f==="y"?"top":"left",_=f==="y"?"bottom":"right",b=m+u[p],y=m-u[_];m=yu(b,m,y)}if(o){const p=d==="y"?"top":"left",_=d==="y"?"bottom":"right",b=g+u[p],y=g-u[_];g=yu(b,g,y)}const h=a.fn({...e,[f]:m,[d]:g});return{...h,data:{x:h.x-t,y:h.y-n}}}}};function Td(i){return i.split("-")[0]}function $1(i){return i.split("-")[1]}function ey(i){return["top","bottom"].includes(Td(i))?"x":"y"}function ty(i){return i==="y"?"height":"width"}function Mu(i,e,t){let{reference:n,floating:r}=i;const s=n.x+n.width/2-r.width/2,o=n.y+n.height/2-r.height/2,a=ey(e),l=ty(a),c=n[l]/2-r[l]/2,u=Td(e),f=a==="x";let d;switch(u){case"top":d={x:s,y:n.y-r.height};break;case"bottom":d={x:s,y:n.y+n.height};break;case"right":d={x:n.x+n.width,y:o};break;case"left":d={x:n.x-r.width,y:o};break;default:d={x:n.x,y:n.y}}switch($1(e)){case"start":d[a]-=c*(t&&f?-1:1);break;case"end":d[a]+=c*(t&&f?-1:1);break}return d}const ny=async(i,e,t)=>{const{placement:n="bottom",strategy:r="absolute",middleware:s=[],platform:o}=t,a=await(o.isRTL==null?void 0:o.isRTL(e));let l=await o.getElementRects({reference:i,floating:e,strategy:r}),{x:c,y:u}=Mu(l,n,a),f=n,d={},m=0;for(let g=0;g<s.length;g++){const{name:h,fn:p}=s[g],{x:_,y:b,data:y,reset:w}=await p({x:c,y:u,initialPlacement:n,placement:f,strategy:r,middlewareData:d,rects:l,platform:o,elements:{reference:i,floating:e}});if(c=_!=null?_:c,u=b!=null?b:u,d={...d,[h]:{...d[h],...y}},w&&m<=50){m++,typeof w=="object"&&(w.placement&&(f=w.placement),w.rects&&(l=w.rects===!0?await o.getElementRects({reference:i,floating:e,strategy:r}):w.rects),{x:c,y:u}=Mu(l,f,a)),g=-1;continue}}return{x:c,y:u,placement:f,strategy:r,middlewareData:d}};function Su(i){return{...i,top:i.y,left:i.x,right:i.x+i.width,bottom:i.y+i.height}}function Cd(i){return i&&i.document&&i.location&&i.alert&&i.setInterval}function ai(i){if(i==null)return window;if(!Cd(i)){const e=i.ownerDocument;return e&&e.defaultView||window}return i}function hs(i){return ai(i).getComputedStyle(i)}function ri(i){return Cd(i)?"":i?(i.nodeName||"").toLowerCase():""}function Ld(){const i=navigator.userAgentData;return i!=null&&i.brands?i.brands.map(e=>e.brand+"/"+e.version).join(" "):navigator.userAgent}function Hn(i){return i instanceof ai(i).HTMLElement}function Ai(i){return i instanceof ai(i).Element}function iy(i){return i instanceof ai(i).Node}function ol(i){if(typeof ShadowRoot>"u")return!1;const e=ai(i).ShadowRoot;return i instanceof e||i instanceof ShadowRoot}function Ao(i){const{overflow:e,overflowX:t,overflowY:n}=hs(i);return/auto|scroll|overlay|hidden/.test(e+n+t)}function ry(i){return["table","td","th"].includes(ri(i))}function Dd(i){const e=/firefox/i.test(Ld()),t=hs(i);return t.transform!=="none"||t.perspective!=="none"||t.contain==="paint"||["transform","perspective"].includes(t.willChange)||e&&t.willChange==="filter"||e&&(t.filter?t.filter!=="none":!1)}function Pd(){return!/^((?!chrome|android).)*safari/i.test(Ld())}const Eu=Math.min,Zr=Math.max,so=Math.round;function si(i,e,t){var n,r,s,o;e===void 0&&(e=!1),t===void 0&&(t=!1);const a=i.getBoundingClientRect();let l=1,c=1;e&&Hn(i)&&(l=i.offsetWidth>0&&so(a.width)/i.offsetWidth||1,c=i.offsetHeight>0&&so(a.height)/i.offsetHeight||1);const u=Ai(i)?ai(i):window,f=!Pd()&&t,d=(a.left+(f&&(n=(r=u.visualViewport)==null?void 0:r.offsetLeft)!=null?n:0))/l,m=(a.top+(f&&(s=(o=u.visualViewport)==null?void 0:o.offsetTop)!=null?s:0))/c,g=a.width/l,h=a.height/c;return{width:g,height:h,top:m,right:d+g,bottom:m+h,left:d,x:d,y:m}}function Ci(i){return((iy(i)?i.ownerDocument:i.document)||window.document).documentElement}function To(i){return Ai(i)?{scrollLeft:i.scrollLeft,scrollTop:i.scrollTop}:{scrollLeft:i.pageXOffset,scrollTop:i.pageYOffset}}function Rd(i){return si(Ci(i)).left+To(i).scrollLeft}function sy(i){const e=si(i);return so(e.width)!==i.offsetWidth||so(e.height)!==i.offsetHeight}function oy(i,e,t){const n=Hn(e),r=Ci(e),s=si(i,n&&sy(e),t==="fixed");let o={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if(n||!n&&t!=="fixed")if((ri(e)!=="body"||Ao(r))&&(o=To(e)),Hn(e)){const l=si(e,!0);a.x=l.x+e.clientLeft,a.y=l.y+e.clientTop}else r&&(a.x=Rd(r));return{x:s.left+o.scrollLeft-a.x,y:s.top+o.scrollTop-a.y,width:s.width,height:s.height}}function Id(i){return ri(i)==="html"?i:i.assignedSlot||i.parentNode||(ol(i)?i.host:null)||Ci(i)}function Au(i){return!Hn(i)||getComputedStyle(i).position==="fixed"?null:i.offsetParent}function ay(i){let e=Id(i);for(ol(e)&&(e=e.host);Hn(e)&&!["html","body"].includes(ri(e));){if(Dd(e))return e;e=e.parentNode}return null}function Ia(i){const e=ai(i);let t=Au(i);for(;t&&ry(t)&&getComputedStyle(t).position==="static";)t=Au(t);return t&&(ri(t)==="html"||ri(t)==="body"&&getComputedStyle(t).position==="static"&&!Dd(t))?e:t||ay(i)||e}function Tu(i){if(Hn(i))return{width:i.offsetWidth,height:i.offsetHeight};const e=si(i);return{width:e.width,height:e.height}}function ly(i){let{rect:e,offsetParent:t,strategy:n}=i;const r=Hn(t),s=Ci(t);if(t===s)return e;let o={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if((r||!r&&n!=="fixed")&&((ri(t)!=="body"||Ao(s))&&(o=To(t)),Hn(t))){const l=si(t,!0);a.x=l.x+t.clientLeft,a.y=l.y+t.clientTop}return{...e,x:e.x-o.scrollLeft+a.x,y:e.y-o.scrollTop+a.y}}function cy(i,e){const t=ai(i),n=Ci(i),r=t.visualViewport;let s=n.clientWidth,o=n.clientHeight,a=0,l=0;if(r){s=r.width,o=r.height;const c=Pd();(c||!c&&e==="fixed")&&(a=r.offsetLeft,l=r.offsetTop)}return{width:s,height:o,x:a,y:l}}function uy(i){var e;const t=Ci(i),n=To(i),r=(e=i.ownerDocument)==null?void 0:e.body,s=Zr(t.scrollWidth,t.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),o=Zr(t.scrollHeight,t.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0);let a=-n.scrollLeft+Rd(i);const l=-n.scrollTop;return hs(r||t).direction==="rtl"&&(a+=Zr(t.clientWidth,r?r.clientWidth:0)-s),{width:s,height:o,x:a,y:l}}function Od(i){const e=Id(i);return["html","body","#document"].includes(ri(e))?i.ownerDocument.body:Hn(e)&&Ao(e)?e:Od(e)}function oo(i,e){var t;e===void 0&&(e=[]);const n=Od(i),r=n===((t=i.ownerDocument)==null?void 0:t.body),s=ai(n),o=r?[s].concat(s.visualViewport||[],Ao(n)?n:[]):n,a=e.concat(o);return r?a:a.concat(oo(o))}function fy(i,e){const t=e.getRootNode==null?void 0:e.getRootNode();if(i.contains(e))return!0;if(t&&ol(t)){let n=e;do{if(n&&i===n)return!0;n=n.parentNode||n.host}while(n)}return!1}function dy(i,e){const t=si(i,!1,e==="fixed"),n=t.top+i.clientTop,r=t.left+i.clientLeft;return{top:n,left:r,x:r,y:n,right:r+i.clientWidth,bottom:n+i.clientHeight,width:i.clientWidth,height:i.clientHeight}}function Cu(i,e,t){return e==="viewport"?Su(cy(i,t)):Ai(e)?dy(e,t):Su(uy(Ci(i)))}function hy(i){const e=oo(i),n=["absolute","fixed"].includes(hs(i).position)&&Hn(i)?Ia(i):i;return Ai(n)?e.filter(r=>Ai(r)&&fy(r,n)&&ri(r)!=="body"):[]}function py(i){let{element:e,boundary:t,rootBoundary:n,strategy:r}=i;const o=[...t==="clippingAncestors"?hy(e):[].concat(t),n],a=o[0],l=o.reduce((c,u)=>{const f=Cu(e,u,r);return c.top=Zr(f.top,c.top),c.right=Eu(f.right,c.right),c.bottom=Eu(f.bottom,c.bottom),c.left=Zr(f.left,c.left),c},Cu(e,a,r));return{width:l.right-l.left,height:l.bottom-l.top,x:l.left,y:l.top}}const my={getClippingRect:py,convertOffsetParentRelativeRectToViewportRelativeRect:ly,isElement:Ai,getDimensions:Tu,getOffsetParent:Ia,getDocumentElement:Ci,getElementRects:i=>{let{reference:e,floating:t,strategy:n}=i;return{reference:oy(e,Ia(t),n),floating:{...Tu(t),x:0,y:0}}},getClientRects:i=>Array.from(i.getClientRects()),isRTL:i=>hs(i).direction==="rtl"};function gy(i,e,t,n){n===void 0&&(n={});const{ancestorScroll:r=!0,ancestorResize:s=!0,elementResize:o=!0,animationFrame:a=!1}=n,l=r&&!a,c=s&&!a,u=l||c?[...Ai(i)?oo(i):[],...oo(e)]:[];u.forEach(h=>{l&&h.addEventListener("scroll",t,{passive:!0}),c&&h.addEventListener("resize",t)});let f=null;if(o){let h=!0;f=new ResizeObserver(()=>{h||t(),h=!1}),Ai(i)&&!a&&f.observe(i),f.observe(e)}let d,m=a?si(i):null;a&&g();function g(){const h=si(i);m&&(h.x!==m.x||h.y!==m.y||h.width!==m.width||h.height!==m.height)&&t(),m=h,d=requestAnimationFrame(g)}return t(),()=>{var h;u.forEach(p=>{l&&p.removeEventListener("scroll",t),c&&p.removeEventListener("resize",t)}),(h=f)==null||h.disconnect(),f=null,a&&cancelAnimationFrame(d)}}const _y=(i,e,t)=>ny(i,e,{platform:my,...t});function vy(i){let e,t;const n={autoUpdate:!0};let r=i;const s=c=>({...n,...i||{},...c||{}}),o=c=>{e&&t&&(r=s(c),_y(e,t,r).then(u=>{Object.assign(t.style,{position:u.strategy,left:`${u.x}px`,top:`${u.y}px`}),r!=null&&r.onComputed&&r.onComputed(u)}))};return[c=>{e=c,o()},(c,u)=>{let f;t=c,r=s(u),setTimeout(()=>o(u),0),o(u);const d=()=>{f&&(f(),f=void 0)},m=({autoUpdate:g}=r||{})=>{if(d(),g!==!1)return gy(e,t,()=>o(r),g===!0?{}:g)};return f=m(),{update(g){o(g),f=m(g)},destroy(){d()}}},o]}function by({loadOptions:i,filterText:e,items:t,multiple:n,value:r,itemId:s,groupBy:o,itemFilter:a,convertStringItemsToObjects:l,filterGroupedItems:c,label:u}){if(t&&i&&e.length>0)return t;if(!t)return[];t&&t.length>0&&typeof t[0]!="object"&&(t=l(t));let f=t.filter(d=>{let m=a(d[u],e,d);return m&&n&&(r==null?void 0:r.length)&&(m=!r.some(g=>g[s]===d[s])),m});return o&&(f=c(f)),f}async function wy({dispatch:i,loadOptions:e,convertStringItemsToObjects:t,filterText:n}){let r=await e(n).catch(s=>{console.warn("svelte-select loadOptions error :>> ",s),i("error",{type:"loadOptions",details:s})});if(r&&!r.cancelled)return r?(r&&r.length>0&&typeof r[0]!="object"&&(r=t(r)),i("loaded",{items:r})):r=[],{filteredItems:r,loading:!1,focused:!0,listOpen:!0}}function yy(i){let e,t;return{c(){e=Dn("svg"),t=Dn("path"),Q(t,"fill","currentColor"),Q(t,"d",`M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747
          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0
          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502
          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0
          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z`),Q(e,"width","100%"),Q(e,"height","100%"),Q(e,"viewBox","0 0 20 20"),Q(e,"focusable","false"),Q(e,"aria-hidden","true"),Q(e,"class","svelte-qbd276")},m(n,r){Me(n,e,r),le(e,t)},p:ot,i:ot,o:ot,d(n){n&&ye(e)}}}class xy extends tt{constructor(e){super(),et(this,e,null,yy,Ze,{})}}function My(i){let e,t;return{c(){e=Dn("svg"),t=Dn("path"),Q(t,"fill","currentColor"),Q(t,"d",`M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124
    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z`),Q(e,"width","100%"),Q(e,"height","100%"),Q(e,"viewBox","-2 -2 50 50"),Q(e,"focusable","false"),Q(e,"aria-hidden","true"),Q(e,"role","presentation"),Q(e,"class","svelte-whdbu1")},m(n,r){Me(n,e,r),le(e,t)},p:ot,i:ot,o:ot,d(n){n&&ye(e)}}}class ao extends tt{constructor(e){super(),et(this,e,null,My,Ze,{})}}function Sy(i){let e,t;return{c(){e=Dn("svg"),t=Dn("circle"),Q(t,"class","circle_path svelte-1p3nqvd"),Q(t,"cx","50"),Q(t,"cy","50"),Q(t,"r","20"),Q(t,"fill","none"),Q(t,"stroke","currentColor"),Q(t,"stroke-width","5"),Q(t,"stroke-miterlimit","10"),Q(e,"class","loading svelte-1p3nqvd"),Q(e,"viewBox","25 25 50 50")},m(n,r){Me(n,e,r),le(e,t)},p:ot,i:ot,o:ot,d(n){n&&ye(e)}}}class Ey extends tt{constructor(e){super(),et(this,e,null,Sy,Ze,{})}}function Lu(i,e,t){const n=i.slice();return n[115]=e[t],n}const Ay=i=>({listOpen:i[0]&64}),Du=i=>({listOpen:i[6]}),Ty=i=>({}),Pu=i=>({}),Cy=i=>({}),Ru=i=>({}),Ly=i=>({selection:i[0]&8}),Iu=i=>({selection:i[3]});function Ou(i,e,t){const n=i.slice();return n[115]=e[t],n[119]=t,n}const Dy=i=>({}),ku=i=>({}),Py=i=>({selection:i[0]&8}),Nu=i=>({selection:i[115]}),Ry=i=>({}),Fu=i=>({}),Iy=i=>({}),zu=i=>({});function Uu(i,e,t){const n=i.slice();return n[115]=e[t],n[119]=t,n}const Oy=i=>({item:i[0]&4194304}),Gu=i=>({item:i[115],index:i[119]}),ky=i=>({filteredItems:i[0]&4194304}),Bu=i=>({filteredItems:i[22]});function Vu(i){let e,t,n,r,s,o;const a=[zy,Fy,Ny],l=[];function c(u,f){return u[48].list?0:u[22].length>0?1:u[15]?-1:2}return~(t=c(i))&&(n=l[t]=a[t](i)),{c(){e=Ce("div"),n&&n.c(),Q(e,"class","svelte-select-list svelte-1gwhqva")},m(u,f){Me(u,e,f),~t&&l[t].m(e,null),i[85](e),r=!0,s||(o=[yi(i[47].call(null,e)),$e(e,"scroll",i[39]),$e(e,"pointerdown",Mr(Wi(i[81])))],s=!0)},p(u,f){let d=t;t=c(u),t===d?~t&&l[t].p(u,f):(n&&(Tt(),J(l[d],1,1,()=>{l[d]=null}),Ct()),~t?(n=l[t],n?n.p(u,f):(n=l[t]=a[t](u),n.c()),X(n,1),n.m(e,null)):n=null)},i(u){r||(X(n),r=!0)},o(u){J(n),r=!1},d(u){u&&ye(e),~t&&l[t].d(),i[85](null),s=!1,Gt(o)}}}function Ny(i){let e;const t=i[77].empty,n=mt(t,i,i[76],zu),r=n||Uy();return{c(){r&&r.c()},m(s,o){r&&r.m(s,o),e=!0},p(s,o){n&&n.p&&(!e||o[2]&16384)&&_t(n,t,s,s[76],e?gt(t,s[76],o,Iy):vt(s[76]),zu)},i(s){e||(X(r,s),e=!0)},o(s){J(r,s),e=!1},d(s){r&&r.d(s)}}}function Fy(i){let e,t,n=i[22],r=[];for(let o=0;o<n.length;o+=1)r[o]=Hu(Uu(i,n,o));const s=o=>J(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=$t()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);Me(o,e,a),t=!0},p(o,a){if(a[0]&206572552|a[1]&7168|a[2]&16384){n=o[22];let l;for(l=0;l<n.length;l+=1){const c=Uu(o,n,l);r[l]?(r[l].p(c,a),X(r[l],1)):(r[l]=Hu(c),r[l].c(),X(r[l],1),r[l].m(e.parentNode,e))}for(Tt(),l=n.length;l<r.length;l+=1)s(l);Ct()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)X(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)J(r[a]);t=!1},d(o){ka(r,o),o&&ye(e)}}}function zy(i){let e;const t=i[77].list,n=mt(t,i,i[76],Bu);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[0]&4194304|s[2]&16384)&&_t(n,t,r,r[76],e?gt(t,r[76],s,ky):vt(r[76]),Bu)},i(r){e||(X(n,r),e=!0)},o(r){J(n,r),e=!1},d(r){n&&n.d(r)}}}function Uy(i){let e;return{c(){e=Ce("div"),e.textContent="No options",Q(e,"class","empty svelte-1gwhqva")},m(t,n){Me(t,e,n)},p:ot,d(t){t&&ye(e)}}}function Gy(i){var n;let e=((n=i[115])==null?void 0:n[i[10]])+"",t;return{c(){t=Ot(e)},m(r,s){Me(r,t,s)},p(r,s){var o;s[0]&4195328&&e!==(e=((o=r[115])==null?void 0:o[r[10]])+"")&&Fn(t,e)},d(r){r&&ye(t)}}}function Hu(i){let e,t,n,r,s,o,a,l;const c=i[77].item,u=mt(c,i,i[76],Gu),f=u||Gy(i);function d(){return i[82](i[119])}function m(){return i[83](i[119])}function g(){return i[84](i[115],i[119])}return{c(){var h;e=Ce("div"),t=Ce("div"),f&&f.c(),s=ke(),Q(t,"class","item svelte-1gwhqva"),st(t,"list-group-title",i[115].groupHeader),st(t,"active",i[43](i[115],i[3],i[11])),st(t,"first",Ky(i[119])),st(t,"hover",i[20]===i[119]),st(t,"group-item",i[115].groupItem),st(t,"not-selectable",((h=i[115])==null?void 0:h.selectable)===!1),Q(e,"class","list-item svelte-1gwhqva"),Q(e,"tabindex","-1")},m(h,p){Me(h,e,p),le(e,t),f&&f.m(t,null),le(e,s),o=!0,a||(l=[yi(n=i[44].call(null,t,{scroll:i[43](i[115],i[3],i[11]),listMounted:i[27]})),yi(r=i[45].call(null,t,{scroll:i[26]===i[119],listMounted:i[27]})),$e(e,"mouseover",d),$e(e,"focus",m),$e(e,"click",Mr(g))],a=!0)},p(h,p){var _;i=h,u?u.p&&(!o||p[0]&4194304|p[2]&16384)&&_t(u,c,i,i[76],o?gt(c,i[76],p,Oy):vt(i[76]),Gu):f&&f.p&&(!o||p[0]&4195328)&&f.p(i,o?p:[-1,-1,-1,-1]),n&&ni(n.update)&&p[0]&138414088&&n.update.call(null,{scroll:i[43](i[115],i[3],i[11]),listMounted:i[27]}),r&&ni(r.update)&&p[0]&201326592&&r.update.call(null,{scroll:i[26]===i[119],listMounted:i[27]}),(!o||p[0]&4194304)&&st(t,"list-group-title",i[115].groupHeader),(!o||p[0]&4196360|p[1]&4096)&&st(t,"active",i[43](i[115],i[3],i[11])),(!o||p[0]&1048576)&&st(t,"hover",i[20]===i[119]),(!o||p[0]&4194304)&&st(t,"group-item",i[115].groupItem),(!o||p[0]&4194304)&&st(t,"not-selectable",((_=i[115])==null?void 0:_.selectable)===!1)},i(h){o||(X(f,h),o=!0)},o(h){J(f,h),o=!1},d(h){h&&ye(e),f&&f.d(h),a=!1,Gt(l)}}}function Wu(i){let e,t,n,r,s;return{c(){e=Ce("span"),t=Ot(i[29]),n=ke(),r=Ce("span"),s=Ot(i[28]),Q(e,"id","aria-selection"),Q(e,"class","svelte-1gwhqva"),Q(r,"id","aria-context"),Q(r,"class","svelte-1gwhqva")},m(o,a){Me(o,e,a),le(e,t),Me(o,n,a),Me(o,r,a),le(r,s)},p(o,a){a[0]&536870912&&Fn(t,o[29]),a[0]&268435456&&Fn(s,o[28])},d(o){o&&ye(e),o&&ye(n),o&&ye(r)}}}function ju(i){let e,t,n,r;const s=[Vy,By],o=[];function a(l,c){return l[7]?0:1}return e=a(i),t=o[e]=s[e](i),{c(){t.c(),n=$t()},m(l,c){o[e].m(l,c),Me(l,n,c),r=!0},p(l,c){let u=e;e=a(l),e===u?o[e].p(l,c):(Tt(),J(o[u],1,1,()=>{o[u]=null}),Ct(),t=o[e],t?t.p(l,c):(t=o[e]=s[e](l),t.c()),X(t,1),t.m(n.parentNode,n))},i(l){r||(X(t),r=!0)},o(l){J(t),r=!1},d(l){o[e].d(l),l&&ye(n)}}}function By(i){let e,t;const n=i[77].selection,r=mt(n,i,i[76],Iu),s=r||Hy(i);return{c(){e=Ce("div"),s&&s.c(),Q(e,"class","selected-item svelte-1gwhqva"),st(e,"hide-selected-item",i[33])},m(o,a){Me(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r?r.p&&(!t||a[0]&8|a[2]&16384)&&_t(r,n,o,o[76],t?gt(n,o[76],a,Ly):vt(o[76]),Iu):s&&s.p&&(!t||a[0]&1032)&&s.p(o,t?a:[-1,-1,-1,-1]),(!t||a[1]&4)&&st(e,"hide-selected-item",o[33])},i(o){t||(X(s,o),t=!0)},o(o){J(s,o),t=!1},d(o){o&&ye(e),s&&s.d(o)}}}function Vy(i){let e,t,n=i[3],r=[];for(let o=0;o<n.length;o+=1)r[o]=Xu(Ou(i,n,o));const s=o=>J(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=$t()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);Me(o,e,a),t=!0},p(o,a){if(a[0]&16779016|a[1]&8|a[2]&16384){n=o[3];let l;for(l=0;l<n.length;l+=1){const c=Ou(o,n,l);r[l]?(r[l].p(c,a),X(r[l],1)):(r[l]=Xu(c),r[l].c(),X(r[l],1),r[l].m(e.parentNode,e))}for(Tt(),l=n.length;l<r.length;l+=1)s(l);Ct()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)X(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)J(r[a]);t=!1},d(o){ka(r,o),o&&ye(e)}}}function Hy(i){let e=i[3][i[10]]+"",t;return{c(){t=Ot(e)},m(n,r){Me(n,t,r)},p(n,r){r[0]&1032&&e!==(e=n[3][n[10]]+"")&&Fn(t,e)},d(n){n&&ye(t)}}}function Wy(i){let e=i[115][i[10]]+"",t;return{c(){t=Ot(e)},m(n,r){Me(n,t,r)},p(n,r){r[0]&1032&&e!==(e=n[115][n[10]]+"")&&Fn(t,e)},d(n){n&&ye(t)}}}function qu(i){let e,t,n,r;const s=i[77]["multi-clear-icon"],o=mt(s,i,i[76],ku),a=o||jy();function l(){return i[86](i[119])}return{c(){e=Ce("div"),a&&a.c(),Q(e,"class","multi-item-clear svelte-1gwhqva")},m(c,u){Me(c,e,u),a&&a.m(e,null),t=!0,n||(r=[$e(e,"pointerdown",Mr(Wi(i[80]))),$e(e,"click",l)],n=!0)},p(c,u){i=c,o&&o.p&&(!t||u[2]&16384)&&_t(o,s,i,i[76],t?gt(s,i[76],u,Dy):vt(i[76]),ku)},i(c){t||(X(a,c),t=!0)},o(c){J(a,c),t=!1},d(c){c&&ye(e),a&&a.d(c),n=!1,Gt(r)}}}function jy(i){let e,t;return e=new ao({}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Xu(i){let e,t,n,r,s,o,a;const l=i[77].selection,c=mt(l,i,i[76],Nu),u=c||Wy(i);let f=!i[9]&&!i[8]&&ao&&qu(i);function d(){return i[87](i[119])}return{c(){e=Ce("div"),t=Ce("span"),u&&u.c(),n=ke(),f&&f.c(),r=ke(),Q(t,"class","multi-item-text svelte-1gwhqva"),Q(e,"class","multi-item svelte-1gwhqva"),st(e,"active",i[24]===i[119]),st(e,"disabled",i[9])},m(m,g){Me(m,e,g),le(e,t),u&&u.m(t,null),le(e,n),f&&f.m(e,null),le(e,r),s=!0,o||(a=$e(e,"click",Wi(d)),o=!0)},p(m,g){i=m,c?c.p&&(!s||g[0]&8|g[2]&16384)&&_t(c,l,i,i[76],s?gt(l,i[76],g,Py):vt(i[76]),Nu):u&&u.p&&(!s||g[0]&1032)&&u.p(i,s?g:[-1,-1,-1,-1]),!i[9]&&!i[8]&&ao?f?(f.p(i,g),g[0]&768&&X(f,1)):(f=qu(i),f.c(),X(f,1),f.m(e,r)):f&&(Tt(),J(f,1,1,()=>{f=null}),Ct()),(!s||g[0]&16777216)&&st(e,"active",i[24]===i[119]),(!s||g[0]&512)&&st(e,"disabled",i[9])},i(m){s||(X(u,m),X(f),s=!0)},o(m){J(u,m),J(f),s=!1},d(m){m&&ye(e),u&&u.d(m),f&&f.d(),o=!1,a()}}}function Yu(i){let e,t;const n=i[77]["loading-icon"],r=mt(n,i,i[76],Ru),s=r||qy();return{c(){e=Ce("div"),s&&s.c(),Q(e,"class","icon loading svelte-1gwhqva"),Q(e,"aria-hidden","true")},m(o,a){Me(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r&&r.p&&(!t||a[2]&16384)&&_t(r,n,o,o[76],t?gt(n,o[76],a,Cy):vt(o[76]),Ru)},i(o){t||(X(s,o),t=!0)},o(o){J(s,o),t=!1},d(o){o&&ye(e),s&&s.d(o)}}}function qy(i){let e,t;return e=new Ey({}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Zu(i){let e,t,n,r;const s=i[77]["clear-icon"],o=mt(s,i,i[76],Pu),a=o||Xy();return{c(){e=Ce("div"),a&&a.c(),Q(e,"class","icon clear-select svelte-1gwhqva"),Q(e,"aria-hidden","true")},m(l,c){Me(l,e,c),a&&a.m(e,null),t=!0,n||(r=[$e(e,"click",Mr(Wi(i[19]))),$e(e,"pointerdown",Mr(Wi(i[79])))],n=!0)},p(l,c){o&&o.p&&(!t||c[2]&16384)&&_t(o,s,l,l[76],t?gt(s,l[76],c,Ty):vt(l[76]),Pu)},i(l){t||(X(a,l),t=!0)},o(l){J(a,l),t=!1},d(l){l&&ye(e),a&&a.d(l),n=!1,Gt(r)}}}function Xy(i){let e,t;return e=new ao({}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Ku(i){let e,t;const n=i[77]["chevron-icon"],r=mt(n,i,i[76],Du),s=r||Yy();return{c(){e=Ce("div"),s&&s.c(),Q(e,"class","icon chevron svelte-1gwhqva"),Q(e,"aria-hidden","true")},m(o,a){Me(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r&&r.p&&(!t||a[0]&64|a[2]&16384)&&_t(r,n,o,o[76],t?gt(n,o[76],a,Ay):vt(o[76]),Du)},i(o){t||(X(s,o),t=!0)},o(o){J(s,o),t=!1},d(o){o&&ye(e),s&&s.d(o)}}}function Yy(i){let e,t;return e=new xy({}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function Ju(i){let e,t,n;return{c(){e=Ce("input"),Q(e,"name",t=i[16].name),Q(e,"type","hidden"),e.value=n=i[3]?i[3][i[11]]:null,Q(e,"class","svelte-1gwhqva")},m(r,s){Me(r,e,s)},p(r,s){s[0]&65536&&t!==(t=r[16].name)&&Q(e,"name",t),s[0]&2056&&n!==(n=r[3]?r[3][r[11]]:null)&&(e.value=n)},d(r){r&&ye(e)}}}function Qu(i){let e,t=i[3],n=[];for(let r=0;r<t.length;r+=1)n[r]=$u(Lu(i,t,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=$t()},m(r,s){for(let o=0;o<n.length;o+=1)n[o].m(r,s);Me(r,e,s)},p(r,s){if(s[0]&67592){t=r[3];let o;for(o=0;o<t.length;o+=1){const a=Lu(r,t,o);n[o]?n[o].p(a,s):(n[o]=$u(a),n[o].c(),n[o].m(e.parentNode,e))}for(;o<n.length;o+=1)n[o].d(1);n.length=t.length}},d(r){ka(n,r),r&&ye(e)}}}function $u(i){let e,t,n;return{c(){e=Ce("input"),Q(e,"name",t=i[16].name),Q(e,"type","hidden"),e.value=n=i[115]?i[115][i[11]]:null,Q(e,"class","svelte-1gwhqva")},m(r,s){Me(r,e,s)},p(r,s){s[0]&65536&&t!==(t=r[16].name)&&Q(e,"name",t),s[0]&2056&&n!==(n=r[115]?r[115][r[11]]:null)&&(e.value=n)},d(r){r&&ye(e)}}}function Zy(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p,_,b,y,w=i[6]&&Vu(i),x=i[2]&&Wu(i);const M=i[77].prepend,P=mt(M,i,i[76],Fu);let v=i[23]&&ju(i),E=[{readOnly:c=!i[13]},i[25],{placeholder:i[31]},{style:i[14]},{disabled:i[9]}],S={};for(let R=0;R<E.length;R+=1)S=xr(S,E[R]);let O=i[5]&&Yu(i),F=i[32]&&Zu(i),L=i[17]&&Ku(i),I=(!i[7]||i[7]&&!i[30])&&Ju(i),k=i[7]&&i[30]&&Qu(i);return{c(){e=Ce("div"),w&&w.c(),t=ke(),n=Ce("span"),x&&x.c(),r=ke(),P&&P.c(),s=ke(),o=Ce("div"),v&&v.c(),a=ke(),l=Ce("input"),u=ke(),f=Ce("div"),O&&O.c(),d=ke(),F&&F.c(),m=ke(),L&&L.c(),g=ke(),I&&I.c(),h=ke(),k&&k.c(),Q(n,"aria-live","polite"),Q(n,"aria-atomic","false"),Q(n,"aria-relevant","additions text"),Q(n,"class","a11y-text svelte-1gwhqva"),Sr(l,S),st(l,"svelte-1gwhqva",!0),Q(o,"class","value-container svelte-1gwhqva"),Q(f,"class","indicators svelte-1gwhqva"),Q(e,"class",p="svelte-select "+i[18]+" svelte-1gwhqva"),Q(e,"style",i[12]),st(e,"multi",i[7]),st(e,"disabled",i[9]),st(e,"focused",i[2]),st(e,"list-open",i[6]),st(e,"show-chevron",i[17])},m(R,W){Me(R,e,W),w&&w.m(e,null),le(e,t),le(e,n),x&&x.m(n,null),le(e,r),P&&P.m(e,null),le(e,s),le(e,o),v&&v.m(o,null),le(o,a),le(o,l),l.autofocus&&l.focus(),i[88](l),Zs(l,i[4]),le(e,u),le(e,f),O&&O.m(f,null),le(f,d),F&&F.m(f,null),le(f,m),L&&L.m(f,null),le(e,g),I&&I.m(e,null),le(e,h),k&&k.m(e,null),i[90](e),_=!0,b||(y=[$e(window,"click",i[40]),$e(window,"keydown",i[35]),$e(l,"keydown",i[35]),$e(l,"blur",i[37]),$e(l,"focus",i[36]),$e(l,"input",i[89]),$e(e,"pointerdown",Wi(i[38])),$e(e,"click",Mr(Wi(i[78]))),yi(i[46].call(null,e))],b=!0)},p(R,W){R[6]?w?(w.p(R,W),W[0]&64&&X(w,1)):(w=Vu(R),w.c(),X(w,1),w.m(e,t)):w&&(Tt(),J(w,1,1,()=>{w=null}),Ct()),R[2]?x?x.p(R,W):(x=Wu(R),x.c(),x.m(n,null)):x&&(x.d(1),x=null),P&&P.p&&(!_||W[2]&16384)&&_t(P,M,R,R[76],_?gt(M,R[76],W,Ry):vt(R[76]),Fu),R[23]?v?(v.p(R,W),W[0]&8388608&&X(v,1)):(v=ju(R),v.c(),X(v,1),v.m(o,a)):v&&(Tt(),J(v,1,1,()=>{v=null}),Ct()),Sr(l,S=za(E,[(!_||W[0]&8192&&c!==(c=!R[13]))&&{readOnly:c},W[0]&33554432&&R[25],(!_||W[1]&1)&&{placeholder:R[31]},(!_||W[0]&16384)&&{style:R[14]},(!_||W[0]&512)&&{disabled:R[9]}])),W[0]&16&&l.value!==R[4]&&Zs(l,R[4]),st(l,"svelte-1gwhqva",!0),R[5]?O?(O.p(R,W),W[0]&32&&X(O,1)):(O=Yu(R),O.c(),X(O,1),O.m(f,d)):O&&(Tt(),J(O,1,1,()=>{O=null}),Ct()),R[32]?F?(F.p(R,W),W[1]&2&&X(F,1)):(F=Zu(R),F.c(),X(F,1),F.m(f,m)):F&&(Tt(),J(F,1,1,()=>{F=null}),Ct()),R[17]?L?(L.p(R,W),W[0]&131072&&X(L,1)):(L=Ku(R),L.c(),X(L,1),L.m(f,null)):L&&(Tt(),J(L,1,1,()=>{L=null}),Ct()),!R[7]||R[7]&&!R[30]?I?I.p(R,W):(I=Ju(R),I.c(),I.m(e,h)):I&&(I.d(1),I=null),R[7]&&R[30]?k?k.p(R,W):(k=Qu(R),k.c(),k.m(e,null)):k&&(k.d(1),k=null),(!_||W[0]&262144&&p!==(p="svelte-select "+R[18]+" svelte-1gwhqva"))&&Q(e,"class",p),(!_||W[0]&4096)&&Q(e,"style",R[12]),(!_||W[0]&262272)&&st(e,"multi",R[7]),(!_||W[0]&262656)&&st(e,"disabled",R[9]),(!_||W[0]&262148)&&st(e,"focused",R[2]),(!_||W[0]&262208)&&st(e,"list-open",R[6]),(!_||W[0]&393216)&&st(e,"show-chevron",R[17])},i(R){_||(X(w),X(P,R),X(v),X(O),X(F),X(L),_=!0)},o(R){J(w),J(P,R),J(v),J(O),J(F),J(L),_=!1},d(R){R&&ye(e),w&&w.d(),x&&x.d(),P&&P.d(R),v&&v.d(),i[88](null),O&&O.d(),F&&F.d(),L&&L.d(),I&&I.d(),k&&k.d(),i[90](null),b=!1,Gt(y)}}}function ef(i){return i.map((e,t)=>({index:t,value:e,label:`${e}`}))}function Ky(i){return i===0}function Jy(i){return i.groupHeader&&i.selectable||i.selectable||!i.hasOwnProperty("selectable")}function tf(i){return{update(e){e.scroll&&i.scrollIntoView({behavior:"auto",block:"nearest",inline:"start"})}}}function Qy(i,e,t){let n,r,s,o,a,l,c,u,f,{$$slots:d={},$$scope:m}=e;const g=Nd(d),h=Ti();let{justValue:p=null}=e,{filter:_=by}=e,{getItems:b=wy}=e,{id:y=null}=e,{container:w=void 0}=e,{input:x=void 0}=e,{multiple:M=!1}=e,{multiFullItemClearable:P=!1}=e,{disabled:v=!1}=e,{focused:E=!1}=e,{value:S=null}=e,{filterText:O=""}=e,{placeholder:F="Please select"}=e,{placeholderAlwaysShow:L=!1}=e,{items:I=null}=e,{label:k="label"}=e,{itemFilter:R=(N,De)=>`${N}`.toLowerCase().includes(De.toLowerCase())}=e,{groupBy:W=void 0}=e,{groupFilter:Y=N=>N}=e,{groupHeaderSelectable:H=!1}=e,{itemId:B="value"}=e,{loadOptions:j=void 0}=e,{containerStyles:ne=""}=e,{createGroupHeaderItem:oe=(N,De)=>({value:N,label:N})}=e;const me=()=>u;let{searchable:be=!0}=e,{inputStyles:V=""}=e,{clearable:ce=!0}=e,{loading:Se=!1}=e,{listOpen:ue=!1}=e,ge,{debounce:je=(N,De=1)=>{clearTimeout(ge),ge=setTimeout(N,De)}}=e,{debounceWait:K=300}=e,{hideEmptyState:ae=!1}=e,{inputAttributes:He={}}=e,{listAutoWidth:Fe=!0}=e,{showChevron:dt=!1}=e,{listOffset:xt=5}=e,{class:bt=""}=e,Ie,Le,it,D,A=0;function $(){if(typeof S=="string"){let N=I.find(De=>De[B]===S);t(3,S=N||{[B]:S,label:S})}else M&&Array.isArray(S)&&S.length>0&&t(3,S=S.map(N=>typeof N=="string"?{value:N,label:N}:N))}let se;function fe(){t(25,se=Object.assign({autocapitalize:"none",autocomplete:"off",autocorrect:"off",spellcheck:!1,tabindex:0,type:"text","aria-autocomplete":"list"},He)),y&&t(25,se.id=y,se),be||t(25,se.readonly=!0,se)}function ve(N){const De=[],Pt={};N.forEach(Ki=>{const Xn=W(Ki);De.includes(Xn)||(De.push(Xn),Pt[Xn]=[],Xn&&Pt[Xn].push(Object.assign(oe(Xn,Ki),{id:Xn,groupHeader:!0,selectable:H}))),Pt[Xn].push(Object.assign({groupItem:!!Xn},Ki))});const qn=[];return Y(De).forEach(Ki=>{Pt[Ki]&&qn.push(...Pt[Ki])}),qn}function Ge(){if(M){JSON.stringify(S)!==JSON.stringify(Le)&&z()&&h("change",S);return}(!Le||JSON.stringify(S[B])!==JSON.stringify(Le[B]))&&h("change",S)}function T(){S&&(Array.isArray(S)?t(3,S=[...S]):t(3,S=[S]))}function re(){S&&t(3,S=null)}function de(){O.length!==0&&(t(2,E=!0),t(6,ue=!0),j?je(async function(){t(5,Se=!0);let N=await b({dispatch:h,loadOptions:j,convertStringItemsToObjects:ef,filterText:O});N?(t(5,Se=N.loading),t(2,E=N.focused),t(6,ue=N.listOpen),t(49,I=W?ve(N.filteredItems):N.filteredItems)):(t(5,Se=!1),t(2,E=!0),t(6,ue=!0))},K):(t(6,ue=!0),M&&t(24,Ie=void 0)))}jd(async()=>{t(73,Le=S),t(74,it=O),t(75,D=M)});function we(){return M?S?S.map(N=>N[B]):null:S&&S[B]}function z(){let N=!0;if(S){const De=[],Pt=[];S.forEach(qn=>{De.includes(qn[B])?N=!1:(De.push(qn[B]),Pt.push(qn))}),N||t(3,S=Pt)}return N}function Te(N){let De=N?N[B]:S[B];return I.find(Pt=>Pt[B]===De)}function Xe(N){!N||N.length===0||N.some(De=>typeof De!="object")||!S||(M?S.some(De=>!De||!De[B]):!S[B])||(Array.isArray(S)?t(3,S=S.map(De=>Te(De)||De)):t(3,S=Te()||S))}async function lt(N){const De=S[N];S.length===1?t(3,S=void 0):t(3,S=S.filter(Pt=>Pt!==De)),h("clear",De)}function U(N){if(!!E)switch(N.stopPropagation(),N.key){case"Escape":N.preventDefault(),ct();break;case"Enter":if(N.preventDefault(),ue){if(u.length===0)break;const De=u[A];if((De==null?void 0:De.selectable)===!1)break;if(S&&!M&&S[B]===De[B]){ct();break}else t(51,Di=A),C(u[A])}break;case"ArrowDown":N.preventDefault(),ue?ie(1):(t(20,A=0),t(6,ue=!0),t(24,Ie=void 0));break;case"ArrowUp":N.preventDefault(),ue?ie(-1):(t(6,ue=!0),t(24,Ie=void 0));break;case"Tab":if(ue&&E){if(u.length===0||S&&S[B]===u[A][B])return ct();N.preventDefault(),t(51,Di=A),C(u[A]),t(6,ue=!1)}break;case"Backspace":if(!M||O.length>0)return;if(M&&S&&S.length>0){if(lt(Ie!==void 0?Ie:S.length-1),Ie===0||Ie===void 0)break;t(24,Ie=S.length>Ie?Ie-1:void 0)}break;case"ArrowLeft":if(!S||!M||O.length>0)return;Ie===void 0?t(24,Ie=S.length-1):S.length>Ie&&Ie!==0&&t(24,Ie-=1);break;case"ArrowRight":if(!S||!M||O.length>0||Ie===void 0)return;Ie===S.length-1?t(24,Ie=void 0):Ie<S.length-1&&t(24,Ie+=1);break}}function pe(N){N&&h("focus",N),x.focus(),t(2,E=!0)}function ee(N){(ue||E)&&(h("blur",N),t(6,ue=!1),t(2,E=!1),t(24,Ie=void 0),x.blur())}function Ee(){v||(t(20,A=0),t(6,ue=!ue),ue&&!E&&pe())}function xe(){t(3,S=void 0),t(6,ue=!1),h("clear",S),pe()}ss(()=>{ue&&t(2,E=!0),E&&x&&x.focus()});function Qe(N){if(N){t(4,O="");const De=Object.assign({},N);(!De.groupHeader||De.selectable)&&(M?t(3,S=S?S.concat([De]):[De]):t(3,S=De),t(3,S),setTimeout(()=>{t(6,ue=!1),t(24,Ie=void 0),h("select",S)}))}}function ct(){t(4,O=""),t(6,ue=!1)}let{ariaValues:wt=N=>`Option ${N}, selected.`}=e,{ariaListOpen:en=(N,De)=>`You are currently focused on option ${N}. There are ${De} results available.`}=e,{ariaFocused:Mt=()=>"Select is focused, type to refine list, press down to open the menu."}=e;function Mn(N){let De;return N&&S.length>0?De=S.map(Pt=>Pt[k]).join(", "):De=S[k],wt(De)}function tn(){if(!u||u.length===0)return"";let N=u[A];if(ue&&N){let De=u?u.length:0;return en(N[k],De)}else return Mt()}let Zt=null,Li;function ps(){clearTimeout(Li),Li=setTimeout(()=>{ms=!1},100)}function Co(N){w&&!w.contains(N.target)&&!(Zt!=null&&Zt.contains(N.target))&&ee()}Rt(()=>{Zt==null||Zt.remove()});let{activeItemIndex:Di=0}=e,ms=!1;function C(N){N.isCreator||Qe(N)}function Z(N){ms||t(20,A=N)}function te(N){const{item:De,i:Pt}=N;if((De==null?void 0:De.selectable)!==!1){if(S&&!M&&S[B]===De[B])return ct();Jy(De)&&(t(51,Di=Pt),t(20,A=Pt),C(De))}}let q=0;function ie(N){N>0&&A===u.length-1?t(20,A=0):N<0&&A===0?t(20,A=u.length-1):t(20,A=A+N),t(26,q=A)}function Ne(N,De,Pt){if(!M)return De&&De[Pt]===N[Pt]}const Ve=tf,Ye=tf;function We(){const{width:N}=w.getBoundingClientRect();t(21,Zt.style.width=Fe?N+"px":"auto",Zt)}let{floatingConfig:rt={}}=e,Ke={strategy:"absolute",placement:"bottom-start",middleware:[K1(xt),Y1(),Q1()]};const[nt,At]=vy(Ke);function Wn(){Ke=Object.assign(Ke,rt)}function li(N){ut.call(this,i,N)}function ci(N){ut.call(this,i,N)}function fn(N){ut.call(this,i,N)}function at(N){ut.call(this,i,N)}const ui=N=>Z(N),Dt=N=>Z(N),nn=(N,De)=>te({item:N,i:De});function On(N){St[N?"unshift":"push"](()=>{Zt=N,t(21,Zt)})}const Pi=N=>lt(N),Or=N=>P?lt(N):{};function Bt(N){St[N?"unshift":"push"](()=>{x=N,t(1,x)})}function jn(){O=this.value,t(4,O),t(6,ue),t(2,E),t(1,x)}function kr(N){St[N?"unshift":"push"](()=>{w=N,t(0,w)})}return i.$$set=N=>{"justValue"in N&&t(50,p=N.justValue),"filter"in N&&t(52,_=N.filter),"getItems"in N&&t(53,b=N.getItems),"id"in N&&t(54,y=N.id),"container"in N&&t(0,w=N.container),"input"in N&&t(1,x=N.input),"multiple"in N&&t(7,M=N.multiple),"multiFullItemClearable"in N&&t(8,P=N.multiFullItemClearable),"disabled"in N&&t(9,v=N.disabled),"focused"in N&&t(2,E=N.focused),"value"in N&&t(3,S=N.value),"filterText"in N&&t(4,O=N.filterText),"placeholder"in N&&t(55,F=N.placeholder),"placeholderAlwaysShow"in N&&t(56,L=N.placeholderAlwaysShow),"items"in N&&t(49,I=N.items),"label"in N&&t(10,k=N.label),"itemFilter"in N&&t(57,R=N.itemFilter),"groupBy"in N&&t(58,W=N.groupBy),"groupFilter"in N&&t(59,Y=N.groupFilter),"groupHeaderSelectable"in N&&t(60,H=N.groupHeaderSelectable),"itemId"in N&&t(11,B=N.itemId),"loadOptions"in N&&t(61,j=N.loadOptions),"containerStyles"in N&&t(12,ne=N.containerStyles),"createGroupHeaderItem"in N&&t(62,oe=N.createGroupHeaderItem),"searchable"in N&&t(13,be=N.searchable),"inputStyles"in N&&t(14,V=N.inputStyles),"clearable"in N&&t(64,ce=N.clearable),"loading"in N&&t(5,Se=N.loading),"listOpen"in N&&t(6,ue=N.listOpen),"debounce"in N&&t(65,je=N.debounce),"debounceWait"in N&&t(66,K=N.debounceWait),"hideEmptyState"in N&&t(15,ae=N.hideEmptyState),"inputAttributes"in N&&t(16,He=N.inputAttributes),"listAutoWidth"in N&&t(67,Fe=N.listAutoWidth),"showChevron"in N&&t(17,dt=N.showChevron),"listOffset"in N&&t(68,xt=N.listOffset),"class"in N&&t(18,bt=N.class),"ariaValues"in N&&t(69,wt=N.ariaValues),"ariaListOpen"in N&&t(70,en=N.ariaListOpen),"ariaFocused"in N&&t(71,Mt=N.ariaFocused),"activeItemIndex"in N&&t(51,Di=N.activeItemIndex),"floatingConfig"in N&&t(72,rt=N.floatingConfig),"$$scope"in N&&t(76,m=N.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&8|i.$$.dirty[1]&262144&&S&&$(),i.$$.dirty[0]&73728&&(He||!be)&&fe(),i.$$.dirty[0]&128&&M&&T(),i.$$.dirty[0]&128|i.$$.dirty[2]&8192&&D&&!M&&re(),i.$$.dirty[0]&136&&M&&S&&S.length>1&&z(),i.$$.dirty[0]&8&&S&&Ge(),i.$$.dirty[0]&136|i.$$.dirty[2]&2048&&!S&&M&&Le&&h("change",S),i.$$.dirty[0]&6&&!E&&x&&t(6,ue=!1),i.$$.dirty[0]&64&&(ue||t(4,O="")),i.$$.dirty[0]&16|i.$$.dirty[2]&4096&&O!==it&&de(),i.$$.dirty[0]&136&&t(23,n=M?S&&S.length>0:S),i.$$.dirty[0]&8388624&&t(33,r=n&&O.length>0),i.$$.dirty[0]&8389152|i.$$.dirty[2]&4&&t(32,s=n&&ce&&!v&&!Se),i.$$.dirty[0]&136|i.$$.dirty[1]&50331648&&t(31,o=L&&M?F:S?"":F),i.$$.dirty[0]&136&&t(30,a=M&&S&&S.length>0),i.$$.dirty[0]&136&&t(29,l=S?Mn(M):""),i.$$.dirty[0]&3224|i.$$.dirty[1]&1277427712&&t(22,u=_({loadOptions:j,filterText:O,items:I,multiple:M,value:S,itemId:B,groupBy:W,label:k,itemFilter:R,convertStringItemsToObjects:ef,filterGroupedItems:ve})),i.$$.dirty[0]&4194304&&u&&t(20,A=0),i.$$.dirty[0]&5242948&&t(28,c=tn()),i.$$.dirty[1]&262144&&Xe(I),i.$$.dirty[0]&2184&&t(50,p=we()),i.$$.dirty[0]&136|i.$$.dirty[2]&2048&&!M&&Le&&!S&&h("change",S),i.$$.dirty[0]&2097217&&ue&&w&&Zt&&We(),i.$$.dirty[2]&1024&&Wn(),i.$$.dirty[0]&2097152&&t(27,f=!!Zt)},[w,x,E,S,O,Se,ue,M,P,v,k,B,ne,be,V,ae,He,dt,bt,xe,A,Zt,u,n,Ie,se,q,f,c,l,a,o,s,r,lt,U,pe,ee,Ee,ps,Co,Z,te,Ne,Ve,Ye,nt,At,g,I,p,Di,_,b,y,F,L,R,W,Y,H,j,oe,me,ce,je,K,Fe,xt,wt,en,Mt,rt,Le,it,D,m,d,li,ci,fn,at,ui,Dt,nn,On,Pi,Or,Bt,jn,kr]}class $y extends tt{constructor(e){super(),et(this,e,Qy,Zy,Ze,{justValue:50,filter:52,getItems:53,id:54,container:0,input:1,multiple:7,multiFullItemClearable:8,disabled:9,focused:2,value:3,filterText:4,placeholder:55,placeholderAlwaysShow:56,items:49,label:10,itemFilter:57,groupBy:58,groupFilter:59,groupHeaderSelectable:60,itemId:11,loadOptions:61,containerStyles:12,createGroupHeaderItem:62,getFilteredItems:63,searchable:13,inputStyles:14,clearable:64,loading:5,listOpen:6,debounce:65,debounceWait:66,hideEmptyState:15,inputAttributes:16,listAutoWidth:67,showChevron:17,listOffset:68,class:18,handleClear:19,ariaValues:69,ariaListOpen:70,ariaFocused:71,activeItemIndex:51,floatingConfig:72},null,[-1,-1,-1,-1])}get getFilteredItems(){return this.$$.ctx[63]}get handleClear(){return this.$$.ctx[19]}}function ex(i){let e,t,n,r,s,o,a;return{c(){e=Dn("svg"),t=Dn("g"),n=Dn("path"),r=Dn("g"),s=Dn("path"),Q(n,"d",`M372.939,264.641c-6.641,0-12.03,5.39-12.03,12.03v84.212H24.061v-84.212c0-6.641-5.39-12.03-12.03-12.03
        S0,270.031,0,276.671v96.242c0,6.641,5.39,12.03,12.03,12.03h360.909c6.641,0,12.03-5.39,12.03-12.03v-96.242
        C384.97,270.019,379.58,264.641,372.939,264.641z`),Q(t,"id","top"),Q(t,"class","svelte-192w7ff"),Q(s,"d",`M117.067,103.507l63.46-62.558v235.71c0,6.641,5.438,12.03,12.151,12.03c6.713,0,12.151-5.39,12.151-12.03V40.95
        l63.46,62.558c4.74,4.704,12.439,4.704,17.179,0c4.74-4.704,4.752-12.319,0-17.011l-84.2-82.997
        c-4.692-4.656-12.584-4.608-17.191,0L99.888,86.496c-4.752,4.704-4.74,12.319,0,17.011
        C104.628,108.211,112.327,108.211,117.067,103.507z`),Q(r,"id","bottom"),Q(r,"class",o=jt(i[0]?"active":"")+" svelte-192w7ff"),Q(e,"class",a=jt(i[0]?"active":"")+" svelte-192w7ff"),Q(e,"width","100%"),Q(e,"viewBox","0 0 385 385"),Q(e,"preserveAspectRatio","xMidYMid meet")},m(l,c){Me(l,e,c),le(e,t),le(t,n),le(e,r),le(r,s)},p(l,[c]){c&1&&o!==(o=jt(l[0]?"active":"")+" svelte-192w7ff")&&Q(r,"class",o),c&1&&a!==(a=jt(l[0]?"active":"")+" svelte-192w7ff")&&Q(e,"class",a)},i:ot,o:ot,d(l){l&&ye(e)}}}function tx(i,e,t){let{hovered:n}=e;return i.$$set=r=>{"hovered"in r&&t(0,n=r.hovered)},[n]}class nx extends tt{constructor(e){super(),et(this,e,tx,ex,Ze,{hovered:0})}}function ix(i){let e=i[0][0].name+"",t;return{c(){t=Ot(e)},m(n,r){Me(n,t,r)},p(n,r){r&1&&e!==(e=n[0][0].name+"")&&Fn(t,e)},i:ot,o:ot,d(n){n&&ye(t)}}}function rx(i){let e,t,n;return e=new nx({props:{hovered:i[1]}}),{c(){Oe(e.$$.fragment),t=Ot(" Upload a file")},m(r,s){Pe(e,r,s),Me(r,t,s),n=!0},p(r,s){const o={};s&2&&(o.hovered=r[1]),e.$set(o)},i(r){n||(X(e.$$.fragment,r),n=!0)},o(r){J(e.$$.fragment,r),n=!1},d(r){Re(e,r),r&&ye(t)}}}function sx(i){let e,t,n,r,s,o,a,l,c,u;const f=[rx,ix],d=[];function m(g,h){return g[0]===void 0?0:1}return n=m(i),r=d[n]=f[n](i),{c(){e=Ce("div"),t=Ce("button"),r.c(),o=ke(),a=Ce("input"),Q(t,"class",s=jt(i[1]||i[0]?"active":"")+" svelte-1w8p7ld"),Q(a,"type","file"),Q(a,"name","fileghost"),Q(a,"class","svelte-1w8p7ld"),Q(e,"class","upload-btn-wrapper svelte-1w8p7ld")},m(g,h){Me(g,e,h),le(e,t),d[n].m(t,null),le(e,o),le(e,a),l=!0,c||(u=[$e(a,"mouseenter",i[2]),$e(a,"mouseleave",i[3]),$e(a,"change",i[5])],c=!0)},p(g,[h]){let p=n;n=m(g),n===p?d[n].p(g,h):(Tt(),J(d[p],1,1,()=>{d[p]=null}),Ct(),r=d[n],r?r.p(g,h):(r=d[n]=f[n](g),r.c()),X(r,1),r.m(t,null)),(!l||h&3&&s!==(s=jt(g[1]||g[0]?"active":"")+" svelte-1w8p7ld"))&&Q(t,"class",s)},i(g){l||(X(r),l=!0)},o(g){J(r),l=!1},d(g){g&&ye(e),d[n].d(),c=!1,Gt(u)}}}function ox(i,e,t){let n=!1;function r(){t(1,n=!0)}function s(){t(1,n=!1)}let{value:o=!1}=e,a;function l(){a=this.files,t(0,a)}return i.$$set=c=>{"value"in c&&t(4,o=c.value)},i.$$.update=()=>{if(i.$$.dirty&1)if(a){let c=new FileReader;c.onload=function(u){let f;try{f=JSON.parse(u.target.result)}catch(d){console.error(d),t(0,a=void 0)}console.log(u),Ra.set(f)},c.readAsText(a[0])}else Ra.set(void 0);i.$$.dirty&1&&t(4,o=!!a)},[a,n,r,s,o,l]}class ax extends tt{constructor(e){super(),et(this,e,ox,sx,Ze,{value:4})}}function lx(i){let e,t,n,r,s,o;return{c(){e=Ce("label"),t=Ce("input"),n=ke(),r=Ce("span"),Q(t,"type","checkbox"),Q(t,"class","svelte-1ynonck"),Q(r,"class","slider svelte-1ynonck"),Q(e,"class","switch svelte-1ynonck")},m(a,l){Me(a,e,l),le(e,t),t.checked=i[0],le(e,n),le(e,r),s||(o=$e(t,"change",i[1]),s=!0)},p(a,[l]){l&1&&(t.checked=a[0])},i:ot,o:ot,d(a){a&&ye(e),s=!1,o()}}}function cx(i,e,t){let{checked:n=!1}=e;function r(){n=this.checked,t(0,n)}return i.$$set=s=>{"checked"in s&&t(0,n=s.checked)},[n,r]}class _a extends tt{constructor(e){super(),et(this,e,cx,lx,Ze,{checked:0})}}function ux(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p,_,b,y,w,x,M,P,v,E,S,O,F,L,I,k,R,W,Y,H,B,j,ne,oe,me,be,V,ce,Se,ue;function ge(Le){i[9](Le)}let je={items:i[2]};i[0]!==void 0&&(je.value=i[0]),s=new $y({props:je}),St.push(()=>Yt(s,"value",ge));function K(Le){i[10](Le)}let ae={};i[1]!==void 0&&(ae.value=i[1]),u=new ax({props:ae}),St.push(()=>Yt(u,"value",K));function He(Le){i[11](Le)}let Fe={};i[4]!==void 0&&(Fe.checked=i[4]),M=new _a({props:Fe}),St.push(()=>Yt(M,"checked",He));function dt(Le){i[12](Le)}let xt={};i[5]!==void 0&&(xt.checked=i[5]),F=new _a({props:xt}),St.push(()=>Yt(F,"checked",dt));function bt(Le){i[14](Le)}let Ie={};return i[7]!==void 0&&(Ie.checked=i[7]),be=new _a({props:Ie}),St.push(()=>Yt(be,"checked",bt)),{c(){e=Ce("div"),e.innerHTML=`<div class="fakebutton svelte-1clhicf"></div> 
		<div class="title svelte-1clhicf">Network Options</div>`,t=ke(),n=Ce("div"),r=Ot(`Network Select
		`),Oe(s.$$.fragment),a=ke(),l=Ce("br"),c=Ot(`
		Fold-Change Data
		`),Oe(u.$$.fragment),d=ke(),m=Ce("br"),g=ke(),h=Ce("hr"),p=ke(),_=Ce("br"),b=ke(),y=Ce("div"),w=Ot(`Auto-rotate
			`),x=Ce("div"),Oe(M.$$.fragment),v=ke(),E=Ce("div"),S=Ot(`Show substrates
			`),O=Ce("div"),Oe(F.$$.fragment),I=ke(),k=Ce("br"),R=Ot(`
		Fold-change selection
		`),W=Ce("input"),H=ke(),B=Ce("p"),j=ke(),ne=Ce("div"),oe=Ot(`Show unselected elements
			`),me=Ce("div"),Oe(be.$$.fragment),Q(e,"class","header svelte-1clhicf"),Q(x,"class","switch svelte-1clhicf"),Q(y,"class","switchElement svelte-1clhicf"),Q(O,"class","switch svelte-1clhicf"),Q(E,"class","switchElement svelte-1clhicf"),W.disabled=Y=!i[1],Bd(W,"width","100%"),Q(W,"type","range"),Q(W,"step","0.1"),Q(W,"min",-.1),Q(W,"max","4"),Q(me,"class","switch svelte-1clhicf"),Q(ne,"class","switchElement svelte-1clhicf"),Q(n,"class","drawerbody svelte-1clhicf")},m(Le,it){Me(Le,e,it),Me(Le,t,it),Me(Le,n,it),le(n,r),Pe(s,n,null),le(n,a),le(n,l),le(n,c),Pe(u,n,null),le(n,d),le(n,m),le(n,g),le(n,h),le(n,p),le(n,_),le(n,b),le(n,y),le(y,w),le(y,x),Pe(M,x,null),le(n,v),le(n,E),le(E,S),le(E,O),Pe(F,O,null),le(n,I),le(n,k),le(n,R),le(n,W),Zs(W,i[6]),le(n,H),le(n,B),le(n,j),le(n,ne),le(ne,oe),le(ne,me),Pe(be,me,null),ce=!0,Se||(ue=[$e(W,"change",i[13]),$e(W,"input",i[13])],Se=!0)},p(Le,it){const D={};it&4&&(D.items=Le[2]),!o&&it&1&&(o=!0,D.value=Le[0],Xt(()=>o=!1)),s.$set(D);const A={};!f&&it&2&&(f=!0,A.value=Le[1],Xt(()=>f=!1)),u.$set(A);const $={};!P&&it&16&&(P=!0,$.checked=Le[4],Xt(()=>P=!1)),M.$set($);const se={};!L&&it&32&&(L=!0,se.checked=Le[5],Xt(()=>L=!1)),F.$set(se),(!ce||it&2&&Y!==(Y=!Le[1]))&&(W.disabled=Y),it&64&&Zs(W,Le[6]);const fe={};!V&&it&128&&(V=!0,fe.checked=Le[7],Xt(()=>V=!1)),be.$set(fe)},i(Le){ce||(X(s.$$.fragment,Le),X(u.$$.fragment,Le),X(M.$$.fragment,Le),X(F.$$.fragment,Le),X(be.$$.fragment,Le),ce=!0)},o(Le){J(s.$$.fragment,Le),J(u.$$.fragment,Le),J(M.$$.fragment,Le),J(F.$$.fragment,Le),J(be.$$.fragment,Le),ce=!1},d(Le){Le&&ye(e),Le&&ye(t),Le&&ye(n),Re(s),Re(u),Re(M),Re(F),Re(be),Se=!1,Gt(ue)}}}function fx(i){let e,t;return e=new z1({props:{open:i[3],size:"30%",$$slots:{default:[ux]},$$scope:{ctx:i}}}),e.$on("clickAway",i[15]),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},p(n,[r]){const s={};r&8&&(s.open=n[3]),r&65783&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function dx(i,e,t){let n,r,s,o,a;Ue(i,to,y=>t(3,n=y)),Ue(i,Pa,y=>t(4,r=y)),Ue(i,no,y=>t(5,s=y)),Ue(i,ns,y=>t(6,o=y)),Ue(i,io,y=>t(7,a=y));let l;const c=[{value:"../assets/networkTiny.json",label:"Tiny Network",data:void 0},{value:"../assets/kinases.json",label:"All Kinases",data:void 0},{value:"../assets/network.json",label:"Full Network",data:void 0}];let u=c[0],f=!1;ss(async()=>{t(2,c[0].data=(await ga(()=>import("./networkTiny.b5278778.js"),[],import.meta.url)).default,c),t(2,c[1].data=(await ga(()=>import("./kinases.df98d334.js"),[],import.meta.url)).default,c),t(2,c[2].data=(await ga(()=>import("./network.2e8bad16.js"),[],import.meta.url)).default,c),t(8,f=!0)}),Rt(()=>{t(8,f=!1)});function d(y){u=y,t(0,u)}function m(y){l=y,t(1,l)}function g(y){r=y,Pa.set(r)}function h(y){s=y,no.set(s)}function p(){o=Ud(this.value),ns.set(o)}function _(y){a=y,io.set(a)}const b=()=>Kt(to,n=!1,n);return i.$$.update=()=>{i.$$.dirty&257&&f&&u&&Md.set(u.data)},[u,l,c,n,r,s,o,a,f,d,m,g,h,p,_,b]}class hx extends tt{constructor(e){super(),et(this,e,dx,fx,Ze,{})}}function px(i){let e,t,n,r,s,o,a,l,c,u,f,d;return{c(){e=Ce("div"),t=Ce("span"),r=ke(),s=Ce("span"),a=ke(),l=Ce("span"),Q(t,"class",n=jt(i[0]?"active line line-1":"line line-1")+" svelte-t8clq2"),Q(s,"class",o=jt(i[0]?"active line line-2":"line line-2")+" svelte-t8clq2"),Q(l,"class",c=jt(i[0]?"active line line-3":"line line-3")+" svelte-t8clq2"),Q(e,"id","menu-icon"),Q(e,"class",u=jt(i[0]?"active":"")+" svelte-t8clq2"),Q(e,"style","--transition-time: 0.2s;")},m(m,g){Me(m,e,g),le(e,t),le(e,r),le(e,s),le(e,a),le(e,l),f||(d=$e(e,"click",i[1]),f=!0)},p(m,[g]){g&1&&n!==(n=jt(m[0]?"active line line-1":"line line-1")+" svelte-t8clq2")&&Q(t,"class",n),g&1&&o!==(o=jt(m[0]?"active line line-2":"line line-2")+" svelte-t8clq2")&&Q(s,"class",o),g&1&&c!==(c=jt(m[0]?"active line line-3":"line line-3")+" svelte-t8clq2")&&Q(l,"class",c),g&1&&u!==(u=jt(m[0]?"active":"")+" svelte-t8clq2")&&Q(e,"class",u)},i:ot,o:ot,d(m){m&&ye(e),f=!1,d()}}}function mx(i,e,t){let n;return Ue(i,to,s=>t(0,n=s)),[n,()=>Kt(to,n=!n,n)]}class gx extends tt{constructor(e){super(),et(this,e,mx,px,Ze,{})}}function nf(i){let e,t,n,r=i[0].name+"",s,o,a,l,c=i[0].type+"",u,f,d,m,g=i[0].id+"",h,p,_,b=i[0].desc+"",y,w,x,M,P,v;return{c(){e=Ce("div"),t=Ce("div"),n=Ce("h1"),s=Ot(r),o=ke(),a=Ce("div"),l=Ce("p"),u=Ot(c),f=ke(),d=Ce("p"),m=Ot("UniprotID: "),h=Ot(g),p=ke(),_=Ce("p"),y=Ot(b),Q(t,"class","title"),Q(a,"class","content"),Q(e,"class","infobox svelte-1ss1efe")},m(E,S){Me(E,e,S),le(e,t),le(t,n),le(n,s),le(e,o),le(e,a),le(a,l),le(l,u),le(a,f),le(a,d),le(d,m),le(d,h),le(a,p),le(a,_),le(_,y),M=!0,P||(v=[$e(e,"mouseenter",i[4]),$e(e,"mouseleave",i[5]),$e(e,"transitionend",function(){ni(i[0]=void 0)&&(i[0]=void 0).apply(this,arguments)})],P=!0)},p(E,S){i=E,(!M||S&1)&&r!==(r=i[0].name+"")&&Fn(s,r),(!M||S&1)&&c!==(c=i[0].type+"")&&Fn(u,c),(!M||S&1)&&g!==(g=i[0].id+"")&&Fn(h,g),(!M||S&1)&&b!==(b=i[0].desc+"")&&Fn(y,b)},i(E){M||(xi(()=>{x&&x.end(1),w=Xd(e,eu,{y:200,duration:1e3}),w.start()}),M=!0)},o(E){w&&w.invalidate(),x=Yd(e,eu,{y:200,duration:1e3,delay:1e3}),M=!1},d(E){E&&ye(e),E&&x&&x.end(),P=!1,Gt(v)}}}function _x(i){let e,t,n=i[1]&&nf(i);return{c(){n&&n.c(),e=$t()},m(r,s){n&&n.m(r,s),Me(r,e,s),t=!0},p(r,[s]){r[1]?n?(n.p(r,s),s&2&&X(n,1)):(n=nf(r),n.c(),X(n,1),n.m(e.parentNode,e)):n&&(Tt(),J(n,1,1,()=>{n=null}),Ct())},i(r){t||(X(n),t=!0)},o(r){J(n),t=!1},d(r){n&&n.d(r),r&&ye(e)}}}function vx(i,e,t){let n,r;Ue(i,Yr,c=>t(2,n=c)),Ue(i,is,c=>t(3,r=c));let s,o=!1;const a=()=>{t(1,o=!0)},l=()=>{t(1,o=!1)};return i.$$.update=()=>{i.$$.dirty&12&&(n?(t(1,o=!0),t(0,s=r.getNodeAttributes(n))):(t(1,o=!1),console.log("unselected")))},[s,o,n,r,a,l]}class bx extends tt{constructor(e){super(),et(this,e,vx,_x,Ze,{})}}function wx(i){let e,t;return e=new I1({}),{c(){Oe(e.$$.fragment)},m(n,r){Pe(e,n,r),t=!0},i(n){t||(X(e.$$.fragment,n),t=!0)},o(n){J(e.$$.fragment,n),t=!1},d(n){Re(e,n)}}}function yx(i){let e,t,n,r,s,o,a,l,c;return t=new gx({}),r=new hx({}),o=new bx({}),l=new Av({props:{$$slots:{default:[wx]},$$scope:{ctx:i}}}),{c(){e=Ce("div"),Oe(t.$$.fragment),n=ke(),Oe(r.$$.fragment),s=ke(),Oe(o.$$.fragment),a=ke(),Oe(l.$$.fragment),Q(e,"id","main"),Q(e,"class","svelte-13umlk2")},m(u,f){Me(u,e,f),Pe(t,e,null),le(e,n),Pe(r,e,null),le(e,s),Pe(o,e,null),le(e,a),Pe(l,e,null),c=!0},p(u,[f]){const d={};f&1&&(d.$$scope={dirty:f,ctx:u}),l.$set(d)},i(u){c||(X(t.$$.fragment,u),X(r.$$.fragment,u),X(o.$$.fragment,u),X(l.$$.fragment,u),c=!0)},o(u){J(t.$$.fragment,u),J(r.$$.fragment,u),J(o.$$.fragment,u),J(l.$$.fragment,u),c=!1},d(u){u&&ye(e),Re(t),Re(r),Re(o),Re(l)}}}class xx extends tt{constructor(e){super(),et(this,e,null,yx,Ze,{})}}new xx({target:document.getElementById("app")});
