(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();function Qe(){}const Oa=i=>i;function $t(i,e){for(const t in e)i[t]=e[t];return i}function of(i){return i()}function ol(){return Object.create(null)}function Ht(i){i.forEach(of)}function wr(i){return typeof i=="function"}function He(i,e){return i!=i?e==e:i!==e||i&&typeof i=="object"||typeof i=="function"}function Ud(i){return Object.keys(i).length===0}function oo(i,...e){if(i==null)return Qe;const t=i.subscribe(...e);return t.unsubscribe?()=>t.unsubscribe():t}function bi(i){let e;return oo(i,t=>e=t)(),e}function Fe(i,e,t){i.$$.on_destroy.push(oo(e,t))}function dt(i,e,t,n){if(i){const r=af(i,e,t,n);return i[0](r)}}function af(i,e,t,n){return i[1]&&n?$t(t.ctx.slice(),i[1](n(e))):t.ctx}function ht(i,e,t,n){if(i[2]&&n){const r=i[2](n(t));if(e.dirty===void 0)return r;if(typeof r=="object"){const s=[],o=Math.max(e.dirty.length,r.length);for(let a=0;a<o;a+=1)s[a]=e.dirty[a]|r[a];return s}return e.dirty|r}return e.dirty}function pt(i,e,t,n,r,s){if(r){const o=af(e,t,n,s);i.p(o,r)}}function mt(i){if(i.ctx.length>32){const e=[],t=i.ctx.length/32;for(let n=0;n<t;n++)e[n]=-1;return e}return-1}function yr(i){const e={};for(const t in i)t[0]!=="$"&&(e[t]=i[t]);return e}function Gd(i){const e={};for(const t in i)e[t]=!0;return e}function kt(i){return i==null?"":i}function Qt(i,e,t){return i.set(t),e}function yi(i){return i&&wr(i.destroy)?i.destroy:Qe}const lf=typeof window<"u";let cf=lf?()=>window.performance.now():()=>Date.now(),ka=lf?i=>requestAnimationFrame(i):Qe;const gr=new Set;function uf(i){gr.forEach(e=>{e.c(i)||(gr.delete(e),e.f())}),gr.size!==0&&ka(uf)}function ff(i){let e;return gr.size===0&&ka(uf),{promise:new Promise(t=>{gr.add(e={c:i,f:t})}),abort(){gr.delete(e)}}}function ae(i,e){i.appendChild(e)}function df(i){if(!i)return document;const e=i.getRootNode?i.getRootNode():i.ownerDocument;return e&&e.host?e:i.ownerDocument}function Bd(i){const e=Ae("style");return Vd(df(i),e),e.sheet}function Vd(i,e){return ae(i.head||i,e),e.sheet}function ge(i,e,t){i.insertBefore(e,t||null)}function fe(i){i.parentNode.removeChild(i)}function ao(i,e){for(let t=0;t<i.length;t+=1)i[t]&&i[t].d(e)}function Ae(i){return document.createElement(i)}function Xt(i){return document.createElementNS("http://www.w3.org/2000/svg",i)}function Ct(i){return document.createTextNode(i)}function ke(){return Ct(" ")}function Kt(){return Ct("")}function tt(i,e,t,n){return i.addEventListener(e,t,n),()=>i.removeEventListener(e,t,n)}function Bi(i){return function(e){return e.preventDefault(),i.call(this,e)}}function xr(i){return function(e){return e.stopPropagation(),i.call(this,e)}}function J(i,e,t){t==null?i.removeAttribute(e):i.getAttribute(e)!==t&&i.setAttribute(e,t)}function Mr(i,e){const t=Object.getOwnPropertyDescriptors(i.__proto__);for(const n in e)e[n]==null?i.removeAttribute(n):n==="style"?i.style.cssText=e[n]:n==="__value"?i.value=i[n]=e[n]:t[n]&&t[n].set?i[n]=e[n]:J(i,n,e[n])}function Hd(i){return i===""?null:+i}function Wd(i){return Array.from(i.childNodes)}function bn(i,e){e=""+e,i.wholeText!==e&&(i.data=e)}function Ks(i,e){i.value=e==null?"":e}function jd(i,e,t,n){t===null?i.style.removeProperty(e):i.style.setProperty(e,t,n?"important":"")}let gs;function qd(){if(gs===void 0){gs=!1;try{typeof window<"u"&&window.parent&&window.parent.document}catch{gs=!0}}return gs}function Xd(i,e){getComputedStyle(i).position==="static"&&(i.style.position="relative");const n=Ae("iframe");n.setAttribute("style","display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;"),n.setAttribute("aria-hidden","true"),n.tabIndex=-1;const r=qd();let s;return r?(n.src="data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\/script>",s=tt(window,"message",o=>{o.source===n.contentWindow&&e()})):(n.src="about:blank",n.onload=()=>{s=tt(n.contentWindow,"resize",e)}),ae(i,n),()=>{(r||s&&n.contentWindow)&&s(),fe(n)}}function ft(i,e,t){i.classList[t?"add":"remove"](e)}function hf(i,e,{bubbles:t=!1,cancelable:n=!1}={}){const r=document.createEvent("CustomEvent");return r.initCustomEvent(i,t,n,e),r}const Js=new Map;let Qs=0;function Yd(i){let e=5381,t=i.length;for(;t--;)e=(e<<5)-e^i.charCodeAt(t);return e>>>0}function Zd(i,e){const t={stylesheet:Bd(e),rules:{}};return Js.set(i,t),t}function al(i,e,t,n,r,s,o,a=0){const l=16.666/n;let c=`{
`;for(let p=0;p<=1;p+=l){const _=e+(t-e)*s(p);c+=p*100+`%{${o(_,1-_)}}
`}const u=c+`100% {${o(t,1-t)}}
}`,f=`__svelte_${Yd(u)}_${a}`,d=df(i),{stylesheet:m,rules:g}=Js.get(d)||Zd(d,i);g[f]||(g[f]=!0,m.insertRule(`@keyframes ${f} ${u}`,m.cssRules.length));const h=i.style.animation||"";return i.style.animation=`${h?`${h}, `:""}${f} ${n}ms linear ${r}ms 1 both`,Qs+=1,f}function Kd(i,e){const t=(i.style.animation||"").split(", "),n=t.filter(e?s=>s.indexOf(e)<0:s=>s.indexOf("__svelte")===-1),r=t.length-n.length;r&&(i.style.animation=n.join(", "),Qs-=r,Qs||Jd())}function Jd(){ka(()=>{Qs||(Js.forEach(i=>{const{ownerNode:e}=i.stylesheet;e&&fe(e)}),Js.clear())})}let Jr;function Yr(i){Jr=i}function Hi(){if(!Jr)throw new Error("Function called outside component initialization");return Jr}function Qd(i){Hi().$$.before_update.push(i)}function ss(i){Hi().$$.on_mount.push(i)}function It(i){Hi().$$.on_destroy.push(i)}function Wi(){const i=Hi();return(e,t,{cancelable:n=!1}={})=>{const r=i.$$.callbacks[e];if(r){const s=hf(e,t,{cancelable:n});return r.slice().forEach(o=>{o.call(i,s)}),!s.defaultPrevented}return!0}}function In(i,e){return Hi().$$.context.set(i,e),e}function Bn(i){return Hi().$$.context.get(i)}function ct(i,e){const t=i.$$.callbacks[e.type];t&&t.slice().forEach(n=>n.call(this,e))}const Wr=[],Mt=[],Ws=[],ga=[],pf=Promise.resolve();let _a=!1;function mf(){_a||(_a=!0,pf.then(gf))}function Qr(){return mf(),pf}function Sr(i){Ws.push(i)}function Yt(i){ga.push(i)}const Ao=new Set;let _s=0;function gf(){const i=Jr;do{for(;_s<Wr.length;){const e=Wr[_s];_s++,Yr(e),$d(e.$$)}for(Yr(null),Wr.length=0,_s=0;Mt.length;)Mt.pop()();for(let e=0;e<Ws.length;e+=1){const t=Ws[e];Ao.has(t)||(Ao.add(t),t())}Ws.length=0}while(Wr.length);for(;ga.length;)ga.pop()();_a=!1,Ao.clear(),Yr(i)}function $d(i){if(i.fragment!==null){i.update(),Ht(i.before_update);const e=i.dirty;i.dirty=[-1],i.fragment&&i.fragment.p(i.ctx,e),i.after_update.forEach(Sr)}}let Fr;function eh(){return Fr||(Fr=Promise.resolve(),Fr.then(()=>{Fr=null})),Fr}function To(i,e,t){i.dispatchEvent(hf(`${e?"intro":"outro"}${t}`))}const js=new Set;let ti;function St(){ti={r:0,c:[],p:ti}}function Et(){ti.r||Ht(ti.c),ti=ti.p}function W(i,e){i&&i.i&&(js.delete(i),i.i(e))}function K(i,e,t,n){if(i&&i.o){if(js.has(i))return;js.add(i),ti.c.push(()=>{js.delete(i),n&&(t&&i.d(1),n())}),i.o(e)}else n&&n()}const th={duration:0};function ll(i,e,t,n){let r=e(i,t),s=n?0:1,o=null,a=null,l=null;function c(){l&&Kd(i,l)}function u(d,m){const g=d.b-s;return m*=Math.abs(g),{a:s,b:d.b,d:g,duration:m,start:d.start,end:d.start+m,group:d.group}}function f(d){const{delay:m=0,duration:g=300,easing:h=Oa,tick:p=Qe,css:_}=r||th,w={start:cf()+m,b:d};d||(w.group=ti,ti.r+=1),o||a?a=w:(_&&(c(),l=al(i,s,d,g,m,h,_)),d&&p(0,1),o=u(w,g),Sr(()=>To(i,d,"start")),ff(y=>{if(a&&y>a.start&&(o=u(a,g),a=null,To(i,o.b,"start"),_&&(c(),l=al(i,s,o.b,o.duration,0,h,r.css))),o){if(y>=o.end)p(s=o.b,1-s),To(i,o.b,"end"),a||(o.b?c():--o.group.r||Ht(o.group.c)),o=null;else if(y>=o.start){const b=y-o.start;s=o.a+o.d*h(b/o.duration),p(s,1-s)}}return!!(o||a)}))}return{run(d){wr(r)?eh().then(()=>{r=r(),f(d)}):f(d)},end(){c(),o=a=null}}}function _f(i,e){K(i,1,1,()=>{e.delete(i.key)})}function vf(i,e,t,n,r,s,o,a,l,c,u,f){let d=i.length,m=s.length,g=d;const h={};for(;g--;)h[i[g].key]=g;const p=[],_=new Map,w=new Map;for(g=m;g--;){const M=f(r,s,g),P=t(M);let v=o.get(P);v?n&&v.p(M,e):(v=c(P,M),v.c()),_.set(P,p[g]=v),P in h&&w.set(P,Math.abs(g-h[P]))}const y=new Set,b=new Set;function x(M){W(M,1),M.m(a,u),o.set(M.key,M),u=M.first,m--}for(;d&&m;){const M=p[m-1],P=i[d-1],v=M.key,E=P.key;M===P?(u=M.first,d--,m--):_.has(E)?!o.has(v)||y.has(v)?x(M):b.has(E)?d--:w.get(v)>w.get(E)?(b.add(v),x(M)):(y.add(E),d--):(l(P,o),d--)}for(;d--;){const M=i[d];_.has(M.key)||l(M,o)}for(;m;)x(p[m-1]);return p}function Dr(i,e){const t={},n={},r={$$scope:1};let s=i.length;for(;s--;){const o=i[s],a=e[s];if(a){for(const l in o)l in a||(n[l]=1);for(const l in a)r[l]||(t[l]=a[l],r[l]=1);i[s]=a}else for(const l in o)r[l]=1}for(const o in n)o in t||(t[o]=void 0);return t}function Na(i){return typeof i=="object"&&i!==null?i:{}}function Zt(i,e,t){const n=i.$$.props[e];n!==void 0&&(i.$$.bound[n]=t,t(i.$$.ctx[n]))}function Re(i){i&&i.c()}function De(i,e,t,n){const{fragment:r,on_mount:s,on_destroy:o,after_update:a}=i.$$;r&&r.m(e,t),n||Sr(()=>{const l=s.map(of).filter(wr);o?o.push(...l):Ht(l),i.$$.on_mount=[]}),a.forEach(Sr)}function Pe(i,e){const t=i.$$;t.fragment!==null&&(Ht(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function nh(i,e){i.$$.dirty[0]===-1&&(Wr.push(i),mf(),i.$$.dirty.fill(0)),i.$$.dirty[e/31|0]|=1<<e%31}function Ye(i,e,t,n,r,s,o,a=[-1]){const l=Jr;Yr(i);const c=i.$$={fragment:null,ctx:null,props:s,update:Qe,not_equal:r,bound:ol(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(l?l.$$.context:[])),callbacks:ol(),dirty:a,skip_bound:!1,root:e.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=t?t(i,e.props||{},(f,d,...m)=>{const g=m.length?m[0]:d;return c.ctx&&r(c.ctx[f],c.ctx[f]=g)&&(!c.skip_bound&&c.bound[f]&&c.bound[f](g),u&&nh(i,f)),d}):[],c.update(),u=!0,Ht(c.before_update),c.fragment=n?n(c.ctx):!1,e.target){if(e.hydrate){const f=Wd(e.target);c.fragment&&c.fragment.l(f),f.forEach(fe)}else c.fragment&&c.fragment.c();e.intro&&W(i.$$.fragment),De(i,e.target,e.anchor,e.customElement),gf()}Yr(l)}class Ze{$destroy(){Pe(this,1),this.$destroy=Qe}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}$set(e){this.$$set&&!Ud(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const Zi=[];function bf(i,e){return{subscribe:ot(i,e).subscribe}}function ot(i,e=Qe){let t;const n=new Set;function r(a){if(He(i,a)&&(i=a,t)){const l=!Zi.length;for(const c of n)c[1](),Zi.push(c,i);if(l){for(let c=0;c<Zi.length;c+=2)Zi[c][0](Zi[c+1]);Zi.length=0}}}function s(a){r(a(i))}function o(a,l=Qe){const c=[a,l];return n.add(c),n.size===1&&(t=e(r)||Qe),a(i),()=>{n.delete(c),n.size===0&&(t(),t=null)}}return{set:r,update:s,subscribe:o}}function _n(i,e,t){const n=!Array.isArray(i),r=n?[i]:i,s=e.length<2;return bf(t,o=>{let a=!1;const l=[];let c=0,u=Qe;const f=()=>{if(c)return;u();const m=e(n?l[0]:l,o);s?o(m):u=wr(m)?m:Qe},d=r.map((m,g)=>oo(m,h=>{l[g]=h,c&=~(1<<g),a&&f()},()=>{c|=1<<g}));return a=!0,f(),function(){Ht(d),u()}})}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fa="144",Ki={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ji={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ih=0,cl=1,rh=2,wf=1,yf=2,jr=3,Er=0,Mn=1,vi=2,wi=0,_r=1,ul=2,fl=3,dl=4,sh=5,hr=100,oh=101,ah=102,hl=103,pl=104,lh=200,ch=201,uh=202,fh=203,xf=204,Mf=205,dh=206,hh=207,ph=208,mh=209,gh=210,_h=0,vh=1,bh=2,va=3,wh=4,yh=5,xh=6,Mh=7,za=0,Sh=1,Eh=2,Gn=0,Ah=1,Th=2,Ch=3,Sf=4,Lh=5,Ef=300,Ar=301,Tr=302,ba=303,wa=304,lo=306,ya=1e3,On=1001,xa=1002,on=1003,ml=1004,gl=1005,vn=1006,Dh=1007,co=1008,Vi=1009,Ph=1010,Rh=1011,Af=1012,Ih=1013,Ni=1014,Fi=1015,$r=1016,Oh=1017,kh=1018,vr=1020,Nh=1021,Fh=1022,Un=1023,zh=1024,Uh=1025,Ui=1026,Cr=1027,Gh=1028,Bh=1029,Vh=1030,Hh=1031,Wh=1033,Co=33776,Lo=33777,Do=33778,Po=33779,_l=35840,vl=35841,bl=35842,wl=35843,jh=36196,yl=37492,xl=37496,Ml=37808,Sl=37809,El=37810,Al=37811,Tl=37812,Cl=37813,Ll=37814,Dl=37815,Pl=37816,Rl=37817,Il=37818,Ol=37819,kl=37820,Nl=37821,Fl=36492,xi=3e3,Dt=3001,qh=3200,Xh=3201,Tf=0,Yh=1,$n="srgb",zi="srgb-linear",Ro=7680,Zh=519,zl=35044,Ul="300 es",Ma=1035;class ji{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Wt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Io=Math.PI/180,Gl=180/Math.PI;function os(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Wt[i&255]+Wt[i>>8&255]+Wt[i>>16&255]+Wt[i>>24&255]+"-"+Wt[e&255]+Wt[e>>8&255]+"-"+Wt[e>>16&15|64]+Wt[e>>24&255]+"-"+Wt[t&63|128]+Wt[t>>8&255]+"-"+Wt[t>>16&255]+Wt[t>>24&255]+Wt[n&255]+Wt[n>>8&255]+Wt[n>>16&255]+Wt[n>>24&255]).toLowerCase()}function an(i,e,t){return Math.max(e,Math.min(t,i))}function Kh(i,e){return(i%e+e)%e}function Oo(i,e,t){return(1-t)*i+t*e}function Bl(i){return(i&i-1)===0&&i!==0}function Sa(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function vs(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function cn(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}class Be{constructor(e=0,t=0){Be.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class wn{constructor(){wn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],f=n[7],d=n[2],m=n[5],g=n[8],h=r[0],p=r[3],_=r[6],w=r[1],y=r[4],b=r[7],x=r[2],M=r[5],P=r[8];return s[0]=o*h+a*w+l*x,s[3]=o*p+a*y+l*M,s[6]=o*_+a*b+l*P,s[1]=c*h+u*w+f*x,s[4]=c*p+u*y+f*M,s[7]=c*_+u*b+f*P,s[2]=d*h+m*w+g*x,s[5]=d*p+m*y+g*M,s[8]=d*_+m*b+g*P,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=u*o-a*c,d=a*l-u*s,m=c*s-o*l,g=t*f+n*d+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const h=1/g;return e[0]=f*h,e[1]=(r*c-u*n)*h,e[2]=(a*n-r*o)*h,e[3]=d*h,e[4]=(u*t-r*l)*h,e[5]=(r*s-a*t)*h,e[6]=m*h,e[7]=(n*l-c*t)*h,e[8]=(o*t-n*s)*h,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*s+n*l,r[3]=t*o+n*c,r[6]=t*a+n*u,r[1]=-n*s+t*l,r[4]=-n*o+t*c,r[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Cf(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function es(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Gi(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function qs(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const ko={[$n]:{[zi]:Gi},[zi]:{[$n]:qs}},Cn={legacyMode:!0,get workingColorSpace(){return zi},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,e,t){if(this.legacyMode||e===t||!e||!t)return i;if(ko[e]&&ko[e][t]!==void 0){const n=ko[e][t];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)}},Lf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Nt={r:0,g:0,b:0},Ln={h:0,s:0,l:0},bs={h:0,s:0,l:0};function No(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}function ws(i,e){return e.r=i.r,e.g=i.g,e.b=i.b,e}class Xe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=$n){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Cn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=zi){return this.r=e,this.g=t,this.b=n,Cn.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=zi){if(e=Kh(e,1),t=an(t,0,1),n=an(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=No(o,s,e+1/3),this.g=No(o,s,e),this.b=No(o,s,e-1/3)}return Cn.toWorkingColorSpace(this,r),this}setStyle(e,t=$n){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Cn.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Cn.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseFloat(s[2])/100,u=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,c,u,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Cn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Cn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=$n){const n=Lf[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Gi(e.r),this.g=Gi(e.g),this.b=Gi(e.b),this}copyLinearToSRGB(e){return this.r=qs(e.r),this.g=qs(e.g),this.b=qs(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$n){return Cn.fromWorkingColorSpace(ws(this,Nt),e),an(Nt.r*255,0,255)<<16^an(Nt.g*255,0,255)<<8^an(Nt.b*255,0,255)<<0}getHexString(e=$n){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=zi){Cn.fromWorkingColorSpace(ws(this,Nt),t);const n=Nt.r,r=Nt.g,s=Nt.b,o=Math.max(n,r,s),a=Math.min(n,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const f=o-a;switch(c=u<=.5?f/(o+a):f/(2-o-a),o){case n:l=(r-s)/f+(r<s?6:0);break;case r:l=(s-n)/f+2;break;case s:l=(n-r)/f+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=zi){return Cn.fromWorkingColorSpace(ws(this,Nt),t),e.r=Nt.r,e.g=Nt.g,e.b=Nt.b,e}getStyle(e=$n){return Cn.fromWorkingColorSpace(ws(this,Nt),e),e!==$n?`color(${e} ${Nt.r} ${Nt.g} ${Nt.b})`:`rgb(${Nt.r*255|0},${Nt.g*255|0},${Nt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(Ln),Ln.h+=e,Ln.s+=t,Ln.l+=n,this.setHSL(Ln.h,Ln.s,Ln.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ln),e.getHSL(bs);const n=Oo(Ln.h,bs.h,t),r=Oo(Ln.s,bs.s,t),s=Oo(Ln.l,bs.l,t);return this.setHSL(n,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Xe.NAMES=Lf;let Qi;class Df{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Qi===void 0&&(Qi=es("canvas")),Qi.width=e.width,Qi.height=e.height;const n=Qi.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Qi}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=es("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Gi(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Gi(t[n]/255)*255):t[n]=Gi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Pf{constructor(e=null){this.isSource=!0,this.uuid=os(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(Fo(r[o].image)):s.push(Fo(r[o]))}else s=Fo(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function Fo(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Df.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Jh=0;class En extends ji{constructor(e=En.DEFAULT_IMAGE,t=En.DEFAULT_MAPPING,n=On,r=On,s=vn,o=co,a=Un,l=Vi,c=1,u=xi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Jh++}),this.uuid=os(),this.name="",this.source=new Pf(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Be(0,0),this.repeat=new Be(1,1),this.center=new Be(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new wn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Ef)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ya:e.x=e.x-Math.floor(e.x);break;case On:e.x=e.x<0?0:1;break;case xa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ya:e.y=e.y-Math.floor(e.y);break;case On:e.y=e.y<0?0:1;break;case xa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}En.DEFAULT_IMAGE=null;En.DEFAULT_MAPPING=Ef;class Gt{constructor(e=0,t=0,n=0,r=1){Gt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],f=l[8],d=l[1],m=l[5],g=l[9],h=l[2],p=l[6],_=l[10];if(Math.abs(u-d)<.01&&Math.abs(f-h)<.01&&Math.abs(g-p)<.01){if(Math.abs(u+d)<.1&&Math.abs(f+h)<.1&&Math.abs(g+p)<.1&&Math.abs(c+m+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,b=(m+1)/2,x=(_+1)/2,M=(u+d)/4,P=(f+h)/4,v=(g+p)/4;return y>b&&y>x?y<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(y),r=M/n,s=P/n):b>x?b<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),n=M/r,s=v/r):x<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(x),n=P/s,r=v/s),this.set(n,r,s,t),this}let w=Math.sqrt((p-g)*(p-g)+(f-h)*(f-h)+(d-u)*(d-u));return Math.abs(w)<.001&&(w=1),this.x=(p-g)/w,this.y=(f-h)/w,this.z=(d-u)/w,this.w=Math.acos((c+m+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Mi extends ji{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Gt(0,0,e,t),this.scissorTest=!1,this.viewport=new Gt(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new En(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:vn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Pf(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Rf extends En{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=on,this.minFilter=on,this.wrapR=On,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Qh extends En{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=on,this.minFilter=on,this.wrapR=On,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Si{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],f=n[r+3];const d=s[o+0],m=s[o+1],g=s[o+2],h=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=d,e[t+1]=m,e[t+2]=g,e[t+3]=h;return}if(f!==h||l!==d||c!==m||u!==g){let p=1-a;const _=l*d+c*m+u*g+f*h,w=_>=0?1:-1,y=1-_*_;if(y>Number.EPSILON){const x=Math.sqrt(y),M=Math.atan2(x,_*w);p=Math.sin(p*M)/x,a=Math.sin(a*M)/x}const b=a*w;if(l=l*p+d*b,c=c*p+m*b,u=u*p+g*b,f=f*p+h*b,p===1-a){const x=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=x,c*=x,u*=x,f*=x}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],f=s[o],d=s[o+1],m=s[o+2],g=s[o+3];return e[t]=a*g+u*f+l*m-c*d,e[t+1]=l*g+u*d+c*f-a*m,e[t+2]=c*g+u*m+a*d-l*f,e[t+3]=u*g-a*f-l*d-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),f=a(s/2),d=l(n/2),m=l(r/2),g=l(s/2);switch(o){case"XYZ":this._x=d*u*f+c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f-d*m*g;break;case"YXZ":this._x=d*u*f+c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f+d*m*g;break;case"ZXY":this._x=d*u*f-c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f-d*m*g;break;case"ZYX":this._x=d*u*f-c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f+d*m*g;break;case"YZX":this._x=d*u*f+c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f-d*m*g;break;case"XZY":this._x=d*u*f-c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f+d*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],f=t[10],d=n+a+f;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(u-l)*m,this._y=(s-c)*m,this._z=(o-r)*m}else if(n>a&&n>f){const m=2*Math.sqrt(1+n-a-f);this._w=(u-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(s+c)/m}else if(a>f){const m=2*Math.sqrt(1+a-n-f);this._w=(s-c)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+f-n-a);this._w=(o-r)/m,this._x=(s+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(an(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*n+t*this._x,this._y=m*r+t*this._y,this._z=m*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*f+this._w*d,this._x=n*f+this._x*d,this._y=r*f+this._y*d,this._z=s*f+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(s),n*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class G{constructor(e=0,t=0,n=0){G.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Vl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Vl.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*n,u=l*n+a*t-s*r,f=l*r+s*n-o*t,d=-s*t-o*n-a*r;return this.x=c*l+d*-s+u*-a-f*-o,this.y=u*l+d*-o+f*-s-c*-a,this.z=f*l+d*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return zo.copy(this).projectOnVector(e),this.sub(zo)}reflect(e){return this.sub(zo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(an(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const zo=new G,Vl=new Si;class as{constructor(e=new G(1/0,1/0,1/0),t=new G(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],f=e[l+1],d=e[l+2];u<t&&(t=u),f<n&&(n=f),d<r&&(r=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),f=e.getY(l),d=e.getZ(l);u<t&&(t=u),f<n&&(n=f),d<r&&(r=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Di.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Di.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Di)}else n.boundingBox===null&&n.computeBoundingBox(),Uo.copy(n.boundingBox),Uo.applyMatrix4(e.matrixWorld),this.union(Uo);const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Di),Di.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(zr),ys.subVectors(this.max,zr),$i.subVectors(e.a,zr),er.subVectors(e.b,zr),tr.subVectors(e.c,zr),fi.subVectors(er,$i),di.subVectors(tr,er),Pi.subVectors($i,tr);let t=[0,-fi.z,fi.y,0,-di.z,di.y,0,-Pi.z,Pi.y,fi.z,0,-fi.x,di.z,0,-di.x,Pi.z,0,-Pi.x,-fi.y,fi.x,0,-di.y,di.x,0,-Pi.y,Pi.x,0];return!Go(t,$i,er,tr,ys)||(t=[1,0,0,0,1,0,0,0,1],!Go(t,$i,er,tr,ys))?!1:(xs.crossVectors(fi,di),t=[xs.x,xs.y,xs.z],Go(t,$i,er,tr,ys))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Di.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Di).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Yn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Yn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Yn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Yn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Yn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Yn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Yn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Yn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Yn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Yn=[new G,new G,new G,new G,new G,new G,new G,new G],Di=new G,Uo=new as,$i=new G,er=new G,tr=new G,fi=new G,di=new G,Pi=new G,zr=new G,ys=new G,xs=new G,Ri=new G;function Go(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Ri.fromArray(i,s);const a=r.x*Math.abs(Ri.x)+r.y*Math.abs(Ri.y)+r.z*Math.abs(Ri.z),l=e.dot(Ri),c=t.dot(Ri),u=n.dot(Ri);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const $h=new as,Hl=new G,Ms=new G,Bo=new G;class uo{constructor(e=new G,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):$h.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Bo.subVectors(e,this.center);const t=Bo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.add(Bo.multiplyScalar(r/n)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Ms.set(0,0,1).multiplyScalar(e.radius):Ms.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Hl.copy(e.center).add(Ms)),this.expandByPoint(Hl.copy(e.center).sub(Ms)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Zn=new G,Vo=new G,Ss=new G,hi=new G,Ho=new G,Es=new G,Wo=new G;class Ua{constructor(e=new G,t=new G(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Zn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Zn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Zn.copy(this.direction).multiplyScalar(t).add(this.origin),Zn.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Vo.copy(e).add(t).multiplyScalar(.5),Ss.copy(t).sub(e).normalize(),hi.copy(this.origin).sub(Vo);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Ss),a=hi.dot(this.direction),l=-hi.dot(Ss),c=hi.lengthSq(),u=Math.abs(1-o*o);let f,d,m,g;if(u>0)if(f=o*l-a,d=o*a-l,g=s*u,f>=0)if(d>=-g)if(d<=g){const h=1/u;f*=h,d*=h,m=f*(f+o*d+2*a)+d*(o*f+d+2*l)+c}else d=s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;else d=-s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;else d<=-g?(f=Math.max(0,-(-o*s+a)),d=f>0?-s:Math.min(Math.max(-s,-l),s),m=-f*f+d*(d+2*l)+c):d<=g?(f=0,d=Math.min(Math.max(-s,-l),s),m=d*(d+2*l)+c):(f=Math.max(0,-(o*s+a)),d=f>0?s:Math.min(Math.max(-s,-l),s),m=-f*f+d*(d+2*l)+c);else d=o>0?-s:s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),r&&r.copy(Ss).multiplyScalar(d).add(Vo),m}intersectSphere(e,t){Zn.subVectors(e.center,this.origin);const n=Zn.dot(this.direction),r=Zn.dot(Zn)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,r=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,r=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>r||((s>n||n!==n)&&(n=s),(o<r||r!==r)&&(r=o),f>=0?(a=(e.min.z-d.z)*f,l=(e.max.z-d.z)*f):(a=(e.max.z-d.z)*f,l=(e.min.z-d.z)*f),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,Zn)!==null}intersectTriangle(e,t,n,r,s){Ho.subVectors(t,e),Es.subVectors(n,e),Wo.crossVectors(Ho,Es);let o=this.direction.dot(Wo),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;hi.subVectors(this.origin,e);const l=a*this.direction.dot(Es.crossVectors(hi,Es));if(l<0)return null;const c=a*this.direction.dot(Ho.cross(hi));if(c<0||l+c>o)return null;const u=-a*hi.dot(Wo);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class wt{constructor(){wt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=r,_[1]=s,_[5]=o,_[9]=a,_[13]=l,_[2]=c,_[6]=u,_[10]=f,_[14]=d,_[3]=m,_[7]=g,_[11]=h,_[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new wt().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/nr.setFromMatrixColumn(e,0).length(),s=1/nr.setFromMatrixColumn(e,1).length(),o=1/nr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const d=o*u,m=o*f,g=a*u,h=a*f;t[0]=l*u,t[4]=-l*f,t[8]=c,t[1]=m+g*c,t[5]=d-h*c,t[9]=-a*l,t[2]=h-d*c,t[6]=g+m*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,m=l*f,g=c*u,h=c*f;t[0]=d+h*a,t[4]=g*a-m,t[8]=o*c,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=m*a-g,t[6]=h+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,m=l*f,g=c*u,h=c*f;t[0]=d-h*a,t[4]=-o*f,t[8]=g+m*a,t[1]=m+g*a,t[5]=o*u,t[9]=h-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,m=o*f,g=a*u,h=a*f;t[0]=l*u,t[4]=g*c-m,t[8]=d*c+h,t[1]=l*f,t[5]=h*c+d,t[9]=m*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,m=o*c,g=a*l,h=a*c;t[0]=l*u,t[4]=h-d*f,t[8]=g*f+m,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=m*f+g,t[10]=d-h*f}else if(e.order==="XZY"){const d=o*l,m=o*c,g=a*l,h=a*c;t[0]=l*u,t[4]=-f,t[8]=c*u,t[1]=d*f+h,t[5]=o*u,t[9]=m*f-g,t[2]=g*f-m,t[6]=a*u,t[10]=h*f+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(ep,e,tp)}lookAt(e,t,n){const r=this.elements;return un.subVectors(e,t),un.lengthSq()===0&&(un.z=1),un.normalize(),pi.crossVectors(n,un),pi.lengthSq()===0&&(Math.abs(n.z)===1?un.x+=1e-4:un.z+=1e-4,un.normalize(),pi.crossVectors(n,un)),pi.normalize(),As.crossVectors(un,pi),r[0]=pi.x,r[4]=As.x,r[8]=un.x,r[1]=pi.y,r[5]=As.y,r[9]=un.y,r[2]=pi.z,r[6]=As.z,r[10]=un.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],f=n[5],d=n[9],m=n[13],g=n[2],h=n[6],p=n[10],_=n[14],w=n[3],y=n[7],b=n[11],x=n[15],M=r[0],P=r[4],v=r[8],E=r[12],S=r[1],k=r[5],F=r[9],L=r[13],O=r[2],I=r[6],R=r[10],Y=r[14],Z=r[3],H=r[7],B=r[11],j=r[15];return s[0]=o*M+a*S+l*O+c*Z,s[4]=o*P+a*k+l*I+c*H,s[8]=o*v+a*F+l*R+c*B,s[12]=o*E+a*L+l*Y+c*j,s[1]=u*M+f*S+d*O+m*Z,s[5]=u*P+f*k+d*I+m*H,s[9]=u*v+f*F+d*R+m*B,s[13]=u*E+f*L+d*Y+m*j,s[2]=g*M+h*S+p*O+_*Z,s[6]=g*P+h*k+p*I+_*H,s[10]=g*v+h*F+p*R+_*B,s[14]=g*E+h*L+p*Y+_*j,s[3]=w*M+y*S+b*O+x*Z,s[7]=w*P+y*k+b*I+x*H,s[11]=w*v+y*F+b*R+x*B,s[15]=w*E+y*L+b*Y+x*j,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],f=e[6],d=e[10],m=e[14],g=e[3],h=e[7],p=e[11],_=e[15];return g*(+s*l*f-r*c*f-s*a*d+n*c*d+r*a*m-n*l*m)+h*(+t*l*m-t*c*d+s*o*d-r*o*m+r*c*u-s*l*u)+p*(+t*c*f-t*a*m-s*o*f+n*o*m+s*a*u-n*c*u)+_*(-r*a*u-t*l*f+t*a*d+r*o*f-n*o*d+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],d=e[10],m=e[11],g=e[12],h=e[13],p=e[14],_=e[15],w=f*p*c-h*d*c+h*l*m-a*p*m-f*l*_+a*d*_,y=g*d*c-u*p*c-g*l*m+o*p*m+u*l*_-o*d*_,b=u*h*c-g*f*c+g*a*m-o*h*m-u*a*_+o*f*_,x=g*f*l-u*h*l-g*a*d+o*h*d+u*a*p-o*f*p,M=t*w+n*y+r*b+s*x;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const P=1/M;return e[0]=w*P,e[1]=(h*d*s-f*p*s-h*r*m+n*p*m+f*r*_-n*d*_)*P,e[2]=(a*p*s-h*l*s+h*r*c-n*p*c-a*r*_+n*l*_)*P,e[3]=(f*l*s-a*d*s-f*r*c+n*d*c+a*r*m-n*l*m)*P,e[4]=y*P,e[5]=(u*p*s-g*d*s+g*r*m-t*p*m-u*r*_+t*d*_)*P,e[6]=(g*l*s-o*p*s-g*r*c+t*p*c+o*r*_-t*l*_)*P,e[7]=(o*d*s-u*l*s+u*r*c-t*d*c-o*r*m+t*l*m)*P,e[8]=b*P,e[9]=(g*f*s-u*h*s-g*n*m+t*h*m+u*n*_-t*f*_)*P,e[10]=(o*h*s-g*a*s+g*n*c-t*h*c-o*n*_+t*a*_)*P,e[11]=(u*a*s-o*f*s-u*n*c+t*f*c+o*n*m-t*a*m)*P,e[12]=x*P,e[13]=(u*h*r-g*f*r+g*n*d-t*h*d-u*n*p+t*f*p)*P,e[14]=(g*a*r-o*h*r-g*n*l+t*h*l+o*n*p-t*a*p)*P,e[15]=(o*f*r-u*a*r+u*n*l-t*f*l-o*n*d+t*a*d)*P,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,f=a+a,d=s*c,m=s*u,g=s*f,h=o*u,p=o*f,_=a*f,w=l*c,y=l*u,b=l*f,x=n.x,M=n.y,P=n.z;return r[0]=(1-(h+_))*x,r[1]=(m+b)*x,r[2]=(g-y)*x,r[3]=0,r[4]=(m-b)*M,r[5]=(1-(d+_))*M,r[6]=(p+w)*M,r[7]=0,r[8]=(g+y)*P,r[9]=(p-w)*P,r[10]=(1-(d+h))*P,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=nr.set(r[0],r[1],r[2]).length();const o=nr.set(r[4],r[5],r[6]).length(),a=nr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Dn.copy(this);const c=1/s,u=1/o,f=1/a;return Dn.elements[0]*=c,Dn.elements[1]*=c,Dn.elements[2]*=c,Dn.elements[4]*=u,Dn.elements[5]*=u,Dn.elements[6]*=u,Dn.elements[8]*=f,Dn.elements[9]*=f,Dn.elements[10]*=f,t.setFromRotationMatrix(Dn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o){const a=this.elements,l=2*s/(t-e),c=2*s/(n-r),u=(t+e)/(t-e),f=(n+r)/(n-r),d=-(o+s)/(o-s),m=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,s,o){const a=this.elements,l=1/(t-e),c=1/(n-r),u=1/(o-s),f=(t+e)*l,d=(n+r)*c,m=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const nr=new G,Dn=new wt,ep=new G(0,0,0),tp=new G(1,1,1),pi=new G,As=new G,un=new G,Wl=new wt,jl=new Si;class ls{constructor(e=0,t=0,n=0,r=ls.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],f=r[2],d=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(an(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-an(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(an(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-an(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(an(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-an(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Wl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Wl,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return jl.setFromEuler(this),this.setFromQuaternion(jl,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}ls.DefaultOrder="XYZ";ls.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Ga{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let np=0;const ql=new G,ir=new Si,Kn=new wt,Ts=new G,Ur=new G,ip=new G,rp=new Si,Xl=new G(1,0,0),Yl=new G(0,1,0),Zl=new G(0,0,1),sp={type:"added"},Kl={type:"removed"};class gt extends ji{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:np++}),this.uuid=os(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=gt.DefaultUp.clone();const e=new G,t=new ls,n=new Si,r=new G(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new wt},normalMatrix:{value:new wn}}),this.matrix=new wt,this.matrixWorld=new wt,this.matrixAutoUpdate=gt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=gt.DefaultMatrixWorldAutoUpdate,this.layers=new Ga,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ir.setFromAxisAngle(e,t),this.quaternion.multiply(ir),this}rotateOnWorldAxis(e,t){return ir.setFromAxisAngle(e,t),this.quaternion.premultiply(ir),this}rotateX(e){return this.rotateOnAxis(Xl,e)}rotateY(e){return this.rotateOnAxis(Yl,e)}rotateZ(e){return this.rotateOnAxis(Zl,e)}translateOnAxis(e,t){return ql.copy(e).applyQuaternion(this.quaternion),this.position.add(ql.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Xl,e)}translateY(e){return this.translateOnAxis(Yl,e)}translateZ(e){return this.translateOnAxis(Zl,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Kn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ts.copy(e):Ts.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Ur.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Kn.lookAt(Ur,Ts,this.up):Kn.lookAt(Ts,Ur,this.up),this.quaternion.setFromRotationMatrix(Kn),r&&(Kn.extractRotation(r.matrixWorld),ir.setFromRotationMatrix(Kn),this.quaternion.premultiply(ir.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(sp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Kl)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Kl)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Kn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Kn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Kn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ur,e,ip),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ur,rp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++){const a=r[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];s(e.shapes,f)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),f=o(e.shapes),d=o(e.skeletons),m=o(e.animations),g=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),d.length>0&&(n.skeletons=d),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}gt.DefaultUp=new G(0,1,0);gt.DefaultMatrixAutoUpdate=!0;gt.DefaultMatrixWorldAutoUpdate=!0;const Pn=new G,Jn=new G,jo=new G,Qn=new G,rr=new G,sr=new G,Jl=new G,qo=new G,Xo=new G,Yo=new G;class ei{constructor(e=new G,t=new G,n=new G){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Pn.subVectors(e,t),r.cross(Pn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){Pn.subVectors(r,t),Jn.subVectors(n,t),jo.subVectors(e,t);const o=Pn.dot(Pn),a=Pn.dot(Jn),l=Pn.dot(jo),c=Jn.dot(Jn),u=Jn.dot(jo),f=o*c-a*a;if(f===0)return s.set(-2,-1,-1);const d=1/f,m=(c*l-a*u)*d,g=(o*u-a*l)*d;return s.set(1-m-g,g,m)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,Qn),Qn.x>=0&&Qn.y>=0&&Qn.x+Qn.y<=1}static getUV(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,Qn),l.set(0,0),l.addScaledVector(s,Qn.x),l.addScaledVector(o,Qn.y),l.addScaledVector(a,Qn.z),l}static isFrontFacing(e,t,n,r){return Pn.subVectors(n,t),Jn.subVectors(e,t),Pn.cross(Jn).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Pn.subVectors(this.c,this.b),Jn.subVectors(this.a,this.b),Pn.cross(Jn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ei.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ei.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,s){return ei.getUV(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return ei.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ei.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;rr.subVectors(r,n),sr.subVectors(s,n),qo.subVectors(e,n);const l=rr.dot(qo),c=sr.dot(qo);if(l<=0&&c<=0)return t.copy(n);Xo.subVectors(e,r);const u=rr.dot(Xo),f=sr.dot(Xo);if(u>=0&&f<=u)return t.copy(r);const d=l*f-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(rr,o);Yo.subVectors(e,s);const m=rr.dot(Yo),g=sr.dot(Yo);if(g>=0&&m<=g)return t.copy(s);const h=m*c-l*g;if(h<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(n).addScaledVector(sr,a);const p=u*g-m*f;if(p<=0&&f-u>=0&&m-g>=0)return Jl.subVectors(s,r),a=(f-u)/(f-u+(m-g)),t.copy(r).addScaledVector(Jl,a);const _=1/(p+h+d);return o=h*_,a=d*_,t.copy(n).addScaledVector(rr,o).addScaledVector(sr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let op=0;class Pr extends ji{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:op++}),this.uuid=os(),this.name="",this.type="Material",this.blending=_r,this.side=Er,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=xf,this.blendDst=Mf,this.blendEquation=hr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=va,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Zh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ro,this.stencilZFail=Ro,this.stencilZPass=Ro,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==_r&&(n.blending=this.blending),this.side!==Er&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ba extends Pr{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=za,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ot=new G,Cs=new Be;class kn{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=zl,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Cs.fromBufferAttribute(this,t),Cs.applyMatrix3(e),this.setXY(t,Cs.x,Cs.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.applyMatrix3(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.applyMatrix4(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.applyNormalMatrix(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ot.fromBufferAttribute(this,t),Ot.transformDirection(e),this.setXYZ(t,Ot.x,Ot.y,Ot.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=vs(t,this.array)),t}setX(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=vs(t,this.array)),t}setY(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=vs(t,this.array)),t}setZ(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=vs(t,this.array)),t}setW(e,t){return this.normalized&&(t=cn(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=cn(t,this.array),n=cn(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=cn(t,this.array),n=cn(n,this.array),r=cn(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=cn(t,this.array),n=cn(n,this.array),r=cn(r,this.array),s=cn(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==zl&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class If extends kn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Of extends kn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class zt extends kn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let ap=0;const pn=new wt,Zo=new gt,or=new G,fn=new as,Gr=new as,Ut=new G;class dn extends ji{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:ap++}),this.uuid=os(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Cf(e)?Of:If)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new wn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return pn.makeRotationFromQuaternion(e),this.applyMatrix4(pn),this}rotateX(e){return pn.makeRotationX(e),this.applyMatrix4(pn),this}rotateY(e){return pn.makeRotationY(e),this.applyMatrix4(pn),this}rotateZ(e){return pn.makeRotationZ(e),this.applyMatrix4(pn),this}translate(e,t,n){return pn.makeTranslation(e,t,n),this.applyMatrix4(pn),this}scale(e,t,n){return pn.makeScale(e,t,n),this.applyMatrix4(pn),this}lookAt(e){return Zo.lookAt(e),Zo.updateMatrix(),this.applyMatrix4(Zo.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(or).negate(),this.translate(or.x,or.y,or.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new zt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new as);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new G(-1/0,-1/0,-1/0),new G(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];fn.setFromBufferAttribute(s),this.morphTargetsRelative?(Ut.addVectors(this.boundingBox.min,fn.min),this.boundingBox.expandByPoint(Ut),Ut.addVectors(this.boundingBox.max,fn.max),this.boundingBox.expandByPoint(Ut)):(this.boundingBox.expandByPoint(fn.min),this.boundingBox.expandByPoint(fn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new uo);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new G,1/0);return}if(e){const n=this.boundingSphere.center;if(fn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Gr.setFromBufferAttribute(a),this.morphTargetsRelative?(Ut.addVectors(fn.min,Gr.min),fn.expandByPoint(Ut),Ut.addVectors(fn.max,Gr.max),fn.expandByPoint(Ut)):(fn.expandByPoint(Gr.min),fn.expandByPoint(Gr.max))}fn.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)Ut.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(Ut));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Ut.fromBufferAttribute(a,c),l&&(or.fromBufferAttribute(e,c),Ut.add(or)),r=Math.max(r,n.distanceToSquared(Ut))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new kn(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let S=0;S<a;S++)c[S]=new G,u[S]=new G;const f=new G,d=new G,m=new G,g=new Be,h=new Be,p=new Be,_=new G,w=new G;function y(S,k,F){f.fromArray(r,S*3),d.fromArray(r,k*3),m.fromArray(r,F*3),g.fromArray(o,S*2),h.fromArray(o,k*2),p.fromArray(o,F*2),d.sub(f),m.sub(f),h.sub(g),p.sub(g);const L=1/(h.x*p.y-p.x*h.y);!isFinite(L)||(_.copy(d).multiplyScalar(p.y).addScaledVector(m,-h.y).multiplyScalar(L),w.copy(m).multiplyScalar(h.x).addScaledVector(d,-p.x).multiplyScalar(L),c[S].add(_),c[k].add(_),c[F].add(_),u[S].add(w),u[k].add(w),u[F].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let S=0,k=b.length;S<k;++S){const F=b[S],L=F.start,O=F.count;for(let I=L,R=L+O;I<R;I+=3)y(n[I+0],n[I+1],n[I+2])}const x=new G,M=new G,P=new G,v=new G;function E(S){P.fromArray(s,S*3),v.copy(P);const k=c[S];x.copy(k),x.sub(P.multiplyScalar(P.dot(k))).normalize(),M.crossVectors(v,k);const L=M.dot(u[S])<0?-1:1;l[S*4]=x.x,l[S*4+1]=x.y,l[S*4+2]=x.z,l[S*4+3]=L}for(let S=0,k=b.length;S<k;++S){const F=b[S],L=F.start,O=F.count;for(let I=L,R=L+O;I<R;I+=3)E(n[I+0]),E(n[I+1]),E(n[I+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new kn(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,m=n.count;d<m;d++)n.setXYZ(d,0,0,0);const r=new G,s=new G,o=new G,a=new G,l=new G,c=new G,u=new G,f=new G;if(e)for(let d=0,m=e.count;d<m;d+=3){const g=e.getX(d+0),h=e.getX(d+1),p=e.getX(d+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,h),o.fromBufferAttribute(t,p),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,h),c.fromBufferAttribute(n,p),a.add(u),l.add(u),c.add(u),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(h,l.x,l.y,l.z),n.setXYZ(p,c.x,c.y,c.z)}else for(let d=0,m=t.count;d<m;d+=3)r.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Ut.fromBufferAttribute(e,t),Ut.normalize(),e.setXYZ(t,Ut.x,Ut.y,Ut.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,f=a.normalized,d=new c.constructor(l.length*u);let m=0,g=0;for(let h=0,p=l.length;h<p;h++){a.isInterleavedBufferAttribute?m=l[h]*a.data.stride+a.offset:m=l[h]*u;for(let _=0;_<u;_++)d[g++]=c[m++]}return new kn(d,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new dn,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,f=c.length;u<f;u++){const d=c[u],m=e(d,n);l.push(m)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,d=c.length;f<d;f++){const m=c[f];u.push(m.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],f=s[c];for(let d=0,m=f.length;d<m;d++)u.push(f[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const Ql=new wt,ar=new Ua,Ko=new uo,mi=new G,gi=new G,_i=new G,Jo=new G,Qo=new G,$o=new G,Ls=new G,Ds=new G,Ps=new G,Rs=new Be,Is=new Be,Os=new Be,ea=new G,ks=new G;class yn extends gt{constructor(e=new dn,t=new Ba){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Ko.copy(n.boundingSphere),Ko.applyMatrix4(s),e.ray.intersectsSphere(Ko)===!1)||(Ql.copy(s).invert(),ar.copy(e.ray).applyMatrix4(Ql),n.boundingBox!==null&&ar.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,d=n.attributes.uv2,m=n.groups,g=n.drawRange;if(a!==null)if(Array.isArray(r))for(let h=0,p=m.length;h<p;h++){const _=m[h],w=r[_.materialIndex],y=Math.max(_.start,g.start),b=Math.min(a.count,Math.min(_.start+_.count,g.start+g.count));for(let x=y,M=b;x<M;x+=3){const P=a.getX(x),v=a.getX(x+1),E=a.getX(x+2);o=Ns(this,w,e,ar,l,c,u,f,d,P,v,E),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=_.materialIndex,t.push(o))}}else{const h=Math.max(0,g.start),p=Math.min(a.count,g.start+g.count);for(let _=h,w=p;_<w;_+=3){const y=a.getX(_),b=a.getX(_+1),x=a.getX(_+2);o=Ns(this,r,e,ar,l,c,u,f,d,y,b,x),o&&(o.faceIndex=Math.floor(_/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let h=0,p=m.length;h<p;h++){const _=m[h],w=r[_.materialIndex],y=Math.max(_.start,g.start),b=Math.min(l.count,Math.min(_.start+_.count,g.start+g.count));for(let x=y,M=b;x<M;x+=3){const P=x,v=x+1,E=x+2;o=Ns(this,w,e,ar,l,c,u,f,d,P,v,E),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=_.materialIndex,t.push(o))}}else{const h=Math.max(0,g.start),p=Math.min(l.count,g.start+g.count);for(let _=h,w=p;_<w;_+=3){const y=_,b=_+1,x=_+2;o=Ns(this,r,e,ar,l,c,u,f,d,y,b,x),o&&(o.faceIndex=Math.floor(_/3),t.push(o))}}}}function lp(i,e,t,n,r,s,o,a){let l;if(e.side===Mn?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side!==vi,a),l===null)return null;ks.copy(a),ks.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(ks);return c<t.near||c>t.far?null:{distance:c,point:ks.clone(),object:i}}function Ns(i,e,t,n,r,s,o,a,l,c,u,f){mi.fromBufferAttribute(r,c),gi.fromBufferAttribute(r,u),_i.fromBufferAttribute(r,f);const d=i.morphTargetInfluences;if(s&&d){Ls.set(0,0,0),Ds.set(0,0,0),Ps.set(0,0,0);for(let g=0,h=s.length;g<h;g++){const p=d[g],_=s[g];p!==0&&(Jo.fromBufferAttribute(_,c),Qo.fromBufferAttribute(_,u),$o.fromBufferAttribute(_,f),o?(Ls.addScaledVector(Jo,p),Ds.addScaledVector(Qo,p),Ps.addScaledVector($o,p)):(Ls.addScaledVector(Jo.sub(mi),p),Ds.addScaledVector(Qo.sub(gi),p),Ps.addScaledVector($o.sub(_i),p)))}mi.add(Ls),gi.add(Ds),_i.add(Ps)}i.isSkinnedMesh&&(i.boneTransform(c,mi),i.boneTransform(u,gi),i.boneTransform(f,_i));const m=lp(i,e,t,n,mi,gi,_i,ea);if(m){a&&(Rs.fromBufferAttribute(a,c),Is.fromBufferAttribute(a,u),Os.fromBufferAttribute(a,f),m.uv=ei.getUV(ea,mi,gi,_i,Rs,Is,Os,new Be)),l&&(Rs.fromBufferAttribute(l,c),Is.fromBufferAttribute(l,u),Os.fromBufferAttribute(l,f),m.uv2=ei.getUV(ea,mi,gi,_i,Rs,Is,Os,new Be));const g={a:c,b:u,c:f,normal:new G,materialIndex:0};ei.getNormal(mi,gi,_i,g.normal),m.face=g}return m}class cs extends dn{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],f=[];let d=0,m=0;g("z","y","x",-1,-1,n,t,e,o,s,0),g("z","y","x",1,-1,n,t,-e,o,s,1),g("x","z","y",1,1,e,n,t,r,o,2),g("x","z","y",1,-1,e,n,-t,r,o,3),g("x","y","z",1,-1,e,t,n,r,s,4),g("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new zt(c,3)),this.setAttribute("normal",new zt(u,3)),this.setAttribute("uv",new zt(f,2));function g(h,p,_,w,y,b,x,M,P,v,E){const S=b/P,k=x/v,F=b/2,L=x/2,O=M/2,I=P+1,R=v+1;let Y=0,Z=0;const H=new G;for(let B=0;B<R;B++){const j=B*k-L;for(let ne=0;ne<I;ne++){const se=ne*S-F;H[h]=se*w,H[p]=j*y,H[_]=O,c.push(H.x,H.y,H.z),H[h]=0,H[p]=0,H[_]=M>0?1:-1,u.push(H.x,H.y,H.z),f.push(ne/P),f.push(1-B/v),Y+=1}}for(let B=0;B<v;B++)for(let j=0;j<P;j++){const ne=d+j+I*B,se=d+j+I*(B+1),_e=d+(j+1)+I*(B+1),Me=d+(j+1)+I*B;l.push(ne,se,Me),l.push(se,_e,Me),Z+=6}a.addGroup(m,Z,E),m+=Z,d+=Y}}static fromJSON(e){return new cs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Lr(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function jt(i){const e={};for(let t=0;t<i.length;t++){const n=Lr(i[t]);for(const r in n)e[r]=n[r]}return e}function cp(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}const kf={clone:Lr,merge:jt};var up=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,fp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ii extends Pr{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=up,this.fragmentShader=fp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Lr(e.uniforms),this.uniformsGroups=cp(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Va extends gt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new wt,this.projectionMatrix=new wt,this.projectionMatrixInverse=new wt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class qt extends Va{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Gl*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Io*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Gl*2*Math.atan(Math.tan(Io*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Io*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const lr=90,cr=1;class dp extends gt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const r=new qt(lr,cr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new G(1,0,0)),this.add(r);const s=new qt(lr,cr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new G(-1,0,0)),this.add(s);const o=new qt(lr,cr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new G(0,1,0)),this.add(o);const a=new qt(lr,cr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new G(0,-1,0)),this.add(a);const l=new qt(lr,cr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new G(0,0,1)),this.add(l);const c=new qt(lr,cr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new G(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,o,a,l,c]=this.children,u=e.getRenderTarget(),f=e.toneMapping,d=e.xr.enabled;e.toneMapping=Gn,e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class Nf extends En{constructor(e,t,n,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:Ar,super(e,t,n,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class hp extends Mi{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new Nf(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:vn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new cs(5,5,5),s=new ii({name:"CubemapFromEquirect",uniforms:Lr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Mn,blending:wi});s.uniforms.tEquirect.value=t;const o=new yn(r,s),a=t.minFilter;return t.minFilter===co&&(t.minFilter=vn),new dp(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}const ta=new G,pp=new G,mp=new wn;class Ii{constructor(e=new G(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=ta.subVectors(n,t).cross(pp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(ta),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||mp.getNormalMatrix(e),r=this.coplanarPoint(ta).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ur=new uo,Fs=new G;class fo{constructor(e=new Ii,t=new Ii,n=new Ii,r=new Ii,s=new Ii,o=new Ii){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],f=n[7],d=n[8],m=n[9],g=n[10],h=n[11],p=n[12],_=n[13],w=n[14],y=n[15];return t[0].setComponents(a-r,f-l,h-d,y-p).normalize(),t[1].setComponents(a+r,f+l,h+d,y+p).normalize(),t[2].setComponents(a+s,f+c,h+m,y+_).normalize(),t[3].setComponents(a-s,f-c,h-m,y-_).normalize(),t[4].setComponents(a-o,f-u,h-g,y-w).normalize(),t[5].setComponents(a+o,f+u,h+g,y+w).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),ur.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ur)}intersectsSprite(e){return ur.center.set(0,0,0),ur.radius=.7071067811865476,ur.applyMatrix4(e.matrixWorld),this.intersectsSphere(ur)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Fs.x=r.normal.x>0?e.max.x:e.min.x,Fs.y=r.normal.y>0?e.max.y:e.min.y,Fs.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Fs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Ff(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function gp(i,e){const t=e.isWebGL2,n=new WeakMap;function r(c,u){const f=c.array,d=c.usage,m=i.createBuffer();i.bindBuffer(u,m),i.bufferData(u,f,d),c.onUploadCallback();let g;if(f instanceof Float32Array)g=5126;else if(f instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(f instanceof Int16Array)g=5122;else if(f instanceof Uint32Array)g=5125;else if(f instanceof Int32Array)g=5124;else if(f instanceof Int8Array)g=5120;else if(f instanceof Uint8Array)g=5121;else if(f instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:m,type:g,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,f){const d=u.array,m=u.updateRange;i.bindBuffer(f,c),m.count===-1?i.bufferSubData(f,0,d):(t?i.bufferSubData(f,m.offset*d.BYTES_PER_ELEMENT,d,m.offset,m.count):i.bufferSubData(f,m.offset*d.BYTES_PER_ELEMENT,d.subarray(m.offset,m.offset+m.count)),m.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(i.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=n.get(c);f===void 0?n.set(c,r(c,u)):f.version<c.version&&(s(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}class Ha extends dn{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,f=e/a,d=t/l,m=[],g=[],h=[],p=[];for(let _=0;_<u;_++){const w=_*d-o;for(let y=0;y<c;y++){const b=y*f-s;g.push(b,-w,0),h.push(0,0,1),p.push(y/a),p.push(1-_/l)}}for(let _=0;_<l;_++)for(let w=0;w<a;w++){const y=w+c*_,b=w+c*(_+1),x=w+1+c*(_+1),M=w+1+c*_;m.push(y,b,M),m.push(b,x,M)}this.setIndex(m),this.setAttribute("position",new zt(g,3)),this.setAttribute("normal",new zt(h,3)),this.setAttribute("uv",new zt(p,2))}static fromJSON(e){return new Ha(e.width,e.height,e.widthSegments,e.heightSegments)}}var _p=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,vp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,bp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,wp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,yp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,xp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Mp="vec3 transformed = vec3( position );",Sp=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ep=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Ap=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Tp=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Cp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Lp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Dp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Pp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Rp=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Ip=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Op=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,kp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Np=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Fp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,zp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,Up=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Gp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Bp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Vp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Hp="gl_FragColor = linearToOutputTexel( gl_FragColor );",Wp=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,jp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,qp=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Xp=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Yp=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Zp=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Kp=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Jp=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Qp=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,$p=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,em=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,tm=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,nm=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,im=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,rm=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,sm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,om=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,am=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,lm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,cm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,um=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,fm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,dm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,hm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,pm=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,mm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,gm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,_m=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,vm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,bm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,wm=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,ym=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,xm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Mm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Sm=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Em=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Am=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Tm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Cm=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Lm=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Dm=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Pm=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Rm=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Im=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Om=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,km=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Nm=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Fm=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,zm=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Um=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Gm=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Bm=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Vm=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Hm=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Wm=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,jm=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,qm=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Xm=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Ym=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Zm=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Km=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Jm=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Qm=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,$m=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,eg=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,tg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ng=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,ig=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,rg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,sg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,og=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,ag=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,lg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,cg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,ug=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,fg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,dg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,hg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,pg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const mg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,gg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,_g=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,vg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,bg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,wg=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,yg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,xg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Mg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Sg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Eg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Ag=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Tg=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Cg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Lg=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Dg=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Pg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Rg=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ig=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Og=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,kg=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Ng=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Fg=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,zg=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ug=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Gg=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bg=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Vg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Hg=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Wg=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,jg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,qg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,et={alphamap_fragment:_p,alphamap_pars_fragment:vp,alphatest_fragment:bp,alphatest_pars_fragment:wp,aomap_fragment:yp,aomap_pars_fragment:xp,begin_vertex:Mp,beginnormal_vertex:Sp,bsdfs:Ep,iridescence_fragment:Ap,bumpmap_pars_fragment:Tp,clipping_planes_fragment:Cp,clipping_planes_pars_fragment:Lp,clipping_planes_pars_vertex:Dp,clipping_planes_vertex:Pp,color_fragment:Rp,color_pars_fragment:Ip,color_pars_vertex:Op,color_vertex:kp,common:Np,cube_uv_reflection_fragment:Fp,defaultnormal_vertex:zp,displacementmap_pars_vertex:Up,displacementmap_vertex:Gp,emissivemap_fragment:Bp,emissivemap_pars_fragment:Vp,encodings_fragment:Hp,encodings_pars_fragment:Wp,envmap_fragment:jp,envmap_common_pars_fragment:qp,envmap_pars_fragment:Xp,envmap_pars_vertex:Yp,envmap_physical_pars_fragment:om,envmap_vertex:Zp,fog_vertex:Kp,fog_pars_vertex:Jp,fog_fragment:Qp,fog_pars_fragment:$p,gradientmap_pars_fragment:em,lightmap_fragment:tm,lightmap_pars_fragment:nm,lights_lambert_fragment:im,lights_lambert_pars_fragment:rm,lights_pars_begin:sm,lights_toon_fragment:am,lights_toon_pars_fragment:lm,lights_phong_fragment:cm,lights_phong_pars_fragment:um,lights_physical_fragment:fm,lights_physical_pars_fragment:dm,lights_fragment_begin:hm,lights_fragment_maps:pm,lights_fragment_end:mm,logdepthbuf_fragment:gm,logdepthbuf_pars_fragment:_m,logdepthbuf_pars_vertex:vm,logdepthbuf_vertex:bm,map_fragment:wm,map_pars_fragment:ym,map_particle_fragment:xm,map_particle_pars_fragment:Mm,metalnessmap_fragment:Sm,metalnessmap_pars_fragment:Em,morphcolor_vertex:Am,morphnormal_vertex:Tm,morphtarget_pars_vertex:Cm,morphtarget_vertex:Lm,normal_fragment_begin:Dm,normal_fragment_maps:Pm,normal_pars_fragment:Rm,normal_pars_vertex:Im,normal_vertex:Om,normalmap_pars_fragment:km,clearcoat_normal_fragment_begin:Nm,clearcoat_normal_fragment_maps:Fm,clearcoat_pars_fragment:zm,iridescence_pars_fragment:Um,output_fragment:Gm,packing:Bm,premultiplied_alpha_fragment:Vm,project_vertex:Hm,dithering_fragment:Wm,dithering_pars_fragment:jm,roughnessmap_fragment:qm,roughnessmap_pars_fragment:Xm,shadowmap_pars_fragment:Ym,shadowmap_pars_vertex:Zm,shadowmap_vertex:Km,shadowmask_pars_fragment:Jm,skinbase_vertex:Qm,skinning_pars_vertex:$m,skinning_vertex:eg,skinnormal_vertex:tg,specularmap_fragment:ng,specularmap_pars_fragment:ig,tonemapping_fragment:rg,tonemapping_pars_fragment:sg,transmission_fragment:og,transmission_pars_fragment:ag,uv_pars_fragment:lg,uv_pars_vertex:cg,uv_vertex:ug,uv2_pars_fragment:fg,uv2_pars_vertex:dg,uv2_vertex:hg,worldpos_vertex:pg,background_vert:mg,background_frag:gg,cube_vert:_g,cube_frag:vg,depth_vert:bg,depth_frag:wg,distanceRGBA_vert:yg,distanceRGBA_frag:xg,equirect_vert:Mg,equirect_frag:Sg,linedashed_vert:Eg,linedashed_frag:Ag,meshbasic_vert:Tg,meshbasic_frag:Cg,meshlambert_vert:Lg,meshlambert_frag:Dg,meshmatcap_vert:Pg,meshmatcap_frag:Rg,meshnormal_vert:Ig,meshnormal_frag:Og,meshphong_vert:kg,meshphong_frag:Ng,meshphysical_vert:Fg,meshphysical_frag:zg,meshtoon_vert:Ug,meshtoon_frag:Gg,points_vert:Bg,points_frag:Vg,shadow_vert:Hg,shadow_frag:Wg,sprite_vert:jg,sprite_frag:qg},be={common:{diffuse:{value:new Xe(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new wn},uv2Transform:{value:new wn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Be(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Xe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Xe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new wn}},sprite:{diffuse:{value:new Xe(16777215)},opacity:{value:1},center:{value:new Be(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new wn}}},Fn={basic:{uniforms:jt([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.fog]),vertexShader:et.meshbasic_vert,fragmentShader:et.meshbasic_frag},lambert:{uniforms:jt([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.fog,be.lights,{emissive:{value:new Xe(0)}}]),vertexShader:et.meshlambert_vert,fragmentShader:et.meshlambert_frag},phong:{uniforms:jt([be.common,be.specularmap,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.fog,be.lights,{emissive:{value:new Xe(0)},specular:{value:new Xe(1118481)},shininess:{value:30}}]),vertexShader:et.meshphong_vert,fragmentShader:et.meshphong_frag},standard:{uniforms:jt([be.common,be.envmap,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.roughnessmap,be.metalnessmap,be.fog,be.lights,{emissive:{value:new Xe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:et.meshphysical_vert,fragmentShader:et.meshphysical_frag},toon:{uniforms:jt([be.common,be.aomap,be.lightmap,be.emissivemap,be.bumpmap,be.normalmap,be.displacementmap,be.gradientmap,be.fog,be.lights,{emissive:{value:new Xe(0)}}]),vertexShader:et.meshtoon_vert,fragmentShader:et.meshtoon_frag},matcap:{uniforms:jt([be.common,be.bumpmap,be.normalmap,be.displacementmap,be.fog,{matcap:{value:null}}]),vertexShader:et.meshmatcap_vert,fragmentShader:et.meshmatcap_frag},points:{uniforms:jt([be.points,be.fog]),vertexShader:et.points_vert,fragmentShader:et.points_frag},dashed:{uniforms:jt([be.common,be.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:et.linedashed_vert,fragmentShader:et.linedashed_frag},depth:{uniforms:jt([be.common,be.displacementmap]),vertexShader:et.depth_vert,fragmentShader:et.depth_frag},normal:{uniforms:jt([be.common,be.bumpmap,be.normalmap,be.displacementmap,{opacity:{value:1}}]),vertexShader:et.meshnormal_vert,fragmentShader:et.meshnormal_frag},sprite:{uniforms:jt([be.sprite,be.fog]),vertexShader:et.sprite_vert,fragmentShader:et.sprite_frag},background:{uniforms:{uvTransform:{value:new wn},t2D:{value:null}},vertexShader:et.background_vert,fragmentShader:et.background_frag},cube:{uniforms:jt([be.envmap,{opacity:{value:1}}]),vertexShader:et.cube_vert,fragmentShader:et.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:et.equirect_vert,fragmentShader:et.equirect_frag},distanceRGBA:{uniforms:jt([be.common,be.displacementmap,{referencePosition:{value:new G},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:et.distanceRGBA_vert,fragmentShader:et.distanceRGBA_frag},shadow:{uniforms:jt([be.lights,be.fog,{color:{value:new Xe(0)},opacity:{value:1}}]),vertexShader:et.shadow_vert,fragmentShader:et.shadow_frag}};Fn.physical={uniforms:jt([Fn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Be(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Xe(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Be},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Xe(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Xe(1,1,1)},specularColorMap:{value:null}}]),vertexShader:et.meshphysical_vert,fragmentShader:et.meshphysical_frag};function Xg(i,e,t,n,r,s){const o=new Xe(0);let a=r===!0?0:1,l,c,u=null,f=0,d=null;function m(h,p){let _=!1,w=p.isScene===!0?p.background:null;w&&w.isTexture&&(w=e.get(w));const y=i.xr,b=y.getSession&&y.getSession();b&&b.environmentBlendMode==="additive"&&(w=null),w===null?g(o,a):w&&w.isColor&&(g(w,1),_=!0),(i.autoClear||_)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),w&&(w.isCubeTexture||w.mapping===lo)?(c===void 0&&(c=new yn(new cs(1,1,1),new ii({name:"BackgroundCubeMaterial",uniforms:Lr(Fn.cube.uniforms),vertexShader:Fn.cube.vertexShader,fragmentShader:Fn.cube.fragmentShader,side:Mn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(x,M,P){this.matrixWorld.copyPosition(P.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=w,c.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,(u!==w||f!==w.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,u=w,f=w.version,d=i.toneMapping),c.layers.enableAll(),h.unshift(c,c.geometry,c.material,0,0,null)):w&&w.isTexture&&(l===void 0&&(l=new yn(new Ha(2,2),new ii({name:"BackgroundMaterial",uniforms:Lr(Fn.background.uniforms),vertexShader:Fn.background.vertexShader,fragmentShader:Fn.background.fragmentShader,side:Er,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=w,w.matrixAutoUpdate===!0&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),(u!==w||f!==w.version||d!==i.toneMapping)&&(l.material.needsUpdate=!0,u=w,f=w.version,d=i.toneMapping),l.layers.enableAll(),h.unshift(l,l.geometry,l.material,0,0,null))}function g(h,p){t.buffers.color.setClear(h.r,h.g,h.b,p,s)}return{getClearColor:function(){return o},setClearColor:function(h,p=1){o.set(h),a=p,g(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(h){a=h,g(o,a)},render:m}}function Yg(i,e,t,n){const r=i.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=p(null);let c=l,u=!1;function f(O,I,R,Y,Z){let H=!1;if(o){const B=h(Y,R,I);c!==B&&(c=B,m(c.object)),H=_(O,Y,R,Z),H&&w(O,Y,R,Z)}else{const B=I.wireframe===!0;(c.geometry!==Y.id||c.program!==R.id||c.wireframe!==B)&&(c.geometry=Y.id,c.program=R.id,c.wireframe=B,H=!0)}Z!==null&&t.update(Z,34963),(H||u)&&(u=!1,v(O,I,R,Y),Z!==null&&i.bindBuffer(34963,t.get(Z).buffer))}function d(){return n.isWebGL2?i.createVertexArray():s.createVertexArrayOES()}function m(O){return n.isWebGL2?i.bindVertexArray(O):s.bindVertexArrayOES(O)}function g(O){return n.isWebGL2?i.deleteVertexArray(O):s.deleteVertexArrayOES(O)}function h(O,I,R){const Y=R.wireframe===!0;let Z=a[O.id];Z===void 0&&(Z={},a[O.id]=Z);let H=Z[I.id];H===void 0&&(H={},Z[I.id]=H);let B=H[Y];return B===void 0&&(B=p(d()),H[Y]=B),B}function p(O){const I=[],R=[],Y=[];for(let Z=0;Z<r;Z++)I[Z]=0,R[Z]=0,Y[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:R,attributeDivisors:Y,object:O,attributes:{},index:null}}function _(O,I,R,Y){const Z=c.attributes,H=I.attributes;let B=0;const j=R.getAttributes();for(const ne in j)if(j[ne].location>=0){const _e=Z[ne];let Me=H[ne];if(Me===void 0&&(ne==="instanceMatrix"&&O.instanceMatrix&&(Me=O.instanceMatrix),ne==="instanceColor"&&O.instanceColor&&(Me=O.instanceColor)),_e===void 0||_e.attribute!==Me||Me&&_e.data!==Me.data)return!0;B++}return c.attributesNum!==B||c.index!==Y}function w(O,I,R,Y){const Z={},H=I.attributes;let B=0;const j=R.getAttributes();for(const ne in j)if(j[ne].location>=0){let _e=H[ne];_e===void 0&&(ne==="instanceMatrix"&&O.instanceMatrix&&(_e=O.instanceMatrix),ne==="instanceColor"&&O.instanceColor&&(_e=O.instanceColor));const Me={};Me.attribute=_e,_e&&_e.data&&(Me.data=_e.data),Z[ne]=Me,B++}c.attributes=Z,c.attributesNum=B,c.index=Y}function y(){const O=c.newAttributes;for(let I=0,R=O.length;I<R;I++)O[I]=0}function b(O){x(O,0)}function x(O,I){const R=c.newAttributes,Y=c.enabledAttributes,Z=c.attributeDivisors;R[O]=1,Y[O]===0&&(i.enableVertexAttribArray(O),Y[O]=1),Z[O]!==I&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,I),Z[O]=I)}function M(){const O=c.newAttributes,I=c.enabledAttributes;for(let R=0,Y=I.length;R<Y;R++)I[R]!==O[R]&&(i.disableVertexAttribArray(R),I[R]=0)}function P(O,I,R,Y,Z,H){n.isWebGL2===!0&&(R===5124||R===5125)?i.vertexAttribIPointer(O,I,R,Z,H):i.vertexAttribPointer(O,I,R,Y,Z,H)}function v(O,I,R,Y){if(n.isWebGL2===!1&&(O.isInstancedMesh||Y.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const Z=Y.attributes,H=R.getAttributes(),B=I.defaultAttributeValues;for(const j in H){const ne=H[j];if(ne.location>=0){let se=Z[j];if(se===void 0&&(j==="instanceMatrix"&&O.instanceMatrix&&(se=O.instanceMatrix),j==="instanceColor"&&O.instanceColor&&(se=O.instanceColor)),se!==void 0){const _e=se.normalized,Me=se.itemSize,V=t.get(se);if(V===void 0)continue;const ue=V.buffer,Te=V.type,ce=V.bytesPerElement;if(se.isInterleavedBufferAttribute){const ve=se.data,qe=ve.stride,Q=se.offset;if(ve.isInstancedInterleavedBuffer){for(let le=0;le<ne.locationSize;le++)x(ne.location+le,ve.meshPerAttribute);O.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let le=0;le<ne.locationSize;le++)b(ne.location+le);i.bindBuffer(34962,ue);for(let le=0;le<ne.locationSize;le++)P(ne.location+le,Me/ne.locationSize,Te,_e,qe*ce,(Q+Me/ne.locationSize*le)*ce)}else{if(se.isInstancedBufferAttribute){for(let ve=0;ve<ne.locationSize;ve++)x(ne.location+ve,se.meshPerAttribute);O.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let ve=0;ve<ne.locationSize;ve++)b(ne.location+ve);i.bindBuffer(34962,ue);for(let ve=0;ve<ne.locationSize;ve++)P(ne.location+ve,Me/ne.locationSize,Te,_e,Me*ce,Me/ne.locationSize*ve*ce)}}else if(B!==void 0){const _e=B[j];if(_e!==void 0)switch(_e.length){case 2:i.vertexAttrib2fv(ne.location,_e);break;case 3:i.vertexAttrib3fv(ne.location,_e);break;case 4:i.vertexAttrib4fv(ne.location,_e);break;default:i.vertexAttrib1fv(ne.location,_e)}}}}M()}function E(){F();for(const O in a){const I=a[O];for(const R in I){const Y=I[R];for(const Z in Y)g(Y[Z].object),delete Y[Z];delete I[R]}delete a[O]}}function S(O){if(a[O.id]===void 0)return;const I=a[O.id];for(const R in I){const Y=I[R];for(const Z in Y)g(Y[Z].object),delete Y[Z];delete I[R]}delete a[O.id]}function k(O){for(const I in a){const R=a[I];if(R[O.id]===void 0)continue;const Y=R[O.id];for(const Z in Y)g(Y[Z].object),delete Y[Z];delete R[O.id]}}function F(){L(),u=!0,c!==l&&(c=l,m(c.object))}function L(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:f,reset:F,resetDefaultState:L,dispose:E,releaseStatesOfGeometry:S,releaseStatesOfProgram:k,initAttributes:y,enableAttribute:b,disableUnusedAttributes:M}}function Zg(i,e,t,n){const r=n.isWebGL2;let s;function o(c){s=c}function a(c,u){i.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,f){if(f===0)return;let d,m;if(r)d=i,m="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[m](s,c,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=l}function Kg(i,e,t){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const P=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(P.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(P){if(P==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";P="mediump"}return P==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&i instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=i.getParameter(34930),d=i.getParameter(35660),m=i.getParameter(3379),g=i.getParameter(34076),h=i.getParameter(34921),p=i.getParameter(36347),_=i.getParameter(36348),w=i.getParameter(36349),y=d>0,b=o||e.has("OES_texture_float"),x=y&&b,M=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:d,maxTextureSize:m,maxCubemapSize:g,maxAttributes:h,maxVertexUniforms:p,maxVaryings:_,maxFragmentUniforms:w,vertexTextures:y,floatFragmentTextures:b,floatVertexTextures:x,maxSamples:M}}function Jg(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new Ii,a=new wn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,d,m){const g=f.length!==0||d||n!==0||r;return r=d,t=u(f,m,0),n=f.length,g},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(f,d,m){const g=f.clippingPlanes,h=f.clipIntersection,p=f.clipShadows,_=i.get(f);if(!r||g===null||g.length===0||s&&!p)s?u(null):c();else{const w=s?0:n,y=w*4;let b=_.clippingState||null;l.value=b,b=u(g,d,y,m);for(let x=0;x!==y;++x)b[x]=t[x];_.clippingState=b,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=w}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,d,m,g){const h=f!==null?f.length:0;let p=null;if(h!==0){if(p=l.value,g!==!0||p===null){const _=m+h*4,w=d.matrixWorldInverse;a.getNormalMatrix(w),(p===null||p.length<_)&&(p=new Float32Array(_));for(let y=0,b=m;y!==h;++y,b+=4)o.copy(f[y]).applyMatrix4(w,a),o.normal.toArray(p,b),p[b+3]=o.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=h,e.numIntersection=0,p}}function Qg(i){let e=new WeakMap;function t(o,a){return a===ba?o.mapping=Ar:a===wa&&(o.mapping=Tr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===ba||a===wa)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new hp(l.height/2);return c.fromEquirectangularTexture(i,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class qi extends Va{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const pr=4,$l=[.125,.215,.35,.446,.526,.582],ki=20,na=new qi,ec=new Xe;let ia=null;const Oi=(1+Math.sqrt(5))/2,fr=1/Oi,tc=[new G(1,1,1),new G(-1,1,1),new G(1,1,-1),new G(-1,1,-1),new G(0,Oi,fr),new G(0,Oi,-fr),new G(fr,0,Oi),new G(-fr,0,Oi),new G(Oi,fr,0),new G(-Oi,fr,0)];class nc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){ia=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=sc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=rc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ia),e.scissorTest=!1,zs(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Ar||e.mapping===Tr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ia=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:vn,minFilter:vn,generateMipmaps:!1,type:$r,format:Un,encoding:xi,depthBuffer:!1},r=ic(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ic(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=$g(s)),this._blurMaterial=e_(s,e,t)}return r}_compileMaterial(e){const t=new yn(this._lodPlanes[0],e);this._renderer.compile(t,na)}_sceneToCubeUV(e,t,n,r){const a=new qt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,d=u.toneMapping;u.getClearColor(ec),u.toneMapping=Gn,u.autoClear=!1;const m=new Ba({name:"PMREM.Background",side:Mn,depthWrite:!1,depthTest:!1}),g=new yn(new cs,m);let h=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,h=!0):(m.color.copy(ec),h=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):w===1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_]));const y=this._cubeSize;zs(r,w*y,_>2?y:0,y,y),u.setRenderTarget(r),h&&u.render(g,a),u.render(e,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.autoClear=f,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Ar||e.mapping===Tr;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=sc()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=rc());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new yn(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;zs(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,na)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=tc[(r-1)%tc.length];this._blur(e,r-1,r,s,o)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new yn(this._lodPlanes[r],c),d=c.uniforms,m=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*ki-1),h=s/g,p=isFinite(s)?1+Math.floor(u*h):ki;p>ki&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${ki}`);const _=[];let w=0;for(let P=0;P<ki;++P){const v=P/h,E=Math.exp(-v*v/2);_.push(E),P===0?w+=E:P<p&&(w+=2*E)}for(let P=0;P<_.length;P++)_[P]=_[P]/w;d.envMap.value=e.texture,d.samples.value=p,d.weights.value=_,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=g,d.mipInt.value=y-n;const b=this._sizeLods[r],x=3*b*(r>y-pr?r-y+pr:0),M=4*(this._cubeSize-b);zs(t,x,M,3*b,2*b),l.setRenderTarget(t),l.render(f,na)}}function $g(i){const e=[],t=[],n=[];let r=i;const s=i-pr+1+$l.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>i-pr?l=$l[o-i+pr-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,f=1+c,d=[u,u,f,u,f,f,u,u,f,f,u,f],m=6,g=6,h=3,p=2,_=1,w=new Float32Array(h*g*m),y=new Float32Array(p*g*m),b=new Float32Array(_*g*m);for(let M=0;M<m;M++){const P=M%3*2/3-1,v=M>2?0:-1,E=[P,v,0,P+2/3,v,0,P+2/3,v+1,0,P,v,0,P+2/3,v+1,0,P,v+1,0];w.set(E,h*g*M),y.set(d,p*g*M);const S=[M,M,M,M,M,M];b.set(S,_*g*M)}const x=new dn;x.setAttribute("position",new kn(w,h)),x.setAttribute("uv",new kn(y,p)),x.setAttribute("faceIndex",new kn(b,_)),e.push(x),r>pr&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function ic(i,e,t){const n=new Mi(i,e,t);return n.texture.mapping=lo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function zs(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function e_(i,e,t){const n=new Float32Array(ki),r=new G(0,1,0);return new ii({name:"SphericalGaussianBlur",defines:{n:ki,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Wa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:wi,depthTest:!1,depthWrite:!1})}function rc(){return new ii({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Wa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:wi,depthTest:!1,depthWrite:!1})}function sc(){return new ii({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Wa(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:wi,depthTest:!1,depthWrite:!1})}function Wa(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function t_(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===ba||l===wa,u=l===Ar||l===Tr;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new nc(i)),f=c?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(c&&f&&f.height>0||u&&f&&r(f)){t===null&&(t=new nc(i));const d=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function n_(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const r=t(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function i_(i,e,t,n){const r={},s=new WeakMap;function o(f){const d=f.target;d.index!==null&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",o),delete r[d.id];const m=s.get(d);m&&(e.remove(m),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(f,d){return r[d.id]===!0||(d.addEventListener("dispose",o),r[d.id]=!0,t.memory.geometries++),d}function l(f){const d=f.attributes;for(const g in d)e.update(d[g],34962);const m=f.morphAttributes;for(const g in m){const h=m[g];for(let p=0,_=h.length;p<_;p++)e.update(h[p],34962)}}function c(f){const d=[],m=f.index,g=f.attributes.position;let h=0;if(m!==null){const w=m.array;h=m.version;for(let y=0,b=w.length;y<b;y+=3){const x=w[y+0],M=w[y+1],P=w[y+2];d.push(x,M,M,P,P,x)}}else{const w=g.array;h=g.version;for(let y=0,b=w.length/3-1;y<b;y+=3){const x=y+0,M=y+1,P=y+2;d.push(x,M,M,P,P,x)}}const p=new(Cf(d)?Of:If)(d,1);p.version=h;const _=s.get(f);_&&e.remove(_),s.set(f,p)}function u(f){const d=s.get(f);if(d){const m=f.index;m!==null&&d.version<m.version&&c(f)}else c(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function r_(i,e,t,n){const r=n.isWebGL2;let s;function o(d){s=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,m){i.drawElements(s,m,a,d*l),t.update(m,s,1)}function f(d,m,g){if(g===0)return;let h,p;if(r)h=i,p="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",h===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[p](s,m,a,d*l,g),t.update(m,s,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function s_(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function o_(i,e){return i[0]-e[0]}function a_(i,e){return Math.abs(e[1])-Math.abs(i[1])}function l_(i,e,t){const n={},r=new Float32Array(8),s=new WeakMap,o=new Gt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,f,d){const m=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,h=g!==void 0?g.length:0;let p=s.get(u);if(p===void 0||p.count!==h){let I=function(){L.dispose(),s.delete(u),u.removeEventListener("dispose",I)};p!==void 0&&p.texture.dispose();const y=u.morphAttributes.position!==void 0,b=u.morphAttributes.normal!==void 0,x=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],P=u.morphAttributes.normal||[],v=u.morphAttributes.color||[];let E=0;y===!0&&(E=1),b===!0&&(E=2),x===!0&&(E=3);let S=u.attributes.position.count*E,k=1;S>e.maxTextureSize&&(k=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const F=new Float32Array(S*k*4*h),L=new Rf(F,S,k,h);L.type=Fi,L.needsUpdate=!0;const O=E*4;for(let R=0;R<h;R++){const Y=M[R],Z=P[R],H=v[R],B=S*k*4*R;for(let j=0;j<Y.count;j++){const ne=j*O;y===!0&&(o.fromBufferAttribute(Y,j),F[B+ne+0]=o.x,F[B+ne+1]=o.y,F[B+ne+2]=o.z,F[B+ne+3]=0),b===!0&&(o.fromBufferAttribute(Z,j),F[B+ne+4]=o.x,F[B+ne+5]=o.y,F[B+ne+6]=o.z,F[B+ne+7]=0),x===!0&&(o.fromBufferAttribute(H,j),F[B+ne+8]=o.x,F[B+ne+9]=o.y,F[B+ne+10]=o.z,F[B+ne+11]=H.itemSize===4?o.w:1)}}p={count:h,texture:L,size:new Be(S,k)},s.set(u,p),u.addEventListener("dispose",I)}let _=0;for(let y=0;y<m.length;y++)_+=m[y];const w=u.morphTargetsRelative?1:1-_;d.getUniforms().setValue(i,"morphTargetBaseInfluence",w),d.getUniforms().setValue(i,"morphTargetInfluences",m),d.getUniforms().setValue(i,"morphTargetsTexture",p.texture,t),d.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}else{const g=m===void 0?0:m.length;let h=n[u.id];if(h===void 0||h.length!==g){h=[];for(let b=0;b<g;b++)h[b]=[b,0];n[u.id]=h}for(let b=0;b<g;b++){const x=h[b];x[0]=b,x[1]=m[b]}h.sort(a_);for(let b=0;b<8;b++)b<g&&h[b][1]?(a[b][0]=h[b][0],a[b][1]=h[b][1]):(a[b][0]=Number.MAX_SAFE_INTEGER,a[b][1]=0);a.sort(o_);const p=u.morphAttributes.position,_=u.morphAttributes.normal;let w=0;for(let b=0;b<8;b++){const x=a[b],M=x[0],P=x[1];M!==Number.MAX_SAFE_INTEGER&&P?(p&&u.getAttribute("morphTarget"+b)!==p[M]&&u.setAttribute("morphTarget"+b,p[M]),_&&u.getAttribute("morphNormal"+b)!==_[M]&&u.setAttribute("morphNormal"+b,_[M]),r[b]=P,w+=P):(p&&u.hasAttribute("morphTarget"+b)===!0&&u.deleteAttribute("morphTarget"+b),_&&u.hasAttribute("morphNormal"+b)===!0&&u.deleteAttribute("morphNormal"+b),r[b]=0)}const y=u.morphTargetsRelative?1:1-w;d.getUniforms().setValue(i,"morphTargetBaseInfluence",y),d.getUniforms().setValue(i,"morphTargetInfluences",r)}}return{update:l}}function c_(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,f=e.get(l,u);return r.get(f)!==c&&(e.update(f),r.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),f}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const zf=new En,Uf=new Rf,Gf=new Qh,Bf=new Nf,oc=[],ac=[],lc=new Float32Array(16),cc=new Float32Array(9),uc=new Float32Array(4);function Rr(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=oc[r];if(s===void 0&&(s=new Float32Array(r),oc[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function en(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function tn(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function ho(i,e){let t=ac[e];t===void 0&&(t=new Int32Array(e),ac[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function u_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function f_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(en(t,e))return;i.uniform2fv(this.addr,e),tn(t,e)}}function d_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(en(t,e))return;i.uniform3fv(this.addr,e),tn(t,e)}}function h_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(en(t,e))return;i.uniform4fv(this.addr,e),tn(t,e)}}function p_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;uc.set(n),i.uniformMatrix2fv(this.addr,!1,uc),tn(t,n)}}function m_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;cc.set(n),i.uniformMatrix3fv(this.addr,!1,cc),tn(t,n)}}function g_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;lc.set(n),i.uniformMatrix4fv(this.addr,!1,lc),tn(t,n)}}function __(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function v_(i,e){const t=this.cache;en(t,e)||(i.uniform2iv(this.addr,e),tn(t,e))}function b_(i,e){const t=this.cache;en(t,e)||(i.uniform3iv(this.addr,e),tn(t,e))}function w_(i,e){const t=this.cache;en(t,e)||(i.uniform4iv(this.addr,e),tn(t,e))}function y_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function x_(i,e){const t=this.cache;en(t,e)||(i.uniform2uiv(this.addr,e),tn(t,e))}function M_(i,e){const t=this.cache;en(t,e)||(i.uniform3uiv(this.addr,e),tn(t,e))}function S_(i,e){const t=this.cache;en(t,e)||(i.uniform4uiv(this.addr,e),tn(t,e))}function E_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2D(e||zf,r)}function A_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||Gf,r)}function T_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||Bf,r)}function C_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||Uf,r)}function L_(i){switch(i){case 5126:return u_;case 35664:return f_;case 35665:return d_;case 35666:return h_;case 35674:return p_;case 35675:return m_;case 35676:return g_;case 5124:case 35670:return __;case 35667:case 35671:return v_;case 35668:case 35672:return b_;case 35669:case 35673:return w_;case 5125:return y_;case 36294:return x_;case 36295:return M_;case 36296:return S_;case 35678:case 36198:case 36298:case 36306:case 35682:return E_;case 35679:case 36299:case 36307:return A_;case 35680:case 36300:case 36308:case 36293:return T_;case 36289:case 36303:case 36311:case 36292:return C_}}function D_(i,e){i.uniform1fv(this.addr,e)}function P_(i,e){const t=Rr(e,this.size,2);i.uniform2fv(this.addr,t)}function R_(i,e){const t=Rr(e,this.size,3);i.uniform3fv(this.addr,t)}function I_(i,e){const t=Rr(e,this.size,4);i.uniform4fv(this.addr,t)}function O_(i,e){const t=Rr(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function k_(i,e){const t=Rr(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function N_(i,e){const t=Rr(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function F_(i,e){i.uniform1iv(this.addr,e)}function z_(i,e){i.uniform2iv(this.addr,e)}function U_(i,e){i.uniform3iv(this.addr,e)}function G_(i,e){i.uniform4iv(this.addr,e)}function B_(i,e){i.uniform1uiv(this.addr,e)}function V_(i,e){i.uniform2uiv(this.addr,e)}function H_(i,e){i.uniform3uiv(this.addr,e)}function W_(i,e){i.uniform4uiv(this.addr,e)}function j_(i,e,t){const n=e.length,r=ho(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||zf,r[s])}function q_(i,e,t){const n=e.length,r=ho(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Gf,r[s])}function X_(i,e,t){const n=e.length,r=ho(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Bf,r[s])}function Y_(i,e,t){const n=e.length,r=ho(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Uf,r[s])}function Z_(i){switch(i){case 5126:return D_;case 35664:return P_;case 35665:return R_;case 35666:return I_;case 35674:return O_;case 35675:return k_;case 35676:return N_;case 5124:case 35670:return F_;case 35667:case 35671:return z_;case 35668:case 35672:return U_;case 35669:case 35673:return G_;case 5125:return B_;case 36294:return V_;case 36295:return H_;case 36296:return W_;case 35678:case 36198:case 36298:case 36306:case 35682:return j_;case 35679:case 36299:case 36307:return q_;case 35680:case 36300:case 36308:case 36293:return X_;case 36289:case 36303:case 36311:case 36292:return Y_}}class K_{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=L_(t.type)}}class J_{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=Z_(t.type)}}class Q_{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const ra=/(\w+)(\])?(\[|\.)?/g;function fc(i,e){i.seq.push(e),i.map[e.id]=e}function $_(i,e,t){const n=i.name,r=n.length;for(ra.lastIndex=0;;){const s=ra.exec(n),o=ra.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){fc(t,c===void 0?new K_(a,i,e):new J_(a,i,e));break}else{let f=t.map[a];f===void 0&&(f=new Q_(a),fc(t,f)),t=f}}}class Xs{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);$_(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function dc(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}let e0=0;function t0(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function n0(i){switch(i){case xi:return["Linear","( value )"];case Dt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function hc(i,e,t){const n=i.getShaderParameter(e,35713),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+t0(i.getShaderSource(e),o)}else return r}function i0(i,e){const t=n0(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function r0(i,e){let t;switch(e){case Ah:t="Linear";break;case Th:t="Reinhard";break;case Ch:t="OptimizedCineon";break;case Sf:t="ACESFilmic";break;case Lh:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function s0(i){return[i.extensionDerivatives||!!i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(qr).join(`
`)}function o0(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function a0(i,e){const t={},n=i.getProgramParameter(e,35721);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function qr(i){return i!==""}function pc(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function mc(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const l0=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ea(i){return i.replace(l0,c0)}function c0(i,e){const t=et[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Ea(t)}const u0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function gc(i){return i.replace(u0,f0)}function f0(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function _c(i){let e="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function d0(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===wf?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===yf?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===jr&&(e="SHADOWMAP_TYPE_VSM"),e}function h0(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Ar:case Tr:e="ENVMAP_TYPE_CUBE";break;case lo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function p0(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Tr:e="ENVMAP_MODE_REFRACTION";break}return e}function m0(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case za:e="ENVMAP_BLENDING_MULTIPLY";break;case Sh:e="ENVMAP_BLENDING_MIX";break;case Eh:e="ENVMAP_BLENDING_ADD";break}return e}function g0(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function _0(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=d0(t),c=h0(t),u=p0(t),f=m0(t),d=g0(t),m=t.isWebGL2?"":s0(t),g=o0(s),h=r.createProgram();let p,_,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[g].filter(qr).join(`
`),p.length>0&&(p+=`
`),_=[m,g].filter(qr).join(`
`),_.length>0&&(_+=`
`)):(p=[_c(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(qr).join(`
`),_=[m,_c(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Gn?"#define TONE_MAPPING":"",t.toneMapping!==Gn?et.tonemapping_pars_fragment:"",t.toneMapping!==Gn?r0("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",et.encodings_pars_fragment,i0("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(qr).join(`
`)),o=Ea(o),o=pc(o,t),o=mc(o,t),a=Ea(a),a=pc(a,t),a=mc(a,t),o=gc(o),a=gc(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,_=["#define varying in",t.glslVersion===Ul?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Ul?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const y=w+p+o,b=w+_+a,x=dc(r,35633,y),M=dc(r,35632,b);if(r.attachShader(h,x),r.attachShader(h,M),t.index0AttributeName!==void 0?r.bindAttribLocation(h,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(h,0,"position"),r.linkProgram(h),i.debug.checkShaderErrors){const E=r.getProgramInfoLog(h).trim(),S=r.getShaderInfoLog(x).trim(),k=r.getShaderInfoLog(M).trim();let F=!0,L=!0;if(r.getProgramParameter(h,35714)===!1){F=!1;const O=hc(r,x,"vertex"),I=hc(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(h,35715)+`

Program Info Log: `+E+`
`+O+`
`+I)}else E!==""?console.warn("THREE.WebGLProgram: Program Info Log:",E):(S===""||k==="")&&(L=!1);L&&(this.diagnostics={runnable:F,programLog:E,vertexShader:{log:S,prefix:p},fragmentShader:{log:k,prefix:_}})}r.deleteShader(x),r.deleteShader(M);let P;this.getUniforms=function(){return P===void 0&&(P=new Xs(r,h)),P};let v;return this.getAttributes=function(){return v===void 0&&(v=a0(r,h)),v},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(h),this.program=void 0},this.name=t.shaderName,this.id=e0++,this.cacheKey=e,this.usedTimes=1,this.program=h,this.vertexShader=x,this.fragmentShader=M,this}let v0=0;class b0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new w0(e),t.set(e,n)),n}}class w0{constructor(e){this.id=v0++,this.code=e,this.usedTimes=0}}function y0(i,e,t,n,r,s,o){const a=new Ga,l=new b0,c=[],u=r.isWebGL2,f=r.logarithmicDepthBuffer,d=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function h(v,E,S,k,F){const L=k.fog,O=F.geometry,I=v.isMeshStandardMaterial?k.environment:null,R=(v.isMeshStandardMaterial?t:e).get(v.envMap||I),Y=!!R&&R.mapping===lo?R.image.height:null,Z=g[v.type];v.precision!==null&&(m=r.getMaxPrecision(v.precision),m!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",m,"instead."));const H=O.morphAttributes.position||O.morphAttributes.normal||O.morphAttributes.color,B=H!==void 0?H.length:0;let j=0;O.morphAttributes.position!==void 0&&(j=1),O.morphAttributes.normal!==void 0&&(j=2),O.morphAttributes.color!==void 0&&(j=3);let ne,se,_e,Me;if(Z){const qe=Fn[Z];ne=qe.vertexShader,se=qe.fragmentShader}else ne=v.vertexShader,se=v.fragmentShader,l.update(v),_e=l.getVertexShaderID(v),Me=l.getFragmentShaderID(v);const V=i.getRenderTarget(),ue=v.alphaTest>0,Te=v.clearcoat>0,ce=v.iridescence>0;return{isWebGL2:u,shaderID:Z,shaderName:v.type,vertexShader:ne,fragmentShader:se,defines:v.defines,customVertexShaderID:_e,customFragmentShaderID:Me,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:m,instancing:F.isInstancedMesh===!0,instancingColor:F.isInstancedMesh===!0&&F.instanceColor!==null,supportsVertexTextures:d,outputEncoding:V===null?i.outputEncoding:V.isXRRenderTarget===!0?V.texture.encoding:xi,map:!!v.map,matcap:!!v.matcap,envMap:!!R,envMapMode:R&&R.mapping,envMapCubeUVHeight:Y,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===Yh,tangentSpaceNormalMap:v.normalMapType===Tf,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===Dt,clearcoat:Te,clearcoatMap:Te&&!!v.clearcoatMap,clearcoatRoughnessMap:Te&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:Te&&!!v.clearcoatNormalMap,iridescence:ce,iridescenceMap:ce&&!!v.iridescenceMap,iridescenceThicknessMap:ce&&!!v.iridescenceThicknessMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===_r,alphaMap:!!v.alphaMap,alphaTest:ue,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!O.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!O.attributes.color&&O.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||v.transmission>0||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||v.sheen>0||!!v.sheenColorMap||!!v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!L,useFog:v.fog===!0,fogExp2:L&&L.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:f,skinning:F.isSkinnedMesh===!0,morphTargets:O.morphAttributes.position!==void 0,morphNormals:O.morphAttributes.normal!==void 0,morphColors:O.morphAttributes.color!==void 0,morphTargetsCount:B,morphTextureStride:j,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:i.shadowMap.enabled&&S.length>0,shadowMapType:i.shadowMap.type,toneMapping:v.toneMapped?i.toneMapping:Gn,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===vi,flipSided:v.side===Mn,useDepthPacking:!!v.depthPacking,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function p(v){const E=[];if(v.shaderID?E.push(v.shaderID):(E.push(v.customVertexShaderID),E.push(v.customFragmentShaderID)),v.defines!==void 0)for(const S in v.defines)E.push(S),E.push(v.defines[S]);return v.isRawShaderMaterial===!1&&(_(E,v),w(E,v),E.push(i.outputEncoding)),E.push(v.customProgramCacheKey),E.join()}function _(v,E){v.push(E.precision),v.push(E.outputEncoding),v.push(E.envMapMode),v.push(E.envMapCubeUVHeight),v.push(E.combine),v.push(E.vertexUvs),v.push(E.fogExp2),v.push(E.sizeAttenuation),v.push(E.morphTargetsCount),v.push(E.morphAttributeCount),v.push(E.numDirLights),v.push(E.numPointLights),v.push(E.numSpotLights),v.push(E.numSpotLightMaps),v.push(E.numHemiLights),v.push(E.numRectAreaLights),v.push(E.numDirLightShadows),v.push(E.numPointLightShadows),v.push(E.numSpotLightShadows),v.push(E.numSpotLightShadowsWithMaps),v.push(E.shadowMapType),v.push(E.toneMapping),v.push(E.numClippingPlanes),v.push(E.numClipIntersection),v.push(E.depthPacking)}function w(v,E){a.disableAll(),E.isWebGL2&&a.enable(0),E.supportsVertexTextures&&a.enable(1),E.instancing&&a.enable(2),E.instancingColor&&a.enable(3),E.map&&a.enable(4),E.matcap&&a.enable(5),E.envMap&&a.enable(6),E.lightMap&&a.enable(7),E.aoMap&&a.enable(8),E.emissiveMap&&a.enable(9),E.bumpMap&&a.enable(10),E.normalMap&&a.enable(11),E.objectSpaceNormalMap&&a.enable(12),E.tangentSpaceNormalMap&&a.enable(13),E.clearcoat&&a.enable(14),E.clearcoatMap&&a.enable(15),E.clearcoatRoughnessMap&&a.enable(16),E.clearcoatNormalMap&&a.enable(17),E.iridescence&&a.enable(18),E.iridescenceMap&&a.enable(19),E.iridescenceThicknessMap&&a.enable(20),E.displacementMap&&a.enable(21),E.specularMap&&a.enable(22),E.roughnessMap&&a.enable(23),E.metalnessMap&&a.enable(24),E.gradientMap&&a.enable(25),E.alphaMap&&a.enable(26),E.alphaTest&&a.enable(27),E.vertexColors&&a.enable(28),E.vertexAlphas&&a.enable(29),E.vertexUvs&&a.enable(30),E.vertexTangents&&a.enable(31),E.uvsVertexOnly&&a.enable(32),v.push(a.mask),a.disableAll(),E.fog&&a.enable(0),E.useFog&&a.enable(1),E.flatShading&&a.enable(2),E.logarithmicDepthBuffer&&a.enable(3),E.skinning&&a.enable(4),E.morphTargets&&a.enable(5),E.morphNormals&&a.enable(6),E.morphColors&&a.enable(7),E.premultipliedAlpha&&a.enable(8),E.shadowMapEnabled&&a.enable(9),E.physicallyCorrectLights&&a.enable(10),E.doubleSided&&a.enable(11),E.flipSided&&a.enable(12),E.useDepthPacking&&a.enable(13),E.dithering&&a.enable(14),E.specularIntensityMap&&a.enable(15),E.specularColorMap&&a.enable(16),E.transmission&&a.enable(17),E.transmissionMap&&a.enable(18),E.thicknessMap&&a.enable(19),E.sheen&&a.enable(20),E.sheenColorMap&&a.enable(21),E.sheenRoughnessMap&&a.enable(22),E.decodeVideoTexture&&a.enable(23),E.opaque&&a.enable(24),v.push(a.mask)}function y(v){const E=g[v.type];let S;if(E){const k=Fn[E];S=kf.clone(k.uniforms)}else S=v.uniforms;return S}function b(v,E){let S;for(let k=0,F=c.length;k<F;k++){const L=c[k];if(L.cacheKey===E){S=L,++S.usedTimes;break}}return S===void 0&&(S=new _0(i,E,v,s),c.push(S)),S}function x(v){if(--v.usedTimes===0){const E=c.indexOf(v);c[E]=c[c.length-1],c.pop(),v.destroy()}}function M(v){l.remove(v)}function P(){l.dispose()}return{getParameters:h,getProgramCacheKey:p,getUniforms:y,acquireProgram:b,releaseProgram:x,releaseShaderCache:M,programs:c,dispose:P}}function x0(){let i=new WeakMap;function e(s){let o=i.get(s);return o===void 0&&(o={},i.set(s,o)),o}function t(s){i.delete(s)}function n(s,o,a){i.get(s)[o]=a}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function M0(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function vc(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function bc(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(f,d,m,g,h,p){let _=i[e];return _===void 0?(_={id:f.id,object:f,geometry:d,material:m,groupOrder:g,renderOrder:f.renderOrder,z:h,group:p},i[e]=_):(_.id=f.id,_.object=f,_.geometry=d,_.material=m,_.groupOrder=g,_.renderOrder=f.renderOrder,_.z=h,_.group=p),e++,_}function a(f,d,m,g,h,p){const _=o(f,d,m,g,h,p);m.transmission>0?n.push(_):m.transparent===!0?r.push(_):t.push(_)}function l(f,d,m,g,h,p){const _=o(f,d,m,g,h,p);m.transmission>0?n.unshift(_):m.transparent===!0?r.unshift(_):t.unshift(_)}function c(f,d){t.length>1&&t.sort(f||M0),n.length>1&&n.sort(d||vc),r.length>1&&r.sort(d||vc)}function u(){for(let f=e,d=i.length;f<d;f++){const m=i[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function S0(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new bc,i.set(n,[o])):r>=s.length?(o=new bc,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function E0(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new G,color:new Xe};break;case"SpotLight":t={position:new G,direction:new G,color:new Xe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new G,color:new Xe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new G,skyColor:new Xe,groundColor:new Xe};break;case"RectAreaLight":t={color:new Xe,position:new G,halfWidth:new G,halfHeight:new G};break}return i[e.id]=t,t}}}function A0(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Be};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Be};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Be,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let T0=0;function C0(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function L0(i,e){const t=new E0,n=A0(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)r.probe.push(new G);const s=new G,o=new wt,a=new wt;function l(u,f){let d=0,m=0,g=0;for(let k=0;k<9;k++)r.probe[k].set(0,0,0);let h=0,p=0,_=0,w=0,y=0,b=0,x=0,M=0,P=0,v=0;u.sort(C0);const E=f!==!0?Math.PI:1;for(let k=0,F=u.length;k<F;k++){const L=u[k],O=L.color,I=L.intensity,R=L.distance,Y=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)d+=O.r*I*E,m+=O.g*I*E,g+=O.b*I*E;else if(L.isLightProbe)for(let Z=0;Z<9;Z++)r.probe[Z].addScaledVector(L.sh.coefficients[Z],I);else if(L.isDirectionalLight){const Z=t.get(L);if(Z.color.copy(L.color).multiplyScalar(L.intensity*E),L.castShadow){const H=L.shadow,B=n.get(L);B.shadowBias=H.bias,B.shadowNormalBias=H.normalBias,B.shadowRadius=H.radius,B.shadowMapSize=H.mapSize,r.directionalShadow[h]=B,r.directionalShadowMap[h]=Y,r.directionalShadowMatrix[h]=L.shadow.matrix,b++}r.directional[h]=Z,h++}else if(L.isSpotLight){const Z=t.get(L);Z.position.setFromMatrixPosition(L.matrixWorld),Z.color.copy(O).multiplyScalar(I*E),Z.distance=R,Z.coneCos=Math.cos(L.angle),Z.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),Z.decay=L.decay,r.spot[_]=Z;const H=L.shadow;if(L.map&&(r.spotLightMap[P]=L.map,P++,H.updateMatrices(L),L.castShadow&&v++),r.spotLightMatrix[_]=H.matrix,L.castShadow){const B=n.get(L);B.shadowBias=H.bias,B.shadowNormalBias=H.normalBias,B.shadowRadius=H.radius,B.shadowMapSize=H.mapSize,r.spotShadow[_]=B,r.spotShadowMap[_]=Y,M++}_++}else if(L.isRectAreaLight){const Z=t.get(L);Z.color.copy(O).multiplyScalar(I),Z.halfWidth.set(L.width*.5,0,0),Z.halfHeight.set(0,L.height*.5,0),r.rectArea[w]=Z,w++}else if(L.isPointLight){const Z=t.get(L);if(Z.color.copy(L.color).multiplyScalar(L.intensity*E),Z.distance=L.distance,Z.decay=L.decay,L.castShadow){const H=L.shadow,B=n.get(L);B.shadowBias=H.bias,B.shadowNormalBias=H.normalBias,B.shadowRadius=H.radius,B.shadowMapSize=H.mapSize,B.shadowCameraNear=H.camera.near,B.shadowCameraFar=H.camera.far,r.pointShadow[p]=B,r.pointShadowMap[p]=Y,r.pointShadowMatrix[p]=L.shadow.matrix,x++}r.point[p]=Z,p++}else if(L.isHemisphereLight){const Z=t.get(L);Z.skyColor.copy(L.color).multiplyScalar(I*E),Z.groundColor.copy(L.groundColor).multiplyScalar(I*E),r.hemi[y]=Z,y++}}w>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=be.LTC_FLOAT_1,r.rectAreaLTC2=be.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=be.LTC_HALF_1,r.rectAreaLTC2=be.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=d,r.ambient[1]=m,r.ambient[2]=g;const S=r.hash;(S.directionalLength!==h||S.pointLength!==p||S.spotLength!==_||S.rectAreaLength!==w||S.hemiLength!==y||S.numDirectionalShadows!==b||S.numPointShadows!==x||S.numSpotShadows!==M||S.numSpotMaps!==P)&&(r.directional.length=h,r.spot.length=_,r.rectArea.length=w,r.point.length=p,r.hemi.length=y,r.directionalShadow.length=b,r.directionalShadowMap.length=b,r.pointShadow.length=x,r.pointShadowMap.length=x,r.spotShadow.length=M,r.spotShadowMap.length=M,r.directionalShadowMatrix.length=b,r.pointShadowMatrix.length=x,r.spotLightMatrix.length=M+P-v,r.spotLightMap.length=P,r.numSpotLightShadowsWithMaps=v,S.directionalLength=h,S.pointLength=p,S.spotLength=_,S.rectAreaLength=w,S.hemiLength=y,S.numDirectionalShadows=b,S.numPointShadows=x,S.numSpotShadows=M,S.numSpotMaps=P,r.version=T0++)}function c(u,f){let d=0,m=0,g=0,h=0,p=0;const _=f.matrixWorldInverse;for(let w=0,y=u.length;w<y;w++){const b=u[w];if(b.isDirectionalLight){const x=r.directional[d];x.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(_),d++}else if(b.isSpotLight){const x=r.spot[g];x.position.setFromMatrixPosition(b.matrixWorld),x.position.applyMatrix4(_),x.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(_),g++}else if(b.isRectAreaLight){const x=r.rectArea[h];x.position.setFromMatrixPosition(b.matrixWorld),x.position.applyMatrix4(_),a.identity(),o.copy(b.matrixWorld),o.premultiply(_),a.extractRotation(o),x.halfWidth.set(b.width*.5,0,0),x.halfHeight.set(0,b.height*.5,0),x.halfWidth.applyMatrix4(a),x.halfHeight.applyMatrix4(a),h++}else if(b.isPointLight){const x=r.point[m];x.position.setFromMatrixPosition(b.matrixWorld),x.position.applyMatrix4(_),m++}else if(b.isHemisphereLight){const x=r.hemi[p];x.direction.setFromMatrixPosition(b.matrixWorld),x.direction.transformDirection(_),p++}}}return{setup:l,setupView:c,state:r}}function wc(i,e){const t=new L0(i,e),n=[],r=[];function s(){n.length=0,r.length=0}function o(f){n.push(f)}function a(f){r.push(f)}function l(f){t.setup(n,f)}function c(f){t.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function D0(i,e){let t=new WeakMap;function n(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new wc(i,e),t.set(s,[l])):o>=a.length?(l=new wc(i,e),a.push(l)):l=a[o],l}function r(){t=new WeakMap}return{get:n,dispose:r}}class P0 extends Pr{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=qh,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class R0 extends Pr{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new G,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const I0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,O0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function k0(i,e,t){let n=new fo;const r=new Be,s=new Be,o=new Gt,a=new P0({depthPacking:Xh}),l=new R0,c={},u=t.maxTextureSize,f={0:Mn,1:Er,2:vi},d=new ii({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Be},radius:{value:4}},vertexShader:I0,fragmentShader:O0}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const g=new dn;g.setAttribute("position",new kn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const h=new yn(g,d),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=wf,this.render=function(b,x,M){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||b.length===0)return;const P=i.getRenderTarget(),v=i.getActiveCubeFace(),E=i.getActiveMipmapLevel(),S=i.state;S.setBlending(wi),S.buffers.color.setClear(1,1,1,1),S.buffers.depth.setTest(!0),S.setScissorTest(!1);for(let k=0,F=b.length;k<F;k++){const L=b[k],O=L.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",L,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;r.copy(O.mapSize);const I=O.getFrameExtents();if(r.multiply(I),s.copy(O.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/I.x),r.x=s.x*I.x,O.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/I.y),r.y=s.y*I.y,O.mapSize.y=s.y)),O.map===null){const Y=this.type!==jr?{minFilter:on,magFilter:on}:{};O.map=new Mi(r.x,r.y,Y),O.map.texture.name=L.name+".shadowMap",O.camera.updateProjectionMatrix()}i.setRenderTarget(O.map),i.clear();const R=O.getViewportCount();for(let Y=0;Y<R;Y++){const Z=O.getViewport(Y);o.set(s.x*Z.x,s.y*Z.y,s.x*Z.z,s.y*Z.w),S.viewport(o),O.updateMatrices(L,Y),n=O.getFrustum(),y(x,M,O.camera,L,this.type)}O.isPointLightShadow!==!0&&this.type===jr&&_(O,M),O.needsUpdate=!1}p.needsUpdate=!1,i.setRenderTarget(P,v,E)};function _(b,x){const M=e.update(h);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,m.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Mi(r.x,r.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,i.setRenderTarget(b.mapPass),i.clear(),i.renderBufferDirect(x,null,M,d,h,null),m.uniforms.shadow_pass.value=b.mapPass.texture,m.uniforms.resolution.value=b.mapSize,m.uniforms.radius.value=b.radius,i.setRenderTarget(b.map),i.clear(),i.renderBufferDirect(x,null,M,m,h,null)}function w(b,x,M,P,v,E){let S=null;const k=M.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(k!==void 0?S=k:S=M.isPointLight===!0?l:a,i.localClippingEnabled&&x.clipShadows===!0&&Array.isArray(x.clippingPlanes)&&x.clippingPlanes.length!==0||x.displacementMap&&x.displacementScale!==0||x.alphaMap&&x.alphaTest>0){const F=S.uuid,L=x.uuid;let O=c[F];O===void 0&&(O={},c[F]=O);let I=O[L];I===void 0&&(I=S.clone(),O[L]=I),S=I}return S.visible=x.visible,S.wireframe=x.wireframe,E===jr?S.side=x.shadowSide!==null?x.shadowSide:x.side:S.side=x.shadowSide!==null?x.shadowSide:f[x.side],S.alphaMap=x.alphaMap,S.alphaTest=x.alphaTest,S.clipShadows=x.clipShadows,S.clippingPlanes=x.clippingPlanes,S.clipIntersection=x.clipIntersection,S.displacementMap=x.displacementMap,S.displacementScale=x.displacementScale,S.displacementBias=x.displacementBias,S.wireframeLinewidth=x.wireframeLinewidth,S.linewidth=x.linewidth,M.isPointLight===!0&&S.isMeshDistanceMaterial===!0&&(S.referencePosition.setFromMatrixPosition(M.matrixWorld),S.nearDistance=P,S.farDistance=v),S}function y(b,x,M,P,v){if(b.visible===!1)return;if(b.layers.test(x.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&v===jr)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,b.matrixWorld);const k=e.update(b),F=b.material;if(Array.isArray(F)){const L=k.groups;for(let O=0,I=L.length;O<I;O++){const R=L[O],Y=F[R.materialIndex];if(Y&&Y.visible){const Z=w(b,Y,P,M.near,M.far,v);i.renderBufferDirect(M,null,k,Z,b,R)}}}else if(F.visible){const L=w(b,F,P,M.near,M.far,v);i.renderBufferDirect(M,null,k,L,b,null)}}const S=b.children;for(let k=0,F=S.length;k<F;k++)y(S[k],x,M,P,v)}}function N0(i,e,t){const n=t.isWebGL2;function r(){let U=!1;const me=new Gt;let ee=null;const Se=new Gt(0,0,0,0);return{setMask:function(xe){ee!==xe&&!U&&(i.colorMask(xe,xe,xe,xe),ee=xe)},setLocked:function(xe){U=xe},setClear:function(xe,nt,lt,bt,nn){nn===!0&&(xe*=bt,nt*=bt,lt*=bt),me.set(xe,nt,lt,bt),Se.equals(me)===!1&&(i.clearColor(xe,nt,lt,bt),Se.copy(me))},reset:function(){U=!1,ee=null,Se.set(-1,0,0,0)}}}function s(){let U=!1,me=null,ee=null,Se=null;return{setTest:function(xe){xe?ue(2929):Te(2929)},setMask:function(xe){me!==xe&&!U&&(i.depthMask(xe),me=xe)},setFunc:function(xe){if(ee!==xe){if(xe)switch(xe){case _h:i.depthFunc(512);break;case vh:i.depthFunc(519);break;case bh:i.depthFunc(513);break;case va:i.depthFunc(515);break;case wh:i.depthFunc(514);break;case yh:i.depthFunc(518);break;case xh:i.depthFunc(516);break;case Mh:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);ee=xe}},setLocked:function(xe){U=xe},setClear:function(xe){Se!==xe&&(i.clearDepth(xe),Se=xe)},reset:function(){U=!1,me=null,ee=null,Se=null}}}function o(){let U=!1,me=null,ee=null,Se=null,xe=null,nt=null,lt=null,bt=null,nn=null;return{setTest:function(xt){U||(xt?ue(2960):Te(2960))},setMask:function(xt){me!==xt&&!U&&(i.stencilMask(xt),me=xt)},setFunc:function(xt,Tn,rn){(ee!==xt||Se!==Tn||xe!==rn)&&(i.stencilFunc(xt,Tn,rn),ee=xt,Se=Tn,xe=rn)},setOp:function(xt,Tn,rn){(nt!==xt||lt!==Tn||bt!==rn)&&(i.stencilOp(xt,Tn,rn),nt=xt,lt=Tn,bt=rn)},setLocked:function(xt){U=xt},setClear:function(xt){nn!==xt&&(i.clearStencil(xt),nn=xt)},reset:function(){U=!1,me=null,ee=null,Se=null,xe=null,nt=null,lt=null,bt=null,nn=null}}}const a=new r,l=new s,c=new o,u=new WeakMap,f=new WeakMap;let d={},m={},g=new WeakMap,h=[],p=null,_=!1,w=null,y=null,b=null,x=null,M=null,P=null,v=null,E=!1,S=null,k=null,F=null,L=null,O=null;const I=i.getParameter(35661);let R=!1,Y=0;const Z=i.getParameter(7938);Z.indexOf("WebGL")!==-1?(Y=parseFloat(/^WebGL (\d)/.exec(Z)[1]),R=Y>=1):Z.indexOf("OpenGL ES")!==-1&&(Y=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),R=Y>=2);let H=null,B={};const j=i.getParameter(3088),ne=i.getParameter(2978),se=new Gt().fromArray(j),_e=new Gt().fromArray(ne);function Me(U,me,ee){const Se=new Uint8Array(4),xe=i.createTexture();i.bindTexture(U,xe),i.texParameteri(U,10241,9728),i.texParameteri(U,10240,9728);for(let nt=0;nt<ee;nt++)i.texImage2D(me+nt,0,6408,1,1,0,6408,5121,Se);return xe}const V={};V[3553]=Me(3553,3553,1),V[34067]=Me(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),ue(2929),l.setFunc(va),ut(!1),yt(cl),ue(2884),We(wi);function ue(U){d[U]!==!0&&(i.enable(U),d[U]=!0)}function Te(U){d[U]!==!1&&(i.disable(U),d[U]=!1)}function ce(U,me){return m[U]!==me?(i.bindFramebuffer(U,me),m[U]=me,n&&(U===36009&&(m[36160]=me),U===36160&&(m[36009]=me)),!0):!1}function ve(U,me){let ee=h,Se=!1;if(U)if(ee=g.get(me),ee===void 0&&(ee=[],g.set(me,ee)),U.isWebGLMultipleRenderTargets){const xe=U.texture;if(ee.length!==xe.length||ee[0]!==36064){for(let nt=0,lt=xe.length;nt<lt;nt++)ee[nt]=36064+nt;ee.length=xe.length,Se=!0}}else ee[0]!==36064&&(ee[0]=36064,Se=!0);else ee[0]!==1029&&(ee[0]=1029,Se=!0);Se&&(t.isWebGL2?i.drawBuffers(ee):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ee))}function qe(U){return p!==U?(i.useProgram(U),p=U,!0):!1}const Q={[hr]:32774,[oh]:32778,[ah]:32779};if(n)Q[hl]=32775,Q[pl]=32776;else{const U=e.get("EXT_blend_minmax");U!==null&&(Q[hl]=U.MIN_EXT,Q[pl]=U.MAX_EXT)}const le={[lh]:0,[ch]:1,[uh]:768,[xf]:770,[gh]:776,[ph]:774,[dh]:772,[fh]:769,[Mf]:771,[mh]:775,[hh]:773};function We(U,me,ee,Se,xe,nt,lt,bt){if(U===wi){_===!0&&(Te(3042),_=!1);return}if(_===!1&&(ue(3042),_=!0),U!==sh){if(U!==w||bt!==E){if((y!==hr||M!==hr)&&(i.blendEquation(32774),y=hr,M=hr),bt)switch(U){case _r:i.blendFuncSeparate(1,771,1,771);break;case ul:i.blendFunc(1,1);break;case fl:i.blendFuncSeparate(0,769,0,1);break;case dl:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}else switch(U){case _r:i.blendFuncSeparate(770,771,1,771);break;case ul:i.blendFunc(770,1);break;case fl:i.blendFuncSeparate(0,769,0,1);break;case dl:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",U);break}b=null,x=null,P=null,v=null,w=U,E=bt}return}xe=xe||me,nt=nt||ee,lt=lt||Se,(me!==y||xe!==M)&&(i.blendEquationSeparate(Q[me],Q[xe]),y=me,M=xe),(ee!==b||Se!==x||nt!==P||lt!==v)&&(i.blendFuncSeparate(le[ee],le[Se],le[nt],le[lt]),b=ee,x=Se,P=nt,v=lt),w=U,E=null}function ze(U,me){U.side===vi?Te(2884):ue(2884);let ee=U.side===Mn;me&&(ee=!ee),ut(ee),U.blending===_r&&U.transparent===!1?We(wi):We(U.blending,U.blendEquation,U.blendSrc,U.blendDst,U.blendEquationAlpha,U.blendSrcAlpha,U.blendDstAlpha,U.premultipliedAlpha),l.setFunc(U.depthFunc),l.setTest(U.depthTest),l.setMask(U.depthWrite),a.setMask(U.colorWrite);const Se=U.stencilWrite;c.setTest(Se),Se&&(c.setMask(U.stencilWriteMask),c.setFunc(U.stencilFunc,U.stencilRef,U.stencilFuncMask),c.setOp(U.stencilFail,U.stencilZFail,U.stencilZPass)),Le(U.polygonOffset,U.polygonOffsetFactor,U.polygonOffsetUnits),U.alphaToCoverage===!0?ue(32926):Te(32926)}function ut(U){S!==U&&(U?i.frontFace(2304):i.frontFace(2305),S=U)}function yt(U){U!==ih?(ue(2884),U!==k&&(U===cl?i.cullFace(1029):U===rh?i.cullFace(1028):i.cullFace(1032))):Te(2884),k=U}function Oe(U){U!==F&&(R&&i.lineWidth(U),F=U)}function Le(U,me,ee){U?(ue(32823),(L!==me||O!==ee)&&(i.polygonOffset(me,ee),L=me,O=ee)):Te(32823)}function vt(U){U?ue(3089):Te(3089)}function Lt(U){U===void 0&&(U=33984+I-1),H!==U&&(i.activeTexture(U),H=U)}function D(U,me){H===null&&Lt();let ee=B[H];ee===void 0&&(ee={type:void 0,texture:void 0},B[H]=ee),(ee.type!==U||ee.texture!==me)&&(i.bindTexture(U,me||V[U]),ee.type=U,ee.texture=me)}function A(){const U=B[H];U!==void 0&&U.type!==void 0&&(i.bindTexture(U.type,null),U.type=void 0,U.texture=void 0)}function $(){try{i.compressedTexImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function oe(){try{i.texSubImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function de(){try{i.texSubImage3D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function we(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function Ge(){try{i.texStorage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function T(){try{i.texStorage3D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function re(){try{i.texImage2D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function he(){try{i.texImage3D.apply(i,arguments)}catch(U){console.error("THREE.WebGLState:",U)}}function ye(U){se.equals(U)===!1&&(i.scissor(U.x,U.y,U.z,U.w),se.copy(U))}function z(U){_e.equals(U)===!1&&(i.viewport(U.x,U.y,U.z,U.w),_e.copy(U))}function Ce(U,me){let ee=f.get(me);ee===void 0&&(ee=new WeakMap,f.set(me,ee));let Se=ee.get(U);Se===void 0&&(Se=i.getUniformBlockIndex(me,U.name),ee.set(U,Se))}function Ke(U,me){const Se=f.get(me).get(U);u.get(U)!==Se&&(i.uniformBlockBinding(me,Se,U.__bindingPointIndex),u.set(U,Se))}function at(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},H=null,B={},m={},g=new WeakMap,h=[],p=null,_=!1,w=null,y=null,b=null,x=null,M=null,P=null,v=null,E=!1,S=null,k=null,F=null,L=null,O=null,se.set(0,0,i.canvas.width,i.canvas.height),_e.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:ue,disable:Te,bindFramebuffer:ce,drawBuffers:ve,useProgram:qe,setBlending:We,setMaterial:ze,setFlipSided:ut,setCullFace:yt,setLineWidth:Oe,setPolygonOffset:Le,setScissorTest:vt,activeTexture:Lt,bindTexture:D,unbindTexture:A,compressedTexImage2D:$,texImage2D:re,texImage3D:he,updateUBOMapping:Ce,uniformBlockBinding:Ke,texStorage2D:Ge,texStorage3D:T,texSubImage2D:oe,texSubImage3D:de,compressedTexSubImage2D:we,scissor:ye,viewport:z,reset:at}}function F0(i,e,t,n,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,f=r.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let h;const p=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(D,A){return _?new OffscreenCanvas(D,A):es("canvas")}function y(D,A,$,oe){let de=1;if((D.width>oe||D.height>oe)&&(de=oe/Math.max(D.width,D.height)),de<1||A===!0)if(typeof HTMLImageElement<"u"&&D instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&D instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&D instanceof ImageBitmap){const we=A?Sa:Math.floor,Ge=we(de*D.width),T=we(de*D.height);h===void 0&&(h=w(Ge,T));const re=$?w(Ge,T):h;return re.width=Ge,re.height=T,re.getContext("2d").drawImage(D,0,0,Ge,T),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+D.width+"x"+D.height+") to ("+Ge+"x"+T+")."),re}else return"data"in D&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+D.width+"x"+D.height+")."),D;return D}function b(D){return Bl(D.width)&&Bl(D.height)}function x(D){return a?!1:D.wrapS!==On||D.wrapT!==On||D.minFilter!==on&&D.minFilter!==vn}function M(D,A){return D.generateMipmaps&&A&&D.minFilter!==on&&D.minFilter!==vn}function P(D){i.generateMipmap(D)}function v(D,A,$,oe,de=!1){if(a===!1)return A;if(D!==null){if(i[D]!==void 0)return i[D];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+D+"'")}let we=A;return A===6403&&($===5126&&(we=33326),$===5131&&(we=33325),$===5121&&(we=33321)),A===33319&&($===5126&&(we=33328),$===5131&&(we=33327),$===5121&&(we=33323)),A===6408&&($===5126&&(we=34836),$===5131&&(we=34842),$===5121&&(we=oe===Dt&&de===!1?35907:32856),$===32819&&(we=32854),$===32820&&(we=32855)),(we===33325||we===33326||we===33327||we===33328||we===34842||we===34836)&&e.get("EXT_color_buffer_float"),we}function E(D,A,$){return M(D,$)===!0||D.isFramebufferTexture&&D.minFilter!==on&&D.minFilter!==vn?Math.log2(Math.max(A.width,A.height))+1:D.mipmaps!==void 0&&D.mipmaps.length>0?D.mipmaps.length:D.isCompressedTexture&&Array.isArray(D.image)?A.mipmaps.length:1}function S(D){return D===on||D===ml||D===gl?9728:9729}function k(D){const A=D.target;A.removeEventListener("dispose",k),L(A),A.isVideoTexture&&g.delete(A)}function F(D){const A=D.target;A.removeEventListener("dispose",F),I(A)}function L(D){const A=n.get(D);if(A.__webglInit===void 0)return;const $=D.source,oe=p.get($);if(oe){const de=oe[A.__cacheKey];de.usedTimes--,de.usedTimes===0&&O(D),Object.keys(oe).length===0&&p.delete($)}n.remove(D)}function O(D){const A=n.get(D);i.deleteTexture(A.__webglTexture);const $=D.source,oe=p.get($);delete oe[A.__cacheKey],o.memory.textures--}function I(D){const A=D.texture,$=n.get(D),oe=n.get(A);if(oe.__webglTexture!==void 0&&(i.deleteTexture(oe.__webglTexture),o.memory.textures--),D.depthTexture&&D.depthTexture.dispose(),D.isWebGLCubeRenderTarget)for(let de=0;de<6;de++)i.deleteFramebuffer($.__webglFramebuffer[de]),$.__webglDepthbuffer&&i.deleteRenderbuffer($.__webglDepthbuffer[de]);else{if(i.deleteFramebuffer($.__webglFramebuffer),$.__webglDepthbuffer&&i.deleteRenderbuffer($.__webglDepthbuffer),$.__webglMultisampledFramebuffer&&i.deleteFramebuffer($.__webglMultisampledFramebuffer),$.__webglColorRenderbuffer)for(let de=0;de<$.__webglColorRenderbuffer.length;de++)$.__webglColorRenderbuffer[de]&&i.deleteRenderbuffer($.__webglColorRenderbuffer[de]);$.__webglDepthRenderbuffer&&i.deleteRenderbuffer($.__webglDepthRenderbuffer)}if(D.isWebGLMultipleRenderTargets)for(let de=0,we=A.length;de<we;de++){const Ge=n.get(A[de]);Ge.__webglTexture&&(i.deleteTexture(Ge.__webglTexture),o.memory.textures--),n.remove(A[de])}n.remove(A),n.remove(D)}let R=0;function Y(){R=0}function Z(){const D=R;return D>=l&&console.warn("THREE.WebGLTextures: Trying to use "+D+" texture units while this GPU supports only "+l),R+=1,D}function H(D){const A=[];return A.push(D.wrapS),A.push(D.wrapT),A.push(D.magFilter),A.push(D.minFilter),A.push(D.anisotropy),A.push(D.internalFormat),A.push(D.format),A.push(D.type),A.push(D.generateMipmaps),A.push(D.premultiplyAlpha),A.push(D.flipY),A.push(D.unpackAlignment),A.push(D.encoding),A.join()}function B(D,A){const $=n.get(D);if(D.isVideoTexture&&vt(D),D.isRenderTargetTexture===!1&&D.version>0&&$.__version!==D.version){const oe=D.image;if(oe===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(oe.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Te($,D,A);return}}t.activeTexture(33984+A),t.bindTexture(3553,$.__webglTexture)}function j(D,A){const $=n.get(D);if(D.version>0&&$.__version!==D.version){Te($,D,A);return}t.activeTexture(33984+A),t.bindTexture(35866,$.__webglTexture)}function ne(D,A){const $=n.get(D);if(D.version>0&&$.__version!==D.version){Te($,D,A);return}t.activeTexture(33984+A),t.bindTexture(32879,$.__webglTexture)}function se(D,A){const $=n.get(D);if(D.version>0&&$.__version!==D.version){ce($,D,A);return}t.activeTexture(33984+A),t.bindTexture(34067,$.__webglTexture)}const _e={[ya]:10497,[On]:33071,[xa]:33648},Me={[on]:9728,[ml]:9984,[gl]:9986,[vn]:9729,[Dh]:9985,[co]:9987};function V(D,A,$){if($?(i.texParameteri(D,10242,_e[A.wrapS]),i.texParameteri(D,10243,_e[A.wrapT]),(D===32879||D===35866)&&i.texParameteri(D,32882,_e[A.wrapR]),i.texParameteri(D,10240,Me[A.magFilter]),i.texParameteri(D,10241,Me[A.minFilter])):(i.texParameteri(D,10242,33071),i.texParameteri(D,10243,33071),(D===32879||D===35866)&&i.texParameteri(D,32882,33071),(A.wrapS!==On||A.wrapT!==On)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(D,10240,S(A.magFilter)),i.texParameteri(D,10241,S(A.minFilter)),A.minFilter!==on&&A.minFilter!==vn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const oe=e.get("EXT_texture_filter_anisotropic");if(A.type===Fi&&e.has("OES_texture_float_linear")===!1||a===!1&&A.type===$r&&e.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||n.get(A).__currentAnisotropy)&&(i.texParameterf(D,oe.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,r.getMaxAnisotropy())),n.get(A).__currentAnisotropy=A.anisotropy)}}function ue(D,A){let $=!1;D.__webglInit===void 0&&(D.__webglInit=!0,A.addEventListener("dispose",k));const oe=A.source;let de=p.get(oe);de===void 0&&(de={},p.set(oe,de));const we=H(A);if(we!==D.__cacheKey){de[we]===void 0&&(de[we]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,$=!0),de[we].usedTimes++;const Ge=de[D.__cacheKey];Ge!==void 0&&(de[D.__cacheKey].usedTimes--,Ge.usedTimes===0&&O(A)),D.__cacheKey=we,D.__webglTexture=de[we].texture}return $}function Te(D,A,$){let oe=3553;A.isDataArrayTexture&&(oe=35866),A.isData3DTexture&&(oe=32879);const de=ue(D,A),we=A.source;if(t.activeTexture(33984+$),t.bindTexture(oe,D.__webglTexture),we.version!==we.__currentVersion||de===!0){i.pixelStorei(37440,A.flipY),i.pixelStorei(37441,A.premultiplyAlpha),i.pixelStorei(3317,A.unpackAlignment),i.pixelStorei(37443,0);const Ge=x(A)&&b(A.image)===!1;let T=y(A.image,Ge,!1,u);T=Lt(A,T);const re=b(T)||a,he=s.convert(A.format,A.encoding);let ye=s.convert(A.type),z=v(A.internalFormat,he,ye,A.encoding,A.isVideoTexture);V(oe,A,re);let Ce;const Ke=A.mipmaps,at=a&&A.isVideoTexture!==!0,U=we.__currentVersion===void 0||de===!0,me=E(A,T,re);if(A.isDepthTexture)z=6402,a?A.type===Fi?z=36012:A.type===Ni?z=33190:A.type===vr?z=35056:z=33189:A.type===Fi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Ui&&z===6402&&A.type!==Af&&A.type!==Ni&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=Ni,ye=s.convert(A.type)),A.format===Cr&&z===6402&&(z=34041,A.type!==vr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=vr,ye=s.convert(A.type))),U&&(at?t.texStorage2D(3553,1,z,T.width,T.height):t.texImage2D(3553,0,z,T.width,T.height,0,he,ye,null));else if(A.isDataTexture)if(Ke.length>0&&re){at&&U&&t.texStorage2D(3553,me,z,Ke[0].width,Ke[0].height);for(let ee=0,Se=Ke.length;ee<Se;ee++)Ce=Ke[ee],at?t.texSubImage2D(3553,ee,0,0,Ce.width,Ce.height,he,ye,Ce.data):t.texImage2D(3553,ee,z,Ce.width,Ce.height,0,he,ye,Ce.data);A.generateMipmaps=!1}else at?(U&&t.texStorage2D(3553,me,z,T.width,T.height),t.texSubImage2D(3553,0,0,0,T.width,T.height,he,ye,T.data)):t.texImage2D(3553,0,z,T.width,T.height,0,he,ye,T.data);else if(A.isCompressedTexture){at&&U&&t.texStorage2D(3553,me,z,Ke[0].width,Ke[0].height);for(let ee=0,Se=Ke.length;ee<Se;ee++)Ce=Ke[ee],A.format!==Un?he!==null?at?t.compressedTexSubImage2D(3553,ee,0,0,Ce.width,Ce.height,he,Ce.data):t.compressedTexImage2D(3553,ee,z,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):at?t.texSubImage2D(3553,ee,0,0,Ce.width,Ce.height,he,ye,Ce.data):t.texImage2D(3553,ee,z,Ce.width,Ce.height,0,he,ye,Ce.data)}else if(A.isDataArrayTexture)at?(U&&t.texStorage3D(35866,me,z,T.width,T.height,T.depth),t.texSubImage3D(35866,0,0,0,0,T.width,T.height,T.depth,he,ye,T.data)):t.texImage3D(35866,0,z,T.width,T.height,T.depth,0,he,ye,T.data);else if(A.isData3DTexture)at?(U&&t.texStorage3D(32879,me,z,T.width,T.height,T.depth),t.texSubImage3D(32879,0,0,0,0,T.width,T.height,T.depth,he,ye,T.data)):t.texImage3D(32879,0,z,T.width,T.height,T.depth,0,he,ye,T.data);else if(A.isFramebufferTexture){if(U)if(at)t.texStorage2D(3553,me,z,T.width,T.height);else{let ee=T.width,Se=T.height;for(let xe=0;xe<me;xe++)t.texImage2D(3553,xe,z,ee,Se,0,he,ye,null),ee>>=1,Se>>=1}}else if(Ke.length>0&&re){at&&U&&t.texStorage2D(3553,me,z,Ke[0].width,Ke[0].height);for(let ee=0,Se=Ke.length;ee<Se;ee++)Ce=Ke[ee],at?t.texSubImage2D(3553,ee,0,0,he,ye,Ce):t.texImage2D(3553,ee,z,he,ye,Ce);A.generateMipmaps=!1}else at?(U&&t.texStorage2D(3553,me,z,T.width,T.height),t.texSubImage2D(3553,0,0,0,he,ye,T)):t.texImage2D(3553,0,z,he,ye,T);M(A,re)&&P(oe),we.__currentVersion=we.version,A.onUpdate&&A.onUpdate(A)}D.__version=A.version}function ce(D,A,$){if(A.image.length!==6)return;const oe=ue(D,A),de=A.source;if(t.activeTexture(33984+$),t.bindTexture(34067,D.__webglTexture),de.version!==de.__currentVersion||oe===!0){i.pixelStorei(37440,A.flipY),i.pixelStorei(37441,A.premultiplyAlpha),i.pixelStorei(3317,A.unpackAlignment),i.pixelStorei(37443,0);const we=A.isCompressedTexture||A.image[0].isCompressedTexture,Ge=A.image[0]&&A.image[0].isDataTexture,T=[];for(let ee=0;ee<6;ee++)!we&&!Ge?T[ee]=y(A.image[ee],!1,!0,c):T[ee]=Ge?A.image[ee].image:A.image[ee],T[ee]=Lt(A,T[ee]);const re=T[0],he=b(re)||a,ye=s.convert(A.format,A.encoding),z=s.convert(A.type),Ce=v(A.internalFormat,ye,z,A.encoding),Ke=a&&A.isVideoTexture!==!0,at=de.__currentVersion===void 0||oe===!0;let U=E(A,re,he);V(34067,A,he);let me;if(we){Ke&&at&&t.texStorage2D(34067,U,Ce,re.width,re.height);for(let ee=0;ee<6;ee++){me=T[ee].mipmaps;for(let Se=0;Se<me.length;Se++){const xe=me[Se];A.format!==Un?ye!==null?Ke?t.compressedTexSubImage2D(34069+ee,Se,0,0,xe.width,xe.height,ye,xe.data):t.compressedTexImage2D(34069+ee,Se,Ce,xe.width,xe.height,0,xe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Ke?t.texSubImage2D(34069+ee,Se,0,0,xe.width,xe.height,ye,z,xe.data):t.texImage2D(34069+ee,Se,Ce,xe.width,xe.height,0,ye,z,xe.data)}}}else{me=A.mipmaps,Ke&&at&&(me.length>0&&U++,t.texStorage2D(34067,U,Ce,T[0].width,T[0].height));for(let ee=0;ee<6;ee++)if(Ge){Ke?t.texSubImage2D(34069+ee,0,0,0,T[ee].width,T[ee].height,ye,z,T[ee].data):t.texImage2D(34069+ee,0,Ce,T[ee].width,T[ee].height,0,ye,z,T[ee].data);for(let Se=0;Se<me.length;Se++){const nt=me[Se].image[ee].image;Ke?t.texSubImage2D(34069+ee,Se+1,0,0,nt.width,nt.height,ye,z,nt.data):t.texImage2D(34069+ee,Se+1,Ce,nt.width,nt.height,0,ye,z,nt.data)}}else{Ke?t.texSubImage2D(34069+ee,0,0,0,ye,z,T[ee]):t.texImage2D(34069+ee,0,Ce,ye,z,T[ee]);for(let Se=0;Se<me.length;Se++){const xe=me[Se];Ke?t.texSubImage2D(34069+ee,Se+1,0,0,ye,z,xe.image[ee]):t.texImage2D(34069+ee,Se+1,Ce,ye,z,xe.image[ee])}}}M(A,he)&&P(34067),de.__currentVersion=de.version,A.onUpdate&&A.onUpdate(A)}D.__version=A.version}function ve(D,A,$,oe,de){const we=s.convert($.format,$.encoding),Ge=s.convert($.type),T=v($.internalFormat,we,Ge,$.encoding);n.get(A).__hasExternalTextures||(de===32879||de===35866?t.texImage3D(de,0,T,A.width,A.height,A.depth,0,we,Ge,null):t.texImage2D(de,0,T,A.width,A.height,0,we,Ge,null)),t.bindFramebuffer(36160,D),Le(A)?d.framebufferTexture2DMultisampleEXT(36160,oe,de,n.get($).__webglTexture,0,Oe(A)):i.framebufferTexture2D(36160,oe,de,n.get($).__webglTexture,0),t.bindFramebuffer(36160,null)}function qe(D,A,$){if(i.bindRenderbuffer(36161,D),A.depthBuffer&&!A.stencilBuffer){let oe=33189;if($||Le(A)){const de=A.depthTexture;de&&de.isDepthTexture&&(de.type===Fi?oe=36012:de.type===Ni&&(oe=33190));const we=Oe(A);Le(A)?d.renderbufferStorageMultisampleEXT(36161,we,oe,A.width,A.height):i.renderbufferStorageMultisample(36161,we,oe,A.width,A.height)}else i.renderbufferStorage(36161,oe,A.width,A.height);i.framebufferRenderbuffer(36160,36096,36161,D)}else if(A.depthBuffer&&A.stencilBuffer){const oe=Oe(A);$&&Le(A)===!1?i.renderbufferStorageMultisample(36161,oe,35056,A.width,A.height):Le(A)?d.renderbufferStorageMultisampleEXT(36161,oe,35056,A.width,A.height):i.renderbufferStorage(36161,34041,A.width,A.height),i.framebufferRenderbuffer(36160,33306,36161,D)}else{const oe=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let de=0;de<oe.length;de++){const we=oe[de],Ge=s.convert(we.format,we.encoding),T=s.convert(we.type),re=v(we.internalFormat,Ge,T,we.encoding),he=Oe(A);$&&Le(A)===!1?i.renderbufferStorageMultisample(36161,he,re,A.width,A.height):Le(A)?d.renderbufferStorageMultisampleEXT(36161,he,re,A.width,A.height):i.renderbufferStorage(36161,re,A.width,A.height)}}i.bindRenderbuffer(36161,null)}function Q(D,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,D),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),B(A.depthTexture,0);const oe=n.get(A.depthTexture).__webglTexture,de=Oe(A);if(A.depthTexture.format===Ui)Le(A)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,oe,0,de):i.framebufferTexture2D(36160,36096,3553,oe,0);else if(A.depthTexture.format===Cr)Le(A)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,oe,0,de):i.framebufferTexture2D(36160,33306,3553,oe,0);else throw new Error("Unknown depthTexture format")}function le(D){const A=n.get(D),$=D.isWebGLCubeRenderTarget===!0;if(D.depthTexture&&!A.__autoAllocateDepthBuffer){if($)throw new Error("target.depthTexture not supported in Cube render targets");Q(A.__webglFramebuffer,D)}else if($){A.__webglDepthbuffer=[];for(let oe=0;oe<6;oe++)t.bindFramebuffer(36160,A.__webglFramebuffer[oe]),A.__webglDepthbuffer[oe]=i.createRenderbuffer(),qe(A.__webglDepthbuffer[oe],D,!1)}else t.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=i.createRenderbuffer(),qe(A.__webglDepthbuffer,D,!1);t.bindFramebuffer(36160,null)}function We(D,A,$){const oe=n.get(D);A!==void 0&&ve(oe.__webglFramebuffer,D,D.texture,36064,3553),$!==void 0&&le(D)}function ze(D){const A=D.texture,$=n.get(D),oe=n.get(A);D.addEventListener("dispose",F),D.isWebGLMultipleRenderTargets!==!0&&(oe.__webglTexture===void 0&&(oe.__webglTexture=i.createTexture()),oe.__version=A.version,o.memory.textures++);const de=D.isWebGLCubeRenderTarget===!0,we=D.isWebGLMultipleRenderTargets===!0,Ge=b(D)||a;if(de){$.__webglFramebuffer=[];for(let T=0;T<6;T++)$.__webglFramebuffer[T]=i.createFramebuffer()}else{if($.__webglFramebuffer=i.createFramebuffer(),we)if(r.drawBuffers){const T=D.texture;for(let re=0,he=T.length;re<he;re++){const ye=n.get(T[re]);ye.__webglTexture===void 0&&(ye.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&D.samples>0&&Le(D)===!1){const T=we?A:[A];$.__webglMultisampledFramebuffer=i.createFramebuffer(),$.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,$.__webglMultisampledFramebuffer);for(let re=0;re<T.length;re++){const he=T[re];$.__webglColorRenderbuffer[re]=i.createRenderbuffer(),i.bindRenderbuffer(36161,$.__webglColorRenderbuffer[re]);const ye=s.convert(he.format,he.encoding),z=s.convert(he.type),Ce=v(he.internalFormat,ye,z,he.encoding),Ke=Oe(D);i.renderbufferStorageMultisample(36161,Ke,Ce,D.width,D.height),i.framebufferRenderbuffer(36160,36064+re,36161,$.__webglColorRenderbuffer[re])}i.bindRenderbuffer(36161,null),D.depthBuffer&&($.__webglDepthRenderbuffer=i.createRenderbuffer(),qe($.__webglDepthRenderbuffer,D,!0)),t.bindFramebuffer(36160,null)}}if(de){t.bindTexture(34067,oe.__webglTexture),V(34067,A,Ge);for(let T=0;T<6;T++)ve($.__webglFramebuffer[T],D,A,36064,34069+T);M(A,Ge)&&P(34067),t.unbindTexture()}else if(we){const T=D.texture;for(let re=0,he=T.length;re<he;re++){const ye=T[re],z=n.get(ye);t.bindTexture(3553,z.__webglTexture),V(3553,ye,Ge),ve($.__webglFramebuffer,D,ye,36064+re,3553),M(ye,Ge)&&P(3553)}t.unbindTexture()}else{let T=3553;(D.isWebGL3DRenderTarget||D.isWebGLArrayRenderTarget)&&(a?T=D.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(T,oe.__webglTexture),V(T,A,Ge),ve($.__webglFramebuffer,D,A,36064,T),M(A,Ge)&&P(T),t.unbindTexture()}D.depthBuffer&&le(D)}function ut(D){const A=b(D)||a,$=D.isWebGLMultipleRenderTargets===!0?D.texture:[D.texture];for(let oe=0,de=$.length;oe<de;oe++){const we=$[oe];if(M(we,A)){const Ge=D.isWebGLCubeRenderTarget?34067:3553,T=n.get(we).__webglTexture;t.bindTexture(Ge,T),P(Ge),t.unbindTexture()}}}function yt(D){if(a&&D.samples>0&&Le(D)===!1){const A=D.isWebGLMultipleRenderTargets?D.texture:[D.texture],$=D.width,oe=D.height;let de=16384;const we=[],Ge=D.stencilBuffer?33306:36096,T=n.get(D),re=D.isWebGLMultipleRenderTargets===!0;if(re)for(let he=0;he<A.length;he++)t.bindFramebuffer(36160,T.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+he,36161,null),t.bindFramebuffer(36160,T.__webglFramebuffer),i.framebufferTexture2D(36009,36064+he,3553,null,0);t.bindFramebuffer(36008,T.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,T.__webglFramebuffer);for(let he=0;he<A.length;he++){we.push(36064+he),D.depthBuffer&&we.push(Ge);const ye=T.__ignoreDepthValues!==void 0?T.__ignoreDepthValues:!1;if(ye===!1&&(D.depthBuffer&&(de|=256),D.stencilBuffer&&(de|=1024)),re&&i.framebufferRenderbuffer(36008,36064,36161,T.__webglColorRenderbuffer[he]),ye===!0&&(i.invalidateFramebuffer(36008,[Ge]),i.invalidateFramebuffer(36009,[Ge])),re){const z=n.get(A[he]).__webglTexture;i.framebufferTexture2D(36009,36064,3553,z,0)}i.blitFramebuffer(0,0,$,oe,0,0,$,oe,de,9728),m&&i.invalidateFramebuffer(36008,we)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),re)for(let he=0;he<A.length;he++){t.bindFramebuffer(36160,T.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+he,36161,T.__webglColorRenderbuffer[he]);const ye=n.get(A[he]).__webglTexture;t.bindFramebuffer(36160,T.__webglFramebuffer),i.framebufferTexture2D(36009,36064+he,3553,ye,0)}t.bindFramebuffer(36009,T.__webglMultisampledFramebuffer)}}function Oe(D){return Math.min(f,D.samples)}function Le(D){const A=n.get(D);return a&&D.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function vt(D){const A=o.render.frame;g.get(D)!==A&&(g.set(D,A),D.update())}function Lt(D,A){const $=D.encoding,oe=D.format,de=D.type;return D.isCompressedTexture===!0||D.isVideoTexture===!0||D.format===Ma||$!==xi&&($===Dt?a===!1?e.has("EXT_sRGB")===!0&&oe===Un?(D.format=Ma,D.minFilter=vn,D.generateMipmaps=!1):A=Df.sRGBToLinear(A):(oe!==Un||de!==Vi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",$)),A}this.allocateTextureUnit=Z,this.resetTextureUnits=Y,this.setTexture2D=B,this.setTexture2DArray=j,this.setTexture3D=ne,this.setTextureCube=se,this.rebindTextures=We,this.setupRenderTarget=ze,this.updateRenderTargetMipmap=ut,this.updateMultisampleRenderTarget=yt,this.setupDepthRenderbuffer=le,this.setupFrameBufferTexture=ve,this.useMultisampledRTT=Le}function z0(i,e,t){const n=t.isWebGL2;function r(s,o=null){let a;if(s===Vi)return 5121;if(s===Oh)return 32819;if(s===kh)return 32820;if(s===Ph)return 5120;if(s===Rh)return 5122;if(s===Af)return 5123;if(s===Ih)return 5124;if(s===Ni)return 5125;if(s===Fi)return 5126;if(s===$r)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===Nh)return 6406;if(s===Un)return 6408;if(s===zh)return 6409;if(s===Uh)return 6410;if(s===Ui)return 6402;if(s===Cr)return 34041;if(s===Gh)return 6403;if(s===Fh)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Ma)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===Bh)return 36244;if(s===Vh)return 33319;if(s===Hh)return 33320;if(s===Wh)return 36249;if(s===Co||s===Lo||s===Do||s===Po)if(o===Dt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Co)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Lo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Do)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Po)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Co)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Lo)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Do)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Po)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===_l||s===vl||s===bl||s===wl)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===_l)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===vl)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===bl)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===wl)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===jh)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===yl||s===xl)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===yl)return o===Dt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===xl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Ml||s===Sl||s===El||s===Al||s===Tl||s===Cl||s===Ll||s===Dl||s===Pl||s===Rl||s===Il||s===Ol||s===kl||s===Nl)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Ml)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Sl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===El)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Al)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Tl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Cl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Ll)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Dl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Pl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Rl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Il)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Ol)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===kl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Nl)return o===Dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Fl)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Fl)return o===Dt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===vr?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[s]!==void 0?i[s]:null}return{convert:r}}class U0 extends qt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Xr extends gt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const G0={type:"move"};class sa{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Xr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Xr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new G,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new G),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Xr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new G,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new G),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const h of e.hand.values()){const p=t.getJointPose(h,n);if(c.joints[h.jointName]===void 0){const w=new Xr;w.matrixAutoUpdate=!1,w.visible=!1,c.joints[h.jointName]=w,c.add(w)}const _=c.joints[h.jointName];p!==null&&(_.matrix.fromArray(p.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=p.radius),_.visible=p!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],d=u.position.distanceTo(f.position),m=.02,g=.005;c.inputState.pinching&&d>m+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=m-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(G0)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class B0 extends En{constructor(e,t,n,r,s,o,a,l,c,u){if(u=u!==void 0?u:Ui,u!==Ui&&u!==Cr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Ui&&(n=Ni),n===void 0&&u===Cr&&(n=vr),super(null,r,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:on,this.minFilter=l!==void 0?l:on,this.flipY=!1,this.generateMipmaps=!1}}class V0 extends ji{constructor(e,t){super();const n=this;let r=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,f=null,d=null,m=null;const g=t.getContextAttributes();let h=null,p=null;const _=[],w=[],y=new qt;y.layers.enable(1),y.viewport=new Gt;const b=new qt;b.layers.enable(2),b.viewport=new Gt;const x=[y,b],M=new U0;M.layers.enable(1),M.layers.enable(2);let P=null,v=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(H){let B=_[H];return B===void 0&&(B=new sa,_[H]=B),B.getTargetRaySpace()},this.getControllerGrip=function(H){let B=_[H];return B===void 0&&(B=new sa,_[H]=B),B.getGripSpace()},this.getHand=function(H){let B=_[H];return B===void 0&&(B=new sa,_[H]=B),B.getHandSpace()};function E(H){const B=w.indexOf(H.inputSource);if(B===-1)return;const j=_[B];j!==void 0&&j.dispatchEvent({type:H.type,data:H.inputSource})}function S(){r.removeEventListener("select",E),r.removeEventListener("selectstart",E),r.removeEventListener("selectend",E),r.removeEventListener("squeeze",E),r.removeEventListener("squeezestart",E),r.removeEventListener("squeezeend",E),r.removeEventListener("end",S),r.removeEventListener("inputsourceschange",k);for(let H=0;H<_.length;H++){const B=w[H];B!==null&&(w[H]=null,_[H].disconnect(B))}P=null,v=null,e.setRenderTarget(h),d=null,f=null,u=null,r=null,p=null,Z.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(H){s=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(H){a=H,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(H){l=H},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return r},this.setSession=async function(H){if(r=H,r!==null){if(h=e.getRenderTarget(),r.addEventListener("select",E),r.addEventListener("selectstart",E),r.addEventListener("selectend",E),r.addEventListener("squeeze",E),r.addEventListener("squeezestart",E),r.addEventListener("squeezeend",E),r.addEventListener("end",S),r.addEventListener("inputsourceschange",k),g.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const B={antialias:r.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,B),r.updateRenderState({baseLayer:d}),p=new Mi(d.framebufferWidth,d.framebufferHeight,{format:Un,type:Vi,encoding:e.outputEncoding,stencilBuffer:g.stencil})}else{let B=null,j=null,ne=null;g.depth&&(ne=g.stencil?35056:33190,B=g.stencil?Cr:Ui,j=g.stencil?vr:Ni);const se={colorFormat:32856,depthFormat:ne,scaleFactor:s};u=new XRWebGLBinding(r,t),f=u.createProjectionLayer(se),r.updateRenderState({layers:[f]}),p=new Mi(f.textureWidth,f.textureHeight,{format:Un,type:Vi,depthTexture:new B0(f.textureWidth,f.textureHeight,j,void 0,void 0,void 0,void 0,void 0,void 0,B),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const _e=e.properties.get(p);_e.__ignoreDepthValues=f.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(a),Z.setContext(r),Z.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function k(H){for(let B=0;B<H.removed.length;B++){const j=H.removed[B],ne=w.indexOf(j);ne>=0&&(w[ne]=null,_[ne].dispatchEvent({type:"disconnected",data:j}))}for(let B=0;B<H.added.length;B++){const j=H.added[B];let ne=w.indexOf(j);if(ne===-1){for(let _e=0;_e<_.length;_e++)if(_e>=w.length){w.push(j),ne=_e;break}else if(w[_e]===null){w[_e]=j,ne=_e;break}if(ne===-1)break}const se=_[ne];se&&se.dispatchEvent({type:"connected",data:j})}}const F=new G,L=new G;function O(H,B,j){F.setFromMatrixPosition(B.matrixWorld),L.setFromMatrixPosition(j.matrixWorld);const ne=F.distanceTo(L),se=B.projectionMatrix.elements,_e=j.projectionMatrix.elements,Me=se[14]/(se[10]-1),V=se[14]/(se[10]+1),ue=(se[9]+1)/se[5],Te=(se[9]-1)/se[5],ce=(se[8]-1)/se[0],ve=(_e[8]+1)/_e[0],qe=Me*ce,Q=Me*ve,le=ne/(-ce+ve),We=le*-ce;B.matrixWorld.decompose(H.position,H.quaternion,H.scale),H.translateX(We),H.translateZ(le),H.matrixWorld.compose(H.position,H.quaternion,H.scale),H.matrixWorldInverse.copy(H.matrixWorld).invert();const ze=Me+le,ut=V+le,yt=qe-We,Oe=Q+(ne-We),Le=ue*V/ut*ze,vt=Te*V/ut*ze;H.projectionMatrix.makePerspective(yt,Oe,Le,vt,ze,ut)}function I(H,B){B===null?H.matrixWorld.copy(H.matrix):H.matrixWorld.multiplyMatrices(B.matrixWorld,H.matrix),H.matrixWorldInverse.copy(H.matrixWorld).invert()}this.updateCamera=function(H){if(r===null)return;M.near=b.near=y.near=H.near,M.far=b.far=y.far=H.far,(P!==M.near||v!==M.far)&&(r.updateRenderState({depthNear:M.near,depthFar:M.far}),P=M.near,v=M.far);const B=H.parent,j=M.cameras;I(M,B);for(let se=0;se<j.length;se++)I(j[se],B);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),H.matrix.copy(M.matrix),H.matrix.decompose(H.position,H.quaternion,H.scale);const ne=H.children;for(let se=0,_e=ne.length;se<_e;se++)ne[se].updateMatrixWorld(!0);j.length===2?O(M,y,b):M.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(f!==null)return f.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(H){f!==null&&(f.fixedFoveation=H),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=H)};let R=null;function Y(H,B){if(c=B.getViewerPose(l||o),m=B,c!==null){const j=c.views;d!==null&&(e.setRenderTargetFramebuffer(p,d.framebuffer),e.setRenderTarget(p));let ne=!1;j.length!==M.cameras.length&&(M.cameras.length=0,ne=!0);for(let se=0;se<j.length;se++){const _e=j[se];let Me=null;if(d!==null)Me=d.getViewport(_e);else{const ue=u.getViewSubImage(f,_e);Me=ue.viewport,se===0&&(e.setRenderTargetTextures(p,ue.colorTexture,f.ignoreDepthValues?void 0:ue.depthStencilTexture),e.setRenderTarget(p))}let V=x[se];V===void 0&&(V=new qt,V.layers.enable(se),V.viewport=new Gt,x[se]=V),V.matrix.fromArray(_e.transform.matrix),V.projectionMatrix.fromArray(_e.projectionMatrix),V.viewport.set(Me.x,Me.y,Me.width,Me.height),se===0&&M.matrix.copy(V.matrix),ne===!0&&M.cameras.push(V)}}for(let j=0;j<_.length;j++){const ne=w[j],se=_[j];ne!==null&&se!==void 0&&se.update(ne,B,l||o)}R&&R(H,B),m=null}const Z=new Ff;Z.setAnimationLoop(Y),this.setAnimationLoop=function(H){R=H},this.dispose=function(){}}}function H0(i,e){function t(h,p){h.fogColor.value.copy(p.color),p.isFog?(h.fogNear.value=p.near,h.fogFar.value=p.far):p.isFogExp2&&(h.fogDensity.value=p.density)}function n(h,p,_,w,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(h,p):p.isMeshToonMaterial?(r(h,p),u(h,p)):p.isMeshPhongMaterial?(r(h,p),c(h,p)):p.isMeshStandardMaterial?(r(h,p),f(h,p),p.isMeshPhysicalMaterial&&d(h,p,y)):p.isMeshMatcapMaterial?(r(h,p),m(h,p)):p.isMeshDepthMaterial?r(h,p):p.isMeshDistanceMaterial?(r(h,p),g(h,p)):p.isMeshNormalMaterial?r(h,p):p.isLineBasicMaterial?(s(h,p),p.isLineDashedMaterial&&o(h,p)):p.isPointsMaterial?a(h,p,_,w):p.isSpriteMaterial?l(h,p):p.isShadowMaterial?(h.color.value.copy(p.color),h.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(h,p){h.opacity.value=p.opacity,p.color&&h.diffuse.value.copy(p.color),p.emissive&&h.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.bumpMap&&(h.bumpMap.value=p.bumpMap,h.bumpScale.value=p.bumpScale,p.side===Mn&&(h.bumpScale.value*=-1)),p.displacementMap&&(h.displacementMap.value=p.displacementMap,h.displacementScale.value=p.displacementScale,h.displacementBias.value=p.displacementBias),p.emissiveMap&&(h.emissiveMap.value=p.emissiveMap),p.normalMap&&(h.normalMap.value=p.normalMap,h.normalScale.value.copy(p.normalScale),p.side===Mn&&h.normalScale.value.negate()),p.specularMap&&(h.specularMap.value=p.specularMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);const _=e.get(p).envMap;if(_&&(h.envMap.value=_,h.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,h.reflectivity.value=p.reflectivity,h.ior.value=p.ior,h.refractionRatio.value=p.refractionRatio),p.lightMap){h.lightMap.value=p.lightMap;const b=i.physicallyCorrectLights!==!0?Math.PI:1;h.lightMapIntensity.value=p.lightMapIntensity*b}p.aoMap&&(h.aoMap.value=p.aoMap,h.aoMapIntensity.value=p.aoMapIntensity);let w;p.map?w=p.map:p.specularMap?w=p.specularMap:p.displacementMap?w=p.displacementMap:p.normalMap?w=p.normalMap:p.bumpMap?w=p.bumpMap:p.roughnessMap?w=p.roughnessMap:p.metalnessMap?w=p.metalnessMap:p.alphaMap?w=p.alphaMap:p.emissiveMap?w=p.emissiveMap:p.clearcoatMap?w=p.clearcoatMap:p.clearcoatNormalMap?w=p.clearcoatNormalMap:p.clearcoatRoughnessMap?w=p.clearcoatRoughnessMap:p.iridescenceMap?w=p.iridescenceMap:p.iridescenceThicknessMap?w=p.iridescenceThicknessMap:p.specularIntensityMap?w=p.specularIntensityMap:p.specularColorMap?w=p.specularColorMap:p.transmissionMap?w=p.transmissionMap:p.thicknessMap?w=p.thicknessMap:p.sheenColorMap?w=p.sheenColorMap:p.sheenRoughnessMap&&(w=p.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),h.uvTransform.value.copy(w.matrix));let y;p.aoMap?y=p.aoMap:p.lightMap&&(y=p.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),h.uv2Transform.value.copy(y.matrix))}function s(h,p){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity}function o(h,p){h.dashSize.value=p.dashSize,h.totalSize.value=p.dashSize+p.gapSize,h.scale.value=p.scale}function a(h,p,_,w){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity,h.size.value=p.size*_,h.scale.value=w*.5,p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);let y;p.map?y=p.map:p.alphaMap&&(y=p.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),h.uvTransform.value.copy(y.matrix))}function l(h,p){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity,h.rotation.value=p.rotation,p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),h.uvTransform.value.copy(_.matrix))}function c(h,p){h.specular.value.copy(p.specular),h.shininess.value=Math.max(p.shininess,1e-4)}function u(h,p){p.gradientMap&&(h.gradientMap.value=p.gradientMap)}function f(h,p){h.roughness.value=p.roughness,h.metalness.value=p.metalness,p.roughnessMap&&(h.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(h.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(h.envMapIntensity.value=p.envMapIntensity)}function d(h,p,_){h.ior.value=p.ior,p.sheen>0&&(h.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),h.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(h.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(h.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(h.clearcoat.value=p.clearcoat,h.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(h.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(h.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(h.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),h.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===Mn&&h.clearcoatNormalScale.value.negate())),p.iridescence>0&&(h.iridescence.value=p.iridescence,h.iridescenceIOR.value=p.iridescenceIOR,h.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],h.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(h.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(h.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(h.transmission.value=p.transmission,h.transmissionSamplerMap.value=_.texture,h.transmissionSamplerSize.value.set(_.width,_.height),p.transmissionMap&&(h.transmissionMap.value=p.transmissionMap),h.thickness.value=p.thickness,p.thicknessMap&&(h.thicknessMap.value=p.thicknessMap),h.attenuationDistance.value=p.attenuationDistance,h.attenuationColor.value.copy(p.attenuationColor)),h.specularIntensity.value=p.specularIntensity,h.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(h.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(h.specularColorMap.value=p.specularColorMap)}function m(h,p){p.matcap&&(h.matcap.value=p.matcap)}function g(h,p){h.referencePosition.value.copy(p.referencePosition),h.nearDistance.value=p.nearDistance,h.farDistance.value=p.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function W0(i,e,t,n){let r={},s={},o=[];const a=t.isWebGL2?i.getParameter(35375):0;function l(w,y){const b=y.program;n.uniformBlockBinding(w,b)}function c(w,y){let b=r[w.id];b===void 0&&(g(w),b=u(w),r[w.id]=b,w.addEventListener("dispose",p));const x=y.program;n.updateUBOMapping(w,x);const M=e.render.frame;s[w.id]!==M&&(d(w),s[w.id]=M)}function u(w){const y=f();w.__bindingPointIndex=y;const b=i.createBuffer(),x=w.__size,M=w.usage;return i.bindBuffer(35345,b),i.bufferData(35345,x,M),i.bindBuffer(35345,null),i.bindBufferBase(35345,y,b),b}function f(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(w){const y=r[w.id],b=w.uniforms,x=w.__cache;i.bindBuffer(35345,y);for(let M=0,P=b.length;M<P;M++){const v=b[M];if(m(v,M,x)===!0){const E=v.value,S=v.__offset;typeof E=="number"?(v.__data[0]=E,i.bufferSubData(35345,S,v.__data)):(v.value.isMatrix3?(v.__data[0]=v.value.elements[0],v.__data[1]=v.value.elements[1],v.__data[2]=v.value.elements[2],v.__data[3]=v.value.elements[0],v.__data[4]=v.value.elements[3],v.__data[5]=v.value.elements[4],v.__data[6]=v.value.elements[5],v.__data[7]=v.value.elements[0],v.__data[8]=v.value.elements[6],v.__data[9]=v.value.elements[7],v.__data[10]=v.value.elements[8],v.__data[11]=v.value.elements[0]):E.toArray(v.__data),i.bufferSubData(35345,S,v.__data))}}i.bindBuffer(35345,null)}function m(w,y,b){const x=w.value;if(b[y]===void 0)return typeof x=="number"?b[y]=x:b[y]=x.clone(),!0;if(typeof x=="number"){if(b[y]!==x)return b[y]=x,!0}else{const M=b[y];if(M.equals(x)===!1)return M.copy(x),!0}return!1}function g(w){const y=w.uniforms;let b=0;const x=16;let M=0;for(let P=0,v=y.length;P<v;P++){const E=y[P],S=h(E);if(E.__data=new Float32Array(S.storage/Float32Array.BYTES_PER_ELEMENT),E.__offset=b,P>0){M=b%x;const k=x-M;M!==0&&k-S.boundary<0&&(b+=x-M,E.__offset=b)}b+=S.storage}return M=b%x,M>0&&(b+=x-M),w.__size=b,w.__cache={},this}function h(w){const y=w.value,b={boundary:0,storage:0};return typeof y=="number"?(b.boundary=4,b.storage=4):y.isVector2?(b.boundary=8,b.storage=8):y.isVector3||y.isColor?(b.boundary=16,b.storage=12):y.isVector4?(b.boundary=16,b.storage=16):y.isMatrix3?(b.boundary=48,b.storage=48):y.isMatrix4?(b.boundary=64,b.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),b}function p(w){const y=w.target;y.removeEventListener("dispose",p);const b=o.indexOf(y.__bindingPointIndex);o.splice(b,1),i.deleteBuffer(r[y.id]),delete r[y.id],delete s[y.id]}function _(){for(const w in r)i.deleteBuffer(r[w]);o=[],r={},s={}}return{bind:l,update:c,dispose:_}}function j0(){const i=es("canvas");return i.style.display="block",i}function Vf(i={}){this.isWebGLRenderer=!0;const e=i.canvas!==void 0?i.canvas:j0(),t=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,r=i.stencil!==void 0?i.stencil:!0,s=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,l=i.powerPreference!==void 0?i.powerPreference:"default",c=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=i.alpha!==void 0?i.alpha:!1;let f=null,d=null;const m=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=xi,this.physicallyCorrectLights=!1,this.toneMapping=Gn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const h=this;let p=!1,_=0,w=0,y=null,b=-1,x=null;const M=new Gt,P=new Gt;let v=null,E=e.width,S=e.height,k=1,F=null,L=null;const O=new Gt(0,0,E,S),I=new Gt(0,0,E,S);let R=!1;const Y=new fo;let Z=!1,H=!1,B=null;const j=new wt,ne=new Be,se=new G,_e={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Me(){return y===null?k:1}let V=t;function ue(C,X){for(let te=0;te<C.length;te++){const q=C[te],ie=e.getContext(q,X);if(ie!==null)return ie}return null}try{const C={alpha:!0,depth:n,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Fa}`),e.addEventListener("webglcontextlost",Ce,!1),e.addEventListener("webglcontextrestored",Ke,!1),e.addEventListener("webglcontextcreationerror",at,!1),V===null){const X=["webgl2","webgl","experimental-webgl"];if(h.isWebGL1Renderer===!0&&X.shift(),V=ue(X,C),V===null)throw ue(X)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}V.getShaderPrecisionFormat===void 0&&(V.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Te,ce,ve,qe,Q,le,We,ze,ut,yt,Oe,Le,vt,Lt,D,A,$,oe,de,we,Ge,T,re,he;function ye(){Te=new n_(V),ce=new Kg(V,Te,i),Te.init(ce),T=new z0(V,Te,ce),ve=new N0(V,Te,ce),qe=new s_,Q=new x0,le=new F0(V,Te,ve,Q,ce,T,qe),We=new Qg(h),ze=new t_(h),ut=new gp(V,ce),re=new Yg(V,Te,ut,ce),yt=new i_(V,ut,qe,re),Oe=new c_(V,yt,ut,qe),de=new l_(V,ce,le),A=new Jg(Q),Le=new y0(h,We,ze,Te,ce,re,A),vt=new H0(h,Q),Lt=new S0,D=new D0(Te,ce),oe=new Xg(h,We,ve,Oe,u,o),$=new k0(h,Oe,ce),he=new W0(V,qe,ce,ve),we=new Zg(V,Te,qe,ce),Ge=new r_(V,Te,qe,ce),qe.programs=Le.programs,h.capabilities=ce,h.extensions=Te,h.properties=Q,h.renderLists=Lt,h.shadowMap=$,h.state=ve,h.info=qe}ye();const z=new V0(h,V);this.xr=z,this.getContext=function(){return V},this.getContextAttributes=function(){return V.getContextAttributes()},this.forceContextLoss=function(){const C=Te.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Te.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return k},this.setPixelRatio=function(C){C!==void 0&&(k=C,this.setSize(E,S,!1))},this.getSize=function(C){return C.set(E,S)},this.setSize=function(C,X,te){if(z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}E=C,S=X,e.width=Math.floor(C*k),e.height=Math.floor(X*k),te!==!1&&(e.style.width=C+"px",e.style.height=X+"px"),this.setViewport(0,0,C,X)},this.getDrawingBufferSize=function(C){return C.set(E*k,S*k).floor()},this.setDrawingBufferSize=function(C,X,te){E=C,S=X,k=te,e.width=Math.floor(C*te),e.height=Math.floor(X*te),this.setViewport(0,0,C,X)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(O)},this.setViewport=function(C,X,te,q){C.isVector4?O.set(C.x,C.y,C.z,C.w):O.set(C,X,te,q),ve.viewport(M.copy(O).multiplyScalar(k).floor())},this.getScissor=function(C){return C.copy(I)},this.setScissor=function(C,X,te,q){C.isVector4?I.set(C.x,C.y,C.z,C.w):I.set(C,X,te,q),ve.scissor(P.copy(I).multiplyScalar(k).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(C){ve.setScissorTest(R=C)},this.setOpaqueSort=function(C){F=C},this.setTransparentSort=function(C){L=C},this.getClearColor=function(C){return C.copy(oe.getClearColor())},this.setClearColor=function(){oe.setClearColor.apply(oe,arguments)},this.getClearAlpha=function(){return oe.getClearAlpha()},this.setClearAlpha=function(){oe.setClearAlpha.apply(oe,arguments)},this.clear=function(C=!0,X=!0,te=!0){let q=0;C&&(q|=16384),X&&(q|=256),te&&(q|=1024),V.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Ce,!1),e.removeEventListener("webglcontextrestored",Ke,!1),e.removeEventListener("webglcontextcreationerror",at,!1),Lt.dispose(),D.dispose(),Q.dispose(),We.dispose(),ze.dispose(),Oe.dispose(),re.dispose(),he.dispose(),Le.dispose(),z.dispose(),z.removeEventListener("sessionstart",nt),z.removeEventListener("sessionend",lt),B&&(B.dispose(),B=null),bt.stop()};function Ce(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Ke(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const C=qe.autoReset,X=$.enabled,te=$.autoUpdate,q=$.needsUpdate,ie=$.type;ye(),qe.autoReset=C,$.enabled=X,$.autoUpdate=te,$.needsUpdate=q,$.type=ie}function at(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function U(C){const X=C.target;X.removeEventListener("dispose",U),me(X)}function me(C){ee(C),Q.remove(C)}function ee(C){const X=Q.get(C).programs;X!==void 0&&(X.forEach(function(te){Le.releaseProgram(te)}),C.isShaderMaterial&&Le.releaseShaderCache(C))}this.renderBufferDirect=function(C,X,te,q,ie,Ne){X===null&&(X=_e);const Ve=ie.isMesh&&ie.matrixWorld.determinant()<0,Je=Eo(C,X,te,q,ie);ve.setMaterial(q,Ve);let je=te.index;const rt=te.attributes.position;if(je===null){if(rt===void 0||rt.count===0)return}else if(je.count===0)return;let $e=1;q.wireframe===!0&&(je=yt.getWireframeAttribute(te),$e=2),re.setup(ie,q,Je,te,je);let it,Tt=we;je!==null&&(it=ut.get(je),Tt=Ge,Tt.setIndex(it));const Wn=je!==null?je.count:rt.count,li=te.drawRange.start*$e,ci=te.drawRange.count*$e,hn=Ne!==null?Ne.start*$e:0,st=Ne!==null?Ne.count*$e:1/0,ui=Math.max(li,hn),Pt=Math.min(Wn,li+ci,hn+st)-1,sn=Math.max(0,Pt-ui+1);if(sn!==0){if(ie.isMesh)q.wireframe===!0?(ve.setLineWidth(q.wireframeLinewidth*Me()),Tt.setMode(1)):Tt.setMode(4);else if(ie.isLine){let Nn=q.linewidth;Nn===void 0&&(Nn=1),ve.setLineWidth(Nn*Me()),ie.isLineSegments?Tt.setMode(1):ie.isLineLoop?Tt.setMode(2):Tt.setMode(3)}else ie.isPoints?Tt.setMode(0):ie.isSprite&&Tt.setMode(4);if(ie.isInstancedMesh)Tt.renderInstances(ui,sn,ie.count);else if(te.isInstancedBufferGeometry){const Nn=Math.min(te.instanceCount,te._maxInstanceCount);Tt.renderInstances(ui,sn,Nn)}else Tt.render(ui,sn)}},this.compile=function(C,X){function te(q,ie,Ne){q.transparent===!0&&q.side===vi?(q.side=Mn,q.needsUpdate=!0,Ti(q,ie,Ne),q.side=Er,q.needsUpdate=!0,Ti(q,ie,Ne),q.side=vi):Ti(q,ie,Ne)}d=D.get(C),d.init(),g.push(d),C.traverseVisible(function(q){q.isLight&&q.layers.test(X.layers)&&(d.pushLight(q),q.castShadow&&d.pushShadow(q))}),d.setupLights(h.physicallyCorrectLights),C.traverse(function(q){const ie=q.material;if(ie)if(Array.isArray(ie))for(let Ne=0;Ne<ie.length;Ne++){const Ve=ie[Ne];te(Ve,C,q)}else te(ie,C,q)}),g.pop(),d=null};let Se=null;function xe(C){Se&&Se(C)}function nt(){bt.stop()}function lt(){bt.start()}const bt=new Ff;bt.setAnimationLoop(xe),typeof self<"u"&&bt.setContext(self),this.setAnimationLoop=function(C){Se=C,z.setAnimationLoop(C),C===null?bt.stop():bt.start()},z.addEventListener("sessionstart",nt),z.addEventListener("sessionend",lt),this.render=function(C,X){if(X!==void 0&&X.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),X.parent===null&&X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),z.enabled===!0&&z.isPresenting===!0&&(z.cameraAutoUpdate===!0&&z.updateCamera(X),X=z.getCamera()),C.isScene===!0&&C.onBeforeRender(h,C,X,y),d=D.get(C,g.length),d.init(),g.push(d),j.multiplyMatrices(X.projectionMatrix,X.matrixWorldInverse),Y.setFromProjectionMatrix(j),H=this.localClippingEnabled,Z=A.init(this.clippingPlanes,H,X),f=Lt.get(C,m.length),f.init(),m.push(f),nn(C,X,0,h.sortObjects),f.finish(),h.sortObjects===!0&&f.sort(F,L),Z===!0&&A.beginShadows();const te=d.state.shadowsArray;if($.render(te,C,X),Z===!0&&A.endShadows(),this.info.autoReset===!0&&this.info.reset(),oe.render(f,C),d.setupLights(h.physicallyCorrectLights),X.isArrayCamera){const q=X.cameras;for(let ie=0,Ne=q.length;ie<Ne;ie++){const Ve=q[ie];xt(f,C,Ve,Ve.viewport)}}else xt(f,C,X);y!==null&&(le.updateMultisampleRenderTarget(y),le.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(h,C,X),re.resetDefaultState(),b=-1,x=null,g.pop(),g.length>0?d=g[g.length-1]:d=null,m.pop(),m.length>0?f=m[m.length-1]:f=null};function nn(C,X,te,q){if(C.visible===!1)return;if(C.layers.test(X.layers)){if(C.isGroup)te=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(X);else if(C.isLight)d.pushLight(C),C.castShadow&&d.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||Y.intersectsSprite(C)){q&&se.setFromMatrixPosition(C.matrixWorld).applyMatrix4(j);const Ve=Oe.update(C),Je=C.material;Je.visible&&f.push(C,Ve,Je,te,se.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==qe.render.frame&&(C.skeleton.update(),C.skeleton.frame=qe.render.frame),!C.frustumCulled||Y.intersectsObject(C))){q&&se.setFromMatrixPosition(C.matrixWorld).applyMatrix4(j);const Ve=Oe.update(C),Je=C.material;if(Array.isArray(Je)){const je=Ve.groups;for(let rt=0,$e=je.length;rt<$e;rt++){const it=je[rt],Tt=Je[it.materialIndex];Tt&&Tt.visible&&f.push(C,Ve,Tt,te,se.z,it)}}else Je.visible&&f.push(C,Ve,Je,te,se.z,null)}}const Ne=C.children;for(let Ve=0,Je=Ne.length;Ve<Je;Ve++)nn(Ne[Ve],X,te,q)}function xt(C,X,te,q){const ie=C.opaque,Ne=C.transmissive,Ve=C.transparent;d.setupLightsView(te),Ne.length>0&&Tn(ie,X,te),q&&ve.viewport(M.copy(q)),ie.length>0&&rn(ie,X,te),Ne.length>0&&rn(Ne,X,te),Ve.length>0&&rn(Ve,X,te),ve.buffers.depth.setTest(!0),ve.buffers.depth.setMask(!0),ve.buffers.color.setMask(!0),ve.setPolygonOffset(!1)}function Tn(C,X,te){const q=ce.isWebGL2;B===null&&(B=new Mi(1,1,{generateMipmaps:!0,type:Te.has("EXT_color_buffer_half_float")?$r:Vi,minFilter:co,samples:q&&s===!0?4:0})),h.getDrawingBufferSize(ne),q?B.setSize(ne.x,ne.y):B.setSize(Sa(ne.x),Sa(ne.y));const ie=h.getRenderTarget();h.setRenderTarget(B),h.clear();const Ne=h.toneMapping;h.toneMapping=Gn,rn(C,X,te),h.toneMapping=Ne,le.updateMultisampleRenderTarget(B),le.updateRenderTargetMipmap(B),h.setRenderTarget(ie)}function rn(C,X,te){const q=X.isScene===!0?X.overrideMaterial:null;for(let ie=0,Ne=C.length;ie<Ne;ie++){const Ve=C[ie],Je=Ve.object,je=Ve.geometry,rt=q===null?Ve.material:q,$e=Ve.group;Je.layers.test(te.layers)&&Jt(Je,X,te,je,rt,$e)}}function Jt(C,X,te,q,ie,Ne){C.onBeforeRender(h,X,te,q,ie,Ne),C.modelViewMatrix.multiplyMatrices(te.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),ie.onBeforeRender(h,X,te,q,C,Ne),ie.transparent===!0&&ie.side===vi?(ie.side=Mn,ie.needsUpdate=!0,h.renderBufferDirect(te,X,q,ie,C,Ne),ie.side=Er,ie.needsUpdate=!0,h.renderBufferDirect(te,X,q,ie,C,Ne),ie.side=vi):h.renderBufferDirect(te,X,q,ie,C,Ne),C.onAfterRender(h,X,te,q,ie,Ne)}function Ti(C,X,te){X.isScene!==!0&&(X=_e);const q=Q.get(C),ie=d.state.lights,Ne=d.state.shadowsArray,Ve=ie.state.version,Je=Le.getParameters(C,ie.state,Ne,X,te),je=Le.getProgramCacheKey(Je);let rt=q.programs;q.environment=C.isMeshStandardMaterial?X.environment:null,q.fog=X.fog,q.envMap=(C.isMeshStandardMaterial?ze:We).get(C.envMap||q.environment),rt===void 0&&(C.addEventListener("dispose",U),rt=new Map,q.programs=rt);let $e=rt.get(je);if($e!==void 0){if(q.currentProgram===$e&&q.lightsStateVersion===Ve)return ps(C,Je),$e}else Je.uniforms=Le.getUniforms(C),C.onBuild(te,Je,h),C.onBeforeCompile(Je,h),$e=Le.acquireProgram(Je,je),rt.set(je,$e),q.uniforms=Je.uniforms;const it=q.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(it.clippingPlanes=A.uniform),ps(C,Je),q.needsLights=ms(C),q.lightsStateVersion=Ve,q.needsLights&&(it.ambientLightColor.value=ie.state.ambient,it.lightProbe.value=ie.state.probe,it.directionalLights.value=ie.state.directional,it.directionalLightShadows.value=ie.state.directionalShadow,it.spotLights.value=ie.state.spot,it.spotLightShadows.value=ie.state.spotShadow,it.rectAreaLights.value=ie.state.rectArea,it.ltc_1.value=ie.state.rectAreaLTC1,it.ltc_2.value=ie.state.rectAreaLTC2,it.pointLights.value=ie.state.point,it.pointLightShadows.value=ie.state.pointShadow,it.hemisphereLights.value=ie.state.hemi,it.directionalShadowMap.value=ie.state.directionalShadowMap,it.directionalShadowMatrix.value=ie.state.directionalShadowMatrix,it.spotShadowMap.value=ie.state.spotShadowMap,it.spotLightMatrix.value=ie.state.spotLightMatrix,it.spotLightMap.value=ie.state.spotLightMap,it.pointShadowMap.value=ie.state.pointShadowMap,it.pointShadowMatrix.value=ie.state.pointShadowMatrix);const Tt=$e.getUniforms(),Wn=Xs.seqWithValue(Tt.seq,it);return q.currentProgram=$e,q.uniformsList=Wn,$e}function ps(C,X){const te=Q.get(C);te.outputEncoding=X.outputEncoding,te.instancing=X.instancing,te.skinning=X.skinning,te.morphTargets=X.morphTargets,te.morphNormals=X.morphNormals,te.morphColors=X.morphColors,te.morphTargetsCount=X.morphTargetsCount,te.numClippingPlanes=X.numClippingPlanes,te.numIntersection=X.numClipIntersection,te.vertexAlphas=X.vertexAlphas,te.vertexTangents=X.vertexTangents,te.toneMapping=X.toneMapping}function Eo(C,X,te,q,ie){X.isScene!==!0&&(X=_e),le.resetTextureUnits();const Ne=X.fog,Ve=q.isMeshStandardMaterial?X.environment:null,Je=y===null?h.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:xi,je=(q.isMeshStandardMaterial?ze:We).get(q.envMap||Ve),rt=q.vertexColors===!0&&!!te.attributes.color&&te.attributes.color.itemSize===4,$e=!!q.normalMap&&!!te.attributes.tangent,it=!!te.morphAttributes.position,Tt=!!te.morphAttributes.normal,Wn=!!te.morphAttributes.color,li=q.toneMapped?h.toneMapping:Gn,ci=te.morphAttributes.position||te.morphAttributes.normal||te.morphAttributes.color,hn=ci!==void 0?ci.length:0,st=Q.get(q),ui=d.state.lights;if(Z===!0&&(H===!0||C!==x)){const N=C===x&&q.id===b;A.setState(q,C,N)}let Pt=!1;q.version===st.__version?(st.needsLights&&st.lightsStateVersion!==ui.state.version||st.outputEncoding!==Je||ie.isInstancedMesh&&st.instancing===!1||!ie.isInstancedMesh&&st.instancing===!0||ie.isSkinnedMesh&&st.skinning===!1||!ie.isSkinnedMesh&&st.skinning===!0||st.envMap!==je||q.fog===!0&&st.fog!==Ne||st.numClippingPlanes!==void 0&&(st.numClippingPlanes!==A.numPlanes||st.numIntersection!==A.numIntersection)||st.vertexAlphas!==rt||st.vertexTangents!==$e||st.morphTargets!==it||st.morphNormals!==Tt||st.morphColors!==Wn||st.toneMapping!==li||ce.isWebGL2===!0&&st.morphTargetsCount!==hn)&&(Pt=!0):(Pt=!0,st.__version=q.version);let sn=st.currentProgram;Pt===!0&&(sn=Ti(q,X,ie));let Nn=!1,Li=!1,kr=!1;const Bt=sn.getUniforms(),jn=st.uniforms;if(ve.useProgram(sn.program)&&(Nn=!0,Li=!0,kr=!0),q.id!==b&&(b=q.id,Li=!0),Nn||x!==C){if(Bt.setValue(V,"projectionMatrix",C.projectionMatrix),ce.logarithmicDepthBuffer&&Bt.setValue(V,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),x!==C&&(x=C,Li=!0,kr=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const N=Bt.map.cameraPosition;N!==void 0&&N.setValue(V,se.setFromMatrixPosition(C.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&Bt.setValue(V,"isOrthographic",C.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||ie.isSkinnedMesh)&&Bt.setValue(V,"viewMatrix",C.matrixWorldInverse)}if(ie.isSkinnedMesh){Bt.setOptional(V,ie,"bindMatrix"),Bt.setOptional(V,ie,"bindMatrixInverse");const N=ie.skeleton;N&&(ce.floatVertexTextures?(N.boneTexture===null&&N.computeBoneTexture(),Bt.setValue(V,"boneTexture",N.boneTexture,le),Bt.setValue(V,"boneTextureSize",N.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Nr=te.morphAttributes;if((Nr.position!==void 0||Nr.normal!==void 0||Nr.color!==void 0&&ce.isWebGL2===!0)&&de.update(ie,te,q,sn),(Li||st.receiveShadow!==ie.receiveShadow)&&(st.receiveShadow=ie.receiveShadow,Bt.setValue(V,"receiveShadow",ie.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(jn.envMap.value=je,jn.flipEnvMap.value=je.isCubeTexture&&je.isRenderTargetTexture===!1?-1:1),Li&&(Bt.setValue(V,"toneMappingExposure",h.toneMappingExposure),st.needsLights&&Ci(jn,kr),Ne&&q.fog===!0&&vt.refreshFogUniforms(jn,Ne),vt.refreshMaterialUniforms(jn,q,k,S,B),Xs.upload(V,st.uniformsList,jn,le)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(Xs.upload(V,st.uniformsList,jn,le),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&Bt.setValue(V,"center",ie.center),Bt.setValue(V,"modelViewMatrix",ie.modelViewMatrix),Bt.setValue(V,"normalMatrix",ie.normalMatrix),Bt.setValue(V,"modelMatrix",ie.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const N=q.uniformsGroups;for(let Ie=0,Rt=N.length;Ie<Rt;Ie++)if(ce.isWebGL2){const qn=N[Ie];he.update(qn,sn),he.bind(qn,sn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return sn}function Ci(C,X){C.ambientLightColor.needsUpdate=X,C.lightProbe.needsUpdate=X,C.directionalLights.needsUpdate=X,C.directionalLightShadows.needsUpdate=X,C.pointLights.needsUpdate=X,C.pointLightShadows.needsUpdate=X,C.spotLights.needsUpdate=X,C.spotLightShadows.needsUpdate=X,C.rectAreaLights.needsUpdate=X,C.hemisphereLights.needsUpdate=X}function ms(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,X,te){Q.get(C.texture).__webglTexture=X,Q.get(C.depthTexture).__webglTexture=te;const q=Q.get(C);q.__hasExternalTextures=!0,q.__hasExternalTextures&&(q.__autoAllocateDepthBuffer=te===void 0,q.__autoAllocateDepthBuffer||Te.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,X){const te=Q.get(C);te.__webglFramebuffer=X,te.__useDefaultFramebuffer=X===void 0},this.setRenderTarget=function(C,X=0,te=0){y=C,_=X,w=te;let q=!0;if(C){const je=Q.get(C);je.__useDefaultFramebuffer!==void 0?(ve.bindFramebuffer(36160,null),q=!1):je.__webglFramebuffer===void 0?le.setupRenderTarget(C):je.__hasExternalTextures&&le.rebindTextures(C,Q.get(C.texture).__webglTexture,Q.get(C.depthTexture).__webglTexture)}let ie=null,Ne=!1,Ve=!1;if(C){const je=C.texture;(je.isData3DTexture||je.isDataArrayTexture)&&(Ve=!0);const rt=Q.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(ie=rt[X],Ne=!0):ce.isWebGL2&&C.samples>0&&le.useMultisampledRTT(C)===!1?ie=Q.get(C).__webglMultisampledFramebuffer:ie=rt,M.copy(C.viewport),P.copy(C.scissor),v=C.scissorTest}else M.copy(O).multiplyScalar(k).floor(),P.copy(I).multiplyScalar(k).floor(),v=R;if(ve.bindFramebuffer(36160,ie)&&ce.drawBuffers&&q&&ve.drawBuffers(C,ie),ve.viewport(M),ve.scissor(P),ve.setScissorTest(v),Ne){const je=Q.get(C.texture);V.framebufferTexture2D(36160,36064,34069+X,je.__webglTexture,te)}else if(Ve){const je=Q.get(C.texture),rt=X||0;V.framebufferTextureLayer(36160,36064,je.__webglTexture,te||0,rt)}b=-1},this.readRenderTargetPixels=function(C,X,te,q,ie,Ne,Ve){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Je=Q.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Ve!==void 0&&(Je=Je[Ve]),Je){ve.bindFramebuffer(36160,Je);try{const je=C.texture,rt=je.format,$e=je.type;if(rt!==Un&&T.convert(rt)!==V.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const it=$e===$r&&(Te.has("EXT_color_buffer_half_float")||ce.isWebGL2&&Te.has("EXT_color_buffer_float"));if($e!==Vi&&T.convert($e)!==V.getParameter(35738)&&!($e===Fi&&(ce.isWebGL2||Te.has("OES_texture_float")||Te.has("WEBGL_color_buffer_float")))&&!it){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X>=0&&X<=C.width-q&&te>=0&&te<=C.height-ie&&V.readPixels(X,te,q,ie,T.convert(rt),T.convert($e),Ne)}finally{const je=y!==null?Q.get(y).__webglFramebuffer:null;ve.bindFramebuffer(36160,je)}}},this.copyFramebufferToTexture=function(C,X,te=0){const q=Math.pow(2,-te),ie=Math.floor(X.image.width*q),Ne=Math.floor(X.image.height*q);le.setTexture2D(X,0),V.copyTexSubImage2D(3553,te,0,0,C.x,C.y,ie,Ne),ve.unbindTexture()},this.copyTextureToTexture=function(C,X,te,q=0){const ie=X.image.width,Ne=X.image.height,Ve=T.convert(te.format),Je=T.convert(te.type);le.setTexture2D(te,0),V.pixelStorei(37440,te.flipY),V.pixelStorei(37441,te.premultiplyAlpha),V.pixelStorei(3317,te.unpackAlignment),X.isDataTexture?V.texSubImage2D(3553,q,C.x,C.y,ie,Ne,Ve,Je,X.image.data):X.isCompressedTexture?V.compressedTexSubImage2D(3553,q,C.x,C.y,X.mipmaps[0].width,X.mipmaps[0].height,Ve,X.mipmaps[0].data):V.texSubImage2D(3553,q,C.x,C.y,Ve,Je,X.image),q===0&&te.generateMipmaps&&V.generateMipmap(3553),ve.unbindTexture()},this.copyTextureToTexture3D=function(C,X,te,q,ie=0){if(h.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ne=C.max.x-C.min.x+1,Ve=C.max.y-C.min.y+1,Je=C.max.z-C.min.z+1,je=T.convert(q.format),rt=T.convert(q.type);let $e;if(q.isData3DTexture)le.setTexture3D(q,0),$e=32879;else if(q.isDataArrayTexture)le.setTexture2DArray(q,0),$e=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}V.pixelStorei(37440,q.flipY),V.pixelStorei(37441,q.premultiplyAlpha),V.pixelStorei(3317,q.unpackAlignment);const it=V.getParameter(3314),Tt=V.getParameter(32878),Wn=V.getParameter(3316),li=V.getParameter(3315),ci=V.getParameter(32877),hn=te.isCompressedTexture?te.mipmaps[0]:te.image;V.pixelStorei(3314,hn.width),V.pixelStorei(32878,hn.height),V.pixelStorei(3316,C.min.x),V.pixelStorei(3315,C.min.y),V.pixelStorei(32877,C.min.z),te.isDataTexture||te.isData3DTexture?V.texSubImage3D($e,ie,X.x,X.y,X.z,Ne,Ve,Je,je,rt,hn.data):te.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),V.compressedTexSubImage3D($e,ie,X.x,X.y,X.z,Ne,Ve,Je,je,hn.data)):V.texSubImage3D($e,ie,X.x,X.y,X.z,Ne,Ve,Je,je,rt,hn),V.pixelStorei(3314,it),V.pixelStorei(32878,Tt),V.pixelStorei(3316,Wn),V.pixelStorei(3315,li),V.pixelStorei(32877,ci),ie===0&&q.generateMipmaps&&V.generateMipmap($e),ve.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?le.setTextureCube(C,0):C.isData3DTexture?le.setTexture3D(C,0):C.isDataArrayTexture?le.setTexture2DArray(C,0):le.setTexture2D(C,0),ve.unbindTexture()},this.resetState=function(){_=0,w=0,y=null,ve.reset(),re.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class q0 extends Vf{}q0.prototype.isWebGL1Renderer=!0;class X0 extends gt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class yc extends kn{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const xc=new wt,Mc=new wt,Us=[],Br=new yn;class mr extends yn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new yc(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,r=this.count;if(Br.geometry=this.geometry,Br.material=this.material,Br.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,xc),Mc.multiplyMatrices(n,xc),Br.matrixWorld=Mc,Br.raycast(e,Us);for(let o=0,a=Us.length;o<a;o++){const l=Us[o];l.instanceId=s,l.object=this,t.push(l)}Us.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new yc(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Hf extends Pr{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Xe(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Sc=new G,Ec=new G,Ac=new wt,oa=new Ua,Gs=new uo;class Y0 extends gt{constructor(e=new dn,t=new Hf){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)Sc.fromBufferAttribute(t,r-1),Ec.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=Sc.distanceTo(Ec);e.setAttribute("lineDistance",new zt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Gs.copy(n.boundingSphere),Gs.applyMatrix4(r),Gs.radius+=s,e.ray.intersectsSphere(Gs)===!1)return;Ac.copy(r).invert(),oa.copy(e.ray).applyMatrix4(Ac);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new G,u=new G,f=new G,d=new G,m=this.isLineSegments?2:1,g=n.index,p=n.attributes.position;if(g!==null){const _=Math.max(0,o.start),w=Math.min(g.count,o.start+o.count);for(let y=_,b=w-1;y<b;y+=m){const x=g.getX(y),M=g.getX(y+1);if(c.fromBufferAttribute(p,x),u.fromBufferAttribute(p,M),oa.distanceSqToSegment(c,u,d,f)>l)continue;d.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(d);v<e.near||v>e.far||t.push({distance:v,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),w=Math.min(p.count,o.start+o.count);for(let y=_,b=w-1;y<b;y+=m){if(c.fromBufferAttribute(p,y),u.fromBufferAttribute(p,y+1),oa.distanceSqToSegment(c,u,d,f)>l)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}class us extends dn{constructor(e=1,t=1,n=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],f=[],d=[],m=[];let g=0;const h=[],p=n/2;let _=0;w(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new zt(f,3)),this.setAttribute("normal",new zt(d,3)),this.setAttribute("uv",new zt(m,2));function w(){const b=new G,x=new G;let M=0;const P=(t-e)/n;for(let v=0;v<=s;v++){const E=[],S=v/s,k=S*(t-e)+e;for(let F=0;F<=r;F++){const L=F/r,O=L*l+a,I=Math.sin(O),R=Math.cos(O);x.x=k*I,x.y=-S*n+p,x.z=k*R,f.push(x.x,x.y,x.z),b.set(I,P,R).normalize(),d.push(b.x,b.y,b.z),m.push(L,1-S),E.push(g++)}h.push(E)}for(let v=0;v<r;v++)for(let E=0;E<s;E++){const S=h[E][v],k=h[E+1][v],F=h[E+1][v+1],L=h[E][v+1];u.push(S,k,L),u.push(k,F,L),M+=6}c.addGroup(_,M,0),_+=M}function y(b){const x=g,M=new Be,P=new G;let v=0;const E=b===!0?e:t,S=b===!0?1:-1;for(let F=1;F<=r;F++)f.push(0,p*S,0),d.push(0,S,0),m.push(.5,.5),g++;const k=g;for(let F=0;F<=r;F++){const O=F/r*l+a,I=Math.cos(O),R=Math.sin(O);P.x=E*R,P.y=p*S,P.z=E*I,f.push(P.x,P.y,P.z),d.push(0,S,0),M.x=I*.5+.5,M.y=R*.5*S+.5,m.push(M.x,M.y),g++}for(let F=0;F<r;F++){const L=x+F,O=k+F;b===!0?u.push(O,O+1,L):u.push(O+1,O,L),v+=3}c.addGroup(_,v,b===!0?1:2),_+=v}}static fromJSON(e){return new us(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ja extends us{constructor(e=1,t=1,n=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new ja(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class qa extends dn{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];a(r),c(n),u(),this.setAttribute("position",new zt(s,3)),this.setAttribute("normal",new zt(s.slice(),3)),this.setAttribute("uv",new zt(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(w){const y=new G,b=new G,x=new G;for(let M=0;M<t.length;M+=3)m(t[M+0],y),m(t[M+1],b),m(t[M+2],x),l(y,b,x,w)}function l(w,y,b,x){const M=x+1,P=[];for(let v=0;v<=M;v++){P[v]=[];const E=w.clone().lerp(b,v/M),S=y.clone().lerp(b,v/M),k=M-v;for(let F=0;F<=k;F++)F===0&&v===M?P[v][F]=E:P[v][F]=E.clone().lerp(S,F/k)}for(let v=0;v<M;v++)for(let E=0;E<2*(M-v)-1;E++){const S=Math.floor(E/2);E%2===0?(d(P[v][S+1]),d(P[v+1][S]),d(P[v][S])):(d(P[v][S+1]),d(P[v+1][S+1]),d(P[v+1][S]))}}function c(w){const y=new G;for(let b=0;b<s.length;b+=3)y.x=s[b+0],y.y=s[b+1],y.z=s[b+2],y.normalize().multiplyScalar(w),s[b+0]=y.x,s[b+1]=y.y,s[b+2]=y.z}function u(){const w=new G;for(let y=0;y<s.length;y+=3){w.x=s[y+0],w.y=s[y+1],w.z=s[y+2];const b=p(w)/2/Math.PI+.5,x=_(w)/Math.PI+.5;o.push(b,1-x)}g(),f()}function f(){for(let w=0;w<o.length;w+=6){const y=o[w+0],b=o[w+2],x=o[w+4],M=Math.max(y,b,x),P=Math.min(y,b,x);M>.9&&P<.1&&(y<.2&&(o[w+0]+=1),b<.2&&(o[w+2]+=1),x<.2&&(o[w+4]+=1))}}function d(w){s.push(w.x,w.y,w.z)}function m(w,y){const b=w*3;y.x=e[b+0],y.y=e[b+1],y.z=e[b+2]}function g(){const w=new G,y=new G,b=new G,x=new G,M=new Be,P=new Be,v=new Be;for(let E=0,S=0;E<s.length;E+=9,S+=6){w.set(s[E+0],s[E+1],s[E+2]),y.set(s[E+3],s[E+4],s[E+5]),b.set(s[E+6],s[E+7],s[E+8]),M.set(o[S+0],o[S+1]),P.set(o[S+2],o[S+3]),v.set(o[S+4],o[S+5]),x.copy(w).add(y).add(b).divideScalar(3);const k=p(x);h(M,S+0,w,k),h(P,S+2,y,k),h(v,S+4,b,k)}}function h(w,y,b,x){x<0&&w.x===1&&(o[y]=w.x-1),b.x===0&&b.z===0&&(o[y]=x/2/Math.PI+.5)}function p(w){return Math.atan2(w.z,-w.x)}function _(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}static fromJSON(e){return new qa(e.vertices,e.indices,e.radius,e.details)}}class Xa extends qa{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Xa(e.radius,e.detail)}}class Ys extends Pr{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Xe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Xe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Tf,this.normalScale=new Be(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=za,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const Tc={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class Z0{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,f){return c.push(u,f),this},this.removeHandler=function(u){const f=c.indexOf(u);return f!==-1&&c.splice(f,2),this},this.getHandler=function(u){for(let f=0,d=c.length;f<d;f+=2){const m=c[f],g=c[f+1];if(m.global&&(m.lastIndex=0),m.test(u))return g}return null}}}const K0=new Z0;class Wf{constructor(e){this.manager=e!==void 0?e:K0,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}class J0 extends Wf{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Tc.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=es("img");function l(){u(),Tc.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(f){u(),r&&r(f),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Cc extends Wf{constructor(e){super(e)}load(e,t,n,r){const s=new En,o=new J0(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class jf extends gt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Xe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const Lc=new wt,Dc=new G,Pc=new G;class Q0{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Be(512,512),this.map=null,this.mapPass=null,this.matrix=new wt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new fo,this._frameExtents=new Be(1,1),this._viewportCount=1,this._viewports=[new Gt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Dc.setFromMatrixPosition(e.matrixWorld),t.position.copy(Dc),Pc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Pc),t.updateMatrixWorld(),Lc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Lc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class $0 extends Q0{constructor(){super(new qi(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ev extends jf{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(gt.DefaultUp),this.updateMatrix(),this.target=new gt,this.shadow=new $0}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class tv extends jf{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class qf{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Rc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Rc();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Rc(){return(typeof performance>"u"?Date:performance).now()}class nv{constructor(e,t,n=0,r=1/0){this.ray=new Ua(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Ga,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Aa(e,this,n,t),n.sort(Ic),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)Aa(e[r],this,n,t);return n.sort(Ic),n}}function Ic(i,e){return i.distance-e.distance}function Aa(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const r=i.children;for(let s=0,o=r.length;s<o;s++)Aa(r[s],e,t,!0)}}class $s{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(an(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Oc=new G;let Bs,aa;class iv extends gt{constructor(e=new G(0,0,1),t=new G(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Bs===void 0&&(Bs=new dn,Bs.setAttribute("position",new zt([0,0,0,0,1,0],3)),aa=new us(0,.5,1,5,1),aa.translate(0,-.5,0)),this.position.copy(t),this.line=new Y0(Bs,new Hf({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new yn(aa,new Ba({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Oc.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Oc,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fa}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fa);const kc={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class po{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const rv=new qi(-1,1,1,-1,0,1),Ya=new dn;Ya.setAttribute("position",new zt([-1,3,0,-1,-1,0,3,-1,0],3));Ya.setAttribute("uv",new zt([0,2,0,0,2,0],2));class sv{constructor(e){this._mesh=new yn(Ya,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,rv)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Nc extends po{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof ii?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=kf.clone(e.uniforms),this.material=new ii({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new sv(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}class Fc extends po{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const r=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),s.buffers.stencil.setFunc(r.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(r.EQUAL,1,4294967295),s.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),s.buffers.stencil.setLocked(!0)}}class ov extends po{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class av{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new Be);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Mi(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],kc===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),Nc===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Nc(kc),this.clock=new qf}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let r=0,s=this.passes.length;r<s;r++){const o=this.passes[r];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Fc!==void 0&&(o instanceof Fc?n=!0:o instanceof ov&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new Be);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new qi(-1,1,1,-1,0,1);const Xf=new dn;Xf.setAttribute("position",new zt([-1,3,0,-1,-1,0,3,-1,0],3));Xf.setAttribute("uv",new zt([0,2,0,0,2,0],2));class Yf extends po{constructor(e,t,n,r,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Xe}render(e,t,n){const r=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=r}}const lv=(i,e,t)=>{i.renderer=new Vf({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...t}),i.composer=new av(i.renderer),i.composer.addPass(new Yf(i.scene,bi(i.camera)))},zc=(i,e,t)=>{!i.renderer||(e?i.renderer.outputEncoding=xi:i.renderer.outputEncoding=Dt,t?i.renderer.toneMapping=Gn:i.renderer.toneMapping=Sf)},Uc=(i,e,t)=>{!i.renderer||!i.composer||(i.renderer.setSize(e.width,e.height),i.renderer.setPixelRatio(t),i.composer.setSize(e.width,e.height),i.composer.setPixelRatio(t))},Gc=(i,e,t)=>{!i.renderer||(i.renderer.shadowMap.enabled=e,i.renderer.shadowMap.type=t)},xn=i=>i.userData,cv=(i,e)=>{i.pointer.update(t=>i.renderer?t.set(e.offsetX/i.renderer.domElement.clientWidth*2-1,-(e.offsetY/i.renderer.domElement.clientHeight)*2+1):t)},Zf=(i,e,t,n)=>(i.raycaster.setFromCamera(e,t),i.raycaster.intersectObjects(n,!1)),uv=(i,e)=>i.object.uuid!==e.object.uuid||i.instanceId!==e.instanceId,fv=(i,e,t)=>{let n=bi(i.camera);const r=i.camera.subscribe(c=>n=c);It(r);let s=bi(i.pointer);const o=i.pointer.subscribe(c=>s=c);It(o);let a;const l=c=>{var d,m;c.preventDefault();const u=c.type;i.pointerOverCanvas.set(!0),t.pointerInvalidated=!0,cv(i,c);const f=dv(e,s,n);if(u==="pointerdown"&&(a=f?{object:f.object,instanceId:f.instanceId}:null),u==="click"){if(!hv(f,a)){a=null;return}a=null}!f||(m=(d=xn(f.object)).eventDispatcher)==null||m.call(d,u,{...f,event:c})};return{onClick:l,onContextMenu:l,onPointerUp:l,onPointerDown:l,onPointerMove:l}};function dv(i,e,t){if(i.interactiveObjects.size===0||i.raycastableObjects.size===0)return null;const n=Zf(i,e,t,Array.from(i.raycastableObjects));return n.length===0||!i.interactiveObjects.has(n[0].object)?null:n[0]}function hv(i,e){return!i||!e?!1:i.object.uuid===e.object.uuid&&i.instanceId===e.instanceId}const pv=(i,e)=>{let t=bi(i.pointerOverCanvas);const n=i.pointerOverCanvas.subscribe(c=>t=c);It(n);let r=bi(i.camera);const s=i.camera.subscribe(c=>r=c);It(s);let o=bi(i.pointer);const a=i.pointer.subscribe(c=>o=c);return It(a),{raycast:()=>{var f,d,m,g,h,p,_,w;if(e.interactiveObjects.size===0||e.raycastableObjects.size===0)return;const c=t?Zf(e,o,r,Array.from(e.raycastableObjects)):[],u=c.length&&e.interactiveObjects.has(c[0].object)?c[0]:null;u?e.lastIntersection?e.lastIntersection&&uv(e.lastIntersection,u)&&((p=(h=xn(e.lastIntersection.object)).eventDispatcher)==null||p.call(h,"pointerleave",e.lastIntersection),(w=(_=xn(u.object)).eventDispatcher)==null||w.call(_,"pointerenter",u)):(g=(m=xn(u.object)).eventDispatcher)==null||g.call(m,"pointerenter",u):e.lastIntersection&&((d=(f=xn(e.lastIntersection.object)).eventDispatcher)==null||d.call(f,"pointerleave",e.lastIntersection)),e.lastIntersection=u}}},mo=typeof window<"u",mv=i=>{if(!mo)return;let e;const t=()=>{i(),e=requestAnimationFrame(t)};t(),It(()=>{!e||cancelAnimationFrame(e)})},gv=(i,e)=>{if(e.frameHandlers.size===0)return;if(e.debugFrameloop){let r=0;e.frameHandlers.forEach(s=>{s.debugFrameloopMessage?e.invalidations[s.debugFrameloopMessage]=s.debugFrameloopMessage in e.invalidations?e.invalidations[s.debugFrameloopMessage]+1:1:++r}),r>0&&(e.invalidations.onFrame=e.frameHandlers.size)}const t=Array.from(e.frameHandlers).reduce((r,s)=>s.order?!0:r,!1),n=i.clock.getDelta();t?Array.from(e.frameHandlers).sort((r,s)=>{var o,a;return((o=r.order)!=null?o:0)>((a=s.order)!=null?a:0)?1:-1}).forEach(r=>r.fn(i,n)):e.frameHandlers.forEach(r=>r.fn(i,n))},_v=i=>{!i.debugFrameloop||(i.frame+=1,console.log(`frame: ${i.frame}${Object.keys(i.invalidations).length>0?", requested by \u21B4":""}`),Object.keys(i.invalidations).length>0&&console.table(i.invalidations),i.invalidations={})},vv=(i,e,t,n)=>{let r=bi(i.camera);const s=i.camera.subscribe(a=>r=a);It(s);const{raycast:o}=pv(i,e);mv(()=>{n.dispose();const a=t.frameloop==="always"||t.frameloop==="demand"&&(t.frameInvalidated||t.frameHandlers.size>0)||t.frameloop==="never"&&t.advance;(a||t.pointerInvalidated)&&(o(),t.pointerInvalidated=!1),a&&(!r||!i.composer||!i.renderer||(gv(i,t),i.composer.passes.length>1?i.composer.render():i.renderer.render(i.scene,r),_v(t),t.frameInvalidated=!1,t.advance=!1))})},bv=()=>{const i=new qt(75,0,.1,1e3);return xn(i).threlteDefaultCamera=!0,i.position.z=5,i.lookAt(0,0,0),i},wv=i=>{const e=i.size.subscribe(t=>{xn(bi(i.camera)).threlteDefaultCamera&&i.camera.update(n=>{const r=n;return r.aspect=t.width/t.height,r.updateProjectionMatrix(),i.invalidate("Default camera: aspect ratio changed"),r})});It(e)},yv=(i,e,t,n,r,s,o)=>{const a={audioListeners:new Map,addAudioListener:(_,w)=>{if(w=w!=null?w:"default",a.audioListeners.has(w)){console.warn(`An AudioListener with the id "${w}" has already been added, aborting.`);return}a.audioListeners.set(w,_)},removeAudioListener:_=>{if(_=_!=null?_:"default",!a.audioListeners.has(_)){console.warn(`No AudioListener with the id "${_}" found, aborting.`);return}a.audioListeners.delete(_)},getAudioListener:_=>{if(_=_!=null?_:"default",!a.audioListeners.has(_)){console.warn(`No AudioListener with the id "${_}" found, aborting.`);return}return a.audioListeners.get(_)}},l={debugFrameloop:s,frameloop:o,frame:0,frameInvalidated:!0,pointerInvalidated:!0,invalidations:{},frameHandlers:new Set,advance:!1},c={size:_n([n,r],([_,w])=>_||w),pointer:ot(new Be),pointerOverCanvas:ot(!1),clock:new qf,camera:ot(bv()),scene:new X0,renderer:void 0,composer:void 0,invalidate:_=>{l.frameInvalidated=!0,l.debugFrameloop&&_&&(l.invalidations[_]=l.invalidations[_]?l.invalidations[_]+1:1)},advance:()=>{l.advance=!0}},u={flat:ot(e),linear:ot(i),dpr:ot(t),setCamera:_=>{c.camera.set(_),c.composer&&(c.composer.passes.forEach(w=>{w instanceof Yf&&(w.camera=_)}),c.invalidate("Canvas: setting camera"))},raycastableObjects:new Set,interactiveObjects:new Set,raycaster:new nv,lastIntersection:null,addRaycastableObject:_=>{u.raycastableObjects.add(_)},removeRaycastableObject:_=>{u.raycastableObjects.delete(_)},addInteractiveObject:_=>{u.interactiveObjects.add(_)},removeInteractiveObject:_=>{u.interactiveObjects.delete(_)},addPass:_=>{!c.composer||(c.composer.addPass(_),c.invalidate("Canvas: adding pass"))},removePass:_=>{!c.composer||(c.composer.removePass(_),c.invalidate("Canvas: removing pass"))}},f={dispose:async(_=!1)=>{await Qr(),!(!f.shouldDispose&&!_)&&(f.disposableObjects.forEach((w,y)=>{var b;(w===0||_)&&((b=y==null?void 0:y.dispose)==null||b.call(y),f.disposableObjects.delete(y))}),f.shouldDispose=!1)},collectDisposableObjects:(_,w)=>{const y=w!=null?w:[];return _&&((_==null?void 0:_.dispose)&&typeof _.dispose=="function"&&_.type!=="Scene"&&y.push(_),Object.entries(_).forEach(([b,x])=>{if(b==="parent"||b==="children"||typeof x!="object")return;const M=x;M!=null&&M.dispose&&f.collectDisposableObjects(M,y)})),y},addDisposableObjects:_=>{_.forEach(w=>{const y=f.disposableObjects.get(w);y?f.disposableObjects.set(w,y+1):f.disposableObjects.set(w,1)})},removeDisposableObjects:_=>{_.length!==0&&(_.forEach(w=>{const y=f.disposableObjects.get(w);y&&y>0&&f.disposableObjects.set(w,y-1)}),f.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1};return In("threlte",c),In("threlte-root",u),In("threlte-render-context",l),In("threlte-audio-context",a),In("threlte-disposal-context",f),{ctx:c,rootCtx:u,renderCtx:l,audioCtx:a,disposalCtx:f,getCtx:()=>c,getRootCtx:()=>u,getRenderCtx:()=>l,getAudioCtx:()=>a,getDisposalCtx:()=>f}};function go(i,e){const t=ot(i);let n=i;const r=t.subscribe(a=>n=a);return It(r),{...t,set:a=>{if((a==null?void 0:a.uuid)===(n==null?void 0:n.uuid))return;const l=n;t.set(a),e==null||e(a,l)},update:a=>{const l=a(n);if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const c=n;t.set(l),e==null||e(l,c)}}}const An=()=>Bn("threlte");function xv(i){let e;const t=i[8].default,n=dt(t,i,i[7],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,[s]){n&&n.p&&(!e||s&128)&&pt(n,t,r,r[7],e?ht(t,r[7],s,null):mt(r[7]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}const Mv=()=>({onChildMount:Bn("threlte-hierarchical-object-on-mount"),onChildDestroy:Bn("threlte-hierarchical-object-on-destroy")}),Kf=()=>Bn("threlte-hierarchical-parent-context");function Sv(i,e,t){var _;let n,{$$slots:r={},$$scope:s}=e,{object:o=void 0}=e,{children:a=[]}=e,{onChildMount:l=void 0}=e;const c=w=>{a.push(w),t(1,a),l==null||l(w)};let{onChildDestroy:u=void 0}=e;const f=w=>{const y=a.findIndex(b=>b.uuid===w.uuid);y!==-1&&a.splice(y,1),t(1,a),u==null||u(w)},{invalidate:d}=An(),m=Kf();Fe(i,m,w=>t(6,n=w));let{parent:g=n}=e;const h=Mv();o&&((_=h.onChildMount)==null||_.call(h,o),d("HierarchicalObject: object added"));const p=go(o,(w,y)=>{var b,x;y&&((b=h.onChildDestroy)==null||b.call(h,y),d("HierarchicalObject: object added")),w&&((x=h.onChildMount)==null||x.call(h,w),d("HierarchicalObject: object removed"))});return It(()=>{var w;o&&((w=h.onChildDestroy)==null||w.call(h,o),d("HierarchicalObject: object removed"))}),In("threlte-hierarchical-object-on-mount",c),In("threlte-hierarchical-object-on-destroy",f),In("threlte-hierarchical-parent-context",p),i.$$set=w=>{"object"in w&&t(3,o=w.object),"children"in w&&t(1,a=w.children),"onChildMount"in w&&t(4,l=w.onChildMount),"onChildDestroy"in w&&t(5,u=w.onChildDestroy),"parent"in w&&t(2,g=w.parent),"$$scope"in w&&t(7,s=w.$$scope)},i.$$.update=()=>{i.$$.dirty&64&&t(2,g=n),i.$$.dirty&8&&p.set(o)},[m,a,g,o,l,u,n,s,r]}class Ev extends Ze{constructor(e){super(),Ye(this,e,Sv,xv,He,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function Av(i){let e;const t=i[1].default,n=dt(t,i,i[4],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&16)&&pt(n,t,r,r[4],e?ht(t,r[4],s,null):mt(r[4]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function Tv(i){let e,t;return e=new Ev({props:{object:i[0],onChildMount:i[2],onChildDestroy:i[3],$$slots:{default:[Av]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,[r]){const s={};r&1&&(s.object=n[0]),r&1&&(s.onChildMount=n[2]),r&1&&(s.onChildDestroy=n[3]),r&16&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Cv(i,e,t){let{$$slots:n={},$$scope:r}=e,{object:s}=e;const o=l=>s.add(l),a=l=>s.remove(l);return i.$$set=l=>{"object"in l&&t(0,s=l.object),"$$scope"in l&&t(4,r=l.$$scope)},[s,n,o,a,r]}class _o extends Ze{constructor(e){super(),Ye(this,e,Cv,Tv,He,{object:0})}}const Lv=()=>{const i=ot({width:0,height:0});let e={width:0,height:0};const t=i.subscribe(o=>e=o);It(t);let n;const r=()=>{const o=e;if(!n||!n.parentElement)return;const{clientWidth:a,clientHeight:l}=n.parentElement;(a!==o.width||l!==o.height)&&i.set({width:a,height:l})},s=o=>{n=o,r(),window.addEventListener("resize",r)};return mo?(It(()=>{window.removeEventListener("resize",r)}),{parentSizeAction:s,parentSize:i}):{parentSize:i,parentSizeAction:s}};function Bc(i){let e,t;return e=new _o({props:{object:i[0].scene,$$slots:{default:[Dv]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,r){const s={};r[1]&4&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Dv(i){let e;const t=i[29].default,n=dt(t,i,i[33],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4)&&pt(n,t,r,r[33],e?ht(t,r[33],s,null):mt(r[33]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function Pv(i){let e,t,n,r,s=i[2]&&Bc(i);return{c(){e=Ae("canvas"),s&&s.c(),J(e,"class","svelte-o3oskp")},m(o,a){ge(o,e,a),s&&s.m(e,null),i[30](e),t=!0,n||(r=[yi(i[3].call(null,e)),tt(e,"click",i[9]),tt(e,"contextmenu",i[10]),tt(e,"pointerup",i[13]),tt(e,"pointerdown",i[11]),tt(e,"pointermove",i[12]),tt(e,"pointerenter",i[31]),tt(e,"pointerleave",i[32])],n=!0)},p(o,a){o[2]?s?(s.p(o,a),a[0]&4&&W(s,1)):(s=Bc(o),s.c(),W(s,1),s.m(e,null)):s&&(St(),K(s,1,1,()=>{s=null}),Et())},i(o){t||(W(s),t=!0)},o(o){K(s),t=!1},d(o){o&&fe(e),s&&s.d(),i[30](null),n=!1,Ht(r)}}}const Vc=new Set;function Rv(i,e,t){let n,r,s,o,{$$slots:a={},$$scope:l}=e,{dpr:c=mo?window.devicePixelRatio:1}=e,{flat:u=!1}=e,{linear:f=!1}=e,{frameloop:d="demand"}=e,{debugFrameloop:m=!1}=e,{shadows:g=!0}=e,{shadowMapType:h=yf}=e,{size:p=void 0}=e,{rendererParameters:_=void 0}=e,w,y=!1;const b=ot(p),{parentSize:x,parentSizeAction:M}=Lv(),P=yv(f,u,c,b,x,m,d),{getCtx:v,renderCtx:E,disposalCtx:S}=P,{ctx:k,rootCtx:F,audioCtx:L}=P;wv(k),Vc.add(k.invalidate),It(()=>{Vc.delete(k.invalidate)});const{size:O,scene:I}=k;Fe(i,O,ue=>t(26,r=ue));const{flat:R,linear:Y,dpr:Z}=F;Fe(i,R,ue=>t(27,s=ue)),Fe(i,Y,ue=>t(28,o=ue)),Fe(i,Z,ue=>t(25,n=ue)),In("threlte-parent",ot(I)),ss(()=>{!w||(lv(k,w,_),zc(k,o,s),Uc(k,r,n),Gc(k,g,h),t(2,y=!0))}),vv(k,F,E,S);const{onClick:H,onContextMenu:B,onPointerDown:j,onPointerMove:ne,onPointerUp:se}=fv(k,F,E);It(()=>{S.dispose(!0)});function _e(ue){Mt[ue?"unshift":"push"](()=>{w=ue,t(1,w)})}const Me=()=>v().pointerOverCanvas.set(!0),V=()=>v().pointerOverCanvas.set(!1);return i.$$set=ue=>{"dpr"in ue&&t(14,c=ue.dpr),"flat"in ue&&t(15,u=ue.flat),"linear"in ue&&t(16,f=ue.linear),"frameloop"in ue&&t(17,d=ue.frameloop),"debugFrameloop"in ue&&t(18,m=ue.debugFrameloop),"shadows"in ue&&t(19,g=ue.shadows),"shadowMapType"in ue&&t(20,h=ue.shadowMapType),"size"in ue&&t(21,p=ue.size),"rendererParameters"in ue&&t(22,_=ue.rendererParameters),"$$scope"in ue&&t(33,l=ue.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&2097152&&b.set(p),i.$$.dirty[0]&65536&&Qt(Y,o=f,o),i.$$.dirty[0]&32768&&Qt(R,s=u,s),i.$$.dirty[0]&16384&&Qt(Z,n=c,n),i.$$.dirty[0]&402653184&&zc(v(),o,s),i.$$.dirty[0]&100663296&&Uc(v(),r,n),i.$$.dirty[0]&1572864&&Gc(v(),g,h)},[k,w,y,M,v,O,R,Y,Z,H,B,j,ne,se,c,u,f,d,m,g,h,p,_,F,L,n,r,s,o,a,_e,Me,V,l]}class Iv extends Ze{constructor(e){super(),Ye(this,e,Rv,Pv,He,{dpr:14,flat:15,linear:16,frameloop:17,debugFrameloop:18,shadows:19,shadowMapType:20,size:21,rendererParameters:22,ctx:0,rootCtx:23,audioCtx:24},null,[-1,-1])}get ctx(){return this.$$.ctx[0]}get rootCtx(){return this.$$.ctx[23]}get audioCtx(){return this.$$.ctx[24]}}const vo=()=>Bn("threlte-root"),Ov=()=>Bn("threlte-disposal-context");function kv(i){let e;const t=i[9].default,n=dt(t,i,i[8],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,[s]){n&&n.p&&(!e||s&256)&&pt(n,t,r,r[8],e?ht(t,r[8],s,null):mt(r[8]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}const Hc="threlte-disposable-object-context";function Nv(i,e,t){var p;let n,r,{$$slots:s={},$$scope:o}=e;const{collectDisposableObjects:a,addDisposableObjects:l,removeDisposableObjects:c}=Ov();let{object:u=void 0}=e,f=u,{dispose:d=void 0}=e;const m=Bn(Hc);Fe(i,m,_=>t(7,r=_));const g=ot((p=d!=null?d:r)!=null?p:!0);Fe(i,g,_=>t(6,n=_)),In(Hc,g);let h=n?a(u):[];return l(h),It(()=>{c(h)}),i.$$set=_=>{"object"in _&&t(2,u=_.object),"dispose"in _&&t(3,d=_.dispose),"$$scope"in _&&t(8,o=_.$$scope)},i.$$.update=()=>{var _;i.$$.dirty&136&&g.set((_=d!=null?d:r)!=null?_:!0),i.$$.dirty&116&&u!==f&&(c(h),t(5,h=n?a(u):[]),l(h),t(4,f=u))},[m,g,u,d,f,h,n,r,o,s]}class ts extends Ze{constructor(e){super(),Ye(this,e,Nv,kv,He,{object:2,dispose:3})}}function Fv(i,e,t){let n,r,{object:s}=e;const o=go(s);Fe(i,o,c=>t(4,r=c));const a=Bn("threlte-layers");Fe(i,a,c=>t(3,n=c));const{invalidate:l}=An();return i.$$set=c=>{"object"in c&&t(2,s=c.object)},i.$$.update=()=>{if(i.$$.dirty&4&&o.set(s),i.$$.dirty&24){if(n==="all")r.layers.enableAll();else if(n==="none")r.layers.disableAll();else if(Array.isArray(n))for(let c=0;c<32;c+=1){const u=c;n.includes(u)?r.layers.enable(c):r.layers.disable(c)}else n!==void 0&&r.layers.set(n);l("LayerableObject")}},[o,a,s,n,r]}class zv extends Ze{constructor(e){super(),Ye(this,e,Fv,null,He,{object:2})}}const Xi=(i,e)=>{var a;if(!mo)return{start:()=>{},stop:()=>{},started:bf(!1)};const t=Bn("threlte-render-context"),n={fn:i,order:e==null?void 0:e.order,debugFrameloopMessage:e==null?void 0:e.debugFrameloopMessage},r=ot(!1),s=()=>{t.frameHandlers.delete(n),r.set(!1)},o=()=>{t.frameHandlers.add(n),r.set(!0)};return((a=e==null?void 0:e.autostart)==null||a)&&o(),It(()=>{s()}),{start:o,stop:s,started:{subscribe:r.subscribe}}},Jf=()=>{const i=ot(!1);return(async()=>{await Qr(),i.set(!0)})(),i};function Uv(i,e,t){let n,r,{object:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e;const u=new G,f=Wi(),{invalidate:d}=An(),m=Jf();Fe(i,m,y=>t(8,r=y));const g=async()=>{r||await Qr(),f("transform")},h=async()=>{d("TransformableObject: transformed"),await g()};xn(s).onTransform=h;const{start:p,stop:_}=Xi(async()=>{c&&!l&&c instanceof gt&&(c.getWorldPosition(u),s.lookAt(u),await g())},{autostart:!1,debugFrameloopMessage:"TransformableObject: tracking object"}),w=go(s);return Fe(i,w,y=>t(7,n=y)),i.$$set=y=>{"object"in y&&t(2,s=y.object),"position"in y&&t(3,o=y.position),"scale"in y&&t(4,a=y.scale),"rotation"in y&&t(5,l=y.rotation),"lookAt"in y&&t(6,c=y.lookAt)},i.$$.update=()=>{var y,b,x,M,P,v,E,S,k,F,L,O,I;i.$$.dirty&4&&w.set(s),i.$$.dirty&232&&(o&&(n.position.set((y=o.x)!=null?y:0,(b=o.y)!=null?b:0,(x=o.z)!=null?x:0),h()),c&&!l&&(c instanceof gt?p():(_(),n.lookAt((M=c.x)!=null?M:0,(P=c.y)!=null?P:0,(v=c.z)!=null?v:0),h())),c||_()),i.$$.dirty&144&&a&&(typeof a=="number"?n.scale.set(a,a,a):n.scale.set((E=a.x)!=null?E:1,(S=a.y)!=null?S:1,(k=a.z)!=null?k:1),h()),i.$$.dirty&160&&l&&(n.rotation.set((F=l.x)!=null?F:0,(L=l.y)!=null?L:0,(O=l.z)!=null?O:0,(I=l.order)!=null?I:"XYZ"),h())},[m,w,s,o,a,l,c,n]}class bo extends Ze{constructor(e){super(),Ye(this,e,Uv,null,He,{object:2,position:3,scale:4,rotation:5,lookAt:6})}}function Gv(i,e,t){let n,r,s,{object:o}=e,{viewportAware:a=!1}=e;const l=Wi(),{camera:c,invalidate:u}=An();Fe(i,c,M=>t(8,s=M));const f=new fo,d=new wt,m=M=>M.type==="Mesh",g=new G,h=()=>s?(d.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),f.setFromProjectionMatrix(d),m(o)?f.intersectsObject(o):(o.getWorldPosition(g),f.containsPoint(g))):!0,p=Jf();Fe(i,p,M=>t(7,r=M));let{inViewport:_=h()}=e;const w=async M=>{M?(r||await Qr(),l("viewportenter",o)):(r||await Qr(),l("viewportleave",o))},{start:y,stop:b,started:x}=Xi(()=>{const M=h();_===void 0?(t(3,_=h()),w(_)):M!==_&&(w(M),t(3,_=M))},{autostart:a,debugFrameloopMessage:"ViewportAwareObject: tracking viewport visibility"});return Fe(i,x,M=>t(6,n=M)),u("ViewportAwareObject"),i.$$set=M=>{"object"in M&&t(4,o=M.object),"viewportAware"in M&&t(5,a=M.viewportAware),"inViewport"in M&&t(3,_=M.inViewport)},i.$$.update=()=>{i.$$.dirty&96&&(a&&!n?y():!a&&n&&b())},[c,p,x,_,o,a,n]}class Bv extends Ze{constructor(e){super(),Ye(this,e,Gv,null,He,{object:4,viewportAware:5,inViewport:3})}}function Vv(i){let e;const t=i[14].default,n=dt(t,i,i[18],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&262144)&&pt(n,t,r,r[18],e?ht(t,r[18],s,null):mt(r[18]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function Hv(i){let e,t;return e=new _o({props:{object:i[1],$$slots:{default:[Vv]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.object=n[1]),r&262144&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Wv(i){let e,t,n,r,s,o,a,l,c;e=new zv({props:{object:i[1]}}),n=new bo({props:{object:i[1],position:i[2],rotation:i[4],scale:i[3],lookAt:i[5]}}),s=new ts({props:{object:i[1],dispose:i[7],$$slots:{default:[Hv]},$$scope:{ctx:i}}});function u(d){i[15](d)}let f={object:i[1],viewportAware:i[6]};return i[0]!==void 0&&(f.inViewport=i[0]),a=new Bv({props:f}),Mt.push(()=>Zt(a,"inViewport",u)),a.$on("viewportenter",i[16]),a.$on("viewportleave",i[17]),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment),r=ke(),Re(s.$$.fragment),o=ke(),Re(a.$$.fragment)},m(d,m){De(e,d,m),ge(d,t,m),De(n,d,m),ge(d,r,m),De(s,d,m),ge(d,o,m),De(a,d,m),c=!0},p(d,[m]){const g={};m&2&&(g.object=d[1]),e.$set(g);const h={};m&2&&(h.object=d[1]),m&4&&(h.position=d[2]),m&16&&(h.rotation=d[4]),m&8&&(h.scale=d[3]),m&32&&(h.lookAt=d[5]),n.$set(h);const p={};m&2&&(p.object=d[1]),m&128&&(p.dispose=d[7]),m&262146&&(p.$$scope={dirty:m,ctx:d}),s.$set(p);const _={};m&2&&(_.object=d[1]),m&64&&(_.viewportAware=d[6]),!l&&m&1&&(l=!0,_.inViewport=d[0],Yt(()=>l=!1)),a.$set(_)},i(d){c||(W(e.$$.fragment,d),W(n.$$.fragment,d),W(s.$$.fragment,d),W(a.$$.fragment,d),c=!0)},o(d){K(e.$$.fragment,d),K(n.$$.fragment,d),K(s.$$.fragment,d),K(a.$$.fragment,d),c=!1},d(d){Pe(e,d),d&&fe(t),Pe(n,d),d&&fe(r),Pe(s,d),d&&fe(o),Pe(a,d)}}}function jv(i,e,t){let{$$slots:n={},$$scope:r}=e,{object:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{viewportAware:u=!1}=e,{inViewport:f=!1}=e,{castShadow:d=void 0}=e,{receiveShadow:m=void 0}=e,{frustumCulled:g=void 0}=e,{renderOrder:h=void 0}=e,{visible:p=void 0}=e,{dispose:_=void 0}=e,{userData:w=void 0}=e;const{invalidate:y}=An(),b=()=>s;function x(v){f=v,t(0,f)}function M(v){ct.call(this,i,v)}function P(v){ct.call(this,i,v)}return i.$$set=v=>{"object"in v&&t(1,s=v.object),"position"in v&&t(2,o=v.position),"scale"in v&&t(3,a=v.scale),"rotation"in v&&t(4,l=v.rotation),"lookAt"in v&&t(5,c=v.lookAt),"viewportAware"in v&&t(6,u=v.viewportAware),"inViewport"in v&&t(0,f=v.inViewport),"castShadow"in v&&t(8,d=v.castShadow),"receiveShadow"in v&&t(9,m=v.receiveShadow),"frustumCulled"in v&&t(10,g=v.frustumCulled),"renderOrder"in v&&t(11,h=v.renderOrder),"visible"in v&&t(12,p=v.visible),"dispose"in v&&t(7,_=v.dispose),"userData"in v&&t(13,w=v.userData),"$$scope"in v&&t(18,r=v.$$scope)},i.$$.update=()=>{i.$$.dirty&16128&&(p!==void 0&&(b().visible=p),d!==void 0&&(b().castShadow=d),m!==void 0&&(b().receiveShadow=m),g!==void 0&&(b().frustumCulled=g),h!==void 0&&(b().renderOrder=h),w!==void 0&&(b().userData={...b().userData,...w}),y("Object3DInstance: props changed"))},[f,s,o,a,l,c,u,_,d,m,g,h,p,w,n,x,M,P,r]}class fs extends Ze{constructor(e){super(),Ye(this,e,jv,Wv,He,{object:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:8,receiveShadow:9,frustumCulled:10,renderOrder:11,visible:12,dispose:7,userData:13})}}function qv(i){let e;const t=i[17].default,n=dt(t,i,i[21],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&2097152)&&pt(n,t,r,r[21],e?ht(t,r[21],s,null):mt(r[21]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function Xv(i){let e,t,n;function r(o){i[18](o)}let s={object:i[1],lookAt:i[5],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],position:i[2],scale:i[3],rotation:i[4],viewportAware:i[6],visible:i[11],userData:i[12],dispose:i[13],$$slots:{default:[qv]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new fs({props:s}),Mt.push(()=>Zt(e,"inViewport",r)),e.$on("viewportenter",i[19]),e.$on("viewportleave",i[20]),{c(){Re(e.$$.fragment)},m(o,a){De(e,o,a),n=!0},p(o,[a]){const l={};a&2&&(l.object=o[1]),a&32&&(l.lookAt=o[5]),a&128&&(l.castShadow=o[7]),a&256&&(l.receiveShadow=o[8]),a&512&&(l.frustumCulled=o[9]),a&1024&&(l.renderOrder=o[10]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.viewportAware=o[6]),a&2048&&(l.visible=o[11]),a&4096&&(l.userData=o[12]),a&8192&&(l.dispose=o[13]),a&2097152&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Yt(()=>t=!1)),e.$set(l)},i(o){n||(W(e.$$.fragment,o),n=!0)},o(o){K(e.$$.fragment,o),n=!1},d(o){Pe(e,o)}}}function Yv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{camera:o}=e,{position:a=void 0}=e,{scale:l=void 0}=e,{rotation:c=void 0}=e,{lookAt:u=void 0}=e,{viewportAware:f=!1}=e,{inViewport:d=!1}=e,{castShadow:m=void 0}=e,{receiveShadow:g=void 0}=e,{frustumCulled:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:w=void 0}=e,{dispose:y=void 0}=e,{useCamera:b=!1}=e;const x=go(o);Fe(i,x,S=>t(16,n=S));const{setCamera:M}=vo();function P(S){d=S,t(0,d)}function v(S){ct.call(this,i,S)}function E(S){ct.call(this,i,S)}return i.$$set=S=>{"camera"in S&&t(1,o=S.camera),"position"in S&&t(2,a=S.position),"scale"in S&&t(3,l=S.scale),"rotation"in S&&t(4,c=S.rotation),"lookAt"in S&&t(5,u=S.lookAt),"viewportAware"in S&&t(6,f=S.viewportAware),"inViewport"in S&&t(0,d=S.inViewport),"castShadow"in S&&t(7,m=S.castShadow),"receiveShadow"in S&&t(8,g=S.receiveShadow),"frustumCulled"in S&&t(9,h=S.frustumCulled),"renderOrder"in S&&t(10,p=S.renderOrder),"visible"in S&&t(11,_=S.visible),"userData"in S&&t(12,w=S.userData),"dispose"in S&&t(13,y=S.dispose),"useCamera"in S&&t(15,b=S.useCamera),"$$scope"in S&&t(21,s=S.$$scope)},i.$$.update=()=>{i.$$.dirty&2&&x.set(o),i.$$.dirty&98304&&b&&M(n)},[d,o,a,l,c,u,f,m,g,h,p,_,w,y,x,b,n,r,P,v,E,s]}class Zv extends Ze{constructor(e){super(),Ye(this,e,Yv,Xv,He,{camera:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,useCamera:15})}}function Kv(i){let e;const t=i[20].default,n=dt(t,i,i[24],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&16777216)&&pt(n,t,r,r[24],e?ht(t,r[24],s,null):mt(r[24]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function Jv(i){let e,t,n;function r(o){i[21](o)}let s={camera:i[0],position:i[2],scale:i[3],rotation:i[4],castShadow:i[6],receiveShadow:i[7],frustumCulled:i[8],renderOrder:i[9],visible:i[10],userData:i[11],dispose:i[12],viewportAware:i[13],lookAt:i[5],useCamera:i[14],$$slots:{default:[Kv]},$$scope:{ctx:i}};return i[1]!==void 0&&(s.inViewport=i[1]),e=new Zv({props:s}),Mt.push(()=>Zt(e,"inViewport",r)),e.$on("viewportenter",i[22]),e.$on("viewportleave",i[23]),{c(){Re(e.$$.fragment)},m(o,a){De(e,o,a),n=!0},p(o,[a]){const l={};a&1&&(l.camera=o[0]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.castShadow=o[6]),a&128&&(l.receiveShadow=o[7]),a&256&&(l.frustumCulled=o[8]),a&512&&(l.renderOrder=o[9]),a&1024&&(l.visible=o[10]),a&2048&&(l.userData=o[11]),a&4096&&(l.dispose=o[12]),a&8192&&(l.viewportAware=o[13]),a&32&&(l.lookAt=o[5]),a&16384&&(l.useCamera=o[14]),a&16777216&&(l.$$scope={dirty:a,ctx:o}),!t&&a&2&&(t=!0,l.inViewport=o[1],Yt(()=>t=!1)),e.$set(l)},i(o){n||(W(e.$$.fragment,o),n=!0)},o(o){K(e.$$.fragment,o),n=!1},d(o){Pe(e,o)}}}function Qv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{castShadow:u=void 0}=e,{receiveShadow:f=void 0}=e,{frustumCulled:d=void 0}=e,{renderOrder:m=void 0}=e,{visible:g=void 0}=e,{userData:h=void 0}=e,{dispose:p=void 0}=e,{viewportAware:_=!1}=e,{inViewport:w=!1}=e,{useCamera:y=!0}=e,{near:b=void 0}=e,{far:x=void 0}=e,{fov:M=void 0}=e;const{size:P,invalidate:v}=An();Fe(i,P,L=>t(19,n=L));const E=new qt(M,n.width/n.height,b,x);function S(L){w=L,t(1,w)}function k(L){ct.call(this,i,L)}function F(L){ct.call(this,i,L)}return i.$$set=L=>{"position"in L&&t(2,o=L.position),"scale"in L&&t(3,a=L.scale),"rotation"in L&&t(4,l=L.rotation),"lookAt"in L&&t(5,c=L.lookAt),"castShadow"in L&&t(6,u=L.castShadow),"receiveShadow"in L&&t(7,f=L.receiveShadow),"frustumCulled"in L&&t(8,d=L.frustumCulled),"renderOrder"in L&&t(9,m=L.renderOrder),"visible"in L&&t(10,g=L.visible),"userData"in L&&t(11,h=L.userData),"dispose"in L&&t(12,p=L.dispose),"viewportAware"in L&&t(13,_=L.viewportAware),"inViewport"in L&&t(1,w=L.inViewport),"useCamera"in L&&t(14,y=L.useCamera),"near"in L&&t(16,b=L.near),"far"in L&&t(17,x=L.far),"fov"in L&&t(18,M=L.fov),"$$scope"in L&&t(24,s=L.$$scope)},i.$$.update=()=>{i.$$.dirty&524289&&(t(0,E.aspect=n.width/n.height,E),E.updateProjectionMatrix(),v("PerspectiveCamera: aspect changed")),i.$$.dirty&458753&&(b!==void 0&&t(0,E.near=b,E),x!==void 0&&t(0,E.far=x,E),M!==void 0&&t(0,E.fov=M,E),E.updateProjectionMatrix(),v("PerspectiveCamera: props changed"))},[E,w,o,a,l,c,u,f,d,m,g,h,p,_,y,P,b,x,M,n,r,S,k,F,s]}class $v extends Ze{constructor(e){super(),Ye(this,e,Qv,Jv,He,{position:2,scale:3,rotation:4,lookAt:5,castShadow:6,receiveShadow:7,frustumCulled:8,renderOrder:9,visible:10,userData:11,dispose:12,viewportAware:13,inViewport:1,useCamera:14,near:16,far:17,fov:18,camera:0})}get camera(){return this.$$.ctx[0]}}const Wc=[],e1=(i,e)=>{const t=Wc.find(r=>r instanceof i);if(t)return t;const n=e();return Wc.push(n),n},jc={type:"change"},la={type:"start"},qc={type:"end"};class t1 extends ji{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new G,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Ki.ROTATE,MIDDLE:Ki.DOLLY,RIGHT:Ki.PAN},this.touches={ONE:Ji.ROTATE,TWO:Ji.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(T){T.addEventListener("keydown",Lt),this._domElementKeyEvents=T},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(jc),n.update(),s=r.NONE},this.update=function(){const T=new G,re=new Si().setFromUnitVectors(e.up,new G(0,1,0)),he=re.clone().invert(),ye=new G,z=new Si,Ce=2*Math.PI;return function(){const at=n.object.position;T.copy(at).sub(n.target),T.applyQuaternion(re),a.setFromVector3(T),n.autoRotate&&s===r.NONE&&E(P()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let U=n.minAzimuthAngle,me=n.maxAzimuthAngle;return isFinite(U)&&isFinite(me)&&(U<-Math.PI?U+=Ce:U>Math.PI&&(U-=Ce),me<-Math.PI?me+=Ce:me>Math.PI&&(me-=Ce),U<=me?a.theta=Math.max(U,Math.min(me,a.theta)):a.theta=a.theta>(U+me)/2?Math.max(U,a.theta):Math.min(me,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),T.setFromSpherical(a),T.applyQuaternion(he),at.copy(n.target).add(T),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,f||ye.distanceToSquared(n.object.position)>o||8*(1-z.dot(n.object.quaternion))>o?(n.dispatchEvent(jc),ye.copy(n.object.position),z.copy(n.object.quaternion),f=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",$),n.domElement.removeEventListener("pointerdown",We),n.domElement.removeEventListener("pointercancel",yt),n.domElement.removeEventListener("wheel",vt),n.domElement.removeEventListener("pointermove",ze),n.domElement.removeEventListener("pointerup",ut),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Lt)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const o=1e-6,a=new $s,l=new $s;let c=1;const u=new G;let f=!1;const d=new Be,m=new Be,g=new Be,h=new Be,p=new Be,_=new Be,w=new Be,y=new Be,b=new Be,x=[],M={};function P(){return 2*Math.PI/60/60*n.autoRotateSpeed}function v(){return Math.pow(.95,n.zoomSpeed)}function E(T){l.theta-=T}function S(T){l.phi-=T}const k=function(){const T=new G;return function(he,ye){T.setFromMatrixColumn(ye,0),T.multiplyScalar(-he),u.add(T)}}(),F=function(){const T=new G;return function(he,ye){n.screenSpacePanning===!0?T.setFromMatrixColumn(ye,1):(T.setFromMatrixColumn(ye,0),T.crossVectors(n.object.up,T)),T.multiplyScalar(he),u.add(T)}}(),L=function(){const T=new G;return function(he,ye){const z=n.domElement;if(n.object.isPerspectiveCamera){const Ce=n.object.position;T.copy(Ce).sub(n.target);let Ke=T.length();Ke*=Math.tan(n.object.fov/2*Math.PI/180),k(2*he*Ke/z.clientHeight,n.object.matrix),F(2*ye*Ke/z.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(k(he*(n.object.right-n.object.left)/n.object.zoom/z.clientWidth,n.object.matrix),F(ye*(n.object.top-n.object.bottom)/n.object.zoom/z.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function O(T){n.object.isPerspectiveCamera?c/=T:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*T)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function I(T){n.object.isPerspectiveCamera?c*=T:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/T)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function R(T){d.set(T.clientX,T.clientY)}function Y(T){w.set(T.clientX,T.clientY)}function Z(T){h.set(T.clientX,T.clientY)}function H(T){m.set(T.clientX,T.clientY),g.subVectors(m,d).multiplyScalar(n.rotateSpeed);const re=n.domElement;E(2*Math.PI*g.x/re.clientHeight),S(2*Math.PI*g.y/re.clientHeight),d.copy(m),n.update()}function B(T){y.set(T.clientX,T.clientY),b.subVectors(y,w),b.y>0?O(v()):b.y<0&&I(v()),w.copy(y),n.update()}function j(T){p.set(T.clientX,T.clientY),_.subVectors(p,h).multiplyScalar(n.panSpeed),L(_.x,_.y),h.copy(p),n.update()}function ne(T){T.deltaY<0?I(v()):T.deltaY>0&&O(v()),n.update()}function se(T){let re=!1;switch(T.code){case n.keys.UP:L(0,n.keyPanSpeed),re=!0;break;case n.keys.BOTTOM:L(0,-n.keyPanSpeed),re=!0;break;case n.keys.LEFT:L(n.keyPanSpeed,0),re=!0;break;case n.keys.RIGHT:L(-n.keyPanSpeed,0),re=!0;break}re&&(T.preventDefault(),n.update())}function _e(){if(x.length===1)d.set(x[0].pageX,x[0].pageY);else{const T=.5*(x[0].pageX+x[1].pageX),re=.5*(x[0].pageY+x[1].pageY);d.set(T,re)}}function Me(){if(x.length===1)h.set(x[0].pageX,x[0].pageY);else{const T=.5*(x[0].pageX+x[1].pageX),re=.5*(x[0].pageY+x[1].pageY);h.set(T,re)}}function V(){const T=x[0].pageX-x[1].pageX,re=x[0].pageY-x[1].pageY,he=Math.sqrt(T*T+re*re);w.set(0,he)}function ue(){n.enableZoom&&V(),n.enablePan&&Me()}function Te(){n.enableZoom&&V(),n.enableRotate&&_e()}function ce(T){if(x.length==1)m.set(T.pageX,T.pageY);else{const he=Ge(T),ye=.5*(T.pageX+he.x),z=.5*(T.pageY+he.y);m.set(ye,z)}g.subVectors(m,d).multiplyScalar(n.rotateSpeed);const re=n.domElement;E(2*Math.PI*g.x/re.clientHeight),S(2*Math.PI*g.y/re.clientHeight),d.copy(m)}function ve(T){if(x.length===1)p.set(T.pageX,T.pageY);else{const re=Ge(T),he=.5*(T.pageX+re.x),ye=.5*(T.pageY+re.y);p.set(he,ye)}_.subVectors(p,h).multiplyScalar(n.panSpeed),L(_.x,_.y),h.copy(p)}function qe(T){const re=Ge(T),he=T.pageX-re.x,ye=T.pageY-re.y,z=Math.sqrt(he*he+ye*ye);y.set(0,z),b.set(0,Math.pow(y.y/w.y,n.zoomSpeed)),O(b.y),w.copy(y)}function Q(T){n.enableZoom&&qe(T),n.enablePan&&ve(T)}function le(T){n.enableZoom&&qe(T),n.enableRotate&&ce(T)}function We(T){n.enabled!==!1&&(x.length===0&&(n.domElement.setPointerCapture(T.pointerId),n.domElement.addEventListener("pointermove",ze),n.domElement.addEventListener("pointerup",ut)),oe(T),T.pointerType==="touch"?D(T):Oe(T))}function ze(T){n.enabled!==!1&&(T.pointerType==="touch"?A(T):Le(T))}function ut(T){de(T),x.length===0&&(n.domElement.releasePointerCapture(T.pointerId),n.domElement.removeEventListener("pointermove",ze),n.domElement.removeEventListener("pointerup",ut)),n.dispatchEvent(qc),s=r.NONE}function yt(T){de(T)}function Oe(T){let re;switch(T.button){case 0:re=n.mouseButtons.LEFT;break;case 1:re=n.mouseButtons.MIDDLE;break;case 2:re=n.mouseButtons.RIGHT;break;default:re=-1}switch(re){case Ki.DOLLY:if(n.enableZoom===!1)return;Y(T),s=r.DOLLY;break;case Ki.ROTATE:if(T.ctrlKey||T.metaKey||T.shiftKey){if(n.enablePan===!1)return;Z(T),s=r.PAN}else{if(n.enableRotate===!1)return;R(T),s=r.ROTATE}break;case Ki.PAN:if(T.ctrlKey||T.metaKey||T.shiftKey){if(n.enableRotate===!1)return;R(T),s=r.ROTATE}else{if(n.enablePan===!1)return;Z(T),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&n.dispatchEvent(la)}function Le(T){switch(s){case r.ROTATE:if(n.enableRotate===!1)return;H(T);break;case r.DOLLY:if(n.enableZoom===!1)return;B(T);break;case r.PAN:if(n.enablePan===!1)return;j(T);break}}function vt(T){n.enabled===!1||n.enableZoom===!1||s!==r.NONE||(T.preventDefault(),n.dispatchEvent(la),ne(T),n.dispatchEvent(qc))}function Lt(T){n.enabled===!1||n.enablePan===!1||se(T)}function D(T){switch(we(T),x.length){case 1:switch(n.touches.ONE){case Ji.ROTATE:if(n.enableRotate===!1)return;_e(),s=r.TOUCH_ROTATE;break;case Ji.PAN:if(n.enablePan===!1)return;Me(),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(n.touches.TWO){case Ji.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;ue(),s=r.TOUCH_DOLLY_PAN;break;case Ji.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Te(),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&n.dispatchEvent(la)}function A(T){switch(we(T),s){case r.TOUCH_ROTATE:if(n.enableRotate===!1)return;ce(T),n.update();break;case r.TOUCH_PAN:if(n.enablePan===!1)return;ve(T),n.update();break;case r.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Q(T),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;le(T),n.update();break;default:s=r.NONE}}function $(T){n.enabled!==!1&&T.preventDefault()}function oe(T){x.push(T)}function de(T){delete M[T.pointerId];for(let re=0;re<x.length;re++)if(x[re].pointerId==T.pointerId){x.splice(re,1);return}}function we(T){let re=M[T.pointerId];re===void 0&&(re=new Be,M[T.pointerId]=re),re.set(T.pageX,T.pageY)}function Ge(T){const re=T.pointerId===x[0].pointerId?x[1]:x[0];return M[re.pointerId]}n.domElement.addEventListener("contextmenu",$),n.domElement.addEventListener("pointerdown",We),n.domElement.addEventListener("pointercancel",yt),n.domElement.addEventListener("wheel",vt,{passive:!1}),this.update()}}function n1(i){let e,t,n,r;return e=new ts({props:{dispose:i[2],object:i[0]}}),n=new bo({props:{object:i[4],position:i[1]}}),n.$on("transform",i[5]),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment)},m(s,o){De(e,s,o),ge(s,t,o),De(n,s,o),r=!0},p(s,o){const a={};o[0]&4&&(a.dispose=s[2]),o[0]&1&&(a.object=s[0]),e.$set(a);const l={};o[0]&2&&(l.position=s[1]),n.$set(l)},i(s){r||(W(e.$$.fragment,s),W(n.$$.fragment,s),r=!0)},o(s){K(e.$$.fragment,s),K(n.$$.fragment,s),r=!1},d(s){Pe(e,s),s&&fe(t),Pe(n,s)}}}function i1(i,e,t){let n,{autoRotate:r=void 0}=e,{autoRotateSpeed:s=void 0}=e,{dampingFactor:o=void 0}=e,{enableDamping:a=void 0}=e,{enabled:l=void 0}=e,{enablePan:c=void 0}=e,{enableRotate:u=void 0}=e,{enableZoom:f=void 0}=e,{keyPanSpeed:d=void 0}=e,{keys:m=void 0}=e,{maxAzimuthAngle:g=void 0}=e,{maxDistance:h=void 0}=e,{maxPolarAngle:p=void 0}=e,{maxZoom:_=void 0}=e,{minAzimuthAngle:w=void 0}=e,{minDistance:y=void 0}=e,{minPolarAngle:b=void 0}=e,{minZoom:x=void 0}=e,{mouseButtons:M=void 0}=e,{panSpeed:P=void 0}=e,{rotateSpeed:v=void 0}=e,{screenSpacePanning:E=void 0}=e,{touches:S=void 0}=e,{zoomSpeed:k=void 0}=e,{target:F=void 0}=e,{dispose:L=void 0}=e;const O=Kf();Fe(i,O,V=>t(30,n=V));const{renderer:I,invalidate:R}=An();if(!I)throw new Error("Threlte Context missing: Is <OrbitControls> a child of <Canvas>?");if(!(n instanceof Va))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const Y=Wi(),Z=()=>{R("Orbitcontrols: change event"),Y("change")},H=()=>Y("start"),B=()=>Y("end"),j=new t1(n,I.domElement);xn(n).orbitControls=j,j.addEventListener("change",Z),j.addEventListener("start",H),j.addEventListener("end",B),It(()=>{n&&delete xn(n).orbitControls,j.removeEventListener("change",Z),j.removeEventListener("start",H),j.removeEventListener("end",B)});const{start:ne,stop:se}=Xi(()=>j.update(),{autostart:!1,debugFrameloopMessage:"OrbitControlts: updating controls"}),_e=new gt,Me=()=>{t(0,j.target=_e.position,j),j.update(),R("OrbitControls: target changed")};return i.$$set=V=>{"autoRotate"in V&&t(6,r=V.autoRotate),"autoRotateSpeed"in V&&t(7,s=V.autoRotateSpeed),"dampingFactor"in V&&t(8,o=V.dampingFactor),"enableDamping"in V&&t(9,a=V.enableDamping),"enabled"in V&&t(10,l=V.enabled),"enablePan"in V&&t(11,c=V.enablePan),"enableRotate"in V&&t(12,u=V.enableRotate),"enableZoom"in V&&t(13,f=V.enableZoom),"keyPanSpeed"in V&&t(14,d=V.keyPanSpeed),"keys"in V&&t(15,m=V.keys),"maxAzimuthAngle"in V&&t(16,g=V.maxAzimuthAngle),"maxDistance"in V&&t(17,h=V.maxDistance),"maxPolarAngle"in V&&t(18,p=V.maxPolarAngle),"maxZoom"in V&&t(19,_=V.maxZoom),"minAzimuthAngle"in V&&t(20,w=V.minAzimuthAngle),"minDistance"in V&&t(21,y=V.minDistance),"minPolarAngle"in V&&t(22,b=V.minPolarAngle),"minZoom"in V&&t(23,x=V.minZoom),"mouseButtons"in V&&t(24,M=V.mouseButtons),"panSpeed"in V&&t(25,P=V.panSpeed),"rotateSpeed"in V&&t(26,v=V.rotateSpeed),"screenSpacePanning"in V&&t(27,E=V.screenSpacePanning),"touches"in V&&t(28,S=V.touches),"zoomSpeed"in V&&t(29,k=V.zoomSpeed),"target"in V&&t(1,F=V.target),"dispose"in V&&t(2,L=V.dispose)},i.$$.update=()=>{i.$$.dirty[0]&1073741761&&(r!==void 0&&t(0,j.autoRotate=r,j),s!==void 0&&t(0,j.autoRotateSpeed=s,j),o!==void 0&&t(0,j.dampingFactor=o,j),a!==void 0&&t(0,j.enableDamping=a,j),l!==void 0&&t(0,j.enabled=l,j),c!==void 0&&t(0,j.enablePan=c,j),u!==void 0&&t(0,j.enableRotate=u,j),f!==void 0&&t(0,j.enableZoom=f,j),d!==void 0&&t(0,j.keyPanSpeed=d,j),m!==void 0&&t(0,j.keys=m,j),g!==void 0&&t(0,j.maxAzimuthAngle=g,j),h!==void 0&&t(0,j.maxDistance=h,j),p!==void 0&&t(0,j.maxPolarAngle=p,j),_!==void 0&&t(0,j.maxZoom=_,j),w!==void 0&&t(0,j.minAzimuthAngle=w,j),y!==void 0&&t(0,j.minDistance=y,j),b!==void 0&&t(0,j.minPolarAngle=b,j),x!==void 0&&t(0,j.minZoom=x,j),M!==void 0&&t(0,j.mouseButtons=M,j),P!==void 0&&t(0,j.panSpeed=P,j),v!==void 0&&t(0,j.rotateSpeed=v,j),E!==void 0&&t(0,j.screenSpacePanning=E,j),S!==void 0&&t(0,j.touches=S,j),k!==void 0&&t(0,j.zoomSpeed=k,j),j.update(),R("OrbitControls: props changed")),i.$$.dirty[0]&576&&(r||a?ne():se())},[j,F,L,O,_e,Me,r,s,o,a,l,c,u,f,d,m,g,h,p,_,w,y,b,x,M,P,v,E,S,k]}class r1 extends Ze{constructor(e){super(),Ye(this,e,i1,n1,He,{autoRotate:6,autoRotateSpeed:7,dampingFactor:8,enableDamping:9,enabled:10,enablePan:11,enableRotate:12,enableZoom:13,keyPanSpeed:14,keys:15,maxAzimuthAngle:16,maxDistance:17,maxPolarAngle:18,maxZoom:19,minAzimuthAngle:20,minDistance:21,minPolarAngle:22,minZoom:23,mouseButtons:24,panSpeed:25,rotateSpeed:26,screenSpacePanning:27,touches:28,zoomSpeed:29,target:1,dispose:2,controls:0},null,[-1,-1])}get controls(){return this.$$.ctx[0]}}const s1=(i,e)=>e?new Xe(i):new Xe().setHex(new Xe(i).getHex()).convertSRGBToLinear();function o1(i){let e;const t=i[18].default,n=dt(t,i,i[22],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&4194304)&&pt(n,t,r,r[22],e?ht(t,r[22],s,null):mt(r[22]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function a1(i){let e,t,n;function r(o){i[19](o)}let s={object:i[0],lookAt:i[5],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],position:i[2],scale:i[3],rotation:i[4],viewportAware:i[6],visible:i[11],userData:i[12],dispose:i[13],$$slots:{default:[o1]},$$scope:{ctx:i}};return i[1]!==void 0&&(s.inViewport=i[1]),e=new fs({props:s}),Mt.push(()=>Zt(e,"inViewport",r)),e.$on("viewportenter",i[20]),e.$on("viewportleave",i[21]),{c(){Re(e.$$.fragment)},m(o,a){De(e,o,a),n=!0},p(o,[a]){const l={};a&1&&(l.object=o[0]),a&32&&(l.lookAt=o[5]),a&128&&(l.castShadow=o[7]),a&256&&(l.receiveShadow=o[8]),a&512&&(l.frustumCulled=o[9]),a&1024&&(l.renderOrder=o[10]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.viewportAware=o[6]),a&2048&&(l.visible=o[11]),a&4096&&(l.userData=o[12]),a&8192&&(l.dispose=o[13]),a&4194304&&(l.$$scope={dirty:a,ctx:o}),!t&&a&2&&(t=!0,l.inViewport=o[1],Yt(()=>t=!1)),e.$set(l)},i(o){n||(W(e.$$.fragment,o),n=!0)},o(o){K(e.$$.fragment,o),n=!1},d(o){Pe(e,o)}}}function l1(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{light:o}=e,{position:a=void 0}=e,{scale:l=void 0}=e,{rotation:c=void 0}=e,{lookAt:u=void 0}=e,{viewportAware:f=!1}=e,{inViewport:d=!1}=e,{castShadow:m=void 0}=e,{receiveShadow:g=void 0}=e,{frustumCulled:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:w=void 0}=e,{dispose:y=void 0}=e,{color:b=void 0}=e,{intensity:x=void 0}=e;const{invalidate:M}=An(),{linear:P}=vo();Fe(i,P,k=>t(17,n=k));function v(k){d=k,t(1,d)}function E(k){ct.call(this,i,k)}function S(k){ct.call(this,i,k)}return i.$$set=k=>{"light"in k&&t(0,o=k.light),"position"in k&&t(2,a=k.position),"scale"in k&&t(3,l=k.scale),"rotation"in k&&t(4,c=k.rotation),"lookAt"in k&&t(5,u=k.lookAt),"viewportAware"in k&&t(6,f=k.viewportAware),"inViewport"in k&&t(1,d=k.inViewport),"castShadow"in k&&t(7,m=k.castShadow),"receiveShadow"in k&&t(8,g=k.receiveShadow),"frustumCulled"in k&&t(9,h=k.frustumCulled),"renderOrder"in k&&t(10,p=k.renderOrder),"visible"in k&&t(11,_=k.visible),"userData"in k&&t(12,w=k.userData),"dispose"in k&&t(13,y=k.dispose),"color"in k&&t(15,b=k.color),"intensity"in k&&t(16,x=k.intensity),"$$scope"in k&&t(22,s=k.$$scope)},i.$$.update=()=>{i.$$.dirty&229376&&(x!==void 0&&t(0,o.intensity=x,o),b!==void 0&&t(0,o.color=s1(b,n),o),M("LightInstance: props changed"))},[o,d,a,l,c,u,f,m,g,h,p,_,w,y,P,b,x,n,r,v,E,S,s]}class Qf extends Ze{constructor(e){super(),Ye(this,e,l1,a1,He,{light:0,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:1,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,color:15,intensity:16})}}function c1(i){let e;const t=i[16].default,n=dt(t,i,i[20],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&1048576)&&pt(n,t,r,r[20],e?ht(t,r[20],s,null):mt(r[20]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function u1(i){let e,t,n;function r(o){i[17](o)}let s={light:i[15],lookAt:i[4],position:i[1],scale:i[2],rotation:i[3],castShadow:i[5],receiveShadow:i[6],frustumCulled:i[7],renderOrder:i[8],visible:i[9],userData:i[10],dispose:i[11],viewportAware:i[12],color:i[13],intensity:i[14],$$slots:{default:[c1]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new Qf({props:s}),Mt.push(()=>Zt(e,"inViewport",r)),e.$on("viewportenter",i[18]),e.$on("viewportleave",i[19]),{c(){Re(e.$$.fragment)},m(o,a){De(e,o,a),n=!0},p(o,[a]){const l={};a&16&&(l.lookAt=o[4]),a&2&&(l.position=o[1]),a&4&&(l.scale=o[2]),a&8&&(l.rotation=o[3]),a&32&&(l.castShadow=o[5]),a&64&&(l.receiveShadow=o[6]),a&128&&(l.frustumCulled=o[7]),a&256&&(l.renderOrder=o[8]),a&512&&(l.visible=o[9]),a&1024&&(l.userData=o[10]),a&2048&&(l.dispose=o[11]),a&4096&&(l.viewportAware=o[12]),a&8192&&(l.color=o[13]),a&16384&&(l.intensity=o[14]),a&1048576&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Yt(()=>t=!1)),e.$set(l)},i(o){n||(W(e.$$.fragment,o),n=!0)},o(o){K(e.$$.fragment,o),n=!1},d(o){Pe(e,o)}}}function f1(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{castShadow:c=void 0}=e,{receiveShadow:u=void 0}=e,{frustumCulled:f=void 0}=e,{renderOrder:d=void 0}=e,{visible:m=void 0}=e,{userData:g=void 0}=e,{dispose:h=void 0}=e,{viewportAware:p=!1}=e,{inViewport:_=!1}=e,{color:w=void 0}=e,{intensity:y=void 0}=e;const b=new tv(w,y);function x(v){_=v,t(0,_)}function M(v){ct.call(this,i,v)}function P(v){ct.call(this,i,v)}return i.$$set=v=>{"position"in v&&t(1,s=v.position),"scale"in v&&t(2,o=v.scale),"rotation"in v&&t(3,a=v.rotation),"lookAt"in v&&t(4,l=v.lookAt),"castShadow"in v&&t(5,c=v.castShadow),"receiveShadow"in v&&t(6,u=v.receiveShadow),"frustumCulled"in v&&t(7,f=v.frustumCulled),"renderOrder"in v&&t(8,d=v.renderOrder),"visible"in v&&t(9,m=v.visible),"userData"in v&&t(10,g=v.userData),"dispose"in v&&t(11,h=v.dispose),"viewportAware"in v&&t(12,p=v.viewportAware),"inViewport"in v&&t(0,_=v.inViewport),"color"in v&&t(13,w=v.color),"intensity"in v&&t(14,y=v.intensity),"$$scope"in v&&t(20,r=v.$$scope)},[_,s,o,a,l,c,u,f,d,m,g,h,p,w,y,b,n,x,M,P,r]}class d1 extends Ze{constructor(e){super(),Ye(this,e,f1,u1,He,{position:1,scale:2,rotation:3,lookAt:4,castShadow:5,receiveShadow:6,frustumCulled:7,renderOrder:8,visible:9,userData:10,dispose:11,viewportAware:12,inViewport:0,color:13,intensity:14,light:15})}get light(){return this.$$.ctx[15]}}function Xc(i){let e,t,n,r,s,o;return e=new _o({props:{object:i[16]}}),n=new bo({props:{object:i[16],position:i[15]}}),s=new ts({props:{dispose:i[10],object:i[15]}}),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment),r=ke(),Re(s.$$.fragment)},m(a,l){De(e,a,l),ge(a,t,l),De(n,a,l),ge(a,r,l),De(s,a,l),o=!0},p(a,l){const c={};l&32768&&(c.position=a[15]),n.$set(c);const u={};l&1024&&(u.dispose=a[10]),l&32768&&(u.object=a[15]),s.$set(u)},i(a){o||(W(e.$$.fragment,a),W(n.$$.fragment,a),W(s.$$.fragment,a),o=!0)},o(a){K(e.$$.fragment,a),K(n.$$.fragment,a),K(s.$$.fragment,a),o=!1},d(a){Pe(e,a),a&&fe(t),Pe(n,a),a&&fe(r),Pe(s,a)}}}function h1(i){let e;const t=i[18].default,n=dt(t,i,i[22],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&4194304)&&pt(n,t,r,r[22],e?ht(t,r[22],s,null):mt(r[22]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function p1(i){let e,t,n,r,s=i[15]&&!(i[15]instanceof gt)&&Xc(i);function o(l){i[19](l)}let a={light:i[1],position:i[2],scale:i[3],rotation:i[4],castShadow:!!i[14],receiveShadow:i[5],frustumCulled:i[6],renderOrder:i[7],visible:i[8],userData:i[9],dispose:i[10],viewportAware:i[11],color:i[12],intensity:i[13],$$slots:{default:[h1]},$$scope:{ctx:i}};return i[0]!==void 0&&(a.inViewport=i[0]),t=new Qf({props:a}),Mt.push(()=>Zt(t,"inViewport",o)),t.$on("viewportenter",i[20]),t.$on("viewportleave",i[21]),{c(){s&&s.c(),e=ke(),Re(t.$$.fragment)},m(l,c){s&&s.m(l,c),ge(l,e,c),De(t,l,c),r=!0},p(l,[c]){l[15]&&!(l[15]instanceof gt)?s?(s.p(l,c),c&32768&&W(s,1)):(s=Xc(l),s.c(),W(s,1),s.m(e.parentNode,e)):s&&(St(),K(s,1,1,()=>{s=null}),Et());const u={};c&2&&(u.light=l[1]),c&4&&(u.position=l[2]),c&8&&(u.scale=l[3]),c&16&&(u.rotation=l[4]),c&16384&&(u.castShadow=!!l[14]),c&32&&(u.receiveShadow=l[5]),c&64&&(u.frustumCulled=l[6]),c&128&&(u.renderOrder=l[7]),c&256&&(u.visible=l[8]),c&512&&(u.userData=l[9]),c&1024&&(u.dispose=l[10]),c&2048&&(u.viewportAware=l[11]),c&4096&&(u.color=l[12]),c&8192&&(u.intensity=l[13]),c&4194304&&(u.$$scope={dirty:c,ctx:l}),!n&&c&1&&(n=!0,u.inViewport=l[0],Yt(()=>n=!1)),t.$set(u)},i(l){r||(W(s),W(t.$$.fragment,l),r=!0)},o(l){K(s),K(t.$$.fragment,l),r=!1},d(l){s&&s.d(l),l&&fe(e),Pe(t,l)}}}function m1(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{receiveShadow:c=void 0}=e,{frustumCulled:u=void 0}=e,{renderOrder:f=void 0}=e,{visible:d=void 0}=e,{userData:m=void 0}=e,{dispose:g=void 0}=e,{viewportAware:h=!1}=e,{inViewport:p=!1}=e,{color:_=void 0}=e,{intensity:w=void 0}=e,{shadow:y=void 0}=e,{target:b=void 0}=e;const x=new ev(_,w),{invalidate:M}=An(),P=x.target,{start:v,stop:E,started:S}=Xi(()=>{},{autostart:!1,debugFrameloopMessage:"DirectionalLight: tracking target"});Fe(i,S,R=>t(23,n=R));const k=R=>{R&&R instanceof gt&&!n?(t(1,x.target=R,x),v(),M("DirectionalLight: target changed")):(!R||!(R instanceof gt))&&n&&(t(1,x.target=P,x),E(),M("DirectionalLight: target changed"))},F=R=>{if(R){const{mapSize:Y=[512,512],camera:{left:Z=-5,bottom:H=-5,right:B=5,top:j=5,near:ne=.5,far:se=500}={},bias:_e=0,radius:Me=1}=R===!0?{}:R;x.shadow.mapSize.set(Y[0],Y[1]),t(1,x.shadow.camera.left=Z,x),t(1,x.shadow.camera.top=j,x),t(1,x.shadow.camera.right=B,x),t(1,x.shadow.camera.bottom=H,x),t(1,x.shadow.camera.near=ne,x),t(1,x.shadow.camera.far=se,x),t(1,x.shadow.bias=_e,x),t(1,x.shadow.radius=Me,x)}M("DirectionalLight: shadow changed")};function L(R){p=R,t(0,p)}function O(R){ct.call(this,i,R)}function I(R){ct.call(this,i,R)}return i.$$set=R=>{"position"in R&&t(2,o=R.position),"scale"in R&&t(3,a=R.scale),"rotation"in R&&t(4,l=R.rotation),"receiveShadow"in R&&t(5,c=R.receiveShadow),"frustumCulled"in R&&t(6,u=R.frustumCulled),"renderOrder"in R&&t(7,f=R.renderOrder),"visible"in R&&t(8,d=R.visible),"userData"in R&&t(9,m=R.userData),"dispose"in R&&t(10,g=R.dispose),"viewportAware"in R&&t(11,h=R.viewportAware),"inViewport"in R&&t(0,p=R.inViewport),"color"in R&&t(12,_=R.color),"intensity"in R&&t(13,w=R.intensity),"shadow"in R&&t(14,y=R.shadow),"target"in R&&t(15,b=R.target),"$$scope"in R&&t(22,s=R.$$scope)},i.$$.update=()=>{i.$$.dirty&32768&&k(b),i.$$.dirty&16384&&F(y)},[p,x,o,a,l,c,u,f,d,m,g,h,_,w,y,b,P,S,r,L,O,I,s]}class g1 extends Ze{constructor(e){super(),Ye(this,e,m1,p1,He,{position:2,scale:3,rotation:4,receiveShadow:5,frustumCulled:6,renderOrder:7,visible:8,userData:9,dispose:10,viewportAware:11,inViewport:0,color:12,intensity:13,shadow:14,target:15,light:1})}get light(){return this.$$.ctx[1]}}function _1(i,e,t){let{object:n}=e,r=n,{interactive:s=!1}=e,{ignorePointer:o=!1}=e;const a=Wi(),{addInteractiveObject:l,removeInteractiveObject:c,addRaycastableObject:u,removeRaycastableObject:f}=vo(),{invalidate:d}=An(),m=h=>{f(h),c(h),delete xn(h).eventDispatcher},g=(h,p,_)=>{xn(h).eventDispatcher=a,p?(f(h),c(h)):(u(h),_?l(h):c(h))};return It(()=>{m(n),d("InteractiveObject: object removed")}),i.$$set=h=>{"object"in h&&t(0,n=h.object),"interactive"in h&&t(1,s=h.interactive),"ignorePointer"in h&&t(2,o=h.ignorePointer)},i.$$.update=()=>{i.$$.dirty&15&&(n!==r?(m(r),g(n,o,s),d("InteractiveObject: object changed"),t(3,r=n)):n===r&&(g(n,o,s),d("InteractiveObject: props changed")))},[n,s,o,r]}class v1 extends Ze{constructor(e){super(),Ye(this,e,_1,null,He,{object:0,interactive:1,ignorePointer:2})}}function b1(i){let e;const t=i[16].default,n=dt(t,i,i[27],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&134217728)&&pt(n,t,r,r[27],e?ht(t,r[27],s,null):mt(r[27]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function w1(i){let e,t,n,r,s;function o(l){i[17](l)}let a={object:i[1],lookAt:i[5],position:i[2],scale:i[3],rotation:i[4],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],visible:i[11],userData:i[12],dispose:i[13],viewportAware:i[6],$$slots:{default:[b1]},$$scope:{ctx:i}};return i[0]!==void 0&&(a.inViewport=i[0]),e=new fs({props:a}),Mt.push(()=>Zt(e,"inViewport",o)),e.$on("viewportenter",i[18]),e.$on("viewportleave",i[19]),r=new v1({props:{object:i[1],interactive:i[14],ignorePointer:i[15]}}),r.$on("click",i[20]),r.$on("contextmenu",i[21]),r.$on("pointerup",i[22]),r.$on("pointerdown",i[23]),r.$on("pointerenter",i[24]),r.$on("pointerleave",i[25]),r.$on("pointermove",i[26]),{c(){Re(e.$$.fragment),n=ke(),Re(r.$$.fragment)},m(l,c){De(e,l,c),ge(l,n,c),De(r,l,c),s=!0},p(l,[c]){const u={};c&2&&(u.object=l[1]),c&32&&(u.lookAt=l[5]),c&4&&(u.position=l[2]),c&8&&(u.scale=l[3]),c&16&&(u.rotation=l[4]),c&128&&(u.castShadow=l[7]),c&256&&(u.receiveShadow=l[8]),c&512&&(u.frustumCulled=l[9]),c&1024&&(u.renderOrder=l[10]),c&2048&&(u.visible=l[11]),c&4096&&(u.userData=l[12]),c&8192&&(u.dispose=l[13]),c&64&&(u.viewportAware=l[6]),c&134217728&&(u.$$scope={dirty:c,ctx:l}),!t&&c&1&&(t=!0,u.inViewport=l[0],Yt(()=>t=!1)),e.$set(u);const f={};c&2&&(f.object=l[1]),c&16384&&(f.interactive=l[14]),c&32768&&(f.ignorePointer=l[15]),r.$set(f)},i(l){s||(W(e.$$.fragment,l),W(r.$$.fragment,l),s=!0)},o(l){K(e.$$.fragment,l),K(r.$$.fragment,l),s=!1},d(l){Pe(e,l),l&&fe(n),Pe(r,l)}}}function y1(i,e,t){let{$$slots:n={},$$scope:r}=e,{mesh:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{viewportAware:u=!1}=e,{inViewport:f=!1}=e,{castShadow:d=void 0}=e,{receiveShadow:m=void 0}=e,{frustumCulled:g=void 0}=e,{renderOrder:h=void 0}=e,{visible:p=void 0}=e,{userData:_=void 0}=e,{dispose:w=void 0}=e,{interactive:y=!1}=e,{ignorePointer:b=!1}=e;function x(I){f=I,t(0,f)}function M(I){ct.call(this,i,I)}function P(I){ct.call(this,i,I)}function v(I){ct.call(this,i,I)}function E(I){ct.call(this,i,I)}function S(I){ct.call(this,i,I)}function k(I){ct.call(this,i,I)}function F(I){ct.call(this,i,I)}function L(I){ct.call(this,i,I)}function O(I){ct.call(this,i,I)}return i.$$set=I=>{"mesh"in I&&t(1,s=I.mesh),"position"in I&&t(2,o=I.position),"scale"in I&&t(3,a=I.scale),"rotation"in I&&t(4,l=I.rotation),"lookAt"in I&&t(5,c=I.lookAt),"viewportAware"in I&&t(6,u=I.viewportAware),"inViewport"in I&&t(0,f=I.inViewport),"castShadow"in I&&t(7,d=I.castShadow),"receiveShadow"in I&&t(8,m=I.receiveShadow),"frustumCulled"in I&&t(9,g=I.frustumCulled),"renderOrder"in I&&t(10,h=I.renderOrder),"visible"in I&&t(11,p=I.visible),"userData"in I&&t(12,_=I.userData),"dispose"in I&&t(13,w=I.dispose),"interactive"in I&&t(14,y=I.interactive),"ignorePointer"in I&&t(15,b=I.ignorePointer),"$$scope"in I&&t(27,r=I.$$scope)},[f,s,o,a,l,c,u,d,m,g,h,p,_,w,y,b,n,x,M,P,v,E,S,k,F,L,O,r]}class ns extends Ze{constructor(e){super(),Ye(this,e,y1,w1,He,{mesh:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,interactive:14,ignorePointer:15})}}const x1=(i,e)=>{let t=i;return{onChange:(r,s)=>{(e&&!e(r,t)||!e&&r!==t)&&(s(r,t),t=r)}}};function Yc(i){let e,t,n;function r(o){i[24](o)}let s={mesh:i[17],castShadow:i[5],receiveShadow:i[6],frustumCulled:void 0,renderOrder:i[7],visible:i[8],userData:i[9],dispose:i[10],interactive:i[11],ignorePointer:i[12],viewportAware:i[4]};return i[0]!==void 0&&(s.inViewport=i[0]),e=new ns({props:s}),Mt.push(()=>Zt(e,"inViewport",r)),e.$on("click",i[20]),e.$on("contextmenu",i[20]),e.$on("pointerup",i[20]),e.$on("pointerdown",i[20]),e.$on("pointerenter",i[20]),e.$on("pointerleave",i[20]),e.$on("pointermove",i[20]),e.$on("viewportenter",i[25]),e.$on("viewportleave",i[26]),{c(){Re(e.$$.fragment)},m(o,a){De(e,o,a),n=!0},p(o,a){const l={};a[0]&131072&&(l.mesh=o[17]),a[0]&32&&(l.castShadow=o[5]),a[0]&64&&(l.receiveShadow=o[6]),a[0]&128&&(l.renderOrder=o[7]),a[0]&256&&(l.visible=o[8]),a[0]&512&&(l.userData=o[9]),a[0]&1024&&(l.dispose=o[10]),a[0]&2048&&(l.interactive=o[11]),a[0]&4096&&(l.ignorePointer=o[12]),a[0]&16&&(l.viewportAware=o[4]),!t&&a[0]&1&&(t=!0,l.inViewport=o[0],Yt(()=>t=!1)),e.$set(l)},i(o){n||(W(e.$$.fragment,o),n=!0)},o(o){K(e.$$.fragment,o),n=!1},d(o){Pe(e,o)}}}function M1(i){let e=i[17].uuid,t,n,r=Yc(i);const s=i[23].default,o=dt(s,i,i[27],null);return{c(){r.c(),t=ke(),o&&o.c()},m(a,l){r.m(a,l),ge(a,t,l),o&&o.m(a,l),n=!0},p(a,l){l[0]&131072&&He(e,e=a[17].uuid)?(St(),K(r,1,1,Qe),Et(),r=Yc(a),r.c(),W(r,1),r.m(t.parentNode,t)):r.p(a,l),o&&o.p&&(!n||l[0]&134217728)&&pt(o,s,a,a[27],n?ht(s,a[27],l,null):mt(a[27]),null)},i(a){n||(W(r),W(o,a),n=!0)},o(a){K(r),K(o,a),n=!1},d(a){r.d(a),a&&fe(t),o&&o.d(a)}}}function S1(i){let e,t,n,r,s,o;return e=new ts({props:{dispose:i[10],object:i[14]}}),n=new ts({props:{dispose:i[10],object:i[15]}}),s=new fs({props:{object:i[18],position:i[1],scale:i[2],rotation:i[3],lookAt:i[13],$$slots:{default:[M1]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment),r=ke(),Re(s.$$.fragment)},m(a,l){De(e,a,l),ge(a,t,l),De(n,a,l),ge(a,r,l),De(s,a,l),o=!0},p(a,l){const c={};l[0]&1024&&(c.dispose=a[10]),l[0]&16384&&(c.object=a[14]),e.$set(c);const u={};l[0]&1024&&(u.dispose=a[10]),l[0]&32768&&(u.object=a[15]),n.$set(u);const f={};l[0]&2&&(f.position=a[1]),l[0]&4&&(f.scale=a[2]),l[0]&8&&(f.rotation=a[3]),l[0]&8192&&(f.lookAt=a[13]),l[0]&134356977&&(f.$$scope={dirty:l,ctx:a}),s.$set(f)},i(a){o||(W(e.$$.fragment,a),W(n.$$.fragment,a),W(s.$$.fragment,a),o=!0)},o(a){K(e.$$.fragment,a),K(n.$$.fragment,a),K(s.$$.fragment,a),o=!1},d(a){Pe(e,a),a&&fe(t),Pe(n,a),a&&fe(r),Pe(s,a)}}}const $f=new gt;$f.scale.set(0,0,0);const Zc={matrix:$f.matrix,color:null},E1=new wt().fromArray(new Array(16).fill(0)),ca=new Xe(16777215),ed="threlte-instanced-mesh-context",A1=i=>Bn(ed+i);function T1(i,e,t){let n,r=Qe,s=()=>(r(),r=oo(L,Q=>t(17,n=Q)),L),o;i.$$.on_destroy.push(()=>r());let{$$slots:a={},$$scope:l}=e,{position:c=void 0}=e,{scale:u=void 0}=e,{rotation:f=void 0}=e,{viewportAware:d=!1}=e,{inViewport:m=!1}=e,{castShadow:g=void 0}=e,{receiveShadow:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:w=void 0}=e,{dispose:y=void 0}=e,{interactive:b=!1}=e,{ignorePointer:x=!1}=e,{lookAt:M=void 0}=e,{geometry:P}=e,{material:v}=e,{count:E=void 0}=e,{id:S=""}=e;const{onChange:k}=x1(v),F=Q=>Q===void 0,L=ot(new mr(P,v,F(E)?0:E));s();const O=new gt,I=[],{invalidate:R}=An(),Y=(Q,le)=>{const We=I.findIndex(ze=>ze===Q);if(We===-1){console.warn("Instanced Mesh: Instance not found");return}le(We)},{start:Z,stop:H,started:B}=Xi(()=>{n.dispose(),Qt(L,n=new mr(P,v,I.length),n),I.forEach((Q,le)=>{Me(Q,le),Q.color?n.setColorAt(le,Q.color):n.setColorAt(le,ca)}),Qt(L,n.instanceMatrix.needsUpdate=!0,n),n.instanceColor&&Qt(L,n.instanceColor.needsUpdate=!0,n),H()},{autostart:!1,debugFrameloopMessage:"Instanced Mesh: auto instance count change queued"});Fe(i,B,Q=>t(29,o=Q));const j=Q=>{if(F(E))I.push(Q),o||Z();else{const le=I.findIndex(We=>We===Zc);le!==-1?I[le]=Q:I.push(Q),I.length>E&&console.warn("Instanced Mesh: More instances requested than allocated, increase count on <")}se(Q),R("Instanced Mesh: Instance added")},ne=Q=>{if(F(E)){const le=I.findIndex(We=>We===Q);I.splice(le,1),o||Z()}else{_e(Q);const le=I.findIndex(We=>We===Q);le>=E?I.splice(le,1):I.splice(le,1,Zc)}R("Instanced Mesh: Instance removed")},se=Q=>{Q.color||Y(Q,le=>{n.setColorAt(le,ca),n.instanceColor&&Qt(L,n.instanceColor.needsUpdate=!0,n)})},_e=Q=>{Y(Q,le=>{n.setMatrixAt(le,E1),Qt(L,n.instanceMatrix.needsUpdate=!0,n),R("Instanced Mesh: instance matrix resetted")})},Me=(Q,le)=>{n.setMatrixAt(le,Q.matrix),Qt(L,n.instanceMatrix.needsUpdate=!0,n),R("Instanced Mesh: instance matrix set")},V=Q=>{Y(Q,le=>{Me(Q,le)})},ue=Q=>{Y(Q,le=>{var We;n.setColorAt(le,(We=Q.color)!=null?We:ca),n.instanceColor&&Qt(L,n.instanceColor.needsUpdate=!0,n),R("Instanced Mesh: instance color set")})};In(ed+S,{registerInstance:j,removeInstance:ne,setInstanceMatrix:V,setInstanceColor:ue,parentObject:O});const Te=Q=>{if(Q.detail.instanceId===void 0)return;const le=I[Q.detail.instanceId];le&&le.pointerEventDispatcher&&le.pointerEventDispatcher(Q.type,Q.detail)};function ce(Q){m=Q,t(0,m)}function ve(Q){ct.call(this,i,Q)}function qe(Q){ct.call(this,i,Q)}return i.$$set=Q=>{"position"in Q&&t(1,c=Q.position),"scale"in Q&&t(2,u=Q.scale),"rotation"in Q&&t(3,f=Q.rotation),"viewportAware"in Q&&t(4,d=Q.viewportAware),"inViewport"in Q&&t(0,m=Q.inViewport),"castShadow"in Q&&t(5,g=Q.castShadow),"receiveShadow"in Q&&t(6,h=Q.receiveShadow),"renderOrder"in Q&&t(7,p=Q.renderOrder),"visible"in Q&&t(8,_=Q.visible),"userData"in Q&&t(9,w=Q.userData),"dispose"in Q&&t(10,y=Q.dispose),"interactive"in Q&&t(11,b=Q.interactive),"ignorePointer"in Q&&t(12,x=Q.ignorePointer),"lookAt"in Q&&t(13,M=Q.lookAt),"geometry"in Q&&t(14,P=Q.geometry),"material"in Q&&t(15,v=Q.material),"count"in Q&&t(21,E=Q.count),"id"in Q&&t(22,S=Q.id),"$$scope"in Q&&t(27,l=Q.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&32768&&k(v,Q=>{Qt(L,n.material=Q,n)})},[m,c,u,f,d,g,h,p,_,w,y,b,x,M,P,v,L,n,O,B,Te,E,S,a,ce,ve,qe,l]}class td extends Ze{constructor(e){super(),Ye(this,e,T1,S1,He,{position:1,scale:2,rotation:3,viewportAware:4,inViewport:0,castShadow:5,receiveShadow:6,renderOrder:7,visible:8,userData:9,dispose:10,interactive:11,ignorePointer:12,lookAt:13,geometry:14,material:15,count:21,id:22,instancedMesh:16},null,[-1,-1])}get instancedMesh(){return this.$$.ctx[16]}}function C1(i){let e;const t=i[8].default,n=dt(t,i,i[9],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&512)&&pt(n,t,r,r[9],e?ht(t,r[9],s,null):mt(r[9]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function L1(i){let e,t,n,r;return e=new _o({props:{object:i[4],$$slots:{default:[C1]},$$scope:{ctx:i}}}),n=new bo({props:{object:i[4],position:i[0],scale:i[1],rotation:i[2],lookAt:i[3]}}),n.$on("transform",i[5]),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment)},m(s,o){De(e,s,o),ge(s,t,o),De(n,s,o),r=!0},p(s,[o]){const a={};o&512&&(a.$$scope={dirty:o,ctx:s}),e.$set(a);const l={};o&1&&(l.position=s[0]),o&2&&(l.scale=s[1]),o&4&&(l.rotation=s[2]),o&8&&(l.lookAt=s[3]),n.$set(l)},i(s){r||(W(e.$$.fragment,s),W(n.$$.fragment,s),r=!0)},o(s){K(e.$$.fragment,s),K(n.$$.fragment,s),r=!1},d(s){Pe(e,s),s&&fe(t),Pe(n,s)}}}function D1(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{color:c=void 0}=e,{id:u=""}=e;const{registerInstance:f,setInstanceMatrix:d,removeInstance:m,setInstanceColor:g,parentObject:h}=A1(u),p=new gt,_=new wt,w=Wi(),y=()=>{var F;return h.uuid===((F=p.parent)==null?void 0:F.uuid)},b=F=>F!==void 0?F instanceof Xe?F:new Xe(F):null,x={color:b(c),matrix:p.matrix,pointerEventDispatcher:w},M=F=>{x.color=b(F),g(x)},P=()=>{let F=p.parent;const L=[];for(;F&&h&&F.uuid!==h.uuid&&(L.push(F),!!F.parent);)F=F.parent;p.updateMatrix(),_.copy(p.matrix),L.forEach(O=>{O.updateMatrix(),_.premultiply(O.matrix)}),x.matrix=_},v=()=>{p.updateMatrix(),x.matrix=p.matrix},E=()=>{v(),d(x)},{start:S}=Xi(()=>{P(),d(x)},{autostart:!1,debugFrameloopMessage:"Instance: tracking non-direct child instance"});f(x),ss(()=>{y()?E():S(),M(c)});const k=()=>{y()&&E()};return It(()=>{m(x)}),i.$$set=F=>{"position"in F&&t(0,s=F.position),"scale"in F&&t(1,o=F.scale),"rotation"in F&&t(2,a=F.rotation),"lookAt"in F&&t(3,l=F.lookAt),"color"in F&&t(6,c=F.color),"id"in F&&t(7,u=F.id),"$$scope"in F&&t(9,r=F.$$scope)},i.$$.update=()=>{i.$$.dirty&64&&M(c)},[s,o,a,l,p,k,c,u,n,r]}class P1 extends Ze{constructor(e){super(),Ye(this,e,D1,L1,He,{position:0,scale:1,rotation:2,lookAt:3,color:6,id:7})}}function R1(i){let e;const t=i[14].default,n=dt(t,i,i[18],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&262144)&&pt(n,t,r,r[18],e?ht(t,r[18],s,null):mt(r[18]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function I1(i){let e,t,n;function r(o){i[15](o)}let s={object:i[13],position:i[1],scale:i[2],rotation:i[3],lookAt:i[4],frustumCulled:i[8],renderOrder:i[9],visible:i[10],userData:i[11],dispose:i[12],castShadow:i[6],receiveShadow:i[7],viewportAware:i[5],$$slots:{default:[R1]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new fs({props:s}),Mt.push(()=>Zt(e,"inViewport",r)),e.$on("viewportenter",i[16]),e.$on("viewportleave",i[17]),{c(){Re(e.$$.fragment)},m(o,a){De(e,o,a),n=!0},p(o,[a]){const l={};a&2&&(l.position=o[1]),a&4&&(l.scale=o[2]),a&8&&(l.rotation=o[3]),a&16&&(l.lookAt=o[4]),a&256&&(l.frustumCulled=o[8]),a&512&&(l.renderOrder=o[9]),a&1024&&(l.visible=o[10]),a&2048&&(l.userData=o[11]),a&4096&&(l.dispose=o[12]),a&64&&(l.castShadow=o[6]),a&128&&(l.receiveShadow=o[7]),a&32&&(l.viewportAware=o[5]),a&262144&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Yt(()=>t=!1)),e.$set(l)},i(o){n||(W(e.$$.fragment,o),n=!0)},o(o){K(e.$$.fragment,o),n=!1},d(o){Pe(e,o)}}}function O1(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{viewportAware:c=!1}=e,{inViewport:u=!1}=e,{castShadow:f=void 0}=e,{receiveShadow:d=void 0}=e,{frustumCulled:m=void 0}=e,{renderOrder:g=void 0}=e,{visible:h=void 0}=e,{userData:p=void 0}=e,{dispose:_=void 0}=e;const w=new Xr;function y(M){u=M,t(0,u)}function b(M){ct.call(this,i,M)}function x(M){ct.call(this,i,M)}return i.$$set=M=>{"position"in M&&t(1,s=M.position),"scale"in M&&t(2,o=M.scale),"rotation"in M&&t(3,a=M.rotation),"lookAt"in M&&t(4,l=M.lookAt),"viewportAware"in M&&t(5,c=M.viewportAware),"inViewport"in M&&t(0,u=M.inViewport),"castShadow"in M&&t(6,f=M.castShadow),"receiveShadow"in M&&t(7,d=M.receiveShadow),"frustumCulled"in M&&t(8,m=M.frustumCulled),"renderOrder"in M&&t(9,g=M.renderOrder),"visible"in M&&t(10,h=M.visible),"userData"in M&&t(11,p=M.userData),"dispose"in M&&t(12,_=M.dispose),"$$scope"in M&&t(18,r=M.$$scope)},[u,s,o,a,l,c,f,d,m,g,h,p,_,w,n,y,b,x,r]}class k1 extends Ze{constructor(e){super(),Ye(this,e,O1,I1,He,{position:1,scale:2,rotation:3,lookAt:4,viewportAware:5,inViewport:0,castShadow:6,receiveShadow:7,frustumCulled:8,renderOrder:9,visible:10,userData:11,dispose:12,group:13})}get group(){return this.$$.ctx[13]}}e1(Cc,()=>new Cc);function Kc(i){return-.5*(Math.cos(Math.PI*i)-1)}function Jc(i){return Object.prototype.toString.call(i)==="[object Date]"}function Ta(i,e){if(i===e||i!==i)return()=>i;const t=typeof i;if(t!==typeof e||Array.isArray(i)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(i)){const n=e.map((r,s)=>Ta(i[s],r));return r=>n.map(s=>s(r))}if(t==="object"){if(!i||!e)throw new Error("Object cannot be null");if(Jc(i)&&Jc(e)){i=i.getTime(),e=e.getTime();const s=e-i;return o=>new Date(i+o*s)}const n=Object.keys(e),r={};return n.forEach(s=>{r[s]=Ta(i[s],e[s])}),s=>{const o={};return n.forEach(a=>{o[a]=r[a](s)}),o}}if(t==="number"){const n=e-i;return r=>i+r*n}throw new Error(`Cannot interpolate ${t} values`)}function Qc(i,e={}){const t=ot(i);let n,r=i;function s(o,a){if(i==null)return t.set(i=o),Promise.resolve();r=o;let l=n,c=!1,{delay:u=0,duration:f=400,easing:d=Oa,interpolate:m=Ta}=$t($t({},e),a);if(f===0)return l&&(l.abort(),l=null),t.set(i=r),Promise.resolve();const g=cf()+u;let h;return n=ff(p=>{if(p<g)return!0;c||(h=m(i,o),typeof f=="function"&&(f=f(i,o)),c=!0),l&&(l.abort(),l=null);const _=p-g;return _>f?(t.set(i=o),!1):(t.set(i=h(d(_/f))),!0)}),n.promise}return{set:s,update:(o,a)=>s(o(r,i),a),subscribe:t.subscribe}}function $c(i,{delay:e=0,duration:t=400,easing:n=Oa}={}){const r=+getComputedStyle(i).opacity;return{delay:e,duration:t,easing:n,css:s=>`opacity: ${s*r}`}}const N1=()=>{const i=Hi();return{hasEventListeners:t=>{const n=i.$$.callbacks;return t in n&&n[t].length>0}}},ds=new G,Za=new G,F1=new G,z1=(i,e,t)=>{const n=ds.setFromMatrixPosition(i.matrixWorld);n.project(e);const r=t.width/2,s=t.height/2;return[n.x*r+r,-(n.y*s)+s]},U1=(i,e)=>{const t=ds.setFromMatrixPosition(i.matrixWorld),n=Za.setFromMatrixPosition(e.matrixWorld),r=t.sub(n),s=e.getWorldDirection(F1);return r.angleTo(s)>Math.PI/2},G1=(i,e,t,n)=>{const r=ds.setFromMatrixPosition(i.matrixWorld),s=r.clone();s.project(e),t.setFromCamera(s,e);const o=t.intersectObjects(n,!0);if(o.length){const a=o[0].distance;return r.distanceTo(t.ray.origin)<a}return!0},B1=(i,e)=>{if(e instanceof qi)return e.zoom;if(e instanceof qt){const t=ds.setFromMatrixPosition(i.matrixWorld),n=Za.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(n),o=2*Math.tan(r/2)*s;return 1/o}else return 1},V1=(i,e,t)=>{if(e instanceof qt||e instanceof qi){const n=ds.setFromMatrixPosition(i.matrixWorld),r=Za.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*s+a)}},Ca=i=>Math.abs(i)<1e-10?0:i,nd=(i,e,t="")=>{let n="matrix3d(";for(let r=0;r!==16;r++)n+=Ca(e[r]*i.elements[r])+(r!==15?",":")");return t+n},H1=(i=>e=>nd(e,i))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),W1=(i=>(e,t)=>nd(e,i(t),"translate(-50%,-50%)"))(i=>[1/i,1/i,1/i,1,-1/i,-1/i,-1/i,-1,1/i,1/i,1/i,1,1,1,1,1]),j1=i=>i.split(/(?=[A-Z])/).join("-").toLowerCase(),zn=i=>Object.entries(i).filter(([e,t])=>!!t).map(([e,t])=>`${j1(e)}: ${t}`).join("; "),mn=(i,e)=>{i.update(t=>({...t,...e}))},q1=i=>({}),eu=i=>({});function X1(i){let e;const t=i[44].threlte,n=dt(t,i,i[53],eu);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&pt(n,t,r,r[53],e?ht(t,r[53],s,q1):mt(r[53]),eu)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function Y1(i){let e=i[8],t,n,r=i[8]&&ua(i);return{c(){r&&r.c(),t=Kt()},m(s,o){r&&r.m(s,o),ge(s,t,o),n=!0},p(s,o){s[8]?e?He(e,s[8])?(r.d(1),r=ua(s),r.c(),r.m(t.parentNode,t)):r.p(s,o):(r=ua(s),r.c(),r.m(t.parentNode,t)):e&&(r.d(1),r=null),e=s[8]},i(s){n||(W(r),n=!0)},o(s){K(r),n=!1},d(s){s&&fe(t),r&&r.d(s)}}}function Z1(i){let e=i[8],t,n,r=i[8]&&fa(i);return{c(){r&&r.c(),t=Kt()},m(s,o){r&&r.m(s,o),ge(s,t,o),n=!0},p(s,o){s[8]?e?He(e,s[8])?(r.d(1),r=fa(s),r.c(),r.m(t.parentNode,t)):r.p(s,o):(r=fa(s),r.c(),r.m(t.parentNode,t)):e&&(r.d(1),r=null),e=s[8]},i(s){n||(W(r),n=!0)},o(s){K(r),n=!1},d(s){s&&fe(t),r&&r.d(s)}}}function tu(i){let e;const t=i[44].default,n=dt(t,i,i[53],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&pt(n,t,r,r[53],e?ht(t,r[53],s,null):mt(r[53]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function ua(i){let e,t,n,r,s,o,a,l=i[13]&&tu(i),c=[{style:r=zn(i[17])}],u={};for(let f=0;f<c.length;f+=1)u=$t(u,c[f]);return{c(){e=Ae(i[8]),t=Ae("div"),l&&l.c(),J(t,"style",n=zn(i[18])),Mr(e,u)},m(f,d){ge(f,e,d),ae(e,t),l&&l.m(t,null),i[52](e),s=!0,o||(a=[yi(i[29].call(null,e)),yi(i[28].call(null,e))],o=!0)},p(f,d){f[13]?l?(l.p(f,d),d[0]&8192&&W(l,1)):(l=tu(f),l.c(),W(l,1),l.m(t,null)):l&&(St(),K(l,1,1,()=>{l=null}),Et()),(!s||d[0]&262144&&n!==(n=zn(f[18])))&&J(t,"style",n),Mr(e,u=Dr(c,[(!s||d[0]&131072&&r!==(r=zn(f[17])))&&{style:r}]))},i(f){s||(W(l),s=!0)},o(f){K(l),s=!1},d(f){f&&fe(e),l&&l.d(),i[52](null),o=!1,Ht(a)}}}function nu(i){let e;const t=i[44].default,n=dt(t,i,i[53],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&pt(n,t,r,r[53],e?ht(t,r[53],s,null):mt(r[53]),null)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function fa(i){let e,t,n,r,s,o,a,l,c,u=i[13]&&nu(i),f=[{style:o=zn(i[14])}],d={};for(let m=0;m<f.length;m+=1)d=$t(d,f[m]);return{c(){e=Ae(i[8]),t=Ae("div"),n=Ae("div"),u&&u.c(),J(n,"style",r=zn(i[16])),J(t,"style",s=zn(i[15])),Mr(e,d)},m(m,g){ge(m,e,g),ae(e,t),ae(t,n),u&&u.m(n,null),i[49](n),i[50](t),i[51](e),a=!0,l||(c=yi(i[29].call(null,e)),l=!0)},p(m,g){m[13]?u?(u.p(m,g),g[0]&8192&&W(u,1)):(u=nu(m),u.c(),W(u,1),u.m(n,null)):u&&(St(),K(u,1,1,()=>{u=null}),Et()),(!a||g[0]&65536&&r!==(r=zn(m[16])))&&J(n,"style",r),(!a||g[0]&32768&&s!==(s=zn(m[15])))&&J(t,"style",s),Mr(e,d=Dr(f,[(!a||g[0]&16384&&o!==(o=zn(m[14])))&&{style:o}]))},i(m){a||(W(u),a=!0)},o(m){K(u),a=!1},d(m){m&&fe(e),u&&u.d(),i[49](null),i[50](null),i[51](null),l=!1,c()}}}function K1(i){let e,t,n,r,s,o,a,l;function c(h){i[45](h)}function u(h){i[46](h)}let f={position:i[1],scale:i[2],rotation:i[3],lookAt:i[4],viewportAware:i[5],dispose:i[6],$$slots:{default:[X1]},$$scope:{ctx:i}};i[9]!==void 0&&(f.group=i[9]),i[0]!==void 0&&(f.inViewport=i[0]),e=new k1({props:f}),Mt.push(()=>Zt(e,"group",c)),Mt.push(()=>Zt(e,"inViewport",u)),e.$on("viewportenter",i[47]),e.$on("viewportleave",i[48]);const d=[Z1,Y1],m=[];function g(h,p){return h[7]?0:1}return s=g(i),o=m[s]=d[s](i),{c(){Re(e.$$.fragment),r=ke(),o.c(),a=Kt()},m(h,p){De(e,h,p),ge(h,r,p),m[s].m(h,p),ge(h,a,p),l=!0},p(h,p){const _={};p[0]&2&&(_.position=h[1]),p[0]&4&&(_.scale=h[2]),p[0]&8&&(_.rotation=h[3]),p[0]&16&&(_.lookAt=h[4]),p[0]&32&&(_.viewportAware=h[5]),p[0]&64&&(_.dispose=h[6]),p[1]&4194304&&(_.$$scope={dirty:p,ctx:h}),!t&&p[0]&512&&(t=!0,_.group=h[9],Yt(()=>t=!1)),!n&&p[0]&1&&(n=!0,_.inViewport=h[0],Yt(()=>n=!1)),e.$set(_);let w=s;s=g(h),s===w?m[s].p(h,p):(St(),K(m[w],1,1,()=>{m[w]=null}),Et(),o=m[s],o?o.p(h,p):(o=m[s]=d[s](h),o.c()),W(o,1),o.m(a.parentNode,a))},i(h){l||(W(e.$$.fragment,h),W(o),l=!0)},o(h){K(e.$$.fragment,h),K(o),l=!1},d(h){Pe(e,h),h&&fe(r),m[s].d(h),h&&fe(a)}}}function J1(i,e,t){let n,r,s,o,a,l,c,u,f,{$$slots:d={},$$scope:m}=e,{position:g=void 0}=e,{scale:h=void 0}=e,{rotation:p=void 0}=e,{lookAt:_=void 0}=e,{viewportAware:w=!1}=e,{inViewport:y=!1}=e,{dispose:b=!1}=e,{transform:x=!1}=e,{calculatePosition:M=z1}=e,{eps:P=.001}=e,{occlude:v=!1}=e,{zIndexRange:E=[16777271,0]}=e,{sprite:S=!1}=e,{pointerEvents:k="auto"}=e,{center:F=!1}=e,{fullscreen:L=!1}=e,{distanceFactor:O=void 0}=e,{as:I="div"}=e,{portal:R=void 0}=e;const Y=Wi();let Z;const{renderer:H,camera:B,scene:j,size:ne}=An();Fe(i,B,z=>t(57,r=z)),Fe(i,ne,z=>t(41,n=z));const se=()=>{if(!(r instanceof qt)&&!(r instanceof qi))throw new Error("Only PerspectiveCamera or OrthographicCamera supported for component <HTML>");return r},{raycaster:_e}=vo();let Me=[0,0],V=0,{visible:ue=!0}=e,Te=document.createElement(I),ce,ve;const{hasEventListeners:qe}=N1();let Q=typeof v=="boolean"&&v===!0?[j]:Array.isArray(v)?v:void 0;const le=_n(ne,z=>z.width/2);Fe(i,le,z=>t(43,o=z));const We=_n(ne,z=>z.height/2);Fe(i,We,z=>t(42,s=z));let ze={common:{el:ot({})},transform:{el:ot({position:"absolute",top:"0",left:"0",pointerEvents:"none",overflow:"hidden",display:"block",width:`${n.width}px`,height:`${n.height}px`}),outerRef:ot({position:"absolute",top:"0",left:"0",width:`${n.width}px`,height:`${n.height}px`,transformStyle:"preserve-3d",pointerEvents:"none"}),innerRef:ot({position:"absolute",pointerEvents:k})},noTransform:{el:ot({}),div:ot({position:"absolute",transform:F?"translate3d(-50%,-50%,0)":"none",top:L?`${-s}px`:void 0,left:L?`${-o}px`:void 0,width:L?`${n.width}px`:void 0,height:L?`${n.height}px`:void 0})}};const ut=_n([ze.transform.el,ze.common.el],([z,Ce])=>({...z,...Ce}));Fe(i,ut,z=>t(14,a=z));const yt=_n(ze.transform.outerRef,z=>z);Fe(i,yt,z=>t(15,l=z));const Oe=_n(ze.transform.innerRef,z=>z);Fe(i,Oe,z=>t(16,c=z));const Le=_n(ze.noTransform.el,z=>z);Fe(i,Le,z=>t(17,u=z));const vt=_n(ze.noTransform.div,z=>z);Fe(i,vt,z=>t(18,f=z));const Lt=()=>{if(!Z)return!0;let z=!0,Ce=Z.parent;e:for(;Ce;){if("visible"in Ce&&!Ce.visible){z=!1;break e}Ce=Ce.parent}return z};let D=Lt();Xi(async()=>{if(!Z)return;t(13,D=Lt());const z=se();z.updateMatrixWorld(),Z.updateWorldMatrix(!0,!1);const Ce=x?Me:M(Z,z,n);if(x||Math.abs(V-z.zoom)>P||Math.abs(Me[0]-Ce[0])>P||Math.abs(Me[1]-Ce[1])>P){const Ke=U1(Z,z),at=ue;if(Q){const U=G1(Z,z,_e,Q);t(30,ue=U&&!Ke)}else t(30,ue=!Ke);if(at!==ue&&(qe("visibilitychange")?Y("visibilitychange",ue):mn(ze.common.el,{display:ue?"block":"none"})),mn(ze.common.el,{zIndex:`${V1(Z,z,E)}`}),x){const U=z.projectionMatrix.elements[5]*s,{isOrthographicCamera:me,top:ee,left:Se,bottom:xe,right:nt}=z;let lt=Z.matrixWorld;if(S&&(lt=z.matrixWorldInverse.clone().transpose().copyPosition(lt).scale(Z.scale),lt.elements[3]=lt.elements[7]=lt.elements[11]=0,lt.elements[15]=1),mn(ze.transform.el,{perspective:me?"":`${U}px`}),ce&&ve){const bt=me?`scale(${U}) translate(${Ca(-(nt+Se)/2)}px,${Ca((ee+xe)/2)}px)`:`translateZ(${U}px)`,nn=H1(z.matrixWorldInverse);mn(ze.transform.outerRef,{transform:`${bt}${nn}translate(${o}px, ${s}px)`}),mn(ze.transform.innerRef,{transform:W1(lt,1/((O||10)/400))})}}else{const U=O===void 0?1:B1(Z,z)*O;mn(ze.noTransform.el,{transform:`translate3d(${Ce[0]}px, ${Ce[1]}px, 0) scale(${U})`})}Me=Ce,V=z.zoom}},{debugFrameloopMessage:"HTML: tracking parent"});const A=z=>{if(!Z||x)return;j.updateMatrixWorld();const Ce=M(Z,r,n);mn(ze.noTransform.el,{position:"absolute",top:"0",left:"0",transform:`translate3d(${Ce[0]}px, ${Ce[1]}px, 0)`,transformOrigin:"0 0"})},$=z=>{if(!H){console.warn("HTML: renderer is undefined. Is this component a child to <Canvas>?");return}const Ce=R!=null?R:H.domElement.parentElement;if(!Ce){console.warn("HTML: target is undefined.");return}return Ce.appendChild(z),{destroy:()=>{!z.parentNode||z.parentNode.removeChild(z)}}};function oe(z){Z=z,t(9,Z)}function de(z){y=z,t(0,y)}function we(z){ct.call(this,i,z)}function Ge(z){ct.call(this,i,z)}function T(z){Mt[z?"unshift":"push"](()=>{ve=z,t(12,ve)})}function re(z){Mt[z?"unshift":"push"](()=>{ce=z,t(11,ce)})}function he(z){Mt[z?"unshift":"push"](()=>{Te=z,t(10,Te)})}function ye(z){Mt[z?"unshift":"push"](()=>{Te=z,t(10,Te)})}return i.$$set=z=>{"position"in z&&t(1,g=z.position),"scale"in z&&t(2,h=z.scale),"rotation"in z&&t(3,p=z.rotation),"lookAt"in z&&t(4,_=z.lookAt),"viewportAware"in z&&t(5,w=z.viewportAware),"inViewport"in z&&t(0,y=z.inViewport),"dispose"in z&&t(6,b=z.dispose),"transform"in z&&t(7,x=z.transform),"calculatePosition"in z&&t(31,M=z.calculatePosition),"eps"in z&&t(32,P=z.eps),"occlude"in z&&t(33,v=z.occlude),"zIndexRange"in z&&t(34,E=z.zIndexRange),"sprite"in z&&t(35,S=z.sprite),"pointerEvents"in z&&t(36,k=z.pointerEvents),"center"in z&&t(37,F=z.center),"fullscreen"in z&&t(38,L=z.fullscreen),"distanceFactor"in z&&t(39,O=z.distanceFactor),"as"in z&&t(8,I=z.as),"portal"in z&&t(40,R=z.portal),"visible"in z&&t(30,ue=z.visible),"$$scope"in z&&t(53,m=z.$$scope)},i.$$.update=()=>{i.$$.dirty[1]&4&&(Q=typeof v=="boolean"&&v===!0?[j]:Array.isArray(v)?v:void 0),i.$$.dirty[1]&1024&&mn(ze.transform.el,{width:`${n.width}px`,height:`${n.height}px`}),i.$$.dirty[1]&1024&&mn(ze.transform.outerRef,{width:`${n.width}px`,height:`${n.height}px`}),i.$$.dirty[1]&32&&mn(ze.transform.innerRef,{pointerEvents:k}),i.$$.dirty[1]&64&&mn(ze.noTransform.div,{transform:F?"translate3d(-50%, -50%, 0)":"none"}),i.$$.dirty[1]&7296&&mn(ze.noTransform.div,{top:L?`${-s}px`:void 0,left:L?`${-o}px`:void 0,width:L?`${n.width}px`:void 0,height:L?`${n.height}px`:void 0})},[y,g,h,p,_,w,b,x,I,Z,Te,ce,ve,D,a,l,c,u,f,B,ne,le,We,ut,yt,Oe,Le,vt,A,$,ue,M,P,v,E,S,k,F,L,O,R,n,s,o,d,oe,de,we,Ge,T,re,he,ye,m]}class Q1 extends Ze{constructor(e){super(),Ye(this,e,J1,K1,He,{position:1,scale:2,rotation:3,lookAt:4,viewportAware:5,inViewport:0,dispose:6,transform:7,calculatePosition:31,eps:32,occlude:33,zIndexRange:34,sprite:35,pointerEvents:36,center:37,fullscreen:38,distanceFactor:39,as:8,portal:40,visible:30},null,[-1,-1,-1])}}var Ka={exports:{}},br=typeof Reflect=="object"?Reflect:null,iu=br&&typeof br.apply=="function"?br.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)},Zs;br&&typeof br.ownKeys=="function"?Zs=br.ownKeys:Object.getOwnPropertySymbols?Zs=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:Zs=function(e){return Object.getOwnPropertyNames(e)};function $1(i){console&&console.warn&&console.warn(i)}var id=Number.isNaN||function(e){return e!==e};function _t(){_t.init.call(this)}Ka.exports=_t;Ka.exports.once=ib;_t.EventEmitter=_t;_t.prototype._events=void 0;_t.prototype._eventsCount=0;_t.prototype._maxListeners=void 0;var ru=10;function wo(i){if(typeof i!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i)}Object.defineProperty(_t,"defaultMaxListeners",{enumerable:!0,get:function(){return ru},set:function(i){if(typeof i!="number"||i<0||id(i))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+i+".");ru=i}});_t.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};_t.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||id(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function rd(i){return i._maxListeners===void 0?_t.defaultMaxListeners:i._maxListeners}_t.prototype.getMaxListeners=function(){return rd(this)};_t.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=e==="error",s=this._events;if(s!==void 0)r=r&&s.error===void 0;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var l=s[e];if(l===void 0)return!1;if(typeof l=="function")iu(l,this,t);else for(var c=l.length,u=cd(l,c),n=0;n<c;++n)iu(u[n],this,t);return!0};function sd(i,e,t,n){var r,s,o;if(wo(t),s=i._events,s===void 0?(s=i._events=Object.create(null),i._eventsCount=0):(s.newListener!==void 0&&(i.emit("newListener",e,t.listener?t.listener:t),s=i._events),o=s[e]),o===void 0)o=s[e]=t,++i._eventsCount;else if(typeof o=="function"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(t):o.push(t),r=rd(i),r>0&&o.length>r&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=i,a.type=e,a.count=o.length,$1(a)}return i}_t.prototype.addListener=function(e,t){return sd(this,e,t,!1)};_t.prototype.on=_t.prototype.addListener;_t.prototype.prependListener=function(e,t){return sd(this,e,t,!0)};function eb(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function od(i,e,t){var n={fired:!1,wrapFn:void 0,target:i,type:e,listener:t},r=eb.bind(n);return r.listener=t,n.wrapFn=r,r}_t.prototype.once=function(e,t){return wo(t),this.on(e,od(this,e,t)),this};_t.prototype.prependOnceListener=function(e,t){return wo(t),this.prependListener(e,od(this,e,t)),this};_t.prototype.removeListener=function(e,t){var n,r,s,o,a;if(wo(t),r=this._events,r===void 0)return this;if(n=r[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if(typeof n!="function"){for(s=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,s=o;break}if(s<0)return this;s===0?n.shift():tb(n,s),n.length===1&&(r[e]=n[0]),r.removeListener!==void 0&&this.emit("removeListener",e,a||t)}return this};_t.prototype.off=_t.prototype.removeListener;_t.prototype.removeAllListeners=function(e){var t,n,r;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var s=Object.keys(n),o;for(r=0;r<s.length;++r)o=s[r],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this};function ad(i,e,t){var n=i._events;if(n===void 0)return[];var r=n[e];return r===void 0?[]:typeof r=="function"?t?[r.listener||r]:[r]:t?nb(r):cd(r,r.length)}_t.prototype.listeners=function(e){return ad(this,e,!0)};_t.prototype.rawListeners=function(e){return ad(this,e,!1)};_t.listenerCount=function(i,e){return typeof i.listenerCount=="function"?i.listenerCount(e):ld.call(i,e)};_t.prototype.listenerCount=ld;function ld(i){var e=this._events;if(e!==void 0){var t=e[i];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}_t.prototype.eventNames=function(){return this._eventsCount>0?Zs(this._events):[]};function cd(i,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=i[n];return t}function tb(i,e){for(;e+1<i.length;e++)i[e]=i[e+1];i.pop()}function nb(i){for(var e=new Array(i.length),t=0;t<e.length;++t)e[t]=i[t].listener||i[t];return e}function ib(i,e){return new Promise(function(t,n){function r(o){i.removeListener(e,s),n(o)}function s(){typeof i.removeListener=="function"&&i.removeListener("error",r),t([].slice.call(arguments))}ud(i,e,s,{once:!0}),e!=="error"&&rb(i,r,{once:!0})})}function rb(i,e,t){typeof i.on=="function"&&ud(i,"error",e,t)}function ud(i,e,t,n){if(typeof i.on=="function")n.once?i.once(e,t):i.on(e,t);else if(typeof i.addEventListener=="function")i.addEventListener(e,function r(s){n.once&&i.removeEventListener(e,r),t(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof i)}function Vn(i){if(typeof i!="function")throw new Error("obliterator/iterator: expecting a function!");this.next=i}typeof Symbol<"u"&&(Vn.prototype[Symbol.iterator]=function(){return this});Vn.of=function(){var i=arguments,e=i.length,t=0;return new Vn(function(){return t>=e?{done:!0}:{done:!1,value:i[t++]}})};Vn.empty=function(){var i=new Vn(function(){return{done:!0}});return i};Vn.fromSequence=function(i){var e=0,t=i.length;return new Vn(function(){return e>=t?{done:!0}:{done:!1,value:i[e++]}})};Vn.is=function(i){return i instanceof Vn?!0:typeof i=="object"&&i!==null&&typeof i.next=="function"};var ln=Vn,Ja={};Ja.ARRAY_BUFFER_SUPPORT=typeof ArrayBuffer<"u";Ja.SYMBOL_SUPPORT=typeof Symbol<"u";var sb=ln,fd=Ja,ob=fd.ARRAY_BUFFER_SUPPORT,ab=fd.SYMBOL_SUPPORT;function lb(i){return typeof i=="string"||Array.isArray(i)||ob&&ArrayBuffer.isView(i)?sb.fromSequence(i):typeof i!="object"||i===null?null:ab&&typeof i[Symbol.iterator]=="function"?i[Symbol.iterator]():typeof i.next=="function"?i:null}var dd=function(e){var t=lb(e);if(!t)throw new Error("obliterator: target is not iterable nor a valid iterator.");return t},cb=dd,hd=function(e,t){for(var n=arguments.length>1?t:1/0,r=n!==1/0?new Array(n):[],s,o=0,a=cb(e);;){if(o===n)return r;if(s=a.next(),s.done)return o!==t&&(r.length=o),r;r[o++]=s.value}},ub=ln,fb=dd,ni=function(){var e=arguments,t=null,n=-1;return new ub(function(){var s=null;do{if(t===null){if(n++,n>=e.length)return{done:!0};t=fb(e[n])}if(s=t.next(),s.done===!0){t=null;continue}break}while(!0);return s})};function db(){const i=arguments[0];for(let e=1,t=arguments.length;e<t;e++)if(!!arguments[e])for(const n in arguments[e])i[n]=arguments[e][n];return i}let Ft=db;typeof Object.assign=="function"&&(Ft=Object.assign);function Sn(i,e,t,n){const r=i._nodes.get(e);let s=null;return r&&(n==="mixed"?s=r.out&&r.out[t]||r.undirected&&r.undirected[t]:n==="directed"?s=r.out&&r.out[t]:s=r.undirected&&r.undirected[t]),s}function hb(i){return i!==null&&typeof i=="object"&&typeof i.addUndirectedEdgeWithKey=="function"&&typeof i.dropNode=="function"}function Vt(i){return typeof i=="object"&&i!==null&&i.constructor===Object}function pd(i){let e;for(e in i)return!1;return!0}function gn(i,e,t){Object.defineProperty(i,e,{enumerable:!1,configurable:!1,writable:!0,value:t})}function Rn(i,e,t){const n={enumerable:!0,configurable:!0};typeof t=="function"?n.get=t:(n.value=t,n.writable=!1),Object.defineProperty(i,e,n)}function su(i){return!(!Vt(i)||i.attributes&&!Array.isArray(i.attributes))}function pb(){let i=Math.floor(Math.random()*256)&255;return()=>i++}class Qa extends Error{constructor(e){super(),this.name="GraphError",this.message=e}}class Ee extends Qa{constructor(e){super(e),this.name="InvalidArgumentsGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ee.prototype.constructor)}}class pe extends Qa{constructor(e){super(e),this.name="NotFoundGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,pe.prototype.constructor)}}class Ue extends Qa{constructor(e){super(e),this.name="UsageGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ue.prototype.constructor)}}function md(i,e){this.key=i,this.attributes=e,this.clear()}md.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.in={},this.out={},this.undirected={}};function gd(i,e){this.key=i,this.attributes=e,this.clear()}gd.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.in={},this.out={}};function _d(i,e){this.key=i,this.attributes=e,this.clear()}_d.prototype.clear=function(){this.undirectedDegree=0,this.undirected={}};function Ir(i,e,t,n,r){this.key=e,this.attributes=r,this.undirected=i,this.source=t,this.target=n}Ir.prototype.attach=function(){let i="out",e="in";this.undirected&&(i=e="undirected");const t=this.source.key,n=this.target.key;this.source[i][n]=this,!(this.undirected&&t===n)&&(this.target[e][t]=this)};Ir.prototype.attachMulti=function(){let i="out",e="in";const t=this.source.key,n=this.target.key;this.undirected&&(i=e="undirected");const r=this.source[i],s=r[n];if(typeof s>"u"){r[n]=this,this.undirected&&t===n||(this.target[e][t]=this);return}s.previous=this,this.next=s,r[n]=this,this.target[e][t]=this};Ir.prototype.detach=function(){const i=this.source.key,e=this.target.key;let t="out",n="in";this.undirected&&(t=n="undirected"),delete this.source[t][e],delete this.target[n][i]};Ir.prototype.detachMulti=function(){const i=this.source.key,e=this.target.key;let t="out",n="in";this.undirected&&(t=n="undirected"),this.previous===void 0?this.next===void 0?(delete this.source[t][e],delete this.target[n][i]):(this.next.previous=void 0,this.source[t][e]=this.next,this.target[n][i]=this.next):(this.previous.next=this.next,this.next!==void 0&&(this.next.previous=this.previous))};const vd=0,bd=1,mb=2,wd=3;function oi(i,e,t,n,r,s,o){let a,l,c,u;if(n=""+n,t===vd){if(a=i._nodes.get(n),!a)throw new pe(`Graph.${e}: could not find the "${n}" node in the graph.`);c=r,u=s}else if(t===wd){if(r=""+r,l=i._edges.get(r),!l)throw new pe(`Graph.${e}: could not find the "${r}" edge in the graph.`);const f=l.source.key,d=l.target.key;if(n===f)a=l.target;else if(n===d)a=l.source;else throw new pe(`Graph.${e}: the "${n}" node is not attached to the "${r}" edge (${f}, ${d}).`);c=s,u=o}else{if(l=i._edges.get(n),!l)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`);t===bd?a=l.source:a=l.target,c=r,u=s}return[a,c,u]}function gb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);return o.attributes[a]}}function _b(i,e,t){i.prototype[e]=function(n,r){const[s]=oi(this,e,t,n,r);return s.attributes}}function vb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);return o.attributes.hasOwnProperty(a)}}function bb(i,e,t){i.prototype[e]=function(n,r,s,o){const[a,l,c]=oi(this,e,t,n,r,s,o);return a.attributes[l]=c,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:l}),this}}function wb(i,e,t){i.prototype[e]=function(n,r,s,o){const[a,l,c]=oi(this,e,t,n,r,s,o);if(typeof c!="function")throw new Ee(`Graph.${e}: updater should be a function.`);const u=a.attributes,f=c(u[l]);return u[l]=f,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:l}),this}}function yb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);return delete o.attributes[a],this.emit("nodeAttributesUpdated",{key:o.key,type:"remove",attributes:o.attributes,name:a}),this}}function xb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);if(!Vt(a))throw new Ee(`Graph.${e}: provided attributes are not a plain object.`);return o.attributes=a,this.emit("nodeAttributesUpdated",{key:o.key,type:"replace",attributes:o.attributes}),this}}function Mb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);if(!Vt(a))throw new Ee(`Graph.${e}: provided attributes are not a plain object.`);return Ft(o.attributes,a),this.emit("nodeAttributesUpdated",{key:o.key,type:"merge",attributes:o.attributes,data:a}),this}}function Sb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=oi(this,e,t,n,r,s);if(typeof a!="function")throw new Ee(`Graph.${e}: provided updater is not a function.`);return o.attributes=a(o.attributes),this.emit("nodeAttributesUpdated",{key:o.key,type:"update",attributes:o.attributes}),this}}const Eb=[{name:i=>`get${i}Attribute`,attacher:gb},{name:i=>`get${i}Attributes`,attacher:_b},{name:i=>`has${i}Attribute`,attacher:vb},{name:i=>`set${i}Attribute`,attacher:bb},{name:i=>`update${i}Attribute`,attacher:wb},{name:i=>`remove${i}Attribute`,attacher:yb},{name:i=>`replace${i}Attributes`,attacher:xb},{name:i=>`merge${i}Attributes`,attacher:Mb},{name:i=>`update${i}Attributes`,attacher:Sb}];function Ab(i){Eb.forEach(function({name:e,attacher:t}){t(i,e("Node"),vd),t(i,e("Source"),bd),t(i,e("Target"),mb),t(i,e("Opposite"),wd)})}function Tb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new pe(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return s.attributes[r]}}function Cb(i,e,t){i.prototype[e]=function(n){let r;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>1){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const s=""+n,o=""+arguments[1];if(r=Sn(this,s,o,t),!r)throw new pe(`Graph.${e}: could not find an edge for the given path ("${s}" - "${o}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,r=this._edges.get(n),!r)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return r.attributes}}function Lb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new pe(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return s.attributes.hasOwnProperty(r)}}function Db(i,e,t){i.prototype[e]=function(n,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+n,l=""+r;if(r=arguments[2],s=arguments[3],o=Sn(this,a,l,t),!o)throw new pe(`Graph.${e}: could not find an edge for the given path ("${a}" - "${l}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,o=this._edges.get(n),!o)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return o.attributes[r]=s,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Pb(i,e,t){i.prototype[e]=function(n,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+n,l=""+r;if(r=arguments[2],s=arguments[3],o=Sn(this,a,l,t),!o)throw new pe(`Graph.${e}: could not find an edge for the given path ("${a}" - "${l}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,o=this._edges.get(n),!o)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(typeof s!="function")throw new Ee(`Graph.${e}: updater should be a function.`);return o.attributes[r]=s(o.attributes[r]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Rb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new pe(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return delete s.attributes[r],this.emit("edgeAttributesUpdated",{key:s.key,type:"remove",attributes:s.attributes,name:r}),this}}function Ib(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new pe(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(!Vt(r))throw new Ee(`Graph.${e}: provided attributes are not a plain object.`);return s.attributes=r,this.emit("edgeAttributesUpdated",{key:s.key,type:"replace",attributes:s.attributes}),this}}function Ob(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new pe(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(!Vt(r))throw new Ee(`Graph.${e}: provided attributes are not a plain object.`);return Ft(s.attributes,r),this.emit("edgeAttributesUpdated",{key:s.key,type:"merge",attributes:s.attributes,data:r}),this}}function kb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new pe(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new pe(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(typeof r!="function")throw new Ee(`Graph.${e}: provided updater is not a function.`);return s.attributes=r(s.attributes),this.emit("edgeAttributesUpdated",{key:s.key,type:"update",attributes:s.attributes}),this}}const Nb=[{name:i=>`get${i}Attribute`,attacher:Tb},{name:i=>`get${i}Attributes`,attacher:Cb},{name:i=>`has${i}Attribute`,attacher:Lb},{name:i=>`set${i}Attribute`,attacher:Db},{name:i=>`update${i}Attribute`,attacher:Pb},{name:i=>`remove${i}Attribute`,attacher:Rb},{name:i=>`replace${i}Attributes`,attacher:Ib},{name:i=>`merge${i}Attributes`,attacher:Ob},{name:i=>`update${i}Attributes`,attacher:kb}];function Fb(i){Nb.forEach(function({name:e,attacher:t}){t(i,e("Edge"),"mixed"),t(i,e("DirectedEdge"),"directed"),t(i,e("UndirectedEdge"),"undirected")})}const zb=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function Ub(i,e,t,n){let r=!1;for(const s in e){if(s===n)continue;const o=e[s];if(r=t(o.key,o.attributes,o.source.key,o.target.key,o.source.attributes,o.target.attributes,o.undirected),i&&r)return o.key}}function Gb(i,e,t,n){let r,s,o,a=!1;for(const l in e)if(l!==n){r=e[l];do{if(s=r.source,o=r.target,a=t(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected),i&&a)return r.key;r=r.next}while(r!==void 0)}}function da(i,e){const t=Object.keys(i),n=t.length;let r,s=0;return new ln(function(){do if(r)r=r.next;else{if(s>=n)return{done:!0};const a=t[s++];if(a===e){r=void 0;continue}r=i[a]}while(!r);return{done:!1,value:{edge:r.key,attributes:r.attributes,source:r.source.key,target:r.target.key,sourceAttributes:r.source.attributes,targetAttributes:r.target.attributes,undirected:r.undirected}}})}function Bb(i,e,t,n){const r=e[t];if(!r)return;const s=r.source,o=r.target;if(n(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected)&&i)return r.key}function Vb(i,e,t,n){let r=e[t];if(!r)return;let s=!1;do{if(s=n(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes,r.undirected),i&&s)return r.key;r=r.next}while(r!==void 0)}function ha(i,e){let t=i[e];return t.next!==void 0?new ln(function(){if(!t)return{done:!0};const n={edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected};return t=t.next,{done:!1,value:n}}):ln.of({edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected})}function Hb(i,e){if(i.size===0)return[];if(e==="mixed"||e===i.type)return typeof Array.from=="function"?Array.from(i._edges.keys()):hd(i._edges.keys(),i._edges.size);const t=e==="undirected"?i.undirectedSize:i.directedSize,n=new Array(t),r=e==="undirected",s=i._edges.values();let o=0,a,l;for(;a=s.next(),a.done!==!0;)l=a.value,l.undirected===r&&(n[o++]=l.key);return n}function yd(i,e,t,n){if(e.size===0)return;const r=t!=="mixed"&&t!==e.type,s=t==="undirected";let o,a,l=!1;const c=e._edges.values();for(;o=c.next(),o.done!==!0;){if(a=o.value,r&&a.undirected!==s)continue;const{key:u,attributes:f,source:d,target:m}=a;if(l=n(u,f,d.key,m.key,d.attributes,m.attributes,a.undirected),i&&l)return u}}function Wb(i,e){if(i.size===0)return ln.empty();const t=e!=="mixed"&&e!==i.type,n=e==="undirected",r=i._edges.values();return new ln(function(){let o,a;for(;;){if(o=r.next(),o.done)return o;if(a=o.value,!(t&&a.undirected!==n))break}return{value:{edge:a.key,attributes:a.attributes,source:a.source.key,target:a.target.key,sourceAttributes:a.source.attributes,targetAttributes:a.target.attributes,undirected:a.undirected},done:!1}})}function $a(i,e,t,n,r,s){const o=e?Gb:Ub;let a;if(t!=="undirected"&&(n!=="out"&&(a=o(i,r.in,s),i&&a)||n!=="in"&&(a=o(i,r.out,s,n?void 0:r.key),i&&a))||t!=="directed"&&(a=o(i,r.undirected,s),i&&a))return a}function jb(i,e,t,n){const r=[];return $a(!1,i,e,t,n,function(s){r.push(s)}),r}function qb(i,e,t){let n=ln.empty();return i!=="undirected"&&(e!=="out"&&typeof t.in<"u"&&(n=ni(n,da(t.in))),e!=="in"&&typeof t.out<"u"&&(n=ni(n,da(t.out,e?void 0:t.key)))),i!=="directed"&&typeof t.undirected<"u"&&(n=ni(n,da(t.undirected))),n}function el(i,e,t,n,r,s,o){const a=t?Vb:Bb;let l;if(e!=="undirected"&&(typeof r.in<"u"&&n!=="out"&&(l=a(i,r.in,s,o),i&&l)||typeof r.out<"u"&&n!=="in"&&(n||r.key!==s)&&(l=a(i,r.out,s,o),i&&l))||e!=="directed"&&typeof r.undirected<"u"&&(l=a(i,r.undirected,s,o),i&&l))return l}function Xb(i,e,t,n,r){const s=[];return el(!1,i,e,t,n,r,function(o){s.push(o)}),s}function Yb(i,e,t,n){let r=ln.empty();return i!=="undirected"&&(typeof t.in<"u"&&e!=="out"&&n in t.in&&(r=ni(r,ha(t.in,n))),typeof t.out<"u"&&e!=="in"&&n in t.out&&(e||t.key!==n)&&(r=ni(r,ha(t.out,n)))),i!=="directed"&&typeof t.undirected<"u"&&n in t.undirected&&(r=ni(r,ha(t.undirected,n))),r}function Zb(i,e){const{name:t,type:n,direction:r}=e;i.prototype[t]=function(s,o){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return[];if(!arguments.length)return Hb(this,n);if(arguments.length===1){s=""+s;const a=this._nodes.get(s);if(typeof a>"u")throw new pe(`Graph.${t}: could not find the "${s}" node in the graph.`);return jb(this.multi,n==="mixed"?this.type:n,r,a)}if(arguments.length===2){s=""+s,o=""+o;const a=this._nodes.get(s);if(!a)throw new pe(`Graph.${t}:  could not find the "${s}" source node in the graph.`);if(!this._nodes.has(o))throw new pe(`Graph.${t}:  could not find the "${o}" target node in the graph.`);return Xb(n,this.multi,r,a,o)}throw new Ee(`Graph.${t}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function Kb(i,e){const{name:t,type:n,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(c,u,f){if(!(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)){if(arguments.length===1)return f=c,yd(!1,this,n,f);if(arguments.length===2){c=""+c,f=u;const d=this._nodes.get(c);if(typeof d>"u")throw new pe(`Graph.${s}: could not find the "${c}" node in the graph.`);return $a(!1,this.multi,n==="mixed"?this.type:n,r,d,f)}if(arguments.length===3){c=""+c,u=""+u;const d=this._nodes.get(c);if(!d)throw new pe(`Graph.${s}:  could not find the "${c}" source node in the graph.`);if(!this._nodes.has(u))throw new pe(`Graph.${s}:  could not find the "${u}" target node in the graph.`);return el(!1,n,this.multi,r,d,u,f)}throw new Ee(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)}};const o="map"+t[0].toUpperCase()+t.slice(1);i.prototype[o]=function(){const c=Array.prototype.slice.call(arguments),u=c.pop();let f;if(c.length===0){let d=0;n!=="directed"&&(d+=this.undirectedSize),n!=="undirected"&&(d+=this.directedSize),f=new Array(d);let m=0;c.push((g,h,p,_,w,y,b)=>{f[m++]=u(g,h,p,_,w,y,b)})}else f=[],c.push((d,m,g,h,p,_,w)=>{f.push(u(d,m,g,h,p,_,w))});return this[s].apply(this,c),f};const a="filter"+t[0].toUpperCase()+t.slice(1);i.prototype[a]=function(){const c=Array.prototype.slice.call(arguments),u=c.pop(),f=[];return c.push((d,m,g,h,p,_,w)=>{u(d,m,g,h,p,_,w)&&f.push(d)}),this[s].apply(this,c),f};const l="reduce"+t[0].toUpperCase()+t.slice(1);i.prototype[l]=function(){let c=Array.prototype.slice.call(arguments);if(c.length<2||c.length>4)throw new Ee(`Graph.${l}: invalid number of arguments (expecting 2, 3 or 4 and got ${c.length}).`);if(typeof c[c.length-1]=="function"&&typeof c[c.length-2]!="function")throw new Ee(`Graph.${l}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let u,f;c.length===2?(u=c[0],f=c[1],c=[]):c.length===3?(u=c[1],f=c[2],c=[c[0]]):c.length===4&&(u=c[2],f=c[3],c=[c[0],c[1]]);let d=f;return c.push((m,g,h,p,_,w,y)=>{d=u(d,m,g,h,p,_,w,y)}),this[s].apply(this,c),d}}function Jb(i,e){const{name:t,type:n,direction:r}=e,s="find"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(l,c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return!1;if(arguments.length===1)return u=l,yd(!0,this,n,u);if(arguments.length===2){l=""+l,u=c;const f=this._nodes.get(l);if(typeof f>"u")throw new pe(`Graph.${s}: could not find the "${l}" node in the graph.`);return $a(!0,this.multi,n==="mixed"?this.type:n,r,f,u)}if(arguments.length===3){l=""+l,c=""+c;const f=this._nodes.get(l);if(!f)throw new pe(`Graph.${s}:  could not find the "${l}" source node in the graph.`);if(!this._nodes.has(c))throw new pe(`Graph.${s}:  could not find the "${c}" target node in the graph.`);return el(!0,n,this.multi,r,f,c,u)}throw new Ee(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)};const o="some"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[o]=function(){const l=Array.prototype.slice.call(arguments),c=l.pop();return l.push((f,d,m,g,h,p,_)=>c(f,d,m,g,h,p,_)),!!this[s].apply(this,l)};const a="every"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[a]=function(){const l=Array.prototype.slice.call(arguments),c=l.pop();return l.push((f,d,m,g,h,p,_)=>!c(f,d,m,g,h,p,_)),!this[s].apply(this,l)}}function Qb(i,e){const{name:t,type:n,direction:r}=e,s=t.slice(0,-1)+"Entries";i.prototype[s]=function(o,a){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return ln.empty();if(!arguments.length)return Wb(this,n);if(arguments.length===1){o=""+o;const l=this._nodes.get(o);if(!l)throw new pe(`Graph.${s}: could not find the "${o}" node in the graph.`);return qb(n,r,l)}if(arguments.length===2){o=""+o,a=""+a;const l=this._nodes.get(o);if(!l)throw new pe(`Graph.${s}:  could not find the "${o}" source node in the graph.`);if(!this._nodes.has(a))throw new pe(`Graph.${s}:  could not find the "${a}" target node in the graph.`);return Yb(n,r,l,a)}throw new Ee(`Graph.${s}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function $b(i){zb.forEach(e=>{Zb(i,e),Kb(i,e),Jb(i,e),Qb(i,e)})}const ew=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function yo(){this.A=null,this.B=null}yo.prototype.wrap=function(i){this.A===null?this.A=i:this.B===null&&(this.B=i)};yo.prototype.has=function(i){return this.A!==null&&i in this.A||this.B!==null&&i in this.B};function Vr(i,e,t,n,r){for(const s in n){const o=n[s],a=o.source,l=o.target,c=a===t?l:a;if(e&&e.has(c.key))continue;const u=r(c.key,c.attributes);if(i&&u)return c.key}}function tl(i,e,t,n,r){if(e!=="mixed"){if(e==="undirected")return Vr(i,null,n,n.undirected,r);if(typeof t=="string")return Vr(i,null,n,n[t],r)}const s=new yo;let o;if(e!=="undirected"){if(t!=="out"){if(o=Vr(i,null,n,n.in,r),i&&o)return o;s.wrap(n.in)}if(t!=="in"){if(o=Vr(i,s,n,n.out,r),i&&o)return o;s.wrap(n.out)}}if(e!=="directed"&&(o=Vr(i,s,n,n.undirected,r),i&&o))return o}function tw(i,e,t){if(i!=="mixed"){if(i==="undirected")return Object.keys(t.undirected);if(typeof e=="string")return Object.keys(t[e])}const n=[];return tl(!1,i,e,t,function(r){n.push(r)}),n}function Hr(i,e,t){const n=Object.keys(t),r=n.length;let s=0;return new ln(function(){let a=null;do{if(s>=r)return i&&i.wrap(t),{done:!0};const l=t[n[s++]],c=l.source,u=l.target;if(a=c===e?u:c,i&&i.has(a.key)){a=null;continue}}while(a===null);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}})}function nw(i,e,t){if(i!=="mixed"){if(i==="undirected")return Hr(null,t,t.undirected);if(typeof e=="string")return Hr(null,t,t[e])}let n=ln.empty();const r=new yo;return i!=="undirected"&&(e!=="out"&&(n=ni(n,Hr(r,t,t.in))),e!=="in"&&(n=ni(n,Hr(r,t,t.out)))),i!=="directed"&&(n=ni(n,Hr(r,t,t.undirected))),n}function iw(i,e){const{name:t,type:n,direction:r}=e;i.prototype[t]=function(s){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return[];s=""+s;const o=this._nodes.get(s);if(typeof o>"u")throw new pe(`Graph.${t}: could not find the "${s}" node in the graph.`);return tw(n==="mixed"?this.type:n,r,o)}}function rw(i,e){const{name:t,type:n,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return;c=""+c;const f=this._nodes.get(c);if(typeof f>"u")throw new pe(`Graph.${s}: could not find the "${c}" node in the graph.`);tl(!1,n==="mixed"?this.type:n,r,f,u)};const o="map"+t[0].toUpperCase()+t.slice(1);i.prototype[o]=function(c,u){const f=[];return this[s](c,(d,m)=>{f.push(u(d,m))}),f};const a="filter"+t[0].toUpperCase()+t.slice(1);i.prototype[a]=function(c,u){const f=[];return this[s](c,(d,m)=>{u(d,m)&&f.push(d)}),f};const l="reduce"+t[0].toUpperCase()+t.slice(1);i.prototype[l]=function(c,u,f){if(arguments.length<3)throw new Ee(`Graph.${l}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let d=f;return this[s](c,(m,g)=>{d=u(d,m,g)}),d}}function sw(i,e){const{name:t,type:n,direction:r}=e,s=t[0].toUpperCase()+t.slice(1,-1),o="find"+s;i.prototype[o]=function(c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return;c=""+c;const f=this._nodes.get(c);if(typeof f>"u")throw new pe(`Graph.${o}: could not find the "${c}" node in the graph.`);return tl(!0,n==="mixed"?this.type:n,r,f,u)};const a="some"+s;i.prototype[a]=function(c,u){return!!this[o](c,u)};const l="every"+s;i.prototype[l]=function(c,u){return!this[o](c,(d,m)=>!u(d,m))}}function ow(i,e){const{name:t,type:n,direction:r}=e,s=t.slice(0,-1)+"Entries";i.prototype[s]=function(o){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return ln.empty();o=""+o;const a=this._nodes.get(o);if(typeof a>"u")throw new pe(`Graph.${s}: could not find the "${o}" node in the graph.`);return nw(n==="mixed"?this.type:n,r,a)}}function aw(i){ew.forEach(e=>{iw(i,e),rw(i,e),sw(i,e),ow(i,e)})}function Vs(i,e,t,n,r){const s=n._nodes.values(),o=n.type;let a,l,c,u,f,d,m;for(;a=s.next(),a.done!==!0;){let g=!1;if(l=a.value,o!=="undirected"){u=l.out;for(c in u){f=u[c];do{if(d=f.target,g=!0,m=r(l.key,d.key,l.attributes,d.attributes,f.key,f.attributes,f.undirected),i&&m)return f;f=f.next}while(f)}}if(o!=="directed"){u=l.undirected;for(c in u)if(!(e&&l.key>c)){f=u[c];do{if(d=f.target,d.key!==c&&(d=f.source),g=!0,m=r(l.key,d.key,l.attributes,d.attributes,f.key,f.attributes,f.undirected),i&&m)return f;f=f.next}while(f)}}if(t&&!g&&(m=r(l.key,null,l.attributes,null,null,null,null),i&&m))return null}}function lw(i,e){const t={key:i};return pd(e.attributes)||(t.attributes=Ft({},e.attributes)),t}function cw(i,e){const t={key:i,source:e.source.key,target:e.target.key};return pd(e.attributes)||(t.attributes=Ft({},e.attributes)),e.undirected&&(t.undirected=!0),t}function uw(i){if(!Vt(i))throw new Ee('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in i))throw new Ee("Graph.import: serialized node is missing its key.");if("attributes"in i&&(!Vt(i.attributes)||i.attributes===null))throw new Ee("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.")}function fw(i){if(!Vt(i))throw new Ee('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in i))throw new Ee("Graph.import: serialized edge is missing its source.");if(!("target"in i))throw new Ee("Graph.import: serialized edge is missing its target.");if("attributes"in i&&(!Vt(i.attributes)||i.attributes===null))throw new Ee("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in i&&typeof i.undirected!="boolean")throw new Ee("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.")}const dw=pb(),hw=new Set(["directed","undirected","mixed"]),ou=new Set(["domain","_events","_eventsCount","_maxListeners"]),pw=[{name:i=>`${i}Edge`,generateKey:!0},{name:i=>`${i}DirectedEdge`,generateKey:!0,type:"directed"},{name:i=>`${i}UndirectedEdge`,generateKey:!0,type:"undirected"},{name:i=>`${i}EdgeWithKey`},{name:i=>`${i}DirectedEdgeWithKey`,type:"directed"},{name:i=>`${i}UndirectedEdgeWithKey`,type:"undirected"}],mw={allowSelfLoops:!0,multi:!1,type:"mixed"};function gw(i,e,t){if(t&&!Vt(t))throw new Ee(`Graph.addNode: invalid attributes. Expecting an object but got "${t}"`);if(e=""+e,t=t||{},i._nodes.has(e))throw new Ue(`Graph.addNode: the "${e}" node already exist in the graph.`);const n=new i.NodeDataClass(e,t);return i._nodes.set(e,n),i.emit("nodeAdded",{key:e,attributes:t}),n}function au(i,e,t){const n=new i.NodeDataClass(e,t);return i._nodes.set(e,n),i.emit("nodeAdded",{key:e,attributes:t}),n}function xd(i,e,t,n,r,s,o,a){if(!n&&i.type==="undirected")throw new Ue(`Graph.${e}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`);if(n&&i.type==="directed")throw new Ue(`Graph.${e}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`);if(a&&!Vt(a))throw new Ee(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`);if(s=""+s,o=""+o,a=a||{},!i.allowSelfLoops&&s===o)throw new Ue(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);const l=i._nodes.get(s),c=i._nodes.get(o);if(!l)throw new pe(`Graph.${e}: source node "${s}" not found.`);if(!c)throw new pe(`Graph.${e}: target node "${o}" not found.`);const u={key:null,undirected:n,source:s,target:o,attributes:a};if(t)r=i._edgeKeyGenerator();else if(r=""+r,i._edges.has(r))throw new Ue(`Graph.${e}: the "${r}" edge already exists in the graph.`);if(!i.multi&&(n?typeof l.undirected[o]<"u":typeof l.out[o]<"u"))throw new Ue(`Graph.${e}: an edge linking "${s}" to "${o}" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`);const f=new Ir(n,r,l,c,a);i._edges.set(r,f);const d=s===o;return n?(l.undirectedDegree++,c.undirectedDegree++,d&&i._undirectedSelfLoopCount++):(l.outDegree++,c.inDegree++,d&&i._directedSelfLoopCount++),i.multi?f.attachMulti():f.attach(),n?i._undirectedSize++:i._directedSize++,u.key=r,i.emit("edgeAdded",u),r}function _w(i,e,t,n,r,s,o,a,l){if(!n&&i.type==="undirected")throw new Ue(`Graph.${e}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`);if(n&&i.type==="directed")throw new Ue(`Graph.${e}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`);if(a){if(l){if(typeof a!="function")throw new Ee(`Graph.${e}: invalid updater function. Expecting a function but got "${a}"`)}else if(!Vt(a))throw new Ee(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`)}s=""+s,o=""+o;let c;if(l&&(c=a,a=void 0),!i.allowSelfLoops&&s===o)throw new Ue(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);let u=i._nodes.get(s),f=i._nodes.get(o),d,m;if(!t&&(d=i._edges.get(r),d)){if((d.source.key!==s||d.target.key!==o)&&(!n||d.source.key!==o||d.target.key!==s))throw new Ue(`Graph.${e}: inconsistency detected when attempting to merge the "${r}" edge with "${s}" source & "${o}" target vs. ("${d.source.key}", "${d.target.key}").`);m=d}if(!m&&!i.multi&&u&&(m=n?u.undirected[o]:u.out[o]),m){const w=[m.key,!1,!1,!1];if(l?!c:!a)return w;if(l){const y=m.attributes;m.attributes=c(y),i.emit("edgeAttributesUpdated",{type:"replace",key:m.key,attributes:m.attributes})}else Ft(m.attributes,a),i.emit("edgeAttributesUpdated",{type:"merge",key:m.key,attributes:m.attributes,data:a});return w}a=a||{},l&&c&&(a=c(a));const g={key:null,undirected:n,source:s,target:o,attributes:a};if(t)r=i._edgeKeyGenerator();else if(r=""+r,i._edges.has(r))throw new Ue(`Graph.${e}: the "${r}" edge already exists in the graph.`);let h=!1,p=!1;u||(u=au(i,s,{}),h=!0,s===o&&(f=u,p=!0)),f||(f=au(i,o,{}),p=!0),d=new Ir(n,r,u,f,a),i._edges.set(r,d);const _=s===o;return n?(u.undirectedDegree++,f.undirectedDegree++,_&&i._undirectedSelfLoopCount++):(u.outDegree++,f.inDegree++,_&&i._directedSelfLoopCount++),i.multi?d.attachMulti():d.attach(),n?i._undirectedSize++:i._directedSize++,g.key=r,i.emit("edgeAdded",g),[r,!0,h,p]}function dr(i,e){i._edges.delete(e.key);const{source:t,target:n,attributes:r}=e,s=e.undirected,o=t===n;s?(t.undirectedDegree--,n.undirectedDegree--,o&&i._undirectedSelfLoopCount--):(t.outDegree--,n.inDegree--,o&&i._directedSelfLoopCount--),i.multi?e.detachMulti():e.detach(),s?i._undirectedSize--:i._directedSize--,i.emit("edgeDropped",{key:e.key,attributes:r,source:t.key,target:n.key,undirected:s})}class At extends Ka.exports.EventEmitter{constructor(e){if(super(),e=Ft({},mw,e),typeof e.multi!="boolean")throw new Ee(`Graph.constructor: invalid 'multi' option. Expecting a boolean but got "${e.multi}".`);if(!hw.has(e.type))throw new Ee(`Graph.constructor: invalid 'type' option. Should be one of "mixed", "directed" or "undirected" but got "${e.type}".`);if(typeof e.allowSelfLoops!="boolean")throw new Ee(`Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got "${e.allowSelfLoops}".`);const t=e.type==="mixed"?md:e.type==="directed"?gd:_d;gn(this,"NodeDataClass",t);const n="geid_"+dw()+"_";let r=0;const s=()=>{let o;do o=n+r++;while(this._edges.has(o));return o};gn(this,"_attributes",{}),gn(this,"_nodes",new Map),gn(this,"_edges",new Map),gn(this,"_directedSize",0),gn(this,"_undirectedSize",0),gn(this,"_directedSelfLoopCount",0),gn(this,"_undirectedSelfLoopCount",0),gn(this,"_edgeKeyGenerator",s),gn(this,"_options",e),ou.forEach(o=>gn(this,o,this[o])),Rn(this,"order",()=>this._nodes.size),Rn(this,"size",()=>this._edges.size),Rn(this,"directedSize",()=>this._directedSize),Rn(this,"undirectedSize",()=>this._undirectedSize),Rn(this,"selfLoopCount",()=>this._directedSelfLoopCount+this._undirectedSelfLoopCount),Rn(this,"directedSelfLoopCount",()=>this._directedSelfLoopCount),Rn(this,"undirectedSelfLoopCount",()=>this._undirectedSelfLoopCount),Rn(this,"multi",this._options.multi),Rn(this,"type",this._options.type),Rn(this,"allowSelfLoops",this._options.allowSelfLoops),Rn(this,"implementation",()=>"graphology")}_resetInstanceCounters(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0}hasNode(e){return this._nodes.has(""+e)}hasDirectedEdge(e,t){if(this.type==="undirected")return!1;if(arguments.length===1){const n=""+e,r=this._edges.get(n);return!!r&&!r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;const r=n.out[t];return r?this.multi?!!r.size:!0:!1}throw new Ee(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasUndirectedEdge(e,t){if(this.type==="directed")return!1;if(arguments.length===1){const n=""+e,r=this._edges.get(n);return!!r&&r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;const r=n.undirected[t];return r?this.multi?!!r.size:!0:!1}throw new Ee(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasEdge(e,t){if(arguments.length===1){const n=""+e;return this._edges.has(n)}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;let r=typeof n.out<"u"&&n.out[t];return r||(r=typeof n.undirected<"u"&&n.undirected[t]),r?this.multi?!!r.size:!0:!1}throw new Ee(`Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}directedEdge(e,t){if(this.type==="undirected")return;if(e=""+e,t=""+t,this.multi)throw new Ue("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");const n=this._nodes.get(e);if(!n)throw new pe(`Graph.directedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new pe(`Graph.directedEdge: could not find the "${t}" target node in the graph.`);const r=n.out&&n.out[t]||void 0;if(r)return r.key}undirectedEdge(e,t){if(this.type==="directed")return;if(e=""+e,t=""+t,this.multi)throw new Ue("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");const n=this._nodes.get(e);if(!n)throw new pe(`Graph.undirectedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new pe(`Graph.undirectedEdge: could not find the "${t}" target node in the graph.`);const r=n.undirected&&n.undirected[t]||void 0;if(r)return r.key}edge(e,t){if(this.multi)throw new Ue("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.edge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new pe(`Graph.edge: could not find the "${t}" target node in the graph.`);const r=n.out&&n.out[t]||n.undirected&&n.undirected[t]||void 0;if(r)return r.key}areDirectedNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areDirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.in||t in n.out}areOutNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areOutNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.out}areInNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areInNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.in}areUndirectedNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areUndirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="directed"?!1:t in n.undirected}areNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&(t in n.in||t in n.out)||this.type!=="directed"&&t in n.undirected}areInboundNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areInboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in n.in||this.type!=="directed"&&t in n.undirected}areOutboundNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new pe(`Graph.areOutboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in n.out||this.type!=="directed"&&t in n.undirected}inDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.inDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree}outDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.outDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree}directedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.directedDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree}undirectedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.undirectedDegree: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree}inboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.inboundDegree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.inDegree),n}outboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.outboundDegree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.outDegree),n}degree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.degree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.inDegree+t.outDegree),n}inDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.inDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.in[e],r=n?this.multi?n.size:1:0;return t.inDegree-r}outDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.outDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.out[e],r=n?this.multi?n.size:1:0;return t.outDegree-r}directedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.directedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.out[e],r=n?this.multi?n.size:1:0;return t.inDegree+t.outDegree-r*2}undirectedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.undirectedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="directed")return 0;const n=t.undirected[e],r=n?this.multi?n.size:1:0;return t.undirectedDegree-r*2}inboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.inboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.inDegree,n=t.out[e],s+=n?this.multi?n.size:1:0),r-s}outboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.outboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.outDegree,n=t.in[e],s+=n?this.multi?n.size:1:0),r-s}degreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.degreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.inDegree+t.outDegree,n=t.out[e],s+=(n?this.multi?n.size:1:0)*2),r-s}source(e){e=""+e;const t=this._edges.get(e);if(!t)throw new pe(`Graph.source: could not find the "${e}" edge in the graph.`);return t.source.key}target(e){e=""+e;const t=this._edges.get(e);if(!t)throw new pe(`Graph.target: could not find the "${e}" edge in the graph.`);return t.target.key}extremities(e){e=""+e;const t=this._edges.get(e);if(!t)throw new pe(`Graph.extremities: could not find the "${e}" edge in the graph.`);return[t.source.key,t.target.key]}opposite(e,t){e=""+e,t=""+t;const n=this._edges.get(t);if(!n)throw new pe(`Graph.opposite: could not find the "${t}" edge in the graph.`);const r=n.source.key,s=n.target.key;if(e===r)return s;if(e===s)return r;throw new pe(`Graph.opposite: the "${e}" node is not attached to the "${t}" edge (${r}, ${s}).`)}hasExtremity(e,t){e=""+e,t=""+t;const n=this._edges.get(e);if(!n)throw new pe(`Graph.hasExtremity: could not find the "${e}" edge in the graph.`);return n.source.key===t||n.target.key===t}isUndirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new pe(`Graph.isUndirected: could not find the "${e}" edge in the graph.`);return t.undirected}isDirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new pe(`Graph.isDirected: could not find the "${e}" edge in the graph.`);return!t.undirected}isSelfLoop(e){e=""+e;const t=this._edges.get(e);if(!t)throw new pe(`Graph.isSelfLoop: could not find the "${e}" edge in the graph.`);return t.source===t.target}addNode(e,t){return gw(this,e,t).key}mergeNode(e,t){if(t&&!Vt(t))throw new Ee(`Graph.mergeNode: invalid attributes. Expecting an object but got "${t}"`);e=""+e,t=t||{};let n=this._nodes.get(e);return n?(t&&(Ft(n.attributes,t),this.emit("nodeAttributesUpdated",{type:"merge",key:e,attributes:n.attributes,data:t})),[e,!1]):(n=new this.NodeDataClass(e,t),this._nodes.set(e,n),this.emit("nodeAdded",{key:e,attributes:t}),[e,!0])}updateNode(e,t){if(t&&typeof t!="function")throw new Ee(`Graph.updateNode: invalid updater function. Expecting a function but got "${t}"`);e=""+e;let n=this._nodes.get(e);if(n){if(t){const s=n.attributes;n.attributes=t(s),this.emit("nodeAttributesUpdated",{type:"replace",key:e,attributes:n.attributes})}return[e,!1]}const r=t?t({}):{};return n=new this.NodeDataClass(e,r),this._nodes.set(e,n),this.emit("nodeAdded",{key:e,attributes:r}),[e,!0]}dropNode(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new pe(`Graph.dropNode: could not find the "${e}" node in the graph.`);let n;if(this.type!=="undirected"){for(const r in t.out){n=t.out[r];do dr(this,n),n=n.next;while(n)}for(const r in t.in){n=t.in[r];do dr(this,n),n=n.next;while(n)}}if(this.type!=="directed")for(const r in t.undirected){n=t.undirected[r];do dr(this,n),n=n.next;while(n)}this._nodes.delete(e),this.emit("nodeDropped",{key:e,attributes:t.attributes})}dropEdge(e){let t;if(arguments.length>1){const n=""+arguments[0],r=""+arguments[1];if(t=Sn(this,n,r,this.type),!t)throw new pe(`Graph.dropEdge: could not find the "${n}" -> "${r}" edge in the graph.`)}else if(e=""+e,t=this._edges.get(e),!t)throw new pe(`Graph.dropEdge: could not find the "${e}" edge in the graph.`);return dr(this,t),this}dropDirectedEdge(e,t){if(arguments.length<2)throw new Ue("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new Ue("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");e=""+e,t=""+t;const n=Sn(this,e,t,"directed");if(!n)throw new pe(`Graph.dropDirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return dr(this,n),this}dropUndirectedEdge(e,t){if(arguments.length<2)throw new Ue("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new Ue("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");const n=Sn(this,e,t,"undirected");if(!n)throw new pe(`Graph.dropUndirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return dr(this,n),this}clear(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")}clearEdges(){const e=this._nodes.values();let t;for(;t=e.next(),t.done!==!0;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")}getAttribute(e){return this._attributes[e]}getAttributes(){return this._attributes}hasAttribute(e){return this._attributes.hasOwnProperty(e)}setAttribute(e,t){return this._attributes[e]=t,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}updateAttribute(e,t){if(typeof t!="function")throw new Ee("Graph.updateAttribute: updater should be a function.");const n=this._attributes[e];return this._attributes[e]=t(n),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}removeAttribute(e){return delete this._attributes[e],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:e}),this}replaceAttributes(e){if(!Vt(e))throw new Ee("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=e,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this}mergeAttributes(e){if(!Vt(e))throw new Ee("Graph.mergeAttributes: provided attributes are not a plain object.");return Ft(this._attributes,e),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:e}),this}updateAttributes(e){if(typeof e!="function")throw new Ee("Graph.updateAttributes: provided updater is not a function.");return this._attributes=e(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this}updateEachNodeAttributes(e,t){if(typeof e!="function")throw new Ee("Graph.updateEachNodeAttributes: expecting an updater function.");if(t&&!su(t))throw new Ee("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const n=this._nodes.values();let r,s;for(;r=n.next(),r.done!==!0;)s=r.value,s.attributes=e(s.key,s.attributes);this.emit("eachNodeAttributesUpdated",{hints:t||null})}updateEachEdgeAttributes(e,t){if(typeof e!="function")throw new Ee("Graph.updateEachEdgeAttributes: expecting an updater function.");if(t&&!su(t))throw new Ee("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const n=this._edges.values();let r,s,o,a;for(;r=n.next(),r.done!==!0;)s=r.value,o=s.source,a=s.target,s.attributes=e(s.key,s.attributes,o.key,a.key,o.attributes,a.attributes,s.undirected);this.emit("eachEdgeAttributesUpdated",{hints:t||null})}forEachAdjacencyEntry(e){if(typeof e!="function")throw new Ee("Graph.forEachAdjacencyEntry: expecting a callback.");Vs(!1,!1,!1,this,e)}forEachAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new Ee("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");Vs(!1,!1,!0,this,e)}forEachAssymetricAdjacencyEntry(e){if(typeof e!="function")throw new Ee("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");Vs(!1,!0,!1,this,e)}forEachAssymetricAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new Ee("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");Vs(!1,!0,!0,this,e)}nodes(){return typeof Array.from=="function"?Array.from(this._nodes.keys()):hd(this._nodes.keys(),this._nodes.size)}forEachNode(e){if(typeof e!="function")throw new Ee("Graph.forEachNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)r=n.value,e(r.key,r.attributes)}findNode(e){if(typeof e!="function")throw new Ee("Graph.findNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,e(r.key,r.attributes))return r.key}mapNodes(e){if(typeof e!="function")throw new Ee("Graph.mapNode: expecting a callback.");const t=this._nodes.values();let n,r;const s=new Array(this.order);let o=0;for(;n=t.next(),n.done!==!0;)r=n.value,s[o++]=e(r.key,r.attributes);return s}someNode(e){if(typeof e!="function")throw new Ee("Graph.someNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,e(r.key,r.attributes))return!0;return!1}everyNode(e){if(typeof e!="function")throw new Ee("Graph.everyNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,!e(r.key,r.attributes))return!1;return!0}filterNodes(e){if(typeof e!="function")throw new Ee("Graph.filterNodes: expecting a callback.");const t=this._nodes.values();let n,r;const s=[];for(;n=t.next(),n.done!==!0;)r=n.value,e(r.key,r.attributes)&&s.push(r.key);return s}reduceNodes(e,t){if(typeof e!="function")throw new Ee("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new Ee("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");let n=t;const r=this._nodes.values();let s,o;for(;s=r.next(),s.done!==!0;)o=s.value,n=e(n,o.key,o.attributes);return n}nodeEntries(){const e=this._nodes.values();return new ln(()=>{const t=e.next();if(t.done)return t;const n=t.value;return{value:{node:n.key,attributes:n.attributes},done:!1}})}export(){const e=new Array(this._nodes.size);let t=0;this._nodes.forEach((r,s)=>{e[t++]=lw(s,r)});const n=new Array(this._edges.size);return t=0,this._edges.forEach((r,s)=>{n[t++]=cw(s,r)}),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:n}}import(e,t=!1){if(hb(e))return e.forEachNode((l,c)=>{t?this.mergeNode(l,c):this.addNode(l,c)}),e.forEachEdge((l,c,u,f,d,m,g)=>{t?g?this.mergeUndirectedEdgeWithKey(l,u,f,c):this.mergeDirectedEdgeWithKey(l,u,f,c):g?this.addUndirectedEdgeWithKey(l,u,f,c):this.addDirectedEdgeWithKey(l,u,f,c)}),this;if(!Vt(e))throw new Ee("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(e.attributes){if(!Vt(e.attributes))throw new Ee("Graph.import: invalid attributes. Expecting a plain object.");t?this.mergeAttributes(e.attributes):this.replaceAttributes(e.attributes)}let n,r,s,o,a;if(e.nodes){if(s=e.nodes,!Array.isArray(s))throw new Ee("Graph.import: invalid nodes. Expecting an array.");for(n=0,r=s.length;n<r;n++){o=s[n],uw(o);const{key:l,attributes:c}=o;t?this.mergeNode(l,c):this.addNode(l,c)}}if(e.edges){if(s=e.edges,!Array.isArray(s))throw new Ee("Graph.import: invalid edges. Expecting an array.");for(n=0,r=s.length;n<r;n++){a=s[n],fw(a);const{source:l,target:c,attributes:u,undirected:f=!1}=a;let d;"key"in a?(d=t?f?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:f?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey,d.call(this,a.key,l,c,u)):(d=t?f?this.mergeUndirectedEdge:this.mergeDirectedEdge:f?this.addUndirectedEdge:this.addDirectedEdge,d.call(this,l,c,u))}}return this}nullCopy(e){const t=new At(Ft({},this._options,e));return t.replaceAttributes(Ft({},this.getAttributes())),t}emptyCopy(e){const t=this.nullCopy(e);return this._nodes.forEach((n,r)=>{const s=Ft({},n.attributes);n=new t.NodeDataClass(r,s),t._nodes.set(r,n)}),t}copy(e){if(e=e||{},typeof e.type=="string"&&e.type!==this.type&&e.type!=="mixed")throw new Ue(`Graph.copy: cannot create an incompatible copy from "${this.type}" type to "${e.type}" because this would mean losing information about the current graph.`);if(typeof e.multi=="boolean"&&e.multi!==this.multi&&e.multi!==!0)throw new Ue("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if(typeof e.allowSelfLoops=="boolean"&&e.allowSelfLoops!==this.allowSelfLoops&&e.allowSelfLoops!==!0)throw new Ue("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");const t=this.emptyCopy(e),n=this._edges.values();let r,s;for(;r=n.next(),r.done!==!0;)s=r.value,xd(t,"copy",!1,s.undirected,s.key,s.source.key,s.target.key,Ft({},s.attributes));return t}toJSON(){return this.export()}toString(){return"[object Graph]"}inspect(){const e={};this._nodes.forEach((s,o)=>{e[o]=s.attributes});const t={},n={};this._edges.forEach((s,o)=>{const a=s.undirected?"--":"->";let l="",c=s.source.key,u=s.target.key,f;s.undirected&&c>u&&(f=c,c=u,u=f);const d=`(${c})${a}(${u})`;o.startsWith("geid_")?this.multi&&(typeof n[d]>"u"?n[d]=0:n[d]++,l+=`${n[d]}. `):l+=`[${o}]: `,l+=d,t[l]=s.attributes});const r={};for(const s in this)this.hasOwnProperty(s)&&!ou.has(s)&&typeof this[s]!="function"&&typeof s!="symbol"&&(r[s]=this[s]);return r.attributes=this._attributes,r.nodes=e,r.edges=t,gn(r,"constructor",this.constructor),r}}typeof Symbol<"u"&&(At.prototype[Symbol.for("nodejs.util.inspect.custom")]=At.prototype.inspect);pw.forEach(i=>{["add","merge","update"].forEach(e=>{const t=i.name(e),n=e==="add"?xd:_w;i.generateKey?At.prototype[t]=function(r,s,o){return n(this,t,!0,(i.type||this.type)==="undirected",null,r,s,o,e==="update")}:At.prototype[t]=function(r,s,o,a){return n(this,t,!1,(i.type||this.type)==="undirected",r,s,o,a,e==="update")}})});Ab(At);Fb(At);$b(At);aw(At);class Md extends At{constructor(e){const t=Ft({type:"directed"},e);if("multi"in t&&t.multi!==!1)throw new Ee("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="directed")throw new Ee('DirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Sd extends At{constructor(e){const t=Ft({type:"undirected"},e);if("multi"in t&&t.multi!==!1)throw new Ee("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="undirected")throw new Ee('UndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Ed extends At{constructor(e){const t=Ft({multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Ee("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");super(t)}}class nl extends At{constructor(e){const t=Ft({type:"directed",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Ee("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="directed")throw new Ee('MultiDirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Ad extends At{constructor(e){const t=Ft({type:"undirected",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Ee("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="undirected")throw new Ee('MultiUndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}function Or(i){i.from=function(e,t){const n=Ft({},e.options,t),r=new i(n);return r.import(e),r}}Or(At);Or(Md);Or(Sd);Or(Ed);Or(nl);Or(Ad);At.Graph=At;At.DirectedGraph=Md;At.UndirectedGraph=Sd;At.MultiGraph=Ed;At.MultiDirectedGraph=nl;At.MultiUndirectedGraph=Ad;At.InvalidArgumentsGraphError=Ee;At.NotFoundGraphError=pe;At.UsageGraphError=Ue;function lu(i){var t;let e=new nl;return e.import({attributes:{name:(t=i.id)!=null?t:"name-"+Math.floor(Math.random()*1e9),id:i.name},options:{allowSelfLoops:!0,multi:!0,type:"directed"},nodes:i.nodes.map(n=>({key:n.id,attributes:{...n}})),edges:i.links.map(n=>{let r=typeof n.source=="string"?n.source:n.source.id,s=typeof n.target=="string"?n.target:n.target.id;return{key:n.key,source:r,target:s,undirected:!1,attributes:{...n}}})}),e}function cu(i,e){i.updateEachNodeAttributes((r,s)=>{var o;return{...s,x:s.x*e,y:s.y*e,z:s.z*e,maxAbsFC:(o=s==null?void 0:s.maxAbsFC)!=null?o:0}});const t=new Intl.Collator("en",{numeric:!0,sensitivity:"base"});let n=[];return i.forEachNode(r=>{i.forEachNeighbor(r,s=>{if(n.includes(s))return;let o=0;i.someEdge(r,s,a=>{i.setEdgeAttribute(a,"multiNumber",o),o++}),i.someEdge(r,s,a=>{i.setEdgeAttribute(a,"multiTotal",o)})}),n.push(r)}),i.updateEachEdgeAttributes((r,s,o,a,l,c)=>{const u=t.compare(o,a),f=s.multiTotal,d=s.multiNumber;let m=0,g=0;f>1&&(m=.5,g=d/f*2*Math.PI,u===1&&(g=Math.PI-g)),u===0&&(m=.5);let h=new G(l.x,l.y,l.z),p=new G(c.x,c.y,c.z),_=h.lerp(p,.5),w=p.clone().add(h.clone().multiplyScalar(-1)),y=new $s().setFromVector3(w);const b=new G().subVectors(p,h),x=new iv(b.clone().normalize(),p),M=new G(x.rotation.x,x.rotation.y,x.rotation.z);return{curve:m,curveRotation:g,isFirstLink:d===0,cylLength:2*y.radius,cylPos:_,cylRot:M,dotForwards:p.dot(h),...s}}),i}function vw(i,e){let t=e.data;if(t===void 0)return i.updateEachEdgeAttributes((n,r)=>(r.fc=void 0,r.err=void 0,r)),i;{let n=t.sort((s,o)=>s.site===o.site?0:s.site==="Pan-specific"?-1:1),r=Object.fromEntries(i.mapNodes(s=>[s,0]));return i.updateEachEdgeAttributes((s,o,a,l,c,u)=>{var g;let f=n.slice().find(h=>h.targetid===l),d=n.slice().find(h=>h.targetid===l&&h.site===o.substratePhosphosite);d!==void 0&&(f=d),o.fc=f==null?void 0:f.fc,o.err=f==null?void 0:f.err;let m=Math.abs((g=o==null?void 0:o.fc)!=null?g:0);return m>r[a]&&(r[a]=m),m>r[l]&&(r[l]=m),o}),i.updateEachNodeAttributes((s,o)=>({...o,maxAbsFC:r[s]})),i}}let La=ot(!1),Da=ot("settings"),Pa=ot(!1),eo=ot(!0),to=ot(!0),is=ot(2),Zr=ot(void 0),bw=ot(100),Ra=ot(void 0),Td=ot(void 0),rs=_n([Td,Ra,bw],(i,e)=>{if(!i[0])e(void 0);else{let t=cu(lu(i[0]),i[2]);t.setAttribute("hasFC",!1),t.setAttribute("id",i[0].id),console.log("reload"),console.log("id: ",i[0].id),e(t)}if(i[0]&&i[1]){console.log("setting FC");let t=cu(vw(lu(i[0]),i[1]),100);t.setAttribute("hasFC",!0),t.setAttribute("id",i[0].id+"_"+i[1].id),console.log("reload"),console.log("id-2: ",i[0].id+"_"+i[1].id),e(t)}});function uu(i){let e,t;return e=new Q1({props:{transform:!0,sprite:!0,scale:2*i[6],pointerEvents:"none",$$slots:{default:[ww]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,r){const s={};r&64&&(s.scale=2*n[6]),r&33554460&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function ww(i){let e,t,n,r,s;return{c(){e=Ae("div"),t=Ae("h1"),t.textContent=`${i[8].name}`,J(e,"class",r=kt("base "+(i[2]?"neighbour ":"")+(i[4]?"clicked ":"")+(i[3]?"hovering ":""))+" svelte-1iujuck")},m(o,a){ge(o,e,a),ae(e,t),s=!0},p(o,a){(!s||a&28&&r!==(r=kt("base "+(o[2]?"neighbour ":"")+(o[4]?"clicked ":"")+(o[3]?"hovering ":""))+" svelte-1iujuck"))&&J(e,"class",r)},i(o){s||(Sr(()=>{n||(n=ll(t,$c,{},!0)),n.run(1)}),s=!0)},o(o){n||(n=ll(t,$c,{},!1)),n.run(0),s=!1},d(o){o&&fe(e),o&&n&&n.end()}}}function yw(i){let e,t,n=!i[1]&&(i[6]>1||i[2]||i[4])&&uu(i);return{c(){n&&n.c(),e=Kt()},m(r,s){n&&n.m(r,s),ge(r,e,s),t=!0},p(r,s){!r[1]&&(r[6]>1||r[2]||r[4])?n?(n.p(r,s),s&86&&W(n,1)):(n=uu(r),n.c(),W(n,1),n.m(e.parentNode,e)):n&&(St(),K(n,1,1,()=>{n=null}),Et())},i(r){t||(W(n),t=!0)},o(r){K(n),t=!1},d(r){n&&n.d(r),r&&fe(e)}}}function xw(i){let e,t;return e=new P1({props:{position:{...i[9]},scale:i[6],color:i[1]?new Xe(5263440):i[7],$$slots:{default:[yw]},$$scope:{ctx:i}}}),e.$on("pointerenter",i[15]),e.$on("pointerleave",i[16]),e.$on("click",i[17]),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,[r]){const s={};r&64&&(s.scale=n[6]),r&130&&(s.color=n[1]?new Xe(5263440):n[7]),r&33554526&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Mw(i,e,t){var F,L;let n,r,s,o,a;Fe(i,is,O=>t(13,n=O)),Fe(i,Zr,O=>t(5,r=O)),Fe(i,rs,O=>t(14,s=O));let{graph:l}=e,{nodeID:c}=e,{greyedOut:u}=e;const f={kinase:"#FF3E00",substrate:"#008080",selected:"#FED000",Kinase:void 0,"Ser/Thr/Tyr Kinase":void 0,"Tyr Kinase":void 0,"Ser/Thr Kinase":void 0,Unclassified:void 0,Transcription:void 0,Regulatory:"#FFC0CB",Structural:void 0,Metabolic:void 0,Phosphatase:void 0,"Adapter/scaffold":void 0,Cytosketetal:void 0},d=l.getNodeAttributes(c),m=l.neighbors(c);let g=!1;const h={x:d.x,y:d.y,z:d.z},p=(F=d.radius)!=null?F:1;let _=!1,w=!1;const y=Qc(p);Fe(i,y,O=>t(6,o=O));const b=Qc(0);let x;d.isKinase?x=f.kinase:x=f.substrate;let M=new Xe((L=f[d.type])!=null?L:x),P=new Xe(f.selected);const v=_n(b,O=>new Xe().lerpColors(M,P,O));Fe(i,v,O=>t(7,a=O));const E=()=>{t(3,_=!0),Qt(Zr,r=c,r)},S=()=>{t(3,_=!1),Qt(Zr,r=void 0,r)},k=()=>{t(4,w=!w)};return i.$$set=O=>{"graph"in O&&t(12,l=O.graph),"nodeID"in O&&t(0,c=O.nodeID),"greyedOut"in O&&t(1,u=O.greyedOut)},i.$$.update=()=>{if(i.$$.dirty&24613)if(r){let O=s.getAttribute("hasFC");t(2,g=m.includes(r)),O&&g&&t(2,g=s.reduceEdges(r,c,(I,R,Y)=>Math.abs(Y.fc)>n,!1)||s.reduceEdges(c,r,(I,R,Y)=>Math.abs(Y.fc)>n,!1))}else t(2,g=!1);i.$$.dirty&30&&(!u&&(_||g||w)?(y.set(p*3,{duration:50,easing:Kc}),_&&b.set(1,{duration:0})):(y.set(p,{duration:250,easing:Kc}),b.set(0,{duration:250})))},[c,u,g,_,w,r,o,a,d,h,y,v,l,n,s,E,S,k]}class Cd extends Ze{constructor(e){super(),Ye(this,e,Mw,xw,He,{graph:12,nodeID:0,greyedOut:1})}}function fu(i,e,t){const n=i.slice();return n[7]=e[t],n}function du(i,e,t){const n=i.slice();return n[7]=e[t],n}function hu(i,e){let t,n,r;return n=new Cd({props:{graph:e[4],nodeID:e[7],greyedOut:!1}}),{key:i,first:null,c(){t=Kt(),Re(n.$$.fragment),this.first=t},m(s,o){ge(s,t,o),De(n,s,o),r=!0},p(s,o){e=s;const a={};o&16&&(a.graph=e[4]),o&8&&(a.nodeID=e[7]),n.$set(a)},i(s){r||(W(n.$$.fragment,s),r=!0)},o(s){K(n.$$.fragment,s),r=!1},d(s){s&&fe(t),Pe(n,s)}}}function Sw(i){let e=[],t=new Map,n,r,s=i[3][0];const o=a=>a[7]+"_"+String(a[4].getAttribute("id"));for(let a=0;a<s.length;a+=1){let l=du(i,s,a),c=o(l);t.set(c,e[a]=hu(c,l))}return{c(){for(let a=0;a<e.length;a+=1)e[a].c();n=Kt()},m(a,l){for(let c=0;c<e.length;c+=1)e[c].m(a,l);ge(a,n,l),r=!0},p(a,l){l&24&&(s=a[3][0],St(),e=vf(e,l,o,1,a,s,t,n.parentNode,_f,hu,n,du),Et())},i(a){if(!r){for(let l=0;l<s.length;l+=1)W(e[l]);r=!0}},o(a){for(let l=0;l<e.length;l+=1)K(e[l]);r=!1},d(a){for(let l=0;l<e.length;l+=1)e[l].d(a);a&&fe(n)}}}function pu(i){let e,t;return e=new td({props:{geometry:i[0],material:i[2],ignorePointer:!0,$$slots:{default:[Ew]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,r){const s={};r&1&&(s.geometry=n[0]),r&4&&(s.material=n[2]),r&4120&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function mu(i,e){let t,n,r;return n=new Cd({props:{graph:e[4],nodeID:e[7],greyedOut:!0}}),{key:i,first:null,c(){t=Kt(),Re(n.$$.fragment),this.first=t},m(s,o){ge(s,t,o),De(n,s,o),r=!0},p(s,o){e=s;const a={};o&16&&(a.graph=e[4]),o&8&&(a.nodeID=e[7]),n.$set(a)},i(s){r||(W(n.$$.fragment,s),r=!0)},o(s){K(n.$$.fragment,s),r=!1},d(s){s&&fe(t),Pe(n,s)}}}function Ew(i){let e=[],t=new Map,n,r,s=i[3][1];const o=a=>a[7]+"_ghost_"+String(a[4].getAttribute("id"));for(let a=0;a<s.length;a+=1){let l=fu(i,s,a),c=o(l);t.set(c,e[a]=mu(c,l))}return{c(){for(let a=0;a<e.length;a+=1)e[a].c();n=Kt()},m(a,l){for(let c=0;c<e.length;c+=1)e[c].m(a,l);ge(a,n,l),r=!0},p(a,l){l&24&&(s=a[3][1],St(),e=vf(e,l,o,1,a,s,t,n.parentNode,_f,mu,n,fu),Et())},i(a){if(!r){for(let l=0;l<s.length;l+=1)W(e[l]);r=!0}},o(a){for(let l=0;l<e.length;l+=1)K(e[l]);r=!1},d(a){for(let l=0;l<e.length;l+=1)e[l].d(a);a&&fe(n)}}}function Aw(i){let e,t,n,r;e=new td({props:{geometry:i[0],material:i[1],interactive:!0,$$slots:{default:[Sw]},$$scope:{ctx:i}}});let s=i[5]&&pu(i);return{c(){Re(e.$$.fragment),t=ke(),s&&s.c(),n=Kt()},m(o,a){De(e,o,a),ge(o,t,a),s&&s.m(o,a),ge(o,n,a),r=!0},p(o,[a]){const l={};a&1&&(l.geometry=o[0]),a&2&&(l.material=o[1]),a&4120&&(l.$$scope={dirty:a,ctx:o}),e.$set(l),o[5]?s?(s.p(o,a),a&32&&W(s,1)):(s=pu(o),s.c(),W(s,1),s.m(n.parentNode,n)):s&&(St(),K(s,1,1,()=>{s=null}),Et())},i(o){r||(W(e.$$.fragment,o),W(s),r=!0)},o(o){K(e.$$.fragment,o),K(s),r=!1},d(o){Pe(e,o),o&&fe(t),s&&s.d(o),o&&fe(n)}}}function Tw(i,e,t){let n=new Set,r=new Set,s=i.getAttribute("hasFC");i.forEachEdge((l,c,u,f,d,m)=>{var g,h;!c.isFirstLink||u===f||(s?t?Math.abs((g=c==null?void 0:c.fc)!=null?g:0)>e?(n.add(u),n.add(f)):(r.add(u),r.add(f)):Math.abs((h=c==null?void 0:c.fc)!=null?h:0)>e?(d.isKinase&&n.add(u),m.isKinase&&n.add(f)):(d.isKinase&&r.add(u),m.isKinase&&r.add(f)):t?(n.add(u),n.add(f)):(d.isKinase&&n.add(u),m.isKinase&&n.add(f)))}),r=new Set([...r].filter(l=>!n.has(l)));let o=Array(...n),a=Array(...r);return[o,a]}function Cw(i,e,t){let n,r,s;Fe(i,rs,u=>t(4,r=u)),Fe(i,to,u=>t(5,s=u));let{nodeGeometry:o}=e,{nodeMaterial:a}=e,{transparentMaterial:l}=e,c=_n([rs,is,eo],(u,f)=>{f(Tw(u[0],u[1],u[2]))});return Fe(i,c,u=>t(3,n=u)),i.$$set=u=>{"nodeGeometry"in u&&t(0,o=u.nodeGeometry),"nodeMaterial"in u&&t(1,a=u.nodeMaterial),"transparentMaterial"in u&&t(2,l=u.transparentMaterial)},[o,a,l,n,r,s,c]}class Lw extends Ze{constructor(e){super(),Ye(this,e,Cw,Aw,He,{nodeGeometry:0,nodeMaterial:1,transparentMaterial:2})}}function gu(i){let e,t,n,r;return e=new ns({props:{mesh:i[3],ignorePointer:!0}}),n=new ns({props:{mesh:i[1],ignorePointer:!0}}),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment)},m(s,o){De(e,s,o),ge(s,t,o),De(n,s,o),r=!0},p(s,o){const a={};o&8&&(a.mesh=s[3]),e.$set(a);const l={};o&2&&(l.mesh=s[1]),n.$set(l)},i(s){r||(W(e.$$.fragment,s),W(n.$$.fragment,s),r=!0)},o(s){K(e.$$.fragment,s),K(n.$$.fragment,s),r=!1},d(s){Pe(e,s),s&&fe(t),Pe(n,s)}}}function Dw(i){let e,t,n,r,s,o=i[4]&&gu(i);return t=new ns({props:{mesh:i[2],ignorePointer:!0}}),r=new ns({props:{mesh:i[0],ignorePointer:!0}}),{c(){o&&o.c(),e=ke(),Re(t.$$.fragment),n=ke(),Re(r.$$.fragment)},m(a,l){o&&o.m(a,l),ge(a,e,l),De(t,a,l),ge(a,n,l),De(r,a,l),s=!0},p(a,[l]){a[4]?o?(o.p(a,l),l&16&&W(o,1)):(o=gu(a),o.c(),W(o,1),o.m(e.parentNode,e)):o&&(St(),K(o,1,1,()=>{o=null}),Et());const c={};l&4&&(c.mesh=a[2]),t.$set(c);const u={};l&1&&(u.mesh=a[0]),r.$set(u)},i(a){s||(W(o),W(t.$$.fragment,a),W(r.$$.fragment,a),s=!0)},o(a){K(o),K(t.$$.fragment,a),K(r.$$.fragment,a),s=!1},d(a){o&&o.d(a),a&&fe(e),Pe(t,a),a&&fe(n),Pe(r,a)}}}const Hs=10;function Pw(i,e,t){let n,r,s;Fe(i,is,b=>t(10,n=b)),Fe(i,Zr,b=>t(11,r=b)),Fe(i,to,b=>t(4,s=b));let{graph:o}=e,{width:a}=e,{showSubstrates:l}=e,{geometry:c}=e,{material:u}=e;const f=new Xe(2781850),d=new Xe(16738573),m=f.clone().lerp(d,.5).offsetHSL(0,-255,0),g=new Xe(16699392);let h,p,_,w,y=new ja(1,1,10);return i.$$set=b=>{"graph"in b&&t(5,o=b.graph),"width"in b&&t(6,a=b.width),"showSubstrates"in b&&t(7,l=b.showSubstrates),"geometry"in b&&t(8,c=b.geometry),"material"in b&&t(9,u=b.material)},i.$$.update=()=>{if(i.$$.dirty&4079&&(o||r)){const b=new Ys({opacity:.05,transparent:!0,color:m});t(0,h=new mr(c,u,1e4)),t(1,p=new mr(c,b,1e4)),t(2,_=new mr(y,u,1e4)),t(3,w=new mr(y,b,1e4));let x=o.getAttribute("hasFC"),M=0,P=0;o.forEachEdge((v,E,S,k,F,L)=>{var ve,qe,Q;if(!E.isFirstLink||S===k||!l&&!(F.isKinase&&L.isKinase))return;let O=!1;(r==S||r==k)&&(O=!0);const I=new G(F.x,F.y,F.z),R=new G(L.x,L.y,L.z),Y=(ve=F.radius)!=null?ve:1,Z=(qe=L.radius)!=null?qe:1,H=new G().subVectors(R,I),B=H.length(),j=I.clone().lerp(R.clone(),Y/B),ne=I.clone().lerp(R.clone(),1-(Z+Hs+Y)/B),se=I.clone().lerp(R.clone(),1-(Z+Hs/2+Y)/B),_e=j.clone().lerp(ne.clone(),.5),Me=ne.clone().add(j.clone().multiplyScalar(-1)),V=new $s().setFromVector3(Me);let ue=new wt,Te=new Si;Te.setFromUnitVectors(new G(0,1,0),H.normalize()),ue.compose(_e,Te,new G(a,V.radius,a));let ce=new wt;if(ce.compose(se,Te,new G(1.5,Hs,1.5)),!x)h.setMatrixAt(M,ue),h.setColorAt(M,O?g:m),_.setMatrixAt(M,ce),_.setColorAt(M,O?g:m),M++;else{let le=(Q=E==null?void 0:E.fc)!=null?Q:0,We=Math.min(Math.max(Math.abs(le),.1)/4,1),ze=3*a*We;ze=Math.abs(le)>n?ze:.25;let ut=Math.max(1.5*ze,.2);if(ue.compose(_e,Te,new G(ze,V.radius,ze)),ce.compose(se,Te,new G(ut,Hs,ut)),Math.abs(le)>n){let yt=le>0?d:le<0?f:m;h.setMatrixAt(M,ue),h.setColorAt(M,yt),_.setMatrixAt(M,ce),_.setColorAt(M,yt),M++}else p.setMatrixAt(P,ue),w.setMatrixAt(P,ce),P++}})}},[h,p,_,w,s,o,a,l,c,u,n,r]}class Rw extends Ze{constructor(e){super(),Ye(this,e,Pw,Dw,He,{graph:5,width:6,showSubstrates:7,geometry:8,material:9})}}function Iw(i){let e,t;return e=new r1({props:{autoRotate:i[0],enableZoom:!0,enableDamping:!1}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,r){const s={};r&1&&(s.autoRotate=n[0]),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function _u(i){let e,t,n,r;return e=new Rw({props:{geometry:i[5],material:i[6],width:Nw,graph:i[1],showSubstrates:i[2]}}),n=new Lw({props:{nodeGeometry:i[3],nodeMaterial:i[4],transparentMaterial:i[7]}}),{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment)},m(s,o){De(e,s,o),ge(s,t,o),De(n,s,o),r=!0},p(s,o){const a={};o&2&&(a.graph=s[1]),o&4&&(a.showSubstrates=s[2]),e.$set(a)},i(s){r||(W(e.$$.fragment,s),W(n.$$.fragment,s),r=!0)},o(s){K(e.$$.fragment,s),K(n.$$.fragment,s),r=!1},d(s){Pe(e,s),s&&fe(t),Pe(n,s)}}}function Ow(i){let e,t,n,r,s,o,a,l;e=new $v({props:{fov:50,far:1e10,position:{x:40,y:20,z:40},lookAt:{},$$slots:{default:[Iw]},$$scope:{ctx:i}}}),n=new g1({props:{color:16777215,intensity:.6,position:{x:500,y:500,z:500}}}),s=new d1({props:{color:10066329}});let c=i[1]&&_u(i);return{c(){Re(e.$$.fragment),t=ke(),Re(n.$$.fragment),r=ke(),Re(s.$$.fragment),o=ke(),c&&c.c(),a=Kt()},m(u,f){De(e,u,f),ge(u,t,f),De(n,u,f),ge(u,r,f),De(s,u,f),ge(u,o,f),c&&c.m(u,f),ge(u,a,f),l=!0},p(u,[f]){const d={};f&257&&(d.$$scope={dirty:f,ctx:u}),e.$set(d),u[1]?c?(c.p(u,f),f&2&&W(c,1)):(c=_u(u),c.c(),W(c,1),c.m(a.parentNode,a)):c&&(St(),K(c,1,1,()=>{c=null}),Et())},i(u){l||(W(e.$$.fragment,u),W(n.$$.fragment,u),W(s.$$.fragment,u),W(c),l=!0)},o(u){K(e.$$.fragment,u),K(n.$$.fragment,u),K(s.$$.fragment,u),K(c),l=!1},d(u){Pe(e,u),u&&fe(t),Pe(n,u),u&&fe(r),Pe(s,u),u&&fe(o),c&&c.d(u),u&&fe(a)}}}const kw=2,Nw=.5,Fw=5;function zw(i,e,t){let n,r,s;Fe(i,Pa,f=>t(0,n=f)),Fe(i,rs,f=>t(1,r=f)),Fe(i,eo,f=>t(2,s=f));const o=new Xa(kw,2),a=new Ys({opacity:.8,transparent:!1}),l=new us(1,1,1,Fw,1,!1),c=new Ys({opacity:.6,transparent:!0,color:"#9DAABC"}),u=new Ys({opacity:.1,transparent:!0,color:"#9DAABC"});return[n,r,s,o,a,l,c,u]}class Uw extends Ze{constructor(e){super(),Ye(this,e,zw,Ow,He,{})}}function vu(i){let e,t;return{c(){e=Xt("title"),t=Ct(i[0])},m(n,r){ge(n,e,r),ae(e,t)},p(n,r){r&1&&bn(t,n[0])},d(n){n&&fe(e)}}}function Gw(i){let e,t,n,r=i[0]&&vu(i);const s=i[3].default,o=dt(s,i,i[2],null);return{c(){e=Xt("svg"),r&&r.c(),t=Kt(),o&&o.c(),J(e,"xmlns","http://www.w3.org/2000/svg"),J(e,"viewBox",i[1]),J(e,"class","svelte-c8tyih")},m(a,l){ge(a,e,l),r&&r.m(e,null),ae(e,t),o&&o.m(e,null),n=!0},p(a,[l]){a[0]?r?r.p(a,l):(r=vu(a),r.c(),r.m(e,t)):r&&(r.d(1),r=null),o&&o.p&&(!n||l&4)&&pt(o,s,a,a[2],n?ht(s,a[2],l,null):mt(a[2]),null),(!n||l&2)&&J(e,"viewBox",a[1])},i(a){n||(W(o,a),n=!0)},o(a){K(o,a),n=!1},d(a){a&&fe(e),r&&r.d(),o&&o.d(a)}}}function Bw(i,e,t){let{$$slots:n={},$$scope:r}=e,{title:s=null}=e,{viewBox:o}=e;return i.$$set=a=>{"title"in a&&t(0,s=a.title),"viewBox"in a&&t(1,o=a.viewBox),"$$scope"in a&&t(2,r=a.$$scope)},[s,o,r,n]}class il extends Ze{constructor(e){super(),Ye(this,e,Bw,Gw,He,{title:0,viewBox:1})}}function Vw(i){let e;return{c(){e=Xt("path"),J(e,"d","M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z")},m(t,n){ge(t,e,n)},p:Qe,d(t){t&&fe(e)}}}function Hw(i){let e,t;const n=[{viewBox:"0 0 16 16"},i[0]];let r={$$slots:{default:[Vw]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=$t(r,n[s]);return e=new il({props:r}),{c(){Re(e.$$.fragment)},m(s,o){De(e,s,o),t=!0},p(s,[o]){const a=o&1?Dr(n,[n[0],Na(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(W(e.$$.fragment,s),t=!0)},o(s){K(e.$$.fragment,s),t=!1},d(s){Pe(e,s)}}}function Ww(i,e,t){return i.$$set=n=>{t(0,e=$t($t({},e),yr(n)))},e=yr(e),[e]}class jw extends Ze{constructor(e){super(),Ye(this,e,Ww,Hw,He,{})}}function qw(i){let e;return{c(){e=Xt("path"),J(e,"d","M4 7H3V2h1v5zm-1 7h1v-3H3v3zm5 0h1V8H8v6zm5 0h1v-2h-1v2zm1-12h-1v6h1V2zM9 2H8v2h1V2zM5 8H2c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm5-3H7c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm5 4h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1z")},m(t,n){ge(t,e,n)},p:Qe,d(t){t&&fe(e)}}}function Xw(i){let e,t;const n=[{viewBox:"0 0 16 16"},i[0]];let r={$$slots:{default:[qw]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=$t(r,n[s]);return e=new il({props:r}),{c(){Re(e.$$.fragment)},m(s,o){De(e,s,o),t=!0},p(s,[o]){const a=o&1?Dr(n,[n[0],Na(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(W(e.$$.fragment,s),t=!0)},o(s){K(e.$$.fragment,s),t=!1},d(s){Pe(e,s)}}}function Yw(i,e,t){return i.$$set=n=>{t(0,e=$t($t({},e),yr(n)))},e=yr(e),[e]}class Zw extends Ze{constructor(e){super(),Ye(this,e,Yw,Xw,He,{})}}function Kw(i){let e;return{c(){e=Xt("path"),J(e,"d","M363.6 36.48c-22.2 0-40 17.8-40 40 0 22.23 17.8 40.02 40 40.02s40-17.79 40-40.02c0-22.2-17.8-40-40-40zm-56.7 51.97c-53.2 18.95-108.7 34.95-169 45.25 1.8 4.6 2.8 9.6 2.8 14.8 0 4.8-.8 9.4-2.4 13.6 96.2 12.9 182.8 36 257.8 71.9 1.6-5.9 4.5-11.3 8.3-15.9-71.2-34.3-152.4-57.2-241.5-70.7 53.2-10.6 102.8-25.4 150.4-42.2-3-5.2-5.2-10.79-6.4-16.75zm97.8 28.85c-4.3 4.3-9.2 8-14.6 10.8 15.3 24.8 26 50.6 31.8 77.8 4.3-1.5 9-2.4 13.8-2.4 1.4 0 2.8.1 4.1.2-6.3-30.3-18.2-59.1-35.1-86.4zm-305 8.2c-12.81 0-23 10.2-23 23s10.19 23 23 23c12.8 0 23-10.2 23-23s-10.2-23-23-23zm34.7 44.6c-3.2 5.2-7.5 9.6-12.6 12.9 32.1 32.6 66.1 65.9 120.6 80.4 0-.9-.1-1.9-.1-2.8 0-5.3 1.3-10.3 3.5-14.8-49.5-13.5-80-43.8-111.4-75.7zm-57 12.7c-21.76 67.8-27.12 137.2-32.29 206 2.13-.5 4.34-.7 6.6-.7 3.99 0 7.81.7 11.35 2.1 5.19-68.4 10.57-136 31.29-201.1-6.18-.8-11.94-3-16.95-6.3zm358.3 38.7c-12.8 0-23 10.2-23 23s10.2 23 23 23 23-10.2 23-23-10.2-23-23-23zm-41 22.2c-28.4 5.8-56.6 10.8-86 10.5.4 2.1.6 4.2.6 6.4 0 4-.7 7.9-2.1 11.5 32 .6 62-4.7 91.2-10.8-2.4-5.1-3.7-10.8-3.7-16.8zm-118.9 1.4c-8.7 0-15.5 6.8-15.5 15.5s6.8 15.5 15.5 15.5 15.5-6.8 15.5-15.5-6.8-15.5-15.5-15.5zM399 262.7c-55.6 45.9-106.6 94.4-143.1 150.7 5.9 1.8 11.2 5 15.6 9.1 34.9-53.5 84.2-100.8 138.8-145.9-4.7-3.7-8.6-8.5-11.3-13.9zm-152 15c-47.9 46.4-109.6 83.2-172.85 119.5 4.36 4.2 7.56 9.6 9.05 15.6C146.8 376.4 210 338.9 260 290.1c-5.4-2.9-9.9-7.2-13-12.4zm179.4 6.7c1.3 28.8 6 57.3 14.3 85.2 4.8-3.4 10.7-5.6 17-6-7.6-26-11.9-52.3-13.2-79.1-2.9.7-5.8 1-8.8 1-3.2 0-6.3-.4-9.3-1.1zm33.3 97.1c-8.4 0-15 6.6-15 15s6.6 15 15 15 15-6.6 15-15-6.6-15-15-15zM51.71 406.1c-8.07 0-14.42 6.4-14.42 14.4 0 8.1 6.35 14.5 14.42 14.5s14.42-6.4 14.42-14.5c0-8-6.35-14.4-14.42-14.4zm376.49.3c-44.7 24.5-93.8 32.6-144.9 35.6.9 3.4 1.4 6.9 1.4 10.5 0 2.6-.3 5.1-.7 7.5 53.1-3.1 105.8-11.6 154.3-38.5-4.7-4-8.2-9.2-10.1-15.1zM83.91 416.8c.14 1.2.22 2.4.22 3.7 0 5-1.15 9.7-3.19 14l121.86 20.3c-.1-.8-.1-1.5-.1-2.3 0-5.4 1.1-10.6 3-15.4zm159.79 12.7c-12.8 0-23 10.2-23 23s10.2 23 23 23 23-10.2 23-23-10.2-23-23-23z")},m(t,n){ge(t,e,n)},p:Qe,d(t){t&&fe(e)}}}function Jw(i){let e,t;const n=[{viewBox:"0 0 512 512"},i[0]];let r={$$slots:{default:[Kw]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=$t(r,n[s]);return e=new il({props:r}),{c(){Re(e.$$.fragment)},m(s,o){De(e,s,o),t=!0},p(s,[o]){const a=o&1?Dr(n,[n[0],Na(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(W(e.$$.fragment,s),t=!0)},o(s){K(e.$$.fragment,s),t=!1},d(s){Pe(e,s)}}}function Qw(i,e,t){return i.$$set=n=>{t(0,e=$t($t({},e),yr(n)))},e=yr(e),[e]}class $w extends Ze{constructor(e){super(),Ye(this,e,Qw,Jw,He,{})}}const ey="modulepreload",ty=function(i,e){return new URL(i,e).href},bu={},pa=function(e,t,n){return!t||t.length===0?e():Promise.all(t.map(r=>{if(r=ty(r,n),r in bu)return;bu[r]=!0;const s=r.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${o}`))return;const a=document.createElement("link");if(a.rel=s?"stylesheet":ey,s||(a.as="script",a.crossOrigin=""),a.href=r,document.head.appendChild(a),s)return new Promise((l,c)=>{a.addEventListener("load",l),a.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e())};function xo(i){return i.split("-")[0]}function Ld(i){return i.split("-")[1]}function rl(i){return["top","bottom"].includes(xo(i))?"x":"y"}function ny(i){return i==="y"?"height":"width"}function iy(i){return{top:0,right:0,bottom:0,left:0,...i}}function ry(i){return typeof i!="number"?iy(i):{top:i,right:i,bottom:i,left:i}}function wu(i){return{...i,top:i.y,left:i.x,right:i.x+i.width,bottom:i.y+i.height}}async function Dd(i,e){var t;e===void 0&&(e={});const{x:n,y:r,platform:s,rects:o,elements:a,strategy:l}=i,{boundary:c="clippingAncestors",rootBoundary:u="viewport",elementContext:f="floating",altBoundary:d=!1,padding:m=0}=e,g=ry(m),p=a[d?f==="floating"?"reference":"floating":f],_=wu(await s.getClippingRect({element:(t=await(s.isElement==null?void 0:s.isElement(p)))==null||t?p:p.contextElement||await(s.getDocumentElement==null?void 0:s.getDocumentElement(a.floating)),boundary:c,rootBoundary:u,strategy:l})),w=wu(s.convertOffsetParentRelativeRectToViewportRelativeRect?await s.convertOffsetParentRelativeRectToViewportRelativeRect({rect:f==="floating"?{...o.floating,x:n,y:r}:o.reference,offsetParent:await(s.getOffsetParent==null?void 0:s.getOffsetParent(a.floating)),strategy:l}):o[f]);return{top:_.top-w.top+g.top,bottom:w.bottom-_.bottom+g.bottom,left:_.left-w.left+g.left,right:w.right-_.right+g.right}}const sy=Math.min,oy=Math.max;function yu(i,e,t){return oy(i,sy(e,t))}const ay={left:"right",right:"left",bottom:"top",top:"bottom"};function no(i){return i.replace(/left|right|bottom|top/g,e=>ay[e])}function ly(i,e,t){t===void 0&&(t=!1);const n=Ld(i),r=rl(i),s=ny(r);let o=r==="x"?n===(t?"end":"start")?"right":"left":n==="start"?"bottom":"top";return e.reference[s]>e.floating[s]&&(o=no(o)),{main:o,cross:no(o)}}const cy={start:"end",end:"start"};function xu(i){return i.replace(/start|end/g,e=>cy[e])}function uy(i){const e=no(i);return[xu(i),e,xu(e)]}const fy=function(i){return i===void 0&&(i={}),{name:"flip",options:i,async fn(e){var t;const{placement:n,middlewareData:r,rects:s,initialPlacement:o,platform:a,elements:l}=e,{mainAxis:c=!0,crossAxis:u=!0,fallbackPlacements:f,fallbackStrategy:d="bestFit",flipAlignment:m=!0,...g}=i,h=xo(n),_=f||(h===o||!m?[no(o)]:uy(o)),w=[o,..._],y=await Dd(e,g),b=[];let x=((t=r.flip)==null?void 0:t.overflows)||[];if(c&&b.push(y[h]),u){const{main:E,cross:S}=ly(n,s,await(a.isRTL==null?void 0:a.isRTL(l.floating)));b.push(y[E],y[S])}if(x=[...x,{placement:n,overflows:b}],!b.every(E=>E<=0)){var M,P;const E=((M=(P=r.flip)==null?void 0:P.index)!=null?M:0)+1,S=w[E];if(S)return{data:{index:E,overflows:x},reset:{placement:S}};let k="bottom";switch(d){case"bestFit":{var v;const F=(v=x.map(L=>[L,L.overflows.filter(O=>O>0).reduce((O,I)=>O+I,0)]).sort((L,O)=>L[1]-O[1])[0])==null?void 0:v[0].placement;F&&(k=F);break}case"initialPlacement":k=o;break}if(n!==k)return{reset:{placement:k}}}return{}}}};async function dy(i,e){const{placement:t,platform:n,elements:r}=i,s=await(n.isRTL==null?void 0:n.isRTL(r.floating)),o=xo(t),a=Ld(t),l=rl(t)==="x",c=["left","top"].includes(o)?-1:1,u=s&&l?-1:1,f=typeof e=="function"?e(i):e;let{mainAxis:d,crossAxis:m,alignmentAxis:g}=typeof f=="number"?{mainAxis:f,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...f};return a&&typeof g=="number"&&(m=a==="end"?g*-1:g),l?{x:m*u,y:d*c}:{x:d*c,y:m*u}}const hy=function(i){return i===void 0&&(i=0),{name:"offset",options:i,async fn(e){const{x:t,y:n}=e,r=await dy(e,i);return{x:t+r.x,y:n+r.y,data:r}}}};function py(i){return i==="x"?"y":"x"}const my=function(i){return i===void 0&&(i={}),{name:"shift",options:i,async fn(e){const{x:t,y:n,placement:r}=e,{mainAxis:s=!0,crossAxis:o=!1,limiter:a={fn:p=>{let{x:_,y:w}=p;return{x:_,y:w}}},...l}=i,c={x:t,y:n},u=await Dd(e,l),f=rl(xo(r)),d=py(f);let m=c[f],g=c[d];if(s){const p=f==="y"?"top":"left",_=f==="y"?"bottom":"right",w=m+u[p],y=m-u[_];m=yu(w,m,y)}if(o){const p=d==="y"?"top":"left",_=d==="y"?"bottom":"right",w=g+u[p],y=g-u[_];g=yu(w,g,y)}const h=a.fn({...e,[f]:m,[d]:g});return{...h,data:{x:h.x-t,y:h.y-n}}}}};function Pd(i){return i.split("-")[0]}function gy(i){return i.split("-")[1]}function _y(i){return["top","bottom"].includes(Pd(i))?"x":"y"}function vy(i){return i==="y"?"height":"width"}function Mu(i,e,t){let{reference:n,floating:r}=i;const s=n.x+n.width/2-r.width/2,o=n.y+n.height/2-r.height/2,a=_y(e),l=vy(a),c=n[l]/2-r[l]/2,u=Pd(e),f=a==="x";let d;switch(u){case"top":d={x:s,y:n.y-r.height};break;case"bottom":d={x:s,y:n.y+n.height};break;case"right":d={x:n.x+n.width,y:o};break;case"left":d={x:n.x-r.width,y:o};break;default:d={x:n.x,y:n.y}}switch(gy(e)){case"start":d[a]-=c*(t&&f?-1:1);break;case"end":d[a]+=c*(t&&f?-1:1);break}return d}const by=async(i,e,t)=>{const{placement:n="bottom",strategy:r="absolute",middleware:s=[],platform:o}=t,a=await(o.isRTL==null?void 0:o.isRTL(e));let l=await o.getElementRects({reference:i,floating:e,strategy:r}),{x:c,y:u}=Mu(l,n,a),f=n,d={},m=0;for(let g=0;g<s.length;g++){const{name:h,fn:p}=s[g],{x:_,y:w,data:y,reset:b}=await p({x:c,y:u,initialPlacement:n,placement:f,strategy:r,middlewareData:d,rects:l,platform:o,elements:{reference:i,floating:e}});if(c=_!=null?_:c,u=w!=null?w:u,d={...d,[h]:{...d[h],...y}},b&&m<=50){m++,typeof b=="object"&&(b.placement&&(f=b.placement),b.rects&&(l=b.rects===!0?await o.getElementRects({reference:i,floating:e,strategy:r}):b.rects),{x:c,y:u}=Mu(l,f,a)),g=-1;continue}}return{x:c,y:u,placement:f,strategy:r,middlewareData:d}};function Su(i){return{...i,top:i.y,left:i.x,right:i.x+i.width,bottom:i.y+i.height}}function Rd(i){return i&&i.document&&i.location&&i.alert&&i.setInterval}function ai(i){if(i==null)return window;if(!Rd(i)){const e=i.ownerDocument;return e&&e.defaultView||window}return i}function hs(i){return ai(i).getComputedStyle(i)}function ri(i){return Rd(i)?"":i?(i.nodeName||"").toLowerCase():""}function Id(){const i=navigator.userAgentData;return i!=null&&i.brands?i.brands.map(e=>e.brand+"/"+e.version).join(" "):navigator.userAgent}function Hn(i){return i instanceof ai(i).HTMLElement}function Ei(i){return i instanceof ai(i).Element}function wy(i){return i instanceof ai(i).Node}function sl(i){if(typeof ShadowRoot>"u")return!1;const e=ai(i).ShadowRoot;return i instanceof e||i instanceof ShadowRoot}function Mo(i){const{overflow:e,overflowX:t,overflowY:n}=hs(i);return/auto|scroll|overlay|hidden/.test(e+n+t)}function yy(i){return["table","td","th"].includes(ri(i))}function Od(i){const e=/firefox/i.test(Id()),t=hs(i);return t.transform!=="none"||t.perspective!=="none"||t.contain==="paint"||["transform","perspective"].includes(t.willChange)||e&&t.willChange==="filter"||e&&(t.filter?t.filter!=="none":!1)}function kd(){return!/^((?!chrome|android).)*safari/i.test(Id())}const Eu=Math.min,Kr=Math.max,io=Math.round;function si(i,e,t){var n,r,s,o;e===void 0&&(e=!1),t===void 0&&(t=!1);const a=i.getBoundingClientRect();let l=1,c=1;e&&Hn(i)&&(l=i.offsetWidth>0&&io(a.width)/i.offsetWidth||1,c=i.offsetHeight>0&&io(a.height)/i.offsetHeight||1);const u=Ei(i)?ai(i):window,f=!kd()&&t,d=(a.left+(f&&(n=(r=u.visualViewport)==null?void 0:r.offsetLeft)!=null?n:0))/l,m=(a.top+(f&&(s=(o=u.visualViewport)==null?void 0:o.offsetTop)!=null?s:0))/c,g=a.width/l,h=a.height/c;return{width:g,height:h,top:m,right:d+g,bottom:m+h,left:d,x:d,y:m}}function Ai(i){return((wy(i)?i.ownerDocument:i.document)||window.document).documentElement}function So(i){return Ei(i)?{scrollLeft:i.scrollLeft,scrollTop:i.scrollTop}:{scrollLeft:i.pageXOffset,scrollTop:i.pageYOffset}}function Nd(i){return si(Ai(i)).left+So(i).scrollLeft}function xy(i){const e=si(i);return io(e.width)!==i.offsetWidth||io(e.height)!==i.offsetHeight}function My(i,e,t){const n=Hn(e),r=Ai(e),s=si(i,n&&xy(e),t==="fixed");let o={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if(n||!n&&t!=="fixed")if((ri(e)!=="body"||Mo(r))&&(o=So(e)),Hn(e)){const l=si(e,!0);a.x=l.x+e.clientLeft,a.y=l.y+e.clientTop}else r&&(a.x=Nd(r));return{x:s.left+o.scrollLeft-a.x,y:s.top+o.scrollTop-a.y,width:s.width,height:s.height}}function Fd(i){return ri(i)==="html"?i:i.assignedSlot||i.parentNode||(sl(i)?i.host:null)||Ai(i)}function Au(i){return!Hn(i)||getComputedStyle(i).position==="fixed"?null:i.offsetParent}function Sy(i){let e=Fd(i);for(sl(e)&&(e=e.host);Hn(e)&&!["html","body"].includes(ri(e));){if(Od(e))return e;e=e.parentNode}return null}function Ia(i){const e=ai(i);let t=Au(i);for(;t&&yy(t)&&getComputedStyle(t).position==="static";)t=Au(t);return t&&(ri(t)==="html"||ri(t)==="body"&&getComputedStyle(t).position==="static"&&!Od(t))?e:t||Sy(i)||e}function Tu(i){if(Hn(i))return{width:i.offsetWidth,height:i.offsetHeight};const e=si(i);return{width:e.width,height:e.height}}function Ey(i){let{rect:e,offsetParent:t,strategy:n}=i;const r=Hn(t),s=Ai(t);if(t===s)return e;let o={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if((r||!r&&n!=="fixed")&&((ri(t)!=="body"||Mo(s))&&(o=So(t)),Hn(t))){const l=si(t,!0);a.x=l.x+t.clientLeft,a.y=l.y+t.clientTop}return{...e,x:e.x-o.scrollLeft+a.x,y:e.y-o.scrollTop+a.y}}function Ay(i,e){const t=ai(i),n=Ai(i),r=t.visualViewport;let s=n.clientWidth,o=n.clientHeight,a=0,l=0;if(r){s=r.width,o=r.height;const c=kd();(c||!c&&e==="fixed")&&(a=r.offsetLeft,l=r.offsetTop)}return{width:s,height:o,x:a,y:l}}function Ty(i){var e;const t=Ai(i),n=So(i),r=(e=i.ownerDocument)==null?void 0:e.body,s=Kr(t.scrollWidth,t.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),o=Kr(t.scrollHeight,t.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0);let a=-n.scrollLeft+Nd(i);const l=-n.scrollTop;return hs(r||t).direction==="rtl"&&(a+=Kr(t.clientWidth,r?r.clientWidth:0)-s),{width:s,height:o,x:a,y:l}}function zd(i){const e=Fd(i);return["html","body","#document"].includes(ri(e))?i.ownerDocument.body:Hn(e)&&Mo(e)?e:zd(e)}function ro(i,e){var t;e===void 0&&(e=[]);const n=zd(i),r=n===((t=i.ownerDocument)==null?void 0:t.body),s=ai(n),o=r?[s].concat(s.visualViewport||[],Mo(n)?n:[]):n,a=e.concat(o);return r?a:a.concat(ro(o))}function Cy(i,e){const t=e.getRootNode==null?void 0:e.getRootNode();if(i.contains(e))return!0;if(t&&sl(t)){let n=e;do{if(n&&i===n)return!0;n=n.parentNode||n.host}while(n)}return!1}function Ly(i,e){const t=si(i,!1,e==="fixed"),n=t.top+i.clientTop,r=t.left+i.clientLeft;return{top:n,left:r,x:r,y:n,right:r+i.clientWidth,bottom:n+i.clientHeight,width:i.clientWidth,height:i.clientHeight}}function Cu(i,e,t){return e==="viewport"?Su(Ay(i,t)):Ei(e)?Ly(e,t):Su(Ty(Ai(i)))}function Dy(i){const e=ro(i),n=["absolute","fixed"].includes(hs(i).position)&&Hn(i)?Ia(i):i;return Ei(n)?e.filter(r=>Ei(r)&&Cy(r,n)&&ri(r)!=="body"):[]}function Py(i){let{element:e,boundary:t,rootBoundary:n,strategy:r}=i;const o=[...t==="clippingAncestors"?Dy(e):[].concat(t),n],a=o[0],l=o.reduce((c,u)=>{const f=Cu(e,u,r);return c.top=Kr(f.top,c.top),c.right=Eu(f.right,c.right),c.bottom=Eu(f.bottom,c.bottom),c.left=Kr(f.left,c.left),c},Cu(e,a,r));return{width:l.right-l.left,height:l.bottom-l.top,x:l.left,y:l.top}}const Ry={getClippingRect:Py,convertOffsetParentRelativeRectToViewportRelativeRect:Ey,isElement:Ei,getDimensions:Tu,getOffsetParent:Ia,getDocumentElement:Ai,getElementRects:i=>{let{reference:e,floating:t,strategy:n}=i;return{reference:My(e,Ia(t),n),floating:{...Tu(t),x:0,y:0}}},getClientRects:i=>Array.from(i.getClientRects()),isRTL:i=>hs(i).direction==="rtl"};function Iy(i,e,t,n){n===void 0&&(n={});const{ancestorScroll:r=!0,ancestorResize:s=!0,elementResize:o=!0,animationFrame:a=!1}=n,l=r&&!a,c=s&&!a,u=l||c?[...Ei(i)?ro(i):[],...ro(e)]:[];u.forEach(h=>{l&&h.addEventListener("scroll",t,{passive:!0}),c&&h.addEventListener("resize",t)});let f=null;if(o){let h=!0;f=new ResizeObserver(()=>{h||t(),h=!1}),Ei(i)&&!a&&f.observe(i),f.observe(e)}let d,m=a?si(i):null;a&&g();function g(){const h=si(i);m&&(h.x!==m.x||h.y!==m.y||h.width!==m.width||h.height!==m.height)&&t(),m=h,d=requestAnimationFrame(g)}return t(),()=>{var h;u.forEach(p=>{l&&p.removeEventListener("scroll",t),c&&p.removeEventListener("resize",t)}),(h=f)==null||h.disconnect(),f=null,a&&cancelAnimationFrame(d)}}const Oy=(i,e,t)=>by(i,e,{platform:Ry,...t});function ky(i){let e,t;const n={autoUpdate:!0};let r=i;const s=c=>({...n,...i||{},...c||{}}),o=c=>{e&&t&&(r=s(c),Oy(e,t,r).then(u=>{Object.assign(t.style,{position:u.strategy,left:`${u.x}px`,top:`${u.y}px`}),r!=null&&r.onComputed&&r.onComputed(u)}))};return[c=>{e=c,o()},(c,u)=>{let f;t=c,r=s(u),setTimeout(()=>o(u),0),o(u);const d=()=>{f&&(f(),f=void 0)},m=({autoUpdate:g}=r||{})=>{if(d(),g!==!1)return Iy(e,t,()=>o(r),g===!0?{}:g)};return f=m(),{update(g){o(g),f=m(g)},destroy(){d()}}},o]}function Ny({loadOptions:i,filterText:e,items:t,multiple:n,value:r,itemId:s,groupBy:o,itemFilter:a,convertStringItemsToObjects:l,filterGroupedItems:c,label:u}){if(t&&i&&e.length>0)return t;if(!t)return[];t&&t.length>0&&typeof t[0]!="object"&&(t=l(t));let f=t.filter(d=>{let m=a(d[u],e,d);return m&&n&&(r==null?void 0:r.length)&&(m=!r.some(g=>g[s]===d[s])),m});return o&&(f=c(f)),f}async function Fy({dispatch:i,loadOptions:e,convertStringItemsToObjects:t,filterText:n}){let r=await e(n).catch(s=>{console.warn("svelte-select loadOptions error :>> ",s),i("error",{type:"loadOptions",details:s})});if(r&&!r.cancelled)return r?(r&&r.length>0&&typeof r[0]!="object"&&(r=t(r)),i("loaded",{items:r})):r=[],{filteredItems:r,loading:!1,focused:!0,listOpen:!0}}function zy(i){let e,t;return{c(){e=Xt("svg"),t=Xt("path"),J(t,"fill","currentColor"),J(t,"d",`M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747
          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0
          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502
          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0
          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z`),J(e,"width","100%"),J(e,"height","100%"),J(e,"viewBox","0 0 20 20"),J(e,"focusable","false"),J(e,"aria-hidden","true"),J(e,"class","svelte-qbd276")},m(n,r){ge(n,e,r),ae(e,t)},p:Qe,i:Qe,o:Qe,d(n){n&&fe(e)}}}class Uy extends Ze{constructor(e){super(),Ye(this,e,null,zy,He,{})}}function Gy(i){let e,t;return{c(){e=Xt("svg"),t=Xt("path"),J(t,"fill","currentColor"),J(t,"d",`M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124
    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z`),J(e,"width","100%"),J(e,"height","100%"),J(e,"viewBox","-2 -2 50 50"),J(e,"focusable","false"),J(e,"aria-hidden","true"),J(e,"role","presentation"),J(e,"class","svelte-whdbu1")},m(n,r){ge(n,e,r),ae(e,t)},p:Qe,i:Qe,o:Qe,d(n){n&&fe(e)}}}class so extends Ze{constructor(e){super(),Ye(this,e,null,Gy,He,{})}}function By(i){let e,t;return{c(){e=Xt("svg"),t=Xt("circle"),J(t,"class","circle_path svelte-1p3nqvd"),J(t,"cx","50"),J(t,"cy","50"),J(t,"r","20"),J(t,"fill","none"),J(t,"stroke","currentColor"),J(t,"stroke-width","5"),J(t,"stroke-miterlimit","10"),J(e,"class","loading svelte-1p3nqvd"),J(e,"viewBox","25 25 50 50")},m(n,r){ge(n,e,r),ae(e,t)},p:Qe,i:Qe,o:Qe,d(n){n&&fe(e)}}}class Vy extends Ze{constructor(e){super(),Ye(this,e,null,By,He,{})}}function Lu(i,e,t){const n=i.slice();return n[115]=e[t],n}const Hy=i=>({listOpen:i[0]&64}),Du=i=>({listOpen:i[6]}),Wy=i=>({}),Pu=i=>({}),jy=i=>({}),Ru=i=>({}),qy=i=>({selection:i[0]&8}),Iu=i=>({selection:i[3]});function Ou(i,e,t){const n=i.slice();return n[115]=e[t],n[119]=t,n}const Xy=i=>({}),ku=i=>({}),Yy=i=>({selection:i[0]&8}),Nu=i=>({selection:i[115]}),Zy=i=>({}),Fu=i=>({}),Ky=i=>({}),zu=i=>({});function Uu(i,e,t){const n=i.slice();return n[115]=e[t],n[119]=t,n}const Jy=i=>({item:i[0]&4194304}),Gu=i=>({item:i[115],index:i[119]}),Qy=i=>({filteredItems:i[0]&4194304}),Bu=i=>({filteredItems:i[22]});function Vu(i){let e,t,n,r,s,o;const a=[tx,ex,$y],l=[];function c(u,f){return u[48].list?0:u[22].length>0?1:u[15]?-1:2}return~(t=c(i))&&(n=l[t]=a[t](i)),{c(){e=Ae("div"),n&&n.c(),J(e,"class","svelte-select-list svelte-1gwhqva")},m(u,f){ge(u,e,f),~t&&l[t].m(e,null),i[85](e),r=!0,s||(o=[yi(i[47].call(null,e)),tt(e,"scroll",i[39]),tt(e,"pointerdown",xr(Bi(i[81])))],s=!0)},p(u,f){let d=t;t=c(u),t===d?~t&&l[t].p(u,f):(n&&(St(),K(l[d],1,1,()=>{l[d]=null}),Et()),~t?(n=l[t],n?n.p(u,f):(n=l[t]=a[t](u),n.c()),W(n,1),n.m(e,null)):n=null)},i(u){r||(W(n),r=!0)},o(u){K(n),r=!1},d(u){u&&fe(e),~t&&l[t].d(),i[85](null),s=!1,Ht(o)}}}function $y(i){let e;const t=i[77].empty,n=dt(t,i,i[76],zu),r=n||nx();return{c(){r&&r.c()},m(s,o){r&&r.m(s,o),e=!0},p(s,o){n&&n.p&&(!e||o[2]&16384)&&pt(n,t,s,s[76],e?ht(t,s[76],o,Ky):mt(s[76]),zu)},i(s){e||(W(r,s),e=!0)},o(s){K(r,s),e=!1},d(s){r&&r.d(s)}}}function ex(i){let e,t,n=i[22],r=[];for(let o=0;o<n.length;o+=1)r[o]=Hu(Uu(i,n,o));const s=o=>K(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=Kt()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);ge(o,e,a),t=!0},p(o,a){if(a[0]&206572552|a[1]&7168|a[2]&16384){n=o[22];let l;for(l=0;l<n.length;l+=1){const c=Uu(o,n,l);r[l]?(r[l].p(c,a),W(r[l],1)):(r[l]=Hu(c),r[l].c(),W(r[l],1),r[l].m(e.parentNode,e))}for(St(),l=n.length;l<r.length;l+=1)s(l);Et()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)W(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)K(r[a]);t=!1},d(o){ao(r,o),o&&fe(e)}}}function tx(i){let e;const t=i[77].list,n=dt(t,i,i[76],Bu);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[0]&4194304|s[2]&16384)&&pt(n,t,r,r[76],e?ht(t,r[76],s,Qy):mt(r[76]),Bu)},i(r){e||(W(n,r),e=!0)},o(r){K(n,r),e=!1},d(r){n&&n.d(r)}}}function nx(i){let e;return{c(){e=Ae("div"),e.textContent="No options",J(e,"class","empty svelte-1gwhqva")},m(t,n){ge(t,e,n)},p:Qe,d(t){t&&fe(e)}}}function ix(i){var n;let e=((n=i[115])==null?void 0:n[i[10]])+"",t;return{c(){t=Ct(e)},m(r,s){ge(r,t,s)},p(r,s){var o;s[0]&4195328&&e!==(e=((o=r[115])==null?void 0:o[r[10]])+"")&&bn(t,e)},d(r){r&&fe(t)}}}function Hu(i){let e,t,n,r,s,o,a,l;const c=i[77].item,u=dt(c,i,i[76],Gu),f=u||ix(i);function d(){return i[82](i[119])}function m(){return i[83](i[119])}function g(){return i[84](i[115],i[119])}return{c(){var h;e=Ae("div"),t=Ae("div"),f&&f.c(),s=ke(),J(t,"class","item svelte-1gwhqva"),ft(t,"list-group-title",i[115].groupHeader),ft(t,"active",i[43](i[115],i[3],i[11])),ft(t,"first",hx(i[119])),ft(t,"hover",i[20]===i[119]),ft(t,"group-item",i[115].groupItem),ft(t,"not-selectable",((h=i[115])==null?void 0:h.selectable)===!1),J(e,"class","list-item svelte-1gwhqva"),J(e,"tabindex","-1")},m(h,p){ge(h,e,p),ae(e,t),f&&f.m(t,null),ae(e,s),o=!0,a||(l=[yi(n=i[44].call(null,t,{scroll:i[43](i[115],i[3],i[11]),listMounted:i[27]})),yi(r=i[45].call(null,t,{scroll:i[26]===i[119],listMounted:i[27]})),tt(e,"mouseover",d),tt(e,"focus",m),tt(e,"click",xr(g))],a=!0)},p(h,p){var _;i=h,u?u.p&&(!o||p[0]&4194304|p[2]&16384)&&pt(u,c,i,i[76],o?ht(c,i[76],p,Jy):mt(i[76]),Gu):f&&f.p&&(!o||p[0]&4195328)&&f.p(i,o?p:[-1,-1,-1,-1]),n&&wr(n.update)&&p[0]&138414088&&n.update.call(null,{scroll:i[43](i[115],i[3],i[11]),listMounted:i[27]}),r&&wr(r.update)&&p[0]&201326592&&r.update.call(null,{scroll:i[26]===i[119],listMounted:i[27]}),(!o||p[0]&4194304)&&ft(t,"list-group-title",i[115].groupHeader),(!o||p[0]&4196360|p[1]&4096)&&ft(t,"active",i[43](i[115],i[3],i[11])),(!o||p[0]&1048576)&&ft(t,"hover",i[20]===i[119]),(!o||p[0]&4194304)&&ft(t,"group-item",i[115].groupItem),(!o||p[0]&4194304)&&ft(t,"not-selectable",((_=i[115])==null?void 0:_.selectable)===!1)},i(h){o||(W(f,h),o=!0)},o(h){K(f,h),o=!1},d(h){h&&fe(e),f&&f.d(h),a=!1,Ht(l)}}}function Wu(i){let e,t,n,r,s;return{c(){e=Ae("span"),t=Ct(i[29]),n=ke(),r=Ae("span"),s=Ct(i[28]),J(e,"id","aria-selection"),J(e,"class","svelte-1gwhqva"),J(r,"id","aria-context"),J(r,"class","svelte-1gwhqva")},m(o,a){ge(o,e,a),ae(e,t),ge(o,n,a),ge(o,r,a),ae(r,s)},p(o,a){a[0]&536870912&&bn(t,o[29]),a[0]&268435456&&bn(s,o[28])},d(o){o&&fe(e),o&&fe(n),o&&fe(r)}}}function ju(i){let e,t,n,r;const s=[sx,rx],o=[];function a(l,c){return l[7]?0:1}return e=a(i),t=o[e]=s[e](i),{c(){t.c(),n=Kt()},m(l,c){o[e].m(l,c),ge(l,n,c),r=!0},p(l,c){let u=e;e=a(l),e===u?o[e].p(l,c):(St(),K(o[u],1,1,()=>{o[u]=null}),Et(),t=o[e],t?t.p(l,c):(t=o[e]=s[e](l),t.c()),W(t,1),t.m(n.parentNode,n))},i(l){r||(W(t),r=!0)},o(l){K(t),r=!1},d(l){o[e].d(l),l&&fe(n)}}}function rx(i){let e,t;const n=i[77].selection,r=dt(n,i,i[76],Iu),s=r||ox(i);return{c(){e=Ae("div"),s&&s.c(),J(e,"class","selected-item svelte-1gwhqva"),ft(e,"hide-selected-item",i[33])},m(o,a){ge(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r?r.p&&(!t||a[0]&8|a[2]&16384)&&pt(r,n,o,o[76],t?ht(n,o[76],a,qy):mt(o[76]),Iu):s&&s.p&&(!t||a[0]&1032)&&s.p(o,t?a:[-1,-1,-1,-1]),(!t||a[1]&4)&&ft(e,"hide-selected-item",o[33])},i(o){t||(W(s,o),t=!0)},o(o){K(s,o),t=!1},d(o){o&&fe(e),s&&s.d(o)}}}function sx(i){let e,t,n=i[3],r=[];for(let o=0;o<n.length;o+=1)r[o]=Xu(Ou(i,n,o));const s=o=>K(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=Kt()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);ge(o,e,a),t=!0},p(o,a){if(a[0]&16779016|a[1]&8|a[2]&16384){n=o[3];let l;for(l=0;l<n.length;l+=1){const c=Ou(o,n,l);r[l]?(r[l].p(c,a),W(r[l],1)):(r[l]=Xu(c),r[l].c(),W(r[l],1),r[l].m(e.parentNode,e))}for(St(),l=n.length;l<r.length;l+=1)s(l);Et()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)W(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)K(r[a]);t=!1},d(o){ao(r,o),o&&fe(e)}}}function ox(i){let e=i[3][i[10]]+"",t;return{c(){t=Ct(e)},m(n,r){ge(n,t,r)},p(n,r){r[0]&1032&&e!==(e=n[3][n[10]]+"")&&bn(t,e)},d(n){n&&fe(t)}}}function ax(i){let e=i[115][i[10]]+"",t;return{c(){t=Ct(e)},m(n,r){ge(n,t,r)},p(n,r){r[0]&1032&&e!==(e=n[115][n[10]]+"")&&bn(t,e)},d(n){n&&fe(t)}}}function qu(i){let e,t,n,r;const s=i[77]["multi-clear-icon"],o=dt(s,i,i[76],ku),a=o||lx();function l(){return i[86](i[119])}return{c(){e=Ae("div"),a&&a.c(),J(e,"class","multi-item-clear svelte-1gwhqva")},m(c,u){ge(c,e,u),a&&a.m(e,null),t=!0,n||(r=[tt(e,"pointerdown",xr(Bi(i[80]))),tt(e,"click",l)],n=!0)},p(c,u){i=c,o&&o.p&&(!t||u[2]&16384)&&pt(o,s,i,i[76],t?ht(s,i[76],u,Xy):mt(i[76]),ku)},i(c){t||(W(a,c),t=!0)},o(c){K(a,c),t=!1},d(c){c&&fe(e),a&&a.d(c),n=!1,Ht(r)}}}function lx(i){let e,t;return e=new so({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Xu(i){let e,t,n,r,s,o,a;const l=i[77].selection,c=dt(l,i,i[76],Nu),u=c||ax(i);let f=!i[9]&&!i[8]&&so&&qu(i);function d(){return i[87](i[119])}return{c(){e=Ae("div"),t=Ae("span"),u&&u.c(),n=ke(),f&&f.c(),r=ke(),J(t,"class","multi-item-text svelte-1gwhqva"),J(e,"class","multi-item svelte-1gwhqva"),ft(e,"active",i[24]===i[119]),ft(e,"disabled",i[9])},m(m,g){ge(m,e,g),ae(e,t),u&&u.m(t,null),ae(e,n),f&&f.m(e,null),ae(e,r),s=!0,o||(a=tt(e,"click",Bi(d)),o=!0)},p(m,g){i=m,c?c.p&&(!s||g[0]&8|g[2]&16384)&&pt(c,l,i,i[76],s?ht(l,i[76],g,Yy):mt(i[76]),Nu):u&&u.p&&(!s||g[0]&1032)&&u.p(i,s?g:[-1,-1,-1,-1]),!i[9]&&!i[8]&&so?f?(f.p(i,g),g[0]&768&&W(f,1)):(f=qu(i),f.c(),W(f,1),f.m(e,r)):f&&(St(),K(f,1,1,()=>{f=null}),Et()),(!s||g[0]&16777216)&&ft(e,"active",i[24]===i[119]),(!s||g[0]&512)&&ft(e,"disabled",i[9])},i(m){s||(W(u,m),W(f),s=!0)},o(m){K(u,m),K(f),s=!1},d(m){m&&fe(e),u&&u.d(m),f&&f.d(),o=!1,a()}}}function Yu(i){let e,t;const n=i[77]["loading-icon"],r=dt(n,i,i[76],Ru),s=r||cx();return{c(){e=Ae("div"),s&&s.c(),J(e,"class","icon loading svelte-1gwhqva"),J(e,"aria-hidden","true")},m(o,a){ge(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r&&r.p&&(!t||a[2]&16384)&&pt(r,n,o,o[76],t?ht(n,o[76],a,jy):mt(o[76]),Ru)},i(o){t||(W(s,o),t=!0)},o(o){K(s,o),t=!1},d(o){o&&fe(e),s&&s.d(o)}}}function cx(i){let e,t;return e=new Vy({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Zu(i){let e,t,n,r;const s=i[77]["clear-icon"],o=dt(s,i,i[76],Pu),a=o||ux();return{c(){e=Ae("div"),a&&a.c(),J(e,"class","icon clear-select svelte-1gwhqva"),J(e,"aria-hidden","true")},m(l,c){ge(l,e,c),a&&a.m(e,null),t=!0,n||(r=[tt(e,"click",xr(Bi(i[19]))),tt(e,"pointerdown",xr(Bi(i[79])))],n=!0)},p(l,c){o&&o.p&&(!t||c[2]&16384)&&pt(o,s,l,l[76],t?ht(s,l[76],c,Wy):mt(l[76]),Pu)},i(l){t||(W(a,l),t=!0)},o(l){K(a,l),t=!1},d(l){l&&fe(e),a&&a.d(l),n=!1,Ht(r)}}}function ux(i){let e,t;return e=new so({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Ku(i){let e,t;const n=i[77]["chevron-icon"],r=dt(n,i,i[76],Du),s=r||fx();return{c(){e=Ae("div"),s&&s.c(),J(e,"class","icon chevron svelte-1gwhqva"),J(e,"aria-hidden","true")},m(o,a){ge(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r&&r.p&&(!t||a[0]&64|a[2]&16384)&&pt(r,n,o,o[76],t?ht(n,o[76],a,Hy):mt(o[76]),Du)},i(o){t||(W(s,o),t=!0)},o(o){K(s,o),t=!1},d(o){o&&fe(e),s&&s.d(o)}}}function fx(i){let e,t;return e=new Uy({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Ju(i){let e,t,n;return{c(){e=Ae("input"),J(e,"name",t=i[16].name),J(e,"type","hidden"),e.value=n=i[3]?i[3][i[11]]:null,J(e,"class","svelte-1gwhqva")},m(r,s){ge(r,e,s)},p(r,s){s[0]&65536&&t!==(t=r[16].name)&&J(e,"name",t),s[0]&2056&&n!==(n=r[3]?r[3][r[11]]:null)&&(e.value=n)},d(r){r&&fe(e)}}}function Qu(i){let e,t=i[3],n=[];for(let r=0;r<t.length;r+=1)n[r]=$u(Lu(i,t,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=Kt()},m(r,s){for(let o=0;o<n.length;o+=1)n[o].m(r,s);ge(r,e,s)},p(r,s){if(s[0]&67592){t=r[3];let o;for(o=0;o<t.length;o+=1){const a=Lu(r,t,o);n[o]?n[o].p(a,s):(n[o]=$u(a),n[o].c(),n[o].m(e.parentNode,e))}for(;o<n.length;o+=1)n[o].d(1);n.length=t.length}},d(r){ao(n,r),r&&fe(e)}}}function $u(i){let e,t,n;return{c(){e=Ae("input"),J(e,"name",t=i[16].name),J(e,"type","hidden"),e.value=n=i[115]?i[115][i[11]]:null,J(e,"class","svelte-1gwhqva")},m(r,s){ge(r,e,s)},p(r,s){s[0]&65536&&t!==(t=r[16].name)&&J(e,"name",t),s[0]&2056&&n!==(n=r[115]?r[115][r[11]]:null)&&(e.value=n)},d(r){r&&fe(e)}}}function dx(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p,_,w,y,b=i[6]&&Vu(i),x=i[2]&&Wu(i);const M=i[77].prepend,P=dt(M,i,i[76],Fu);let v=i[23]&&ju(i),E=[{readOnly:c=!i[13]},i[25],{placeholder:i[31]},{style:i[14]},{disabled:i[9]}],S={};for(let R=0;R<E.length;R+=1)S=$t(S,E[R]);let k=i[5]&&Yu(i),F=i[32]&&Zu(i),L=i[17]&&Ku(i),O=(!i[7]||i[7]&&!i[30])&&Ju(i),I=i[7]&&i[30]&&Qu(i);return{c(){e=Ae("div"),b&&b.c(),t=ke(),n=Ae("span"),x&&x.c(),r=ke(),P&&P.c(),s=ke(),o=Ae("div"),v&&v.c(),a=ke(),l=Ae("input"),u=ke(),f=Ae("div"),k&&k.c(),d=ke(),F&&F.c(),m=ke(),L&&L.c(),g=ke(),O&&O.c(),h=ke(),I&&I.c(),J(n,"aria-live","polite"),J(n,"aria-atomic","false"),J(n,"aria-relevant","additions text"),J(n,"class","a11y-text svelte-1gwhqva"),Mr(l,S),ft(l,"svelte-1gwhqva",!0),J(o,"class","value-container svelte-1gwhqva"),J(f,"class","indicators svelte-1gwhqva"),J(e,"class",p="svelte-select "+i[18]+" svelte-1gwhqva"),J(e,"style",i[12]),ft(e,"multi",i[7]),ft(e,"disabled",i[9]),ft(e,"focused",i[2]),ft(e,"list-open",i[6]),ft(e,"show-chevron",i[17])},m(R,Y){ge(R,e,Y),b&&b.m(e,null),ae(e,t),ae(e,n),x&&x.m(n,null),ae(e,r),P&&P.m(e,null),ae(e,s),ae(e,o),v&&v.m(o,null),ae(o,a),ae(o,l),l.autofocus&&l.focus(),i[88](l),Ks(l,i[4]),ae(e,u),ae(e,f),k&&k.m(f,null),ae(f,d),F&&F.m(f,null),ae(f,m),L&&L.m(f,null),ae(e,g),O&&O.m(e,null),ae(e,h),I&&I.m(e,null),i[90](e),_=!0,w||(y=[tt(window,"click",i[40]),tt(window,"keydown",i[35]),tt(l,"keydown",i[35]),tt(l,"blur",i[37]),tt(l,"focus",i[36]),tt(l,"input",i[89]),tt(e,"pointerdown",Bi(i[38])),tt(e,"click",xr(Bi(i[78]))),yi(i[46].call(null,e))],w=!0)},p(R,Y){R[6]?b?(b.p(R,Y),Y[0]&64&&W(b,1)):(b=Vu(R),b.c(),W(b,1),b.m(e,t)):b&&(St(),K(b,1,1,()=>{b=null}),Et()),R[2]?x?x.p(R,Y):(x=Wu(R),x.c(),x.m(n,null)):x&&(x.d(1),x=null),P&&P.p&&(!_||Y[2]&16384)&&pt(P,M,R,R[76],_?ht(M,R[76],Y,Zy):mt(R[76]),Fu),R[23]?v?(v.p(R,Y),Y[0]&8388608&&W(v,1)):(v=ju(R),v.c(),W(v,1),v.m(o,a)):v&&(St(),K(v,1,1,()=>{v=null}),Et()),Mr(l,S=Dr(E,[(!_||Y[0]&8192&&c!==(c=!R[13]))&&{readOnly:c},Y[0]&33554432&&R[25],(!_||Y[1]&1)&&{placeholder:R[31]},(!_||Y[0]&16384)&&{style:R[14]},(!_||Y[0]&512)&&{disabled:R[9]}])),Y[0]&16&&l.value!==R[4]&&Ks(l,R[4]),ft(l,"svelte-1gwhqva",!0),R[5]?k?(k.p(R,Y),Y[0]&32&&W(k,1)):(k=Yu(R),k.c(),W(k,1),k.m(f,d)):k&&(St(),K(k,1,1,()=>{k=null}),Et()),R[32]?F?(F.p(R,Y),Y[1]&2&&W(F,1)):(F=Zu(R),F.c(),W(F,1),F.m(f,m)):F&&(St(),K(F,1,1,()=>{F=null}),Et()),R[17]?L?(L.p(R,Y),Y[0]&131072&&W(L,1)):(L=Ku(R),L.c(),W(L,1),L.m(f,null)):L&&(St(),K(L,1,1,()=>{L=null}),Et()),!R[7]||R[7]&&!R[30]?O?O.p(R,Y):(O=Ju(R),O.c(),O.m(e,h)):O&&(O.d(1),O=null),R[7]&&R[30]?I?I.p(R,Y):(I=Qu(R),I.c(),I.m(e,null)):I&&(I.d(1),I=null),(!_||Y[0]&262144&&p!==(p="svelte-select "+R[18]+" svelte-1gwhqva"))&&J(e,"class",p),(!_||Y[0]&4096)&&J(e,"style",R[12]),(!_||Y[0]&262272)&&ft(e,"multi",R[7]),(!_||Y[0]&262656)&&ft(e,"disabled",R[9]),(!_||Y[0]&262148)&&ft(e,"focused",R[2]),(!_||Y[0]&262208)&&ft(e,"list-open",R[6]),(!_||Y[0]&393216)&&ft(e,"show-chevron",R[17])},i(R){_||(W(b),W(P,R),W(v),W(k),W(F),W(L),_=!0)},o(R){K(b),K(P,R),K(v),K(k),K(F),K(L),_=!1},d(R){R&&fe(e),b&&b.d(),x&&x.d(),P&&P.d(R),v&&v.d(),i[88](null),k&&k.d(),F&&F.d(),L&&L.d(),O&&O.d(),I&&I.d(),i[90](null),w=!1,Ht(y)}}}function ef(i){return i.map((e,t)=>({index:t,value:e,label:`${e}`}))}function hx(i){return i===0}function px(i){return i.groupHeader&&i.selectable||i.selectable||!i.hasOwnProperty("selectable")}function tf(i){return{update(e){e.scroll&&i.scrollIntoView({behavior:"auto",block:"nearest",inline:"start"})}}}function mx(i,e,t){let n,r,s,o,a,l,c,u,f,{$$slots:d={},$$scope:m}=e;const g=Gd(d),h=Wi();let{justValue:p=null}=e,{filter:_=Ny}=e,{getItems:w=Fy}=e,{id:y=null}=e,{container:b=void 0}=e,{input:x=void 0}=e,{multiple:M=!1}=e,{multiFullItemClearable:P=!1}=e,{disabled:v=!1}=e,{focused:E=!1}=e,{value:S=null}=e,{filterText:k=""}=e,{placeholder:F="Please select"}=e,{placeholderAlwaysShow:L=!1}=e,{items:O=null}=e,{label:I="label"}=e,{itemFilter:R=(N,Ie)=>`${N}`.toLowerCase().includes(Ie.toLowerCase())}=e,{groupBy:Y=void 0}=e,{groupFilter:Z=N=>N}=e,{groupHeaderSelectable:H=!1}=e,{itemId:B="value"}=e,{loadOptions:j=void 0}=e,{containerStyles:ne=""}=e,{createGroupHeaderItem:se=(N,Ie)=>({value:N,label:N})}=e;const _e=()=>u;let{searchable:Me=!0}=e,{inputStyles:V=""}=e,{clearable:ue=!0}=e,{loading:Te=!1}=e,{listOpen:ce=!1}=e,ve,{debounce:qe=(N,Ie=1)=>{clearTimeout(ve),ve=setTimeout(N,Ie)}}=e,{debounceWait:Q=300}=e,{hideEmptyState:le=!1}=e,{inputAttributes:We={}}=e,{listAutoWidth:ze=!0}=e,{showChevron:ut=!1}=e,{listOffset:yt=5}=e,{class:Oe=""}=e,Le,vt,Lt,D,A=0;function $(){if(typeof S=="string"){let N=O.find(Ie=>Ie[B]===S);t(3,S=N||{[B]:S,label:S})}else M&&Array.isArray(S)&&S.length>0&&t(3,S=S.map(N=>typeof N=="string"?{value:N,label:N}:N))}let oe;function de(){t(25,oe=Object.assign({autocapitalize:"none",autocomplete:"off",autocorrect:"off",spellcheck:!1,tabindex:0,type:"text","aria-autocomplete":"list"},We)),y&&t(25,oe.id=y,oe),Me||t(25,oe.readonly=!0,oe)}function we(N){const Ie=[],Rt={};N.forEach(Yi=>{const Xn=Y(Yi);Ie.includes(Xn)||(Ie.push(Xn),Rt[Xn]=[],Xn&&Rt[Xn].push(Object.assign(se(Xn,Yi),{id:Xn,groupHeader:!0,selectable:H}))),Rt[Xn].push(Object.assign({groupItem:!!Xn},Yi))});const qn=[];return Z(Ie).forEach(Yi=>{Rt[Yi]&&qn.push(...Rt[Yi])}),qn}function Ge(){if(M){JSON.stringify(S)!==JSON.stringify(vt)&&z()&&h("change",S);return}(!vt||JSON.stringify(S[B])!==JSON.stringify(vt[B]))&&h("change",S)}function T(){S&&(Array.isArray(S)?t(3,S=[...S]):t(3,S=[S]))}function re(){S&&t(3,S=null)}function he(){k.length!==0&&(t(2,E=!0),t(6,ce=!0),j?qe(async function(){t(5,Te=!0);let N=await w({dispatch:h,loadOptions:j,convertStringItemsToObjects:ef,filterText:k});N?(t(5,Te=N.loading),t(2,E=N.focused),t(6,ce=N.listOpen),t(49,O=Y?we(N.filteredItems):N.filteredItems)):(t(5,Te=!1),t(2,E=!0),t(6,ce=!0))},Q):(t(6,ce=!0),M&&t(24,Le=void 0)))}Qd(async()=>{t(73,vt=S),t(74,Lt=k),t(75,D=M)});function ye(){return M?S?S.map(N=>N[B]):null:S&&S[B]}function z(){let N=!0;if(S){const Ie=[],Rt=[];S.forEach(qn=>{Ie.includes(qn[B])?N=!1:(Ie.push(qn[B]),Rt.push(qn))}),N||t(3,S=Rt)}return N}function Ce(N){let Ie=N?N[B]:S[B];return O.find(Rt=>Rt[B]===Ie)}function Ke(N){!N||N.length===0||N.some(Ie=>typeof Ie!="object")||!S||(M?S.some(Ie=>!Ie||!Ie[B]):!S[B])||(Array.isArray(S)?t(3,S=S.map(Ie=>Ce(Ie)||Ie)):t(3,S=Ce()||S))}async function at(N){const Ie=S[N];S.length===1?t(3,S=void 0):t(3,S=S.filter(Rt=>Rt!==Ie)),h("clear",Ie)}function U(N){if(!!E)switch(N.stopPropagation(),N.key){case"Escape":N.preventDefault(),lt();break;case"Enter":if(N.preventDefault(),ce){if(u.length===0)break;const Ie=u[A];if((Ie==null?void 0:Ie.selectable)===!1)break;if(S&&!M&&S[B]===Ie[B]){lt();break}else t(51,Ci=A),C(u[A])}break;case"ArrowDown":N.preventDefault(),ce?ie(1):(t(20,A=0),t(6,ce=!0),t(24,Le=void 0));break;case"ArrowUp":N.preventDefault(),ce?ie(-1):(t(6,ce=!0),t(24,Le=void 0));break;case"Tab":if(ce&&E){if(u.length===0||S&&S[B]===u[A][B])return lt();N.preventDefault(),t(51,Ci=A),C(u[A]),t(6,ce=!1)}break;case"Backspace":if(!M||k.length>0)return;if(M&&S&&S.length>0){if(at(Le!==void 0?Le:S.length-1),Le===0||Le===void 0)break;t(24,Le=S.length>Le?Le-1:void 0)}break;case"ArrowLeft":if(!S||!M||k.length>0)return;Le===void 0?t(24,Le=S.length-1):S.length>Le&&Le!==0&&t(24,Le-=1);break;case"ArrowRight":if(!S||!M||k.length>0||Le===void 0)return;Le===S.length-1?t(24,Le=void 0):Le<S.length-1&&t(24,Le+=1);break}}function me(N){N&&h("focus",N),x.focus(),t(2,E=!0)}function ee(N){(ce||E)&&(h("blur",N),t(6,ce=!1),t(2,E=!1),t(24,Le=void 0),x.blur())}function Se(){v||(t(20,A=0),t(6,ce=!ce),ce&&!E&&me())}function xe(){t(3,S=void 0),t(6,ce=!1),h("clear",S),me()}ss(()=>{ce&&t(2,E=!0),E&&x&&x.focus()});function nt(N){if(N){t(4,k="");const Ie=Object.assign({},N);(!Ie.groupHeader||Ie.selectable)&&(M?t(3,S=S?S.concat([Ie]):[Ie]):t(3,S=Ie),t(3,S),setTimeout(()=>{t(6,ce=!1),t(24,Le=void 0),h("select",S)}))}}function lt(){t(4,k=""),t(6,ce=!1)}let{ariaValues:bt=N=>`Option ${N}, selected.`}=e,{ariaListOpen:nn=(N,Ie)=>`You are currently focused on option ${N}. There are ${Ie} results available.`}=e,{ariaFocused:xt=()=>"Select is focused, type to refine list, press down to open the menu."}=e;function Tn(N){let Ie;return N&&S.length>0?Ie=S.map(Rt=>Rt[I]).join(", "):Ie=S[I],bt(Ie)}function rn(){if(!u||u.length===0)return"";let N=u[A];if(ce&&N){let Ie=u?u.length:0;return nn(N[I],Ie)}else return xt()}let Jt=null,Ti;function ps(){clearTimeout(Ti),Ti=setTimeout(()=>{ms=!1},100)}function Eo(N){b&&!b.contains(N.target)&&!(Jt!=null&&Jt.contains(N.target))&&ee()}It(()=>{Jt==null||Jt.remove()});let{activeItemIndex:Ci=0}=e,ms=!1;function C(N){N.isCreator||nt(N)}function X(N){ms||t(20,A=N)}function te(N){const{item:Ie,i:Rt}=N;if((Ie==null?void 0:Ie.selectable)!==!1){if(S&&!M&&S[B]===Ie[B])return lt();px(Ie)&&(t(51,Ci=Rt),t(20,A=Rt),C(Ie))}}let q=0;function ie(N){N>0&&A===u.length-1?t(20,A=0):N<0&&A===0?t(20,A=u.length-1):t(20,A=A+N),t(26,q=A)}function Ne(N,Ie,Rt){if(!M)return Ie&&Ie[Rt]===N[Rt]}const Ve=tf,Je=tf;function je(){const{width:N}=b.getBoundingClientRect();t(21,Jt.style.width=ze?N+"px":"auto",Jt)}let{floatingConfig:rt={}}=e,$e={strategy:"absolute",placement:"bottom-start",middleware:[hy(yt),fy(),my()]};const[it,Tt]=ky($e);function Wn(){$e=Object.assign($e,rt)}function li(N){ct.call(this,i,N)}function ci(N){ct.call(this,i,N)}function hn(N){ct.call(this,i,N)}function st(N){ct.call(this,i,N)}const ui=N=>X(N),Pt=N=>X(N),sn=(N,Ie)=>te({item:N,i:Ie});function Nn(N){Mt[N?"unshift":"push"](()=>{Jt=N,t(21,Jt)})}const Li=N=>at(N),kr=N=>P?at(N):{};function Bt(N){Mt[N?"unshift":"push"](()=>{x=N,t(1,x)})}function jn(){k=this.value,t(4,k),t(6,ce),t(2,E),t(1,x)}function Nr(N){Mt[N?"unshift":"push"](()=>{b=N,t(0,b)})}return i.$$set=N=>{"justValue"in N&&t(50,p=N.justValue),"filter"in N&&t(52,_=N.filter),"getItems"in N&&t(53,w=N.getItems),"id"in N&&t(54,y=N.id),"container"in N&&t(0,b=N.container),"input"in N&&t(1,x=N.input),"multiple"in N&&t(7,M=N.multiple),"multiFullItemClearable"in N&&t(8,P=N.multiFullItemClearable),"disabled"in N&&t(9,v=N.disabled),"focused"in N&&t(2,E=N.focused),"value"in N&&t(3,S=N.value),"filterText"in N&&t(4,k=N.filterText),"placeholder"in N&&t(55,F=N.placeholder),"placeholderAlwaysShow"in N&&t(56,L=N.placeholderAlwaysShow),"items"in N&&t(49,O=N.items),"label"in N&&t(10,I=N.label),"itemFilter"in N&&t(57,R=N.itemFilter),"groupBy"in N&&t(58,Y=N.groupBy),"groupFilter"in N&&t(59,Z=N.groupFilter),"groupHeaderSelectable"in N&&t(60,H=N.groupHeaderSelectable),"itemId"in N&&t(11,B=N.itemId),"loadOptions"in N&&t(61,j=N.loadOptions),"containerStyles"in N&&t(12,ne=N.containerStyles),"createGroupHeaderItem"in N&&t(62,se=N.createGroupHeaderItem),"searchable"in N&&t(13,Me=N.searchable),"inputStyles"in N&&t(14,V=N.inputStyles),"clearable"in N&&t(64,ue=N.clearable),"loading"in N&&t(5,Te=N.loading),"listOpen"in N&&t(6,ce=N.listOpen),"debounce"in N&&t(65,qe=N.debounce),"debounceWait"in N&&t(66,Q=N.debounceWait),"hideEmptyState"in N&&t(15,le=N.hideEmptyState),"inputAttributes"in N&&t(16,We=N.inputAttributes),"listAutoWidth"in N&&t(67,ze=N.listAutoWidth),"showChevron"in N&&t(17,ut=N.showChevron),"listOffset"in N&&t(68,yt=N.listOffset),"class"in N&&t(18,Oe=N.class),"ariaValues"in N&&t(69,bt=N.ariaValues),"ariaListOpen"in N&&t(70,nn=N.ariaListOpen),"ariaFocused"in N&&t(71,xt=N.ariaFocused),"activeItemIndex"in N&&t(51,Ci=N.activeItemIndex),"floatingConfig"in N&&t(72,rt=N.floatingConfig),"$$scope"in N&&t(76,m=N.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&8|i.$$.dirty[1]&262144&&S&&$(),i.$$.dirty[0]&73728&&(We||!Me)&&de(),i.$$.dirty[0]&128&&M&&T(),i.$$.dirty[0]&128|i.$$.dirty[2]&8192&&D&&!M&&re(),i.$$.dirty[0]&136&&M&&S&&S.length>1&&z(),i.$$.dirty[0]&8&&S&&Ge(),i.$$.dirty[0]&136|i.$$.dirty[2]&2048&&!S&&M&&vt&&h("change",S),i.$$.dirty[0]&6&&!E&&x&&t(6,ce=!1),i.$$.dirty[0]&64&&(ce||t(4,k="")),i.$$.dirty[0]&16|i.$$.dirty[2]&4096&&k!==Lt&&he(),i.$$.dirty[0]&136&&t(23,n=M?S&&S.length>0:S),i.$$.dirty[0]&8388624&&t(33,r=n&&k.length>0),i.$$.dirty[0]&8389152|i.$$.dirty[2]&4&&t(32,s=n&&ue&&!v&&!Te),i.$$.dirty[0]&136|i.$$.dirty[1]&50331648&&t(31,o=L&&M?F:S?"":F),i.$$.dirty[0]&136&&t(30,a=M&&S&&S.length>0),i.$$.dirty[0]&136&&t(29,l=S?Tn(M):""),i.$$.dirty[0]&3224|i.$$.dirty[1]&1277427712&&t(22,u=_({loadOptions:j,filterText:k,items:O,multiple:M,value:S,itemId:B,groupBy:Y,label:I,itemFilter:R,convertStringItemsToObjects:ef,filterGroupedItems:we})),i.$$.dirty[0]&4194304&&u&&t(20,A=0),i.$$.dirty[0]&5242948&&t(28,c=rn()),i.$$.dirty[1]&262144&&Ke(O),i.$$.dirty[0]&2184&&t(50,p=ye()),i.$$.dirty[0]&136|i.$$.dirty[2]&2048&&!M&&vt&&!S&&h("change",S),i.$$.dirty[0]&2097217&&ce&&b&&Jt&&je(),i.$$.dirty[2]&1024&&Wn(),i.$$.dirty[0]&2097152&&t(27,f=!!Jt)},[b,x,E,S,k,Te,ce,M,P,v,I,B,ne,Me,V,le,We,ut,Oe,xe,A,Jt,u,n,Le,oe,q,f,c,l,a,o,s,r,at,U,me,ee,Se,ps,Eo,X,te,Ne,Ve,Je,it,Tt,g,O,p,Ci,_,w,y,F,L,R,Y,Z,H,j,se,_e,ue,qe,Q,ze,yt,bt,nn,xt,rt,vt,Lt,D,m,d,li,ci,hn,st,ui,Pt,sn,Nn,Li,kr,Bt,jn,Nr]}class gx extends Ze{constructor(e){super(),Ye(this,e,mx,dx,He,{justValue:50,filter:52,getItems:53,id:54,container:0,input:1,multiple:7,multiFullItemClearable:8,disabled:9,focused:2,value:3,filterText:4,placeholder:55,placeholderAlwaysShow:56,items:49,label:10,itemFilter:57,groupBy:58,groupFilter:59,groupHeaderSelectable:60,itemId:11,loadOptions:61,containerStyles:12,createGroupHeaderItem:62,getFilteredItems:63,searchable:13,inputStyles:14,clearable:64,loading:5,listOpen:6,debounce:65,debounceWait:66,hideEmptyState:15,inputAttributes:16,listAutoWidth:67,showChevron:17,listOffset:68,class:18,handleClear:19,ariaValues:69,ariaListOpen:70,ariaFocused:71,activeItemIndex:51,floatingConfig:72},null,[-1,-1,-1,-1])}get getFilteredItems(){return this.$$.ctx[63]}get handleClear(){return this.$$.ctx[19]}}function _x(i){let e,t,n,r,s,o,a;return{c(){e=Xt("svg"),t=Xt("g"),n=Xt("path"),r=Xt("g"),s=Xt("path"),J(n,"d",`M372.939,264.641c-6.641,0-12.03,5.39-12.03,12.03v84.212H24.061v-84.212c0-6.641-5.39-12.03-12.03-12.03
        S0,270.031,0,276.671v96.242c0,6.641,5.39,12.03,12.03,12.03h360.909c6.641,0,12.03-5.39,12.03-12.03v-96.242
        C384.97,270.019,379.58,264.641,372.939,264.641z`),J(t,"id","top"),J(t,"class","svelte-192w7ff"),J(s,"d",`M117.067,103.507l63.46-62.558v235.71c0,6.641,5.438,12.03,12.151,12.03c6.713,0,12.151-5.39,12.151-12.03V40.95
        l63.46,62.558c4.74,4.704,12.439,4.704,17.179,0c4.74-4.704,4.752-12.319,0-17.011l-84.2-82.997
        c-4.692-4.656-12.584-4.608-17.191,0L99.888,86.496c-4.752,4.704-4.74,12.319,0,17.011
        C104.628,108.211,112.327,108.211,117.067,103.507z`),J(r,"id","bottom"),J(r,"class",o=kt(i[0]?"active":"")+" svelte-192w7ff"),J(e,"class",a=kt(i[0]?"active":"")+" svelte-192w7ff"),J(e,"width","100%"),J(e,"viewBox","0 0 385 385"),J(e,"preserveAspectRatio","xMidYMid meet")},m(l,c){ge(l,e,c),ae(e,t),ae(t,n),ae(e,r),ae(r,s)},p(l,[c]){c&1&&o!==(o=kt(l[0]?"active":"")+" svelte-192w7ff")&&J(r,"class",o),c&1&&a!==(a=kt(l[0]?"active":"")+" svelte-192w7ff")&&J(e,"class",a)},i:Qe,o:Qe,d(l){l&&fe(e)}}}function vx(i,e,t){let{hovered:n}=e;return i.$$set=r=>{"hovered"in r&&t(0,n=r.hovered)},[n]}class bx extends Ze{constructor(e){super(),Ye(this,e,vx,_x,He,{hovered:0})}}function wx(i){let e=i[0][0].name+"",t;return{c(){t=Ct(e)},m(n,r){ge(n,t,r)},p(n,r){r&1&&e!==(e=n[0][0].name+"")&&bn(t,e)},i:Qe,o:Qe,d(n){n&&fe(t)}}}function yx(i){let e,t,n;return e=new bx({props:{hovered:i[1]}}),{c(){Re(e.$$.fragment),t=Ct(" Upload a file")},m(r,s){De(e,r,s),ge(r,t,s),n=!0},p(r,s){const o={};s&2&&(o.hovered=r[1]),e.$set(o)},i(r){n||(W(e.$$.fragment,r),n=!0)},o(r){K(e.$$.fragment,r),n=!1},d(r){Pe(e,r),r&&fe(t)}}}function xx(i){let e,t,n,r,s,o,a,l,c,u;const f=[yx,wx],d=[];function m(g,h){return g[0]===void 0?0:1}return n=m(i),r=d[n]=f[n](i),{c(){e=Ae("div"),t=Ae("button"),r.c(),o=ke(),a=Ae("input"),J(t,"class",s=kt(i[1]||i[0]?"active":"")+" svelte-1w8p7ld"),J(a,"type","file"),J(a,"name","fileghost"),J(a,"class","svelte-1w8p7ld"),J(e,"class","upload-btn-wrapper svelte-1w8p7ld")},m(g,h){ge(g,e,h),ae(e,t),d[n].m(t,null),ae(e,o),ae(e,a),l=!0,c||(u=[tt(a,"mouseenter",i[2]),tt(a,"mouseleave",i[3]),tt(a,"change",i[5])],c=!0)},p(g,[h]){let p=n;n=m(g),n===p?d[n].p(g,h):(St(),K(d[p],1,1,()=>{d[p]=null}),Et(),r=d[n],r?r.p(g,h):(r=d[n]=f[n](g),r.c()),W(r,1),r.m(t,null)),(!l||h&3&&s!==(s=kt(g[1]||g[0]?"active":"")+" svelte-1w8p7ld"))&&J(t,"class",s)},i(g){l||(W(r),l=!0)},o(g){K(r),l=!1},d(g){g&&fe(e),d[n].d(),c=!1,Ht(u)}}}function Mx(i,e,t){let n=!1;function r(){t(1,n=!0)}function s(){t(1,n=!1)}let{value:o=!1}=e,a;function l(){a=this.files,t(0,a)}return i.$$set=c=>{"value"in c&&t(4,o=c.value)},i.$$.update=()=>{if(i.$$.dirty&1)if(a){let c=new FileReader;c.onload=function(u){let f;try{f=JSON.parse(u.target.result)}catch(d){console.error(d),t(0,a=void 0)}console.log(u),Ra.set(f)},c.readAsText(a[0])}else Ra.set(void 0);i.$$.dirty&1&&t(4,o=!!a)},[a,n,r,s,o,l]}class Sx extends Ze{constructor(e){super(),Ye(this,e,Mx,xx,He,{value:4})}}function Ex(i){let e,t,n,r,s,o;return{c(){e=Ae("label"),t=Ae("input"),n=ke(),r=Ae("span"),J(t,"type","checkbox"),J(t,"class","svelte-1ynonck"),J(r,"class","slider svelte-1ynonck"),J(e,"class","switch svelte-1ynonck")},m(a,l){ge(a,e,l),ae(e,t),t.checked=i[0],ae(e,n),ae(e,r),s||(o=tt(t,"change",i[1]),s=!0)},p(a,[l]){l&1&&(t.checked=a[0])},i:Qe,o:Qe,d(a){a&&fe(e),s=!1,o()}}}function Ax(i,e,t){let{checked:n=!1}=e;function r(){n=this.checked,t(0,n)}return i.$$set=s=>{"checked"in s&&t(0,n=s.checked)},[n,r]}class ma extends Ze{constructor(e){super(),Ye(this,e,Ax,Ex,He,{checked:0})}}function Tx(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p,_,w,y,b,x,M,P,v,E,S,k,F,L,O,I,R,Y,Z,H,B,j,ne,se,_e,Me,V,ue;function Te(Oe){i[8](Oe)}let ce={items:i[2]};i[0]!==void 0&&(ce.value=i[0]),n=new gx({props:ce}),Mt.push(()=>Zt(n,"value",Te));function ve(Oe){i[9](Oe)}let qe={};i[1]!==void 0&&(qe.value=i[1]),l=new Sx({props:qe}),Mt.push(()=>Zt(l,"value",ve));function Q(Oe){i[10](Oe)}let le={};i[3]!==void 0&&(le.checked=i[3]),b=new ma({props:le}),Mt.push(()=>Zt(b,"checked",Q));function We(Oe){i[11](Oe)}let ze={};i[4]!==void 0&&(ze.checked=i[4]),S=new ma({props:ze}),Mt.push(()=>Zt(S,"checked",We));function ut(Oe){i[13](Oe)}let yt={};return i[6]!==void 0&&(yt.checked=i[6]),se=new ma({props:yt}),Mt.push(()=>Zt(se,"checked",ut)),{c(){e=Ae("div"),t=Ct(`Network Select
	`),Re(n.$$.fragment),s=ke(),o=Ae("br"),a=Ct(`
	Fold-Change Data
	`),Re(l.$$.fragment),u=ke(),f=Ae("br"),d=ke(),m=Ae("hr"),g=ke(),h=Ae("br"),p=ke(),_=Ae("div"),w=Ct(`Auto-rotate
		`),y=Ae("div"),Re(b.$$.fragment),M=ke(),P=Ae("div"),v=Ct(`Show substrates
		`),E=Ae("div"),Re(S.$$.fragment),F=ke(),L=Ae("br"),O=Ct(`
	Fold-change selection
	`),I=Ae("input"),Y=ke(),Z=Ae("p"),H=ke(),B=Ae("div"),j=Ct(`Show unselected elements
		`),ne=Ae("div"),Re(se.$$.fragment),J(y,"class","switch svelte-1y88tey"),J(_,"class","switchElement svelte-1y88tey"),J(E,"class","switch svelte-1y88tey"),J(P,"class","switchElement svelte-1y88tey"),I.disabled=R=!i[1],jd(I,"width","100%"),J(I,"type","range"),J(I,"step","0.1"),J(I,"min",-.1),J(I,"max","4"),J(ne,"class","switch svelte-1y88tey"),J(B,"class","switchElement svelte-1y88tey"),J(e,"class","settings svelte-1y88tey")},m(Oe,Le){ge(Oe,e,Le),ae(e,t),De(n,e,null),ae(e,s),ae(e,o),ae(e,a),De(l,e,null),ae(e,u),ae(e,f),ae(e,d),ae(e,m),ae(e,g),ae(e,h),ae(e,p),ae(e,_),ae(_,w),ae(_,y),De(b,y,null),ae(e,M),ae(e,P),ae(P,v),ae(P,E),De(S,E,null),ae(e,F),ae(e,L),ae(e,O),ae(e,I),Ks(I,i[5]),ae(e,Y),ae(e,Z),ae(e,H),ae(e,B),ae(B,j),ae(B,ne),De(se,ne,null),Me=!0,V||(ue=[tt(I,"change",i[12]),tt(I,"input",i[12])],V=!0)},p(Oe,[Le]){const vt={};Le&4&&(vt.items=Oe[2]),!r&&Le&1&&(r=!0,vt.value=Oe[0],Yt(()=>r=!1)),n.$set(vt);const Lt={};!c&&Le&2&&(c=!0,Lt.value=Oe[1],Yt(()=>c=!1)),l.$set(Lt);const D={};!x&&Le&8&&(x=!0,D.checked=Oe[3],Yt(()=>x=!1)),b.$set(D);const A={};!k&&Le&16&&(k=!0,A.checked=Oe[4],Yt(()=>k=!1)),S.$set(A),(!Me||Le&2&&R!==(R=!Oe[1]))&&(I.disabled=R),Le&32&&Ks(I,Oe[5]);const $={};!_e&&Le&64&&(_e=!0,$.checked=Oe[6],Yt(()=>_e=!1)),se.$set($)},i(Oe){Me||(W(n.$$.fragment,Oe),W(l.$$.fragment,Oe),W(b.$$.fragment,Oe),W(S.$$.fragment,Oe),W(se.$$.fragment,Oe),Me=!0)},o(Oe){K(n.$$.fragment,Oe),K(l.$$.fragment,Oe),K(b.$$.fragment,Oe),K(S.$$.fragment,Oe),K(se.$$.fragment,Oe),Me=!1},d(Oe){Oe&&fe(e),Pe(n),Pe(l),Pe(b),Pe(S),Pe(se),V=!1,Ht(ue)}}}function Cx(i,e,t){let n,r,s,o;Fe(i,Pa,_=>t(3,n=_)),Fe(i,eo,_=>t(4,r=_)),Fe(i,is,_=>t(5,s=_)),Fe(i,to,_=>t(6,o=_));let a;const l=[{value:"../assets/networkTiny.json",label:"Tiny Network",data:void 0},{value:"../assets/kinases.json",label:"All Kinases",data:void 0},{value:"../assets/network.json",label:"Full Network",data:void 0}];let c=l[0],u=!1;ss(async()=>{t(2,l[0].data=(await pa(()=>import("./networkTiny.b5278778.js"),[],import.meta.url)).default,l),t(2,l[1].data=(await pa(()=>import("./kinases.df98d334.js"),[],import.meta.url)).default,l),t(2,l[2].data=(await pa(()=>import("./network.2e8bad16.js"),[],import.meta.url)).default,l),t(7,u=!0)}),It(()=>{t(7,u=!1)});function f(_){c=_,t(0,c)}function d(_){a=_,t(1,a)}function m(_){n=_,Pa.set(n)}function g(_){r=_,eo.set(r)}function h(){s=Hd(this.value),is.set(s)}function p(_){o=_,to.set(o)}return i.$$.update=()=>{i.$$.dirty&129&&u&&c&&Td.set(c.data)},[c,a,l,n,r,s,o,u,f,d,m,g,h,p]}class Lx extends Ze{constructor(e){super(),Ye(this,e,Cx,Tx,He,{})}}function nf(i){let e,t,n=i[0].name+"",r,s,o,a,l=i[0].type+"",c,u,f,d,m=i[0].id+"",g,h,p,_=i[0].desc+"",w;return{c(){e=Ae("div"),t=Ae("h1"),r=Ct(n),s=ke(),o=Ae("div"),a=Ae("p"),c=Ct(l),u=ke(),f=Ae("p"),d=Ct("UniprotID: "),g=Ct(m),h=ke(),p=Ae("p"),w=Ct(_),J(e,"class","title"),J(o,"class","content")},m(y,b){ge(y,e,b),ae(e,t),ae(t,r),ge(y,s,b),ge(y,o,b),ae(o,a),ae(a,c),ae(o,u),ae(o,f),ae(f,d),ae(f,g),ae(o,h),ae(o,p),ae(p,w)},p(y,b){b&1&&n!==(n=y[0].name+"")&&bn(r,n),b&1&&l!==(l=y[0].type+"")&&bn(c,l),b&1&&m!==(m=y[0].id+"")&&bn(g,m),b&1&&_!==(_=y[0].desc+"")&&bn(w,_)},d(y){y&&fe(e),y&&fe(s),y&&fe(o)}}}function Dx(i){let e,t,n=i[0]&&nf(i);return{c(){e=Ae("div"),t=Ct(`howdy this is info
    `),n&&n.c(),J(e,"class","info svelte-10idwc")},m(r,s){ge(r,e,s),ae(e,t),n&&n.m(e,null)},p(r,[s]){r[0]?n?n.p(r,s):(n=nf(r),n.c(),n.m(e,null)):n&&(n.d(1),n=null)},i:Qe,o:Qe,d(r){r&&fe(e),n&&n.d()}}}function Px(i,e,t){let n,r=_n([rs,Zr],(s,o)=>{!s[1]||o(s[0].getNodeAttributes(s[1]))});return Fe(i,r,s=>t(0,n=s)),[n,r]}class Rx extends Ze{constructor(e){super(),Ye(this,e,Px,Dx,He,{})}}function Ix(i){let e,t,n,r,s,o,a;const l=i[5].default,c=dt(l,i,i[4],null);return{c(){e=Ae("div"),t=Ae("div"),c&&c.c(),J(t,"class",n=kt("icon"+(i[2]?" hovered":""))+" svelte-n4zm1n"),J(e,"class",r=kt("tab"+(i[0]===i[3]?" selected":"")+(i[2]?" hovered":""))+" svelte-n4zm1n")},m(u,f){ge(u,e,f),ae(e,t),c&&c.m(t,null),s=!0,o||(a=[tt(e,"click",i[6]),tt(e,"mouseenter",i[7]),tt(e,"mouseleave",i[8])],o=!0)},p(u,[f]){c&&c.p&&(!s||f&16)&&pt(c,l,u,u[4],s?ht(l,u[4],f,null):mt(u[4]),null),(!s||f&4&&n!==(n=kt("icon"+(u[2]?" hovered":""))+" svelte-n4zm1n"))&&J(t,"class",n),(!s||f&13&&r!==(r=kt("tab"+(u[0]===u[3]?" selected":"")+(u[2]?" hovered":""))+" svelte-n4zm1n"))&&J(e,"class",r)},i(u){s||(W(c,u),s=!0)},o(u){K(c,u),s=!1},d(u){u&&fe(e),c&&c.d(u),o=!1,Ht(a)}}}function Ox(i,e,t){let n;Fe(i,Da,d=>t(3,n=d));let{$$slots:r={},$$scope:s}=e,{id:o}=e,{selectable:a=!0}=e,l=!1;const c=()=>{a&&Qt(Da,n=o,n)},u=()=>t(2,l=!0),f=()=>t(2,l=!1);return i.$$set=d=>{"id"in d&&t(0,o=d.id),"selectable"in d&&t(1,a=d.selectable),"$$scope"in d&&t(4,s=d.$$scope)},[o,a,l,n,s,r,c,u,f]}class kx extends Ze{constructor(e){super(),Ye(this,e,Ox,Ix,He,{id:0,selectable:1})}}function rf(i,e,t){const n=i.slice();return n[3]=e[t],n}function Nx(i){let e,t,n;var r=i[3].icon;function s(o){return{}}return r&&(e=new r(s())),{c(){e&&Re(e.$$.fragment),t=Kt()},m(o,a){e&&De(e,o,a),ge(o,t,a),n=!0},p(o,a){if(r!==(r=o[3].icon)){if(e){St();const l=e;K(l.$$.fragment,1,0,()=>{Pe(l,1)}),Et()}r?(e=new r(s()),Re(e.$$.fragment),W(e.$$.fragment,1),De(e,t.parentNode,t)):e=null}},i(o){n||(e&&W(e.$$.fragment,o),n=!0)},o(o){e&&K(e.$$.fragment,o),n=!1},d(o){o&&fe(t),e&&Pe(e,o)}}}function Fx(i){let e,t,n=i[3].icon&&Nx(i);return{c(){n&&n.c(),e=ke()},m(r,s){n&&n.m(r,s),ge(r,e,s),t=!0},p(r,s){r[3].icon&&n.p(r,s)},i(r){t||(W(n),t=!0)},o(r){K(n),t=!1},d(r){n&&n.d(r),r&&fe(e)}}}function sf(i){let e,t;return e=new kx({props:{id:i[3].id,selectable:i[3].selectable,$$slots:{default:[Fx]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},p(n,r){const s={};r&64&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function zx(i){let e;return{c(){e=Ct("SEARCH")},m(t,n){ge(t,e,n)},i:Qe,o:Qe,d(t){t&&fe(e)}}}function Ux(i){let e,t;return e=new Rx({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Gx(i){let e,t;return e=new Lx({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Bx(i){let e,t,n,r,s,o,a=i[1].find(i[2]).title+"",l,c,u,f,d,m=i[1],g=[];for(let y=0;y<m.length;y+=1)g[y]=sf(rf(i,m,y));const h=y=>K(g[y],1,1,()=>{g[y]=null}),p=[Gx,Ux,zx],_=[];function w(y,b){return y[0]==="settings"?0:y[0]==="info"?1:y[0]==="search"?2:-1}return~(u=w(i))&&(f=_[u]=p[u](i)),{c(){e=Ae("div"),t=Ae("nav");for(let y=0;y<g.length;y+=1)g[y].c();n=ke(),r=Ae("div"),s=Ae("div"),o=Ae("div"),l=Ct(a),c=ke(),f&&f.c(),J(t,"class","svelte-955hbq"),J(o,"class","title svelte-955hbq"),J(s,"class","header svelte-955hbq"),J(r,"class","drawerBody svelte-955hbq"),J(e,"class","drawer svelte-955hbq")},m(y,b){ge(y,e,b),ae(e,t);for(let x=0;x<g.length;x+=1)g[x].m(t,null);ae(e,n),ae(e,r),ae(r,s),ae(s,o),ae(o,l),ae(r,c),~u&&_[u].m(r,null),d=!0},p(y,[b]){if(b&2){m=y[1];let M;for(M=0;M<m.length;M+=1){const P=rf(y,m,M);g[M]?(g[M].p(P,b),W(g[M],1)):(g[M]=sf(P),g[M].c(),W(g[M],1),g[M].m(t,null))}for(St(),M=m.length;M<g.length;M+=1)h(M);Et()}(!d||b&1)&&a!==(a=y[1].find(y[2]).title+"")&&bn(l,a);let x=u;u=w(y),u!==x&&(f&&(St(),K(_[x],1,1,()=>{_[x]=null}),Et()),~u?(f=_[u],f||(f=_[u]=p[u](y),f.c()),W(f,1),f.m(r,null)):f=null)},i(y){if(!d){for(let b=0;b<m.length;b+=1)W(g[b]);W(f),d=!0}},o(y){g=g.filter(Boolean);for(let b=0;b<g.length;b+=1)K(g[b]);K(f),d=!1},d(y){y&&fe(e),ao(g,y),~u&&_[u].d()}}}function Vx(i,e,t){let n;return Fe(i,Da,o=>t(0,n=o)),[n,[{id:"fakeButton",title:"",icon:void 0,selectable:!1},{id:"settings",title:"Network Options",icon:Zw,selectable:!0},{id:"info",title:"Node Information",icon:$w,selectable:!0},{id:"search",title:"Search",icon:jw,selectable:!0}],o=>o.id===n]}class Hx extends Ze{constructor(e){super(),Ye(this,e,Vx,Bx,He,{})}}function Wx(i){let e,t,n,r,s,o,a,l,c,u,f,d;return{c(){e=Ae("div"),t=Ae("span"),r=ke(),s=Ae("span"),a=ke(),l=Ae("span"),J(t,"class",n=kt(i[0]?"active line line-1":"line line-1")+" svelte-vz2dqj"),J(s,"class",o=kt(i[0]?"active line line-2":"line line-2")+" svelte-vz2dqj"),J(l,"class",c=kt(i[0]?"active line line-3":"line line-3")+" svelte-vz2dqj"),J(e,"id","menu-icon"),J(e,"class",u=kt(i[0]?"active":"")+" svelte-vz2dqj"),J(e,"style","--transition-time: 0.2s;")},m(m,g){ge(m,e,g),ae(e,t),ae(e,r),ae(e,s),ae(e,a),ae(e,l),f||(d=tt(e,"click",i[1]),f=!0)},p(m,[g]){g&1&&n!==(n=kt(m[0]?"active line line-1":"line line-1")+" svelte-vz2dqj")&&J(t,"class",n),g&1&&o!==(o=kt(m[0]?"active line line-2":"line line-2")+" svelte-vz2dqj")&&J(s,"class",o),g&1&&c!==(c=kt(m[0]?"active line line-3":"line line-3")+" svelte-vz2dqj")&&J(l,"class",c),g&1&&u!==(u=kt(m[0]?"active":"")+" svelte-vz2dqj")&&J(e,"class",u)},i:Qe,o:Qe,d(m){m&&fe(e),f=!1,d()}}}function jx(i,e,t){let n;return Fe(i,La,s=>t(0,n=s)),[n,()=>Qt(La,n=!n,n)]}class qx extends Ze{constructor(e){super(),Ye(this,e,jx,Wx,He,{})}}function Xx(i){let e,t;return e=new Uw({}),{c(){Re(e.$$.fragment)},m(n,r){De(e,n,r),t=!0},i(n){t||(W(e.$$.fragment,n),t=!0)},o(n){K(e.$$.fragment,n),t=!1},d(n){Pe(e,n)}}}function Yx(i){let e,t,n,r,s,o,a,l,c,u,f;return e=new qx({}),s=new Hx({}),c=new Iv({props:{size:{width:i[0],height:i[1]},$$slots:{default:[Xx]},$$scope:{ctx:i}}}),{c(){Re(e.$$.fragment),t=ke(),n=Ae("div"),r=Ae("div"),Re(s.$$.fragment),a=ke(),l=Ae("div"),Re(c.$$.fragment),J(r,"class",o="drawerWrapper "+(i[2]?"active":"")+" svelte-a32r8z"),J(l,"class","canvas svelte-a32r8z"),Sr(()=>i[5].call(l)),J(n,"id","main"),J(n,"class","svelte-a32r8z")},m(d,m){De(e,d,m),ge(d,t,m),ge(d,n,m),ae(n,r),De(s,r,null),ae(n,a),ae(n,l),De(c,l,null),u=Xd(l,i[5].bind(l)),f=!0},p(d,[m]){(!f||m&4&&o!==(o="drawerWrapper "+(d[2]?"active":"")+" svelte-a32r8z"))&&J(r,"class",o);const g={};m&3&&(g.size={width:d[0],height:d[1]}),m&2048&&(g.$$scope={dirty:m,ctx:d}),c.$set(g)},i(d){f||(W(e.$$.fragment,d),W(s.$$.fragment,d),W(c.$$.fragment,d),f=!0)},o(d){K(e.$$.fragment,d),K(s.$$.fragment,d),K(c.$$.fragment,d),f=!1},d(d){Pe(e,d),d&&fe(t),d&&fe(n),Pe(s),Pe(c),u()}}}function Zx(i,e,t){let n;Fe(i,La,g=>t(2,n=g));let r,s,o,a,l=!1,c,u,f;function d(){u=document.getElementsByClassName("drawerWrapper")[0],c=document.getElementsByClassName("canvas")[0];let g=c.getBoundingClientRect();o=g.width,a=g.height,c.setAttribute("style","width:100px"),t(4,f=requestAnimationFrame(d))}ss(async()=>{u=document.getElementsByClassName("drawerWrapper")[0],c=document.getElementsByClassName("canvas")[0],u.addEventListener("transitionstart",g=>t(3,l=!0)),u.addEventListener("transitionend",g=>t(3,l=!1)),t(0,r=o),t(1,s=a)});function m(){r=this.clientWidth,s=this.clientHeight,t(0,r),t(1,s)}return i.$$.update=()=>{i.$$.dirty&24&&(l?d():f&&cancelAnimationFrame(f))},[r,s,n,l,f,m]}class Kx extends Ze{constructor(e){super(),Ye(this,e,Zx,Yx,He,{})}}new Kx({target:document.getElementById("app")});
