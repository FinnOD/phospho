(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerpolicy&&(s.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?s.credentials="include":r.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();function et(){}const cs=i=>i;function Pt(i,e){for(const t in e)i[t]=e[t];return i}function Af(i){return i()}function pl(){return Object.create(null)}function Nt(i){i.forEach(Af)}function ri(i){return typeof i=="function"}function Be(i,e){return i!=i?e==e:i!==e||i&&typeof i=="object"||typeof i=="function"}function sh(i){return Object.keys(i).length===0}function mo(i,...e){if(i==null)return et;const t=i.subscribe(...e);return t.unsubscribe?()=>t.unsubscribe():t}function Si(i){let e;return mo(i,t=>e=t)(),e}function Fe(i,e,t){i.$$.on_destroy.push(mo(e,t))}function dt(i,e,t,n){if(i){const r=Ef(i,e,t,n);return i[0](r)}}function Ef(i,e,t,n){return i[1]&&n?Pt(t.ctx.slice(),i[1](n(e))):t.ctx}function ht(i,e,t,n){if(i[2]&&n){const r=i[2](n(t));if(e.dirty===void 0)return r;if(typeof r=="object"){const s=[],o=Math.max(e.dirty.length,r.length);for(let a=0;a<o;a+=1)s[a]=e.dirty[a]|r[a];return s}return e.dirty|r}return e.dirty}function pt(i,e,t,n,r,s){if(r){const o=Ef(e,t,n,s);i.p(o,r)}}function mt(i){if(i.ctx.length>32){const e=[],t=i.ctx.length/32;for(let n=0;n<t;n++)e[n]=-1;return e}return-1}function Vn(i){const e={};for(const t in i)t[0]!=="$"&&(e[t]=i[t]);return e}function to(i,e){const t={};e=new Set(e);for(const n in i)!e.has(n)&&n[0]!=="$"&&(t[n]=i[n]);return t}function Tf(i){const e={};for(const t in i)e[t]=!0;return e}function Tt(i){return i==null?"":i}function en(i,e,t){return i.set(t),e}function Ei(i){return i&&ri(i.destroy)?i.destroy:et}const Cf=typeof window<"u";let go=Cf?()=>window.performance.now():()=>Date.now(),Ha=Cf?i=>requestAnimationFrame(i):et;const Mr=new Set;function Lf(i){Mr.forEach(e=>{e.c(i)||(Mr.delete(e),e.f())}),Mr.size!==0&&Ha(Lf)}function _o(i){let e;return Mr.size===0&&Ha(Lf),{promise:new Promise(t=>{Mr.add(e={c:i,f:t})}),abort(){Mr.delete(e)}}}function ne(i,e){i.appendChild(e)}function Df(i){if(!i)return document;const e=i.getRootNode?i.getRootNode():i.ownerDocument;return e&&e.host?e:i.ownerDocument}function oh(i){const e=he("style");return ah(Df(i),e),e.sheet}function ah(i,e){return ne(i.head||i,e),e.sheet}function ue(i,e,t){i.insertBefore(e,t||null)}function le(i){i.parentNode.removeChild(i)}function Nr(i,e){for(let t=0;t<i.length;t+=1)i[t]&&i[t].d(e)}function he(i){return document.createElement(i)}function Ht(i){return document.createElementNS("http://www.w3.org/2000/svg",i)}function wt(i){return document.createTextNode(i)}function Oe(){return wt(" ")}function zt(){return wt("")}function Ge(i,e,t,n){return i.addEventListener(e,t,n),()=>i.removeEventListener(e,t,n)}function Ti(i){return function(e){return e.preventDefault(),i.call(this,e)}}function Cr(i){return function(e){return e.stopPropagation(),i.call(this,e)}}function W(i,e,t){t==null?i.removeAttribute(e):i.getAttribute(e)!==t&&i.setAttribute(e,t)}function Ci(i,e){const t=Object.getOwnPropertyDescriptors(i.__proto__);for(const n in e)e[n]==null?i.removeAttribute(n):n==="style"?i.style.cssText=e[n]:n==="__value"?i.value=i[n]=e[n]:t[n]&&t[n].set?i[n]=e[n]:W(i,n,e[n])}function lh(i){return i===""?null:+i}function ch(i){return Array.from(i.childNodes)}function qt(i,e){e=""+e,i.wholeText!==e&&(i.data=e)}function Lr(i,e){i.value=e==null?"":e}function uh(i,e,t,n){t===null?i.style.removeProperty(e):i.style.setProperty(e,t,n?"important":"")}let ys;function fh(){if(ys===void 0){ys=!1;try{typeof window<"u"&&window.parent&&window.parent.document}catch{ys=!0}}return ys}function dh(i,e){getComputedStyle(i).position==="static"&&(i.style.position="relative");const n=he("iframe");n.setAttribute("style","display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;"),n.setAttribute("aria-hidden","true"),n.tabIndex=-1;const r=fh();let s;return r?(n.src="data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}<\/script>",s=Ge(window,"message",o=>{o.source===n.contentWindow&&e()})):(n.src="about:blank",n.onload=()=>{s=Ge(n.contentWindow,"resize",e)}),ne(i,n),()=>{(r||s&&n.contentWindow)&&s(),le(n)}}function Je(i,e,t){i.classList[t?"add":"remove"](e)}function Pf(i,e,{bubbles:t=!1,cancelable:n=!1}={}){const r=document.createEvent("CustomEvent");return r.initCustomEvent(i,t,n,e),r}class hh{constructor(e=!1){this.is_svg=!1,this.is_svg=e,this.e=this.n=null}c(e){this.h(e)}m(e,t,n=null){this.e||(this.is_svg?this.e=Ht(t.nodeName):this.e=he(t.nodeName),this.t=t,this.c(e)),this.i(n)}h(e){this.e.innerHTML=e,this.n=Array.from(this.e.childNodes)}i(e){for(let t=0;t<this.n.length;t+=1)ue(this.t,this.n[t],e)}p(e){this.d(),this.h(e),this.i(this.a)}d(){this.n.forEach(le)}}const no=new Map;let io=0;function ph(i){let e=5381,t=i.length;for(;t--;)e=(e<<5)-e^i.charCodeAt(t);return e>>>0}function mh(i,e){const t={stylesheet:oh(e),rules:{}};return no.set(i,t),t}function ro(i,e,t,n,r,s,o,a=0){const l=16.666/n;let c=`{
`;for(let p=0;p<=1;p+=l){const _=e+(t-e)*s(p);c+=p*100+`%{${o(_,1-_)}}
`}const u=c+`100% {${o(t,1-t)}}
}`,f=`__svelte_${ph(u)}_${a}`,d=Df(i),{stylesheet:m,rules:g}=no.get(d)||mh(d,i);g[f]||(g[f]=!0,m.insertRule(`@keyframes ${f} ${u}`,m.cssRules.length));const h=i.style.animation||"";return i.style.animation=`${h?`${h}, `:""}${f} ${n}ms linear ${r}ms 1 both`,io+=1,f}function so(i,e){const t=(i.style.animation||"").split(", "),n=t.filter(e?s=>s.indexOf(e)<0:s=>s.indexOf("__svelte")===-1),r=t.length-n.length;r&&(i.style.animation=n.join(", "),io-=r,io||gh())}function gh(){Ha(()=>{io||(no.forEach(i=>{const{ownerNode:e}=i.stylesheet;e&&le(e)}),no.clear())})}let is;function ts(i){is=i}function ki(){if(!is)throw new Error("Function called outside component initialization");return is}function _h(i){ki().$$.before_update.push(i)}function Fr(i){ki().$$.on_mount.push(i)}function Rf(i){ki().$$.after_update.push(i)}function Ot(i){ki().$$.on_destroy.push(i)}function ci(){const i=ki();return(e,t,{cancelable:n=!1}={})=>{const r=i.$$.callbacks[e];if(r){const s=Pf(e,t,{cancelable:n});return r.slice().forEach(o=>{o.call(i,s)}),!s.defaultPrevented}return!0}}function In(i,e){return ki().$$.context.set(i,e),e}function Hn(i){return ki().$$.context.get(i)}function Ze(i,e){const t=i.$$.callbacks[e.type];t&&t.slice().forEach(n=>n.call(this,e))}const Jr=[],bt=[],Zs=[],Aa=[],If=Promise.resolve();let Ea=!1;function kf(){Ea||(Ea=!0,If.then(Of))}function Dr(){return kf(),If}function si(i){Zs.push(i)}function Wt(i){Aa.push(i)}const No=new Set;let xs=0;function Of(){const i=is;do{for(;xs<Jr.length;){const e=Jr[xs];xs++,ts(e),vh(e.$$)}for(ts(null),Jr.length=0,xs=0;bt.length;)bt.pop()();for(let e=0;e<Zs.length;e+=1){const t=Zs[e];No.has(t)||(No.add(t),t())}Zs.length=0}while(Jr.length);for(;Aa.length;)Aa.pop()();Ea=!1,No.clear(),ts(i)}function vh(i){if(i.fragment!==null){i.update(),Nt(i.before_update);const e=i.dirty;i.dirty=[-1],i.fragment&&i.fragment.p(i.ctx,e),i.after_update.forEach(si)}}let Wr;function Wa(){return Wr||(Wr=Promise.resolve(),Wr.then(()=>{Wr=null})),Wr}function Yi(i,e,t){i.dispatchEvent(Pf(`${e?"intro":"outro"}${t}`))}const Ks=new Set;let Un;function ut(){Un={r:0,c:[],p:Un}}function ft(){Un.r||Nt(Un.c),Un=Un.p}function U(i,e){i&&i.i&&(Ks.delete(i),i.i(e))}function q(i,e,t,n){if(i&&i.o){if(Ks.has(i))return;Ks.add(i),Un.c.push(()=>{Ks.delete(i),n&&(t&&i.d(1),n())}),i.o(e)}else n&&n()}const ja={duration:0};function bh(i,e,t){let n=e(i,t),r=!1,s,o,a=0;function l(){s&&so(i,s)}function c(){const{delay:f=0,duration:d=300,easing:m=cs,tick:g=et,css:h}=n||ja;h&&(s=ro(i,0,1,d,f,m,h,a++)),g(0,1);const p=go()+f,_=p+d;o&&o.abort(),r=!0,si(()=>Yi(i,!0,"start")),o=_o(w=>{if(r){if(w>=_)return g(1,0),Yi(i,!0,"end"),l(),r=!1;if(w>=p){const y=m((w-p)/d);g(y,1-y)}}return r})}let u=!1;return{start(){u||(u=!0,so(i),ri(n)?(n=n(),Wa().then(c)):c())},invalidate(){u=!1},end(){r&&(l(),r=!1)}}}function wh(i,e,t){let n=e(i,t),r=!0,s;const o=Un;o.r+=1;function a(){const{delay:l=0,duration:c=300,easing:u=cs,tick:f=et,css:d}=n||ja;d&&(s=ro(i,1,0,c,l,u,d));const m=go()+l,g=m+c;si(()=>Yi(i,!1,"start")),_o(h=>{if(r){if(h>=g)return f(0,1),Yi(i,!1,"end"),--o.r||Nt(o.c),!1;if(h>=m){const p=u((h-m)/c);f(1-p,p)}}return r})}return ri(n)?Wa().then(()=>{n=n(),a()}):a(),{end(l){l&&n.tick&&n.tick(1,0),r&&(s&&so(i,s),r=!1)}}}function ml(i,e,t,n){let r=e(i,t),s=n?0:1,o=null,a=null,l=null;function c(){l&&so(i,l)}function u(d,m){const g=d.b-s;return m*=Math.abs(g),{a:s,b:d.b,d:g,duration:m,start:d.start,end:d.start+m,group:d.group}}function f(d){const{delay:m=0,duration:g=300,easing:h=cs,tick:p=et,css:_}=r||ja,w={start:go()+m,b:d};d||(w.group=Un,Un.r+=1),o||a?a=w:(_&&(c(),l=ro(i,s,d,g,m,h,_)),d&&p(0,1),o=u(w,g),si(()=>Yi(i,d,"start")),_o(y=>{if(a&&y>a.start&&(o=u(a,g),a=null,Yi(i,o.b,"start"),_&&(c(),l=ro(i,s,o.b,o.duration,0,h,r.css))),o){if(y>=o.end)p(s=o.b,1-s),Yi(i,o.b,"end"),a||(o.b?c():--o.group.r||Nt(o.group.c)),o=null;else if(y>=o.start){const b=y-o.start;s=o.a+o.d*h(b/o.duration),p(s,1-s)}}return!!(o||a)}))}return{run(d){ri(r)?Wa().then(()=>{r=r(),f(d)}):f(d)},end(){c(),o=a=null}}}function Nf(i,e){q(i,1,1,()=>{e.delete(i.key)})}function Ff(i,e,t,n,r,s,o,a,l,c,u,f){let d=i.length,m=s.length,g=d;const h={};for(;g--;)h[i[g].key]=g;const p=[],_=new Map,w=new Map;for(g=m;g--;){const M=f(r,s,g),L=t(M);let v=o.get(L);v?n&&v.p(M,e):(v=c(L,M),v.c()),_.set(L,p[g]=v),L in h&&w.set(L,Math.abs(g-h[L]))}const y=new Set,b=new Set;function x(M){U(M,1),M.m(a,u),o.set(M.key,M),u=M.first,m--}for(;d&&m;){const M=p[m-1],L=i[d-1],v=M.key,A=L.key;M===L?(u=M.first,d--,m--):_.has(A)?!o.has(v)||y.has(v)?x(M):b.has(A)?d--:w.get(v)>w.get(A)?(b.add(v),x(M)):(y.add(A),d--):(l(L,o),d--)}for(;d--;){const M=i[d];_.has(M.key)||l(M,o)}for(;m;)x(p[m-1]);return p}function ui(i,e){const t={},n={},r={$$scope:1};let s=i.length;for(;s--;){const o=i[s],a=e[s];if(a){for(const l in o)l in a||(n[l]=1);for(const l in a)r[l]||(t[l]=a[l],r[l]=1);i[s]=a}else for(const l in o)r[l]=1}for(const o in n)o in t||(t[o]=void 0);return t}function us(i){return typeof i=="object"&&i!==null?i:{}}function jt(i,e,t){const n=i.$$.props[e];n!==void 0&&(i.$$.bound[n]=t,t(i.$$.ctx[n]))}function De(i){i&&i.c()}function Te(i,e,t,n){const{fragment:r,on_mount:s,on_destroy:o,after_update:a}=i.$$;r&&r.m(e,t),n||si(()=>{const l=s.map(Af).filter(ri);o?o.push(...l):Nt(l),i.$$.on_mount=[]}),a.forEach(si)}function Ce(i,e){const t=i.$$;t.fragment!==null&&(Nt(t.on_destroy),t.fragment&&t.fragment.d(e),t.on_destroy=t.fragment=null,t.ctx=[])}function yh(i,e){i.$$.dirty[0]===-1&&(Jr.push(i),kf(),i.$$.dirty.fill(0)),i.$$.dirty[e/31|0]|=1<<e%31}function He(i,e,t,n,r,s,o,a=[-1]){const l=is;ts(i);const c=i.$$={fragment:null,ctx:null,props:s,update:et,not_equal:r,bound:pl(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(e.context||(l?l.$$.context:[])),callbacks:pl(),dirty:a,skip_bound:!1,root:e.target||l.$$.root};o&&o(c.root);let u=!1;if(c.ctx=t?t(i,e.props||{},(f,d,...m)=>{const g=m.length?m[0]:d;return c.ctx&&r(c.ctx[f],c.ctx[f]=g)&&(!c.skip_bound&&c.bound[f]&&c.bound[f](g),u&&yh(i,f)),d}):[],c.update(),u=!0,Nt(c.before_update),c.fragment=n?n(c.ctx):!1,e.target){if(e.hydrate){const f=ch(e.target);c.fragment&&c.fragment.l(f),f.forEach(le)}else c.fragment&&c.fragment.c();e.intro&&U(i.$$.fragment),Te(i,e.target,e.anchor,e.customElement),Of()}ts(l)}class We{$destroy(){Ce(this,1),this.$destroy=et}$on(e,t){const n=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return n.push(t),()=>{const r=n.indexOf(t);r!==-1&&n.splice(r,1)}}$set(e){this.$$set&&!sh(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}const nr=[];function zf(i,e){return{subscribe:lt(i,e).subscribe}}function lt(i,e=et){let t;const n=new Set;function r(a){if(Be(i,a)&&(i=a,t)){const l=!nr.length;for(const c of n)c[1](),nr.push(c,i);if(l){for(let c=0;c<nr.length;c+=2)nr[c][0](nr[c+1]);nr.length=0}}}function s(a){r(a(i))}function o(a,l=et){const c=[a,l];return n.add(c),n.size===1&&(t=e(r)||et),a(i),()=>{n.delete(c),n.size===0&&(t(),t=null)}}return{set:r,update:s,subscribe:o}}function vn(i,e,t){const n=!Array.isArray(i),r=n?[i]:i,s=e.length<2;return zf(t,o=>{let a=!1;const l=[];let c=0,u=et;const f=()=>{if(c)return;u();const m=e(n?l[0]:l,o);s?o(m):u=ri(m)?m:et},d=r.map((m,g)=>mo(m,h=>{l[g]=h,c&=~(1<<g),a&&f()},()=>{c|=1<<g}));return a=!0,f(),function(){Nt(d),u()}})}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const qa="144",ir={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},rr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},xh=0,gl=1,Mh=2,Uf=1,Gf=2,Qr=3,Pr=0,Mn=1,Mi=2,Ai=0,Sr=1,_l=2,vl=3,bl=4,Sh=5,wr=100,Ah=101,Eh=102,wl=103,yl=104,Th=200,Ch=201,Lh=202,Dh=203,Bf=204,Vf=205,Ph=206,Rh=207,Ih=208,kh=209,Oh=210,Nh=0,Fh=1,zh=2,Ta=3,Uh=4,Gh=5,Bh=6,Vh=7,Xa=0,Hh=1,Wh=2,Bn=0,jh=1,qh=2,Xh=3,Hf=4,Yh=5,Wf=300,Rr=301,Ir=302,Ca=303,La=304,vo=306,Da=1e3,kn=1001,Pa=1002,an=1003,xl=1004,Ml=1005,bn=1006,Zh=1007,bo=1008,Ji=1009,Kh=1010,Jh=1011,jf=1012,Qh=1013,ji=1014,qi=1015,rs=1016,$h=1017,ep=1018,Ar=1020,tp=1021,np=1022,Gn=1023,ip=1024,rp=1025,Zi=1026,kr=1027,sp=1028,op=1029,ap=1030,lp=1031,cp=1033,Fo=33776,zo=33777,Uo=33778,Go=33779,Sl=35840,Al=35841,El=35842,Tl=35843,up=36196,Cl=37492,Ll=37496,Dl=37808,Pl=37809,Rl=37810,Il=37811,kl=37812,Ol=37813,Nl=37814,Fl=37815,zl=37816,Ul=37817,Gl=37818,Bl=37819,Vl=37820,Hl=37821,Wl=36492,Li=3e3,Rt=3001,fp=3200,dp=3201,qf=0,hp=1,ti="srgb",Xi="srgb-linear",Bo=7680,pp=519,jl=35044,ql="300 es",Ra=1035;class Qi{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const r=this._listeners[e];if(r!==void 0){const s=r.indexOf(t);s!==-1&&r.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const r=n.slice(0);for(let s=0,o=r.length;s<o;s++)r[s].call(this,e);e.target=null}}}const Kt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],Vo=Math.PI/180,Xl=180/Math.PI;function fs(){const i=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Kt[i&255]+Kt[i>>8&255]+Kt[i>>16&255]+Kt[i>>24&255]+"-"+Kt[e&255]+Kt[e>>8&255]+"-"+Kt[e>>16&15|64]+Kt[e>>24&255]+"-"+Kt[t&63|128]+Kt[t>>8&255]+"-"+Kt[t>>16&255]+Kt[t>>24&255]+Kt[n&255]+Kt[n>>8&255]+Kt[n>>16&255]+Kt[n>>24&255]).toLowerCase()}function ln(i,e,t){return Math.max(e,Math.min(t,i))}function mp(i,e){return(i%e+e)%e}function Ho(i,e,t){return(1-t)*i+t*e}function Yl(i){return(i&i-1)===0&&i!==0}function Ia(i){return Math.pow(2,Math.floor(Math.log(i)/Math.LN2))}function Ms(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return i/65535;case Uint8Array:return i/255;case Int16Array:return Math.max(i/32767,-1);case Int8Array:return Math.max(i/127,-1);default:throw new Error("Invalid component type.")}}function un(i,e){switch(e.constructor){case Float32Array:return i;case Uint16Array:return Math.round(i*65535);case Uint8Array:return Math.round(i*255);case Int16Array:return Math.round(i*32767);case Int8Array:return Math.round(i*127);default:throw new Error("Invalid component type.")}}class je{constructor(e=0,t=0){je.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6],this.y=r[1]*t+r[4]*n+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),r=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*r+e.x,this.y=s*r+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class wn{constructor(){wn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,r,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],f=n[7],d=n[2],m=n[5],g=n[8],h=r[0],p=r[3],_=r[6],w=r[1],y=r[4],b=r[7],x=r[2],M=r[5],L=r[8];return s[0]=o*h+a*w+l*x,s[3]=o*p+a*y+l*M,s[6]=o*_+a*b+l*L,s[1]=c*h+u*w+f*x,s[4]=c*p+u*y+f*M,s[7]=c*_+u*b+f*L,s[2]=d*h+m*w+g*x,s[5]=d*p+m*y+g*M,s[8]=d*_+m*b+g*L,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-n*s*u+n*a*l+r*s*c-r*o*l}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=u*o-a*c,d=a*l-u*s,m=c*s-o*l,g=t*f+n*d+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const h=1/g;return e[0]=f*h,e[1]=(r*c-u*n)*h,e[2]=(a*n-r*o)*h,e[3]=d*h,e[4]=(u*t-r*l)*h,e[5]=(r*s-a*t)*h,e[6]=m*h,e[7]=(n*l-c*t)*h,e[8]=(o*t-n*s)*h,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),r=this.elements,s=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*s+n*l,r[3]=t*o+n*c,r[6]=t*a+n*u,r[1]=-n*s+t*l,r[4]=-n*o+t*c,r[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<9;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Xf(i){for(let e=i.length-1;e>=0;--e)if(i[e]>=65535)return!0;return!1}function ss(i){return document.createElementNS("http://www.w3.org/1999/xhtml",i)}function Ki(i){return i<.04045?i*.0773993808:Math.pow(i*.9478672986+.0521327014,2.4)}function Js(i){return i<.0031308?i*12.92:1.055*Math.pow(i,.41666)-.055}const Wo={[ti]:{[Xi]:Ki},[Xi]:{[ti]:Js}},Cn={legacyMode:!0,get workingColorSpace(){return Xi},set workingColorSpace(i){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(i,e,t){if(this.legacyMode||e===t||!e||!t)return i;if(Wo[e]&&Wo[e][t]!==void 0){const n=Wo[e][t];return i.r=n(i.r),i.g=n(i.g),i.b=n(i.b),i}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(i,e){return this.convert(i,this.workingColorSpace,e)},toWorkingColorSpace:function(i,e){return this.convert(i,e,this.workingColorSpace)}},Yf={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ut={r:0,g:0,b:0},Ln={h:0,s:0,l:0},Ss={h:0,s:0,l:0};function jo(i,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?i+(e-i)*6*t:t<1/2?e:t<2/3?i+(e-i)*6*(2/3-t):i}function As(i,e){return e.r=i.r,e.g=i.g,e.b=i.b,e}class Ke{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ti){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Cn.toWorkingColorSpace(this,t),this}setRGB(e,t,n,r=Xi){return this.r=e,this.g=t,this.b=n,Cn.toWorkingColorSpace(this,r),this}setHSL(e,t,n,r=Xi){if(e=mp(e,1),t=ln(t,0,1),n=ln(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=jo(o,s,e+1/3),this.g=jo(o,s,e),this.b=jo(o,s,e-1/3)}return Cn.toWorkingColorSpace(this,r),this}setStyle(e,t=ti){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,Cn.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,Cn.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(s[1])/360,c=parseFloat(s[2])/100,u=parseFloat(s[3])/100;return n(s[4]),this.setHSL(l,c,u,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=r[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,Cn.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,Cn.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=ti){const n=Yf[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ki(e.r),this.g=Ki(e.g),this.b=Ki(e.b),this}copyLinearToSRGB(e){return this.r=Js(e.r),this.g=Js(e.g),this.b=Js(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ti){return Cn.fromWorkingColorSpace(As(this,Ut),e),ln(Ut.r*255,0,255)<<16^ln(Ut.g*255,0,255)<<8^ln(Ut.b*255,0,255)<<0}getHexString(e=ti){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Xi){Cn.fromWorkingColorSpace(As(this,Ut),t);const n=Ut.r,r=Ut.g,s=Ut.b,o=Math.max(n,r,s),a=Math.min(n,r,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const f=o-a;switch(c=u<=.5?f/(o+a):f/(2-o-a),o){case n:l=(r-s)/f+(r<s?6:0);break;case r:l=(s-n)/f+2;break;case s:l=(n-r)/f+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Xi){return Cn.fromWorkingColorSpace(As(this,Ut),t),e.r=Ut.r,e.g=Ut.g,e.b=Ut.b,e}getStyle(e=ti){return Cn.fromWorkingColorSpace(As(this,Ut),e),e!==ti?`color(${e} ${Ut.r} ${Ut.g} ${Ut.b})`:`rgb(${Ut.r*255|0},${Ut.g*255|0},${Ut.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(Ln),Ln.h+=e,Ln.s+=t,Ln.l+=n,this.setHSL(Ln.h,Ln.s,Ln.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ln),e.getHSL(Ss);const n=Ho(Ln.h,Ss.h,t),r=Ho(Ln.s,Ss.s,t),s=Ho(Ln.l,Ss.l,t);return this.setHSL(n,r,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ke.NAMES=Yf;let sr;class Zf{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{sr===void 0&&(sr=ss("canvas")),sr.width=e.width,sr.height=e.height;const n=sr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=sr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ss("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const r=n.getImageData(0,0,e.width,e.height),s=r.data;for(let o=0;o<s.length;o++)s[o]=Ki(s[o]/255)*255;return n.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Ki(t[n]/255)*255):t[n]=Ki(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Kf{constructor(e=null){this.isSource=!0,this.uuid=fs(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},r=this.data;if(r!==null){let s;if(Array.isArray(r)){s=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?s.push(qo(r[o].image)):s.push(qo(r[o]))}else s=qo(r);n.url=s}return t||(e.images[this.uuid]=n),n}}function qo(i){return typeof HTMLImageElement<"u"&&i instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&i instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&i instanceof ImageBitmap?Zf.getDataURL(i):i.data?{data:Array.from(i.data),width:i.width,height:i.height,type:i.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let gp=0;class An extends Qi{constructor(e=An.DEFAULT_IMAGE,t=An.DEFAULT_MAPPING,n=kn,r=kn,s=bn,o=bo,a=Gn,l=Ji,c=1,u=Li){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:gp++}),this.uuid=fs(),this.name="",this.source=new Kf(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new je(0,0),this.repeat=new je(1,1),this.center=new je(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new wn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Wf)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Da:e.x=e.x-Math.floor(e.x);break;case kn:e.x=e.x<0?0:1;break;case Pa:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Da:e.y=e.y-Math.floor(e.y);break;case kn:e.y=e.y<0?0:1;break;case Pa:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}An.DEFAULT_IMAGE=null;An.DEFAULT_MAPPING=Wf;class Xt{constructor(e=0,t=0,n=0,r=1){Xt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*r+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*r+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*r+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*r+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,s;const l=e.elements,c=l[0],u=l[4],f=l[8],d=l[1],m=l[5],g=l[9],h=l[2],p=l[6],_=l[10];if(Math.abs(u-d)<.01&&Math.abs(f-h)<.01&&Math.abs(g-p)<.01){if(Math.abs(u+d)<.1&&Math.abs(f+h)<.1&&Math.abs(g+p)<.1&&Math.abs(c+m+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,b=(m+1)/2,x=(_+1)/2,M=(u+d)/4,L=(f+h)/4,v=(g+p)/4;return y>b&&y>x?y<.01?(n=0,r=.707106781,s=.707106781):(n=Math.sqrt(y),r=M/n,s=L/n):b>x?b<.01?(n=.707106781,r=0,s=.707106781):(r=Math.sqrt(b),n=M/r,s=v/r):x<.01?(n=.707106781,r=.707106781,s=0):(s=Math.sqrt(x),n=L/s,r=v/s),this.set(n,r,s,t),this}let w=Math.sqrt((p-g)*(p-g)+(f-h)*(f-h)+(d-u)*(d-u));return Math.abs(w)<.001&&(w=1),this.x=(p-g)/w,this.y=(f-h)/w,this.z=(d-u)/w,this.w=Math.acos((c+m+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Di extends Qi{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Xt(0,0,e,t),this.scissorTest=!1,this.viewport=new Xt(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new An(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:bn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Kf(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Jf extends An{constructor(e=null,t=1,n=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=an,this.minFilter=an,this.wrapR=kn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class _p extends An{constructor(e=null,t=1,n=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:r},this.magFilter=an,this.minFilter=an,this.wrapR=kn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Pi{constructor(e=0,t=0,n=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=r}static slerpFlat(e,t,n,r,s,o,a){let l=n[r+0],c=n[r+1],u=n[r+2],f=n[r+3];const d=s[o+0],m=s[o+1],g=s[o+2],h=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=d,e[t+1]=m,e[t+2]=g,e[t+3]=h;return}if(f!==h||l!==d||c!==m||u!==g){let p=1-a;const _=l*d+c*m+u*g+f*h,w=_>=0?1:-1,y=1-_*_;if(y>Number.EPSILON){const x=Math.sqrt(y),M=Math.atan2(x,_*w);p=Math.sin(p*M)/x,a=Math.sin(a*M)/x}const b=a*w;if(l=l*p+d*b,c=c*p+m*b,u=u*p+g*b,f=f*p+h*b,p===1-a){const x=1/Math.sqrt(l*l+c*c+u*u+f*f);l*=x,c*=x,u*=x,f*=x}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,r,s,o){const a=n[r],l=n[r+1],c=n[r+2],u=n[r+3],f=s[o],d=s[o+1],m=s[o+2],g=s[o+3];return e[t]=a*g+u*f+l*m-c*d,e[t+1]=l*g+u*d+c*f-a*m,e[t+2]=c*g+u*m+a*d-l*f,e[t+3]=u*g-a*f-l*d-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,r=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(r/2),f=a(s/2),d=l(n/2),m=l(r/2),g=l(s/2);switch(o){case"XYZ":this._x=d*u*f+c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f-d*m*g;break;case"YXZ":this._x=d*u*f+c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f+d*m*g;break;case"ZXY":this._x=d*u*f-c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f-d*m*g;break;case"ZYX":this._x=d*u*f-c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f+d*m*g;break;case"YZX":this._x=d*u*f+c*m*g,this._y=c*m*f+d*u*g,this._z=c*u*g-d*m*f,this._w=c*u*f-d*m*g;break;case"XZY":this._x=d*u*f-c*m*g,this._y=c*m*f-d*u*g,this._z=c*u*g+d*m*f,this._w=c*u*f+d*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],r=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],f=t[10],d=n+a+f;if(d>0){const m=.5/Math.sqrt(d+1);this._w=.25/m,this._x=(u-l)*m,this._y=(s-c)*m,this._z=(o-r)*m}else if(n>a&&n>f){const m=2*Math.sqrt(1+n-a-f);this._w=(u-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(s+c)/m}else if(a>f){const m=2*Math.sqrt(1+a-n-f);this._w=(s-c)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+f-n-a);this._w=(o-r)/m,this._x=(s+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ln(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const r=Math.min(1,t/n);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,r=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=n*u+o*a+r*c-s*l,this._y=r*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-r*a,this._w=o*u-n*a-r*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,r=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+r*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=r,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*n+t*this._x,this._y=m*r+t*this._y,this._z=m*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),f=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*f+this._w*d,this._x=n*f+this._x*d,this._y=r*f+this._y*d,this._z=s*f+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),r=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(r),n*Math.sin(s),n*Math.cos(s),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class B{constructor(e=0,t=0,n=0){B.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Zl.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Zl.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*r,this.y=s[1]*t+s[4]*n+s[7]*r,this.z=s[2]*t+s[5]*n+s[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,r=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*r+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*r+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*r+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*r+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,r=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*n,u=l*n+a*t-s*r,f=l*r+s*n-o*t,d=-s*t-o*n-a*r;return this.x=c*l+d*-s+u*-a-f*-o,this.y=u*l+d*-o+f*-s-c*-a,this.z=f*l+d*-a+c*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,r=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r,this.y=s[1]*t+s[5]*n+s[9]*r,this.z=s[2]*t+s[6]*n+s[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,r=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-s*a,this.y=s*o-n*l,this.z=n*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Xo.copy(this).projectOnVector(e),this.sub(Xo)}reflect(e){return this.sub(Xo.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ln(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Xo=new B,Zl=new Pi;class ds{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],f=e[l+1],d=e[l+2];u<t&&(t=u),f<n&&(n=f),d<r&&(r=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,r=1/0,s=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),f=e.getY(l),d=e.getZ(l);u<t&&(t=u),f<n&&(n=f),d<r&&(r=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,r),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ui.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Ui.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Ui)}else n.boundingBox===null&&n.computeBoundingBox(),Yo.copy(n.boundingBox),Yo.applyMatrix4(e.matrixWorld),this.union(Yo);const r=e.children;for(let s=0,o=r.length;s<o;s++)this.expandByObject(r[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ui),Ui.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(jr),Es.subVectors(this.max,jr),or.subVectors(e.a,jr),ar.subVectors(e.b,jr),lr.subVectors(e.c,jr),gi.subVectors(ar,or),_i.subVectors(lr,ar),Gi.subVectors(or,lr);let t=[0,-gi.z,gi.y,0,-_i.z,_i.y,0,-Gi.z,Gi.y,gi.z,0,-gi.x,_i.z,0,-_i.x,Gi.z,0,-Gi.x,-gi.y,gi.x,0,-_i.y,_i.x,0,-Gi.y,Gi.x,0];return!Zo(t,or,ar,lr,Es)||(t=[1,0,0,0,1,0,0,0,1],!Zo(t,or,ar,lr,Es))?!1:(Ts.crossVectors(gi,_i),t=[Ts.x,Ts.y,Ts.z],Zo(t,or,ar,lr,Es))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ui.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ui).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Kn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Kn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Kn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Kn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Kn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Kn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Kn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Kn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Kn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Kn=[new B,new B,new B,new B,new B,new B,new B,new B],Ui=new B,Yo=new ds,or=new B,ar=new B,lr=new B,gi=new B,_i=new B,Gi=new B,jr=new B,Es=new B,Ts=new B,Bi=new B;function Zo(i,e,t,n,r){for(let s=0,o=i.length-3;s<=o;s+=3){Bi.fromArray(i,s);const a=r.x*Math.abs(Bi.x)+r.y*Math.abs(Bi.y)+r.z*Math.abs(Bi.z),l=e.dot(Bi),c=t.dot(Bi),u=n.dot(Bi);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const vp=new ds,Kl=new B,Cs=new B,Ko=new B;class wo{constructor(e=new B,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):vp.setFromPoints(e).getCenter(n);let r=0;for(let s=0,o=e.length;s<o;s++)r=Math.max(r,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Ko.subVectors(e,this.center);const t=Ko.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),r=(n-this.radius)*.5;this.center.add(Ko.multiplyScalar(r/n)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Cs.set(0,0,1).multiplyScalar(e.radius):Cs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Kl.copy(e.center).add(Cs)),this.expandByPoint(Kl.copy(e.center).sub(Cs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Jn=new B,Jo=new B,Ls=new B,vi=new B,Qo=new B,Ds=new B,$o=new B;class Ya{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Jn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Jn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Jn.copy(this.direction).multiplyScalar(t).add(this.origin),Jn.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Jo.copy(e).add(t).multiplyScalar(.5),Ls.copy(t).sub(e).normalize(),vi.copy(this.origin).sub(Jo);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Ls),a=vi.dot(this.direction),l=-vi.dot(Ls),c=vi.lengthSq(),u=Math.abs(1-o*o);let f,d,m,g;if(u>0)if(f=o*l-a,d=o*a-l,g=s*u,f>=0)if(d>=-g)if(d<=g){const h=1/u;f*=h,d*=h,m=f*(f+o*d+2*a)+d*(o*f+d+2*l)+c}else d=s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;else d=-s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;else d<=-g?(f=Math.max(0,-(-o*s+a)),d=f>0?-s:Math.min(Math.max(-s,-l),s),m=-f*f+d*(d+2*l)+c):d<=g?(f=0,d=Math.min(Math.max(-s,-l),s),m=d*(d+2*l)+c):(f=Math.max(0,-(o*s+a)),d=f>0?s:Math.min(Math.max(-s,-l),s),m=-f*f+d*(d+2*l)+c);else d=o>0?-s:s,f=Math.max(0,-(o*d+a)),m=-f*f+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),r&&r.copy(Ls).multiplyScalar(d).add(Jo),m}intersectSphere(e,t){Jn.subVectors(e.center,this.origin);const n=Jn.dot(this.direction),r=Jn.dot(Jn)-n*n,s=e.radius*e.radius;if(r>s)return null;const o=Math.sqrt(s-r),a=n-o,l=n+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,r=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,r=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>r||((s>n||n!==n)&&(n=s),(o<r||r!==r)&&(r=o),f>=0?(a=(e.min.z-d.z)*f,l=(e.max.z-d.z)*f):(a=(e.max.z-d.z)*f,l=(e.min.z-d.z)*f),n>l||a>r)||((a>n||n!==n)&&(n=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(n>=0?n:r,t)}intersectsBox(e){return this.intersectBox(e,Jn)!==null}intersectTriangle(e,t,n,r,s){Qo.subVectors(t,e),Ds.subVectors(n,e),$o.crossVectors(Qo,Ds);let o=this.direction.dot($o),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;vi.subVectors(this.origin,e);const l=a*this.direction.dot(Ds.crossVectors(vi,Ds));if(l<0)return null;const c=a*this.direction.dot(Qo.cross(vi));if(c<0||l+c>o)return null;const u=-a*vi.dot($o);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class At{constructor(){At.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=r,_[1]=s,_[5]=o,_[9]=a,_[13]=l,_[2]=c,_[6]=u,_[10]=f,_[14]=d,_[3]=m,_[7]=g,_[11]=h,_[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new At().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,r=1/cr.setFromMatrixColumn(e,0).length(),s=1/cr.setFromMatrixColumn(e,1).length(),o=1/cr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,r=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(r),c=Math.sin(r),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const d=o*u,m=o*f,g=a*u,h=a*f;t[0]=l*u,t[4]=-l*f,t[8]=c,t[1]=m+g*c,t[5]=d-h*c,t[9]=-a*l,t[2]=h-d*c,t[6]=g+m*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,m=l*f,g=c*u,h=c*f;t[0]=d+h*a,t[4]=g*a-m,t[8]=o*c,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=m*a-g,t[6]=h+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,m=l*f,g=c*u,h=c*f;t[0]=d-h*a,t[4]=-o*f,t[8]=g+m*a,t[1]=m+g*a,t[5]=o*u,t[9]=h-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,m=o*f,g=a*u,h=a*f;t[0]=l*u,t[4]=g*c-m,t[8]=d*c+h,t[1]=l*f,t[5]=h*c+d,t[9]=m*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,m=o*c,g=a*l,h=a*c;t[0]=l*u,t[4]=h-d*f,t[8]=g*f+m,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=m*f+g,t[10]=d-h*f}else if(e.order==="XZY"){const d=o*l,m=o*c,g=a*l,h=a*c;t[0]=l*u,t[4]=-f,t[8]=c*u,t[1]=d*f+h,t[5]=o*u,t[9]=m*f-g,t[2]=g*f-m,t[6]=a*u,t[10]=h*f+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(bp,e,wp)}lookAt(e,t,n){const r=this.elements;return fn.subVectors(e,t),fn.lengthSq()===0&&(fn.z=1),fn.normalize(),bi.crossVectors(n,fn),bi.lengthSq()===0&&(Math.abs(n.z)===1?fn.x+=1e-4:fn.z+=1e-4,fn.normalize(),bi.crossVectors(n,fn)),bi.normalize(),Ps.crossVectors(fn,bi),r[0]=bi.x,r[4]=Ps.x,r[8]=fn.x,r[1]=bi.y,r[5]=Ps.y,r[9]=fn.y,r[2]=bi.z,r[6]=Ps.z,r[10]=fn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,r=t.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],f=n[5],d=n[9],m=n[13],g=n[2],h=n[6],p=n[10],_=n[14],w=n[3],y=n[7],b=n[11],x=n[15],M=r[0],L=r[4],v=r[8],A=r[12],S=r[1],I=r[5],N=r[9],D=r[13],O=r[2],k=r[6],P=r[10],K=r[14],Z=r[3],j=r[7],V=r[11],X=r[15];return s[0]=o*M+a*S+l*O+c*Z,s[4]=o*L+a*I+l*k+c*j,s[8]=o*v+a*N+l*P+c*V,s[12]=o*A+a*D+l*K+c*X,s[1]=u*M+f*S+d*O+m*Z,s[5]=u*L+f*I+d*k+m*j,s[9]=u*v+f*N+d*P+m*V,s[13]=u*A+f*D+d*K+m*X,s[2]=g*M+h*S+p*O+_*Z,s[6]=g*L+h*I+p*k+_*j,s[10]=g*v+h*N+p*P+_*V,s[14]=g*A+h*D+p*K+_*X,s[3]=w*M+y*S+b*O+x*Z,s[7]=w*L+y*I+b*k+x*j,s[11]=w*v+y*N+b*P+x*V,s[15]=w*A+y*D+b*K+x*X,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],r=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],f=e[6],d=e[10],m=e[14],g=e[3],h=e[7],p=e[11],_=e[15];return g*(+s*l*f-r*c*f-s*a*d+n*c*d+r*a*m-n*l*m)+h*(+t*l*m-t*c*d+s*o*d-r*o*m+r*c*u-s*l*u)+p*(+t*c*f-t*a*m-s*o*f+n*o*m+s*a*u-n*c*u)+_*(-r*a*u-t*l*f+t*a*d+r*o*f-n*o*d+n*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],f=e[9],d=e[10],m=e[11],g=e[12],h=e[13],p=e[14],_=e[15],w=f*p*c-h*d*c+h*l*m-a*p*m-f*l*_+a*d*_,y=g*d*c-u*p*c-g*l*m+o*p*m+u*l*_-o*d*_,b=u*h*c-g*f*c+g*a*m-o*h*m-u*a*_+o*f*_,x=g*f*l-u*h*l-g*a*d+o*h*d+u*a*p-o*f*p,M=t*w+n*y+r*b+s*x;if(M===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const L=1/M;return e[0]=w*L,e[1]=(h*d*s-f*p*s-h*r*m+n*p*m+f*r*_-n*d*_)*L,e[2]=(a*p*s-h*l*s+h*r*c-n*p*c-a*r*_+n*l*_)*L,e[3]=(f*l*s-a*d*s-f*r*c+n*d*c+a*r*m-n*l*m)*L,e[4]=y*L,e[5]=(u*p*s-g*d*s+g*r*m-t*p*m-u*r*_+t*d*_)*L,e[6]=(g*l*s-o*p*s-g*r*c+t*p*c+o*r*_-t*l*_)*L,e[7]=(o*d*s-u*l*s+u*r*c-t*d*c-o*r*m+t*l*m)*L,e[8]=b*L,e[9]=(g*f*s-u*h*s-g*n*m+t*h*m+u*n*_-t*f*_)*L,e[10]=(o*h*s-g*a*s+g*n*c-t*h*c-o*n*_+t*a*_)*L,e[11]=(u*a*s-o*f*s-u*n*c+t*f*c+o*n*m-t*a*m)*L,e[12]=x*L,e[13]=(u*h*r-g*f*r+g*n*d-t*h*d-u*n*p+t*f*p)*L,e[14]=(g*a*r-o*h*r-g*n*l+t*h*l+o*n*p-t*a*p)*L,e[15]=(o*f*r-u*a*r+u*n*l-t*f*l-o*n*d+t*a*d)*L,this}scale(e){const t=this.elements,n=e.x,r=e.y,s=e.z;return t[0]*=n,t[4]*=r,t[8]*=s,t[1]*=n,t[5]*=r,t[9]*=s,t[2]*=n,t[6]*=r,t[10]*=s,t[3]*=n,t[7]*=r,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),r=Math.sin(t),s=1-n,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+n,u*l-r*o,0,c*l-r*a,u*l+r*o,s*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,r,s,o){return this.set(1,n,s,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,f=a+a,d=s*c,m=s*u,g=s*f,h=o*u,p=o*f,_=a*f,w=l*c,y=l*u,b=l*f,x=n.x,M=n.y,L=n.z;return r[0]=(1-(h+_))*x,r[1]=(m+b)*x,r[2]=(g-y)*x,r[3]=0,r[4]=(m-b)*M,r[5]=(1-(d+_))*M,r[6]=(p+w)*M,r[7]=0,r[8]=(g+y)*L,r[9]=(p-w)*L,r[10]=(1-(d+h))*L,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){const r=this.elements;let s=cr.set(r[0],r[1],r[2]).length();const o=cr.set(r[4],r[5],r[6]).length(),a=cr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(s=-s),e.x=r[12],e.y=r[13],e.z=r[14],Dn.copy(this);const c=1/s,u=1/o,f=1/a;return Dn.elements[0]*=c,Dn.elements[1]*=c,Dn.elements[2]*=c,Dn.elements[4]*=u,Dn.elements[5]*=u,Dn.elements[6]*=u,Dn.elements[8]*=f,Dn.elements[9]*=f,Dn.elements[10]*=f,t.setFromRotationMatrix(Dn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,r,s,o){const a=this.elements,l=2*s/(t-e),c=2*s/(n-r),u=(t+e)/(t-e),f=(n+r)/(n-r),d=-(o+s)/(o-s),m=-2*o*s/(o-s);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,r,s,o){const a=this.elements,l=1/(t-e),c=1/(n-r),u=1/(o-s),f=(t+e)*l,d=(n+r)*c,m=(o+s)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const cr=new B,Dn=new At,bp=new B(0,0,0),wp=new B(1,1,1),bi=new B,Ps=new B,fn=new B,Jl=new At,Ql=new Pi;class hs{constructor(e=0,t=0,n=0,r=hs.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r=this._order){return this._x=e,this._y=t,this._z=n,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const r=e.elements,s=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],f=r[2],d=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(ln(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ln(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(ln(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-ln(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,m),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(ln(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-ln(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Jl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Jl,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Ql.setFromEuler(this),this.setFromQuaternion(Ql,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}hs.DefaultOrder="XYZ";hs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Za{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let yp=0;const $l=new B,ur=new Pi,Qn=new At,Rs=new B,qr=new B,xp=new B,Mp=new Pi,ec=new B(1,0,0),tc=new B(0,1,0),nc=new B(0,0,1),Sp={type:"added"},ic={type:"removed"};class xt extends Qi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:yp++}),this.uuid=fs(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xt.DefaultUp.clone();const e=new B,t=new hs,n=new Pi,r=new B(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new At},normalMatrix:{value:new wn}}),this.matrix=new At,this.matrixWorld=new At,this.matrixAutoUpdate=xt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=xt.DefaultMatrixWorldAutoUpdate,this.layers=new Za,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ur.setFromAxisAngle(e,t),this.quaternion.multiply(ur),this}rotateOnWorldAxis(e,t){return ur.setFromAxisAngle(e,t),this.quaternion.premultiply(ur),this}rotateX(e){return this.rotateOnAxis(ec,e)}rotateY(e){return this.rotateOnAxis(tc,e)}rotateZ(e){return this.rotateOnAxis(nc,e)}translateOnAxis(e,t){return $l.copy(e).applyQuaternion(this.quaternion),this.position.add($l.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ec,e)}translateY(e){return this.translateOnAxis(tc,e)}translateZ(e){return this.translateOnAxis(nc,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Qn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Rs.copy(e):Rs.set(e,t,n);const r=this.parent;this.updateWorldMatrix(!0,!1),qr.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qn.lookAt(qr,Rs,this.up):Qn.lookAt(Rs,qr,this.up),this.quaternion.setFromRotationMatrix(Qn),r&&(Qn.extractRotation(r.matrixWorld),ur.setFromRotationMatrix(Qn),this.quaternion.premultiply(ur.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Sp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(ic)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(ic)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Qn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Qn.multiply(e.parent.matrixWorld)),e.applyMatrix4(Qn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,r=this.children.length;n<r;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qr,e,xp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(qr,Mp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,r=t.length;n<r;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let s=0,o=r.length;s<o;s++){const a=r[s];a.matrixWorldAutoUpdate===!0&&a.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const f=l[c];s(e.shapes,f)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));r.material=a}else r.material=s(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),f=o(e.shapes),d=o(e.skeletons),m=o(e.animations),g=o(e.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),d.length>0&&(n.skeletons=d),m.length>0&&(n.animations=m),g.length>0&&(n.nodes=g)}return n.object=r,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const r=e.children[n];this.add(r.clone())}return this}}xt.DefaultUp=new B(0,1,0);xt.DefaultMatrixAutoUpdate=!0;xt.DefaultMatrixWorldAutoUpdate=!0;const Pn=new B,$n=new B,ea=new B,ei=new B,fr=new B,dr=new B,rc=new B,ta=new B,na=new B,ia=new B;class ni{constructor(e=new B,t=new B,n=new B){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){r.subVectors(n,t),Pn.subVectors(e,t),r.cross(Pn);const s=r.lengthSq();return s>0?r.multiplyScalar(1/Math.sqrt(s)):r.set(0,0,0)}static getBarycoord(e,t,n,r,s){Pn.subVectors(r,t),$n.subVectors(n,t),ea.subVectors(e,t);const o=Pn.dot(Pn),a=Pn.dot($n),l=Pn.dot(ea),c=$n.dot($n),u=$n.dot(ea),f=o*c-a*a;if(f===0)return s.set(-2,-1,-1);const d=1/f,m=(c*l-a*u)*d,g=(o*u-a*l)*d;return s.set(1-m-g,g,m)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,ei),ei.x>=0&&ei.y>=0&&ei.x+ei.y<=1}static getUV(e,t,n,r,s,o,a,l){return this.getBarycoord(e,t,n,r,ei),l.set(0,0),l.addScaledVector(s,ei.x),l.addScaledVector(o,ei.y),l.addScaledVector(a,ei.z),l}static isFrontFacing(e,t,n,r){return Pn.subVectors(n,t),$n.subVectors(e,t),Pn.cross($n).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,n,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Pn.subVectors(this.c,this.b),$n.subVectors(this.a,this.b),Pn.cross($n).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ni.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ni.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,s){return ni.getUV(e,this.a,this.b,this.c,t,n,r,s)}containsPoint(e){return ni.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ni.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,r=this.b,s=this.c;let o,a;fr.subVectors(r,n),dr.subVectors(s,n),ta.subVectors(e,n);const l=fr.dot(ta),c=dr.dot(ta);if(l<=0&&c<=0)return t.copy(n);na.subVectors(e,r);const u=fr.dot(na),f=dr.dot(na);if(u>=0&&f<=u)return t.copy(r);const d=l*f-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(n).addScaledVector(fr,o);ia.subVectors(e,s);const m=fr.dot(ia),g=dr.dot(ia);if(g>=0&&m<=g)return t.copy(s);const h=m*c-l*g;if(h<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(n).addScaledVector(dr,a);const p=u*g-m*f;if(p<=0&&f-u>=0&&m-g>=0)return rc.subVectors(s,r),a=(f-u)/(f-u+(m-g)),t.copy(r).addScaledVector(rc,a);const _=1/(p+h+d);return o=h*_,a=d*_,t.copy(n).addScaledVector(fr,o).addScaledVector(dr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Ap=0;class zr extends Qi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Ap++}),this.uuid=fs(),this.name="",this.type="Material",this.blending=Sr,this.side=Pr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Bf,this.blendDst=Vf,this.blendEquation=wr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ta,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=pp,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Bo,this.stencilZFail=Bo,this.stencilZPass=Bo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Sr&&(n.blending=this.blending),this.side!==Pr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function r(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=r(e.textures),o=r(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const r=t.length;n=new Array(r);for(let s=0;s!==r;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ka extends zr{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ke(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Xa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const Ft=new B,Is=new je;class On{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=jl,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let r=0,s=this.itemSize;r<s;r++)this.array[e+r]=t.array[n+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Is.fromBufferAttribute(this,t),Is.applyMatrix3(e),this.setXY(t,Is.x,Is.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyMatrix3(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyMatrix4(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.applyNormalMatrix(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ft.fromBufferAttribute(this,t),Ft.transformDirection(e),this.setXYZ(t,Ft.x,Ft.y,Ft.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ms(t,this.array)),t}setX(e,t){return this.normalized&&(t=un(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ms(t,this.array)),t}setY(e,t){return this.normalized&&(t=un(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ms(t,this.array)),t}setZ(e,t){return this.normalized&&(t=un(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ms(t,this.array)),t}setW(e,t){return this.normalized&&(t=un(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=un(t,this.array),n=un(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.normalized&&(t=un(t,this.array),n=un(n,this.array),r=un(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,s){return e*=this.itemSize,this.normalized&&(t=un(t,this.array),n=un(n,this.array),r=un(r,this.array),s=un(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==jl&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class Qf extends On{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class $f extends On{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Bt extends On{constructor(e,t,n){super(new Float32Array(e),t,n)}}let Ep=0;const mn=new At,ra=new xt,hr=new B,dn=new ds,Xr=new ds,Vt=new B;class hn extends Qi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ep++}),this.uuid=fs(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Xf(e)?$f:Qf)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new wn().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return mn.makeRotationFromQuaternion(e),this.applyMatrix4(mn),this}rotateX(e){return mn.makeRotationX(e),this.applyMatrix4(mn),this}rotateY(e){return mn.makeRotationY(e),this.applyMatrix4(mn),this}rotateZ(e){return mn.makeRotationZ(e),this.applyMatrix4(mn),this}translate(e,t,n){return mn.makeTranslation(e,t,n),this.applyMatrix4(mn),this}scale(e,t,n){return mn.makeScale(e,t,n),this.applyMatrix4(mn),this}lookAt(e){return ra.lookAt(e),ra.updateMatrix(),this.applyMatrix4(ra.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(hr).negate(),this.translate(hr.x,hr.y,hr.z),this}setFromPoints(e){const t=[];for(let n=0,r=e.length;n<r;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Bt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ds);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,r=t.length;n<r;n++){const s=t[n];dn.setFromBufferAttribute(s),this.morphTargetsRelative?(Vt.addVectors(this.boundingBox.min,dn.min),this.boundingBox.expandByPoint(Vt),Vt.addVectors(this.boundingBox.max,dn.max),this.boundingBox.expandByPoint(Vt)):(this.boundingBox.expandByPoint(dn.min),this.boundingBox.expandByPoint(dn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new wo);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new B,1/0);return}if(e){const n=this.boundingSphere.center;if(dn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Xr.setFromBufferAttribute(a),this.morphTargetsRelative?(Vt.addVectors(dn.min,Xr.min),dn.expandByPoint(Vt),Vt.addVectors(dn.max,Xr.max),dn.expandByPoint(Vt)):(dn.expandByPoint(Xr.min),dn.expandByPoint(Xr.max))}dn.getCenter(n);let r=0;for(let s=0,o=e.count;s<o;s++)Vt.fromBufferAttribute(e,s),r=Math.max(r,n.distanceToSquared(Vt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Vt.fromBufferAttribute(a,c),l&&(hr.fromBufferAttribute(e,c),Vt.add(hr)),r=Math.max(r,n.distanceToSquared(Vt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,r=t.position.array,s=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new On(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let S=0;S<a;S++)c[S]=new B,u[S]=new B;const f=new B,d=new B,m=new B,g=new je,h=new je,p=new je,_=new B,w=new B;function y(S,I,N){f.fromArray(r,S*3),d.fromArray(r,I*3),m.fromArray(r,N*3),g.fromArray(o,S*2),h.fromArray(o,I*2),p.fromArray(o,N*2),d.sub(f),m.sub(f),h.sub(g),p.sub(g);const D=1/(h.x*p.y-p.x*h.y);!isFinite(D)||(_.copy(d).multiplyScalar(p.y).addScaledVector(m,-h.y).multiplyScalar(D),w.copy(m).multiplyScalar(h.x).addScaledVector(d,-p.x).multiplyScalar(D),c[S].add(_),c[I].add(_),c[N].add(_),u[S].add(w),u[I].add(w),u[N].add(w))}let b=this.groups;b.length===0&&(b=[{start:0,count:n.length}]);for(let S=0,I=b.length;S<I;++S){const N=b[S],D=N.start,O=N.count;for(let k=D,P=D+O;k<P;k+=3)y(n[k+0],n[k+1],n[k+2])}const x=new B,M=new B,L=new B,v=new B;function A(S){L.fromArray(s,S*3),v.copy(L);const I=c[S];x.copy(I),x.sub(L.multiplyScalar(L.dot(I))).normalize(),M.crossVectors(v,I);const D=M.dot(u[S])<0?-1:1;l[S*4]=x.x,l[S*4+1]=x.y,l[S*4+2]=x.z,l[S*4+3]=D}for(let S=0,I=b.length;S<I;++S){const N=b[S],D=N.start,O=N.count;for(let k=D,P=D+O;k<P;k+=3)A(n[k+0]),A(n[k+1]),A(n[k+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new On(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,m=n.count;d<m;d++)n.setXYZ(d,0,0,0);const r=new B,s=new B,o=new B,a=new B,l=new B,c=new B,u=new B,f=new B;if(e)for(let d=0,m=e.count;d<m;d+=3){const g=e.getX(d+0),h=e.getX(d+1),p=e.getX(d+2);r.fromBufferAttribute(t,g),s.fromBufferAttribute(t,h),o.fromBufferAttribute(t,p),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),a.fromBufferAttribute(n,g),l.fromBufferAttribute(n,h),c.fromBufferAttribute(n,p),a.add(u),l.add(u),c.add(u),n.setXYZ(g,a.x,a.y,a.z),n.setXYZ(h,l.x,l.y,l.z),n.setXYZ(p,c.x,c.y,c.z)}else for(let d=0,m=t.count;d<m;d+=3)r.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),f.subVectors(r,s),u.cross(f),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Vt.fromBufferAttribute(e,t),Vt.normalize(),e.setXYZ(t,Vt.x,Vt.y,Vt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,f=a.normalized,d=new c.constructor(l.length*u);let m=0,g=0;for(let h=0,p=l.length;h<p;h++){a.isInterleavedBufferAttribute?m=l[h]*a.data.stride+a.offset:m=l[h]*u;for(let _=0;_<u;_++)d[g++]=c[m++]}return new On(d,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new hn,n=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,n);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,f=c.length;u<f;u++){const d=c[u],m=e(d,n);l.push(m)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let f=0,d=c.length;f<d;f++){const m=c[f];u.push(m.toJSON(e.data))}u.length>0&&(r[l]=u,s=!0)}s&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],f=s[c];for(let d=0,m=f.length;d<m;d++)u.push(f[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const f=o[c];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const sc=new At,pr=new Ya,sa=new wo,wi=new B,yi=new B,xi=new B,oa=new B,aa=new B,la=new B,ks=new B,Os=new B,Ns=new B,Fs=new je,zs=new je,Us=new je,ca=new B,Gs=new B;class yn extends xt{constructor(e=new hn,t=new Ka){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}raycast(e,t){const n=this.geometry,r=this.material,s=this.matrixWorld;if(r===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),sa.copy(n.boundingSphere),sa.applyMatrix4(s),e.ray.intersectsSphere(sa)===!1)||(sc.copy(s).invert(),pr.copy(e.ray).applyMatrix4(sc),n.boundingBox!==null&&pr.intersectsBox(n.boundingBox)===!1))return;let o;const a=n.index,l=n.attributes.position,c=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,d=n.attributes.uv2,m=n.groups,g=n.drawRange;if(a!==null)if(Array.isArray(r))for(let h=0,p=m.length;h<p;h++){const _=m[h],w=r[_.materialIndex],y=Math.max(_.start,g.start),b=Math.min(a.count,Math.min(_.start+_.count,g.start+g.count));for(let x=y,M=b;x<M;x+=3){const L=a.getX(x),v=a.getX(x+1),A=a.getX(x+2);o=Bs(this,w,e,pr,l,c,u,f,d,L,v,A),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=_.materialIndex,t.push(o))}}else{const h=Math.max(0,g.start),p=Math.min(a.count,g.start+g.count);for(let _=h,w=p;_<w;_+=3){const y=a.getX(_),b=a.getX(_+1),x=a.getX(_+2);o=Bs(this,r,e,pr,l,c,u,f,d,y,b,x),o&&(o.faceIndex=Math.floor(_/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let h=0,p=m.length;h<p;h++){const _=m[h],w=r[_.materialIndex],y=Math.max(_.start,g.start),b=Math.min(l.count,Math.min(_.start+_.count,g.start+g.count));for(let x=y,M=b;x<M;x+=3){const L=x,v=x+1,A=x+2;o=Bs(this,w,e,pr,l,c,u,f,d,L,v,A),o&&(o.faceIndex=Math.floor(x/3),o.face.materialIndex=_.materialIndex,t.push(o))}}else{const h=Math.max(0,g.start),p=Math.min(l.count,g.start+g.count);for(let _=h,w=p;_<w;_+=3){const y=_,b=_+1,x=_+2;o=Bs(this,r,e,pr,l,c,u,f,d,y,b,x),o&&(o.faceIndex=Math.floor(_/3),t.push(o))}}}}function Tp(i,e,t,n,r,s,o,a){let l;if(e.side===Mn?l=n.intersectTriangle(o,s,r,!0,a):l=n.intersectTriangle(r,s,o,e.side!==Mi,a),l===null)return null;Gs.copy(a),Gs.applyMatrix4(i.matrixWorld);const c=t.ray.origin.distanceTo(Gs);return c<t.near||c>t.far?null:{distance:c,point:Gs.clone(),object:i}}function Bs(i,e,t,n,r,s,o,a,l,c,u,f){wi.fromBufferAttribute(r,c),yi.fromBufferAttribute(r,u),xi.fromBufferAttribute(r,f);const d=i.morphTargetInfluences;if(s&&d){ks.set(0,0,0),Os.set(0,0,0),Ns.set(0,0,0);for(let g=0,h=s.length;g<h;g++){const p=d[g],_=s[g];p!==0&&(oa.fromBufferAttribute(_,c),aa.fromBufferAttribute(_,u),la.fromBufferAttribute(_,f),o?(ks.addScaledVector(oa,p),Os.addScaledVector(aa,p),Ns.addScaledVector(la,p)):(ks.addScaledVector(oa.sub(wi),p),Os.addScaledVector(aa.sub(yi),p),Ns.addScaledVector(la.sub(xi),p)))}wi.add(ks),yi.add(Os),xi.add(Ns)}i.isSkinnedMesh&&(i.boneTransform(c,wi),i.boneTransform(u,yi),i.boneTransform(f,xi));const m=Tp(i,e,t,n,wi,yi,xi,ca);if(m){a&&(Fs.fromBufferAttribute(a,c),zs.fromBufferAttribute(a,u),Us.fromBufferAttribute(a,f),m.uv=ni.getUV(ca,wi,yi,xi,Fs,zs,Us,new je)),l&&(Fs.fromBufferAttribute(l,c),zs.fromBufferAttribute(l,u),Us.fromBufferAttribute(l,f),m.uv2=ni.getUV(ca,wi,yi,xi,Fs,zs,Us,new je));const g={a:c,b:u,c:f,normal:new B,materialIndex:0};ni.getNormal(wi,yi,xi,g.normal),m.face=g}return m}class ps extends hn{constructor(e=1,t=1,n=1,r=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:s,depthSegments:o};const a=this;r=Math.floor(r),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],f=[];let d=0,m=0;g("z","y","x",-1,-1,n,t,e,o,s,0),g("z","y","x",1,-1,n,t,-e,o,s,1),g("x","z","y",1,1,e,n,t,r,o,2),g("x","z","y",1,-1,e,n,-t,r,o,3),g("x","y","z",1,-1,e,t,n,r,s,4),g("x","y","z",-1,-1,e,t,-n,r,s,5),this.setIndex(l),this.setAttribute("position",new Bt(c,3)),this.setAttribute("normal",new Bt(u,3)),this.setAttribute("uv",new Bt(f,2));function g(h,p,_,w,y,b,x,M,L,v,A){const S=b/L,I=x/v,N=b/2,D=x/2,O=M/2,k=L+1,P=v+1;let K=0,Z=0;const j=new B;for(let V=0;V<P;V++){const X=V*I-D;for(let re=0;re<k;re++){const ae=re*S-N;j[h]=ae*w,j[p]=X*y,j[_]=O,c.push(j.x,j.y,j.z),j[h]=0,j[p]=0,j[_]=M>0?1:-1,u.push(j.x,j.y,j.z),f.push(re/L),f.push(1-V/v),K+=1}}for(let V=0;V<v;V++)for(let X=0;X<L;X++){const re=d+X+k*V,ae=d+X+k*(V+1),be=d+(X+1)+k*(V+1),Ae=d+(X+1)+k*V;l.push(re,ae,Ae),l.push(ae,be,Ae),Z+=6}a.addGroup(m,Z,A),m+=Z,d+=K}}static fromJSON(e){return new ps(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Or(i){const e={};for(const t in i){e[t]={};for(const n in i[t]){const r=i[t][n];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][n]=r.clone():Array.isArray(r)?e[t][n]=r.slice():e[t][n]=r}}return e}function Jt(i){const e={};for(let t=0;t<i.length;t++){const n=Or(i[t]);for(const r in n)e[r]=n[r]}return e}function Cp(i){const e=[];for(let t=0;t<i.length;t++)e.push(i[t].clone());return e}const ed={clone:Or,merge:Jt};var Lp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Dp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class oi extends zr{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=Lp,this.fragmentShader=Dp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Or(e.uniforms),this.uniformsGroups=Cp(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const r in this.extensions)this.extensions[r]===!0&&(n[r]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Ja extends xt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new At,this.projectionMatrix=new At,this.projectionMatrixInverse=new At}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Qt extends Ja{constructor(e=50,t=1,n=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Xl*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Vo*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Xl*2*Math.atan(Math.tan(Vo*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Vo*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,s=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*r/l,t-=o.offsetY*n/c,r*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const mr=90,gr=1;class Pp extends xt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const r=new Qt(mr,gr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new B(1,0,0)),this.add(r);const s=new Qt(mr,gr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new B(-1,0,0)),this.add(s);const o=new Qt(mr,gr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new B(0,1,0)),this.add(o);const a=new Qt(mr,gr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new B(0,-1,0)),this.add(a);const l=new Qt(mr,gr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new B(0,0,1)),this.add(l);const c=new Qt(mr,gr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new B(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[r,s,o,a,l,c]=this.children,u=e.getRenderTarget(),f=e.toneMapping,d=e.xr.enabled;e.toneMapping=Bn,e.xr.enabled=!1;const m=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=m,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=f,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class td extends An{constructor(e,t,n,r,s,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:Rr,super(e,t,n,r,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Rp extends Di{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},r=[n,n,n,n,n,n];this.texture=new td(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:bn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new ps(5,5,5),s=new oi({name:"CubemapFromEquirect",uniforms:Or(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Mn,blending:Ai});s.uniforms.tEquirect.value=t;const o=new yn(r,s),a=t.minFilter;return t.minFilter===bo&&(t.minFilter=bn),new Pp(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,r){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,r);e.setRenderTarget(s)}}const ua=new B,Ip=new B,kp=new wn;class Vi{constructor(e=new B(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const r=ua.subVectors(n,t).cross(Ip.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(ua),r=this.normal.dot(n);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/r;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||kp.getNormalMatrix(e),r=this.coplanarPoint(ua).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const _r=new wo,Vs=new B;class yo{constructor(e=new Vi,t=new Vi,n=new Vi,r=new Vi,s=new Vi,o=new Vi){this.planes=[e,t,n,r,s,o]}set(e,t,n,r,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(r),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,r=n[0],s=n[1],o=n[2],a=n[3],l=n[4],c=n[5],u=n[6],f=n[7],d=n[8],m=n[9],g=n[10],h=n[11],p=n[12],_=n[13],w=n[14],y=n[15];return t[0].setComponents(a-r,f-l,h-d,y-p).normalize(),t[1].setComponents(a+r,f+l,h+d,y+p).normalize(),t[2].setComponents(a+s,f+c,h+m,y+_).normalize(),t[3].setComponents(a-s,f-c,h-m,y-_).normalize(),t[4].setComponents(a-o,f-u,h-g,y-w).normalize(),t[5].setComponents(a+o,f+u,h+g,y+w).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),_r.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(_r)}intersectsSprite(e){return _r.center.set(0,0,0),_r.radius=.7071067811865476,_r.applyMatrix4(e.matrixWorld),this.intersectsSphere(_r)}intersectsSphere(e){const t=this.planes,n=e.center,r=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const r=t[n];if(Vs.x=r.normal.x>0?e.max.x:e.min.x,Vs.y=r.normal.y>0?e.max.y:e.min.y,Vs.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(Vs)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function nd(){let i=null,e=!1,t=null,n=null;function r(s,o){t(s,o),n=i.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(n=i.requestAnimationFrame(r),e=!0)},stop:function(){i.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){i=s}}}function Op(i,e){const t=e.isWebGL2,n=new WeakMap;function r(c,u){const f=c.array,d=c.usage,m=i.createBuffer();i.bindBuffer(u,m),i.bufferData(u,f,d),c.onUploadCallback();let g;if(f instanceof Float32Array)g=5126;else if(f instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(f instanceof Int16Array)g=5122;else if(f instanceof Uint32Array)g=5125;else if(f instanceof Int32Array)g=5124;else if(f instanceof Int8Array)g=5120;else if(f instanceof Uint8Array)g=5121;else if(f instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:m,type:g,bytesPerElement:f.BYTES_PER_ELEMENT,version:c.version}}function s(c,u,f){const d=u.array,m=u.updateRange;i.bindBuffer(f,c),m.count===-1?i.bufferSubData(f,0,d):(t?i.bufferSubData(f,m.offset*d.BYTES_PER_ELEMENT,d,m.offset,m.count):i.bufferSubData(f,m.offset*d.BYTES_PER_ELEMENT,d.subarray(m.offset,m.offset+m.count)),m.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u&&(i.deleteBuffer(u.buffer),n.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const f=n.get(c);f===void 0?n.set(c,r(c,u)):f.version<c.version&&(s(f.buffer,c,u),f.version=c.version)}return{get:o,remove:a,update:l}}class Qa extends hn{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};const s=e/2,o=t/2,a=Math.floor(n),l=Math.floor(r),c=a+1,u=l+1,f=e/a,d=t/l,m=[],g=[],h=[],p=[];for(let _=0;_<u;_++){const w=_*d-o;for(let y=0;y<c;y++){const b=y*f-s;g.push(b,-w,0),h.push(0,0,1),p.push(y/a),p.push(1-_/l)}}for(let _=0;_<l;_++)for(let w=0;w<a;w++){const y=w+c*_,b=w+c*(_+1),x=w+1+c*(_+1),M=w+1+c*_;m.push(y,b,M),m.push(b,x,M)}this.setIndex(m),this.setAttribute("position",new Bt(g,3)),this.setAttribute("normal",new Bt(h,3)),this.setAttribute("uv",new Bt(p,2))}static fromJSON(e){return new Qa(e.width,e.height,e.widthSegments,e.heightSegments)}}var Np=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Fp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,zp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Up=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Gp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Bp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Vp="vec3 transformed = vec3( position );",Hp=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Wp=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,jp=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,qp=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Xp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,Yp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Zp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Kp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Jp=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Qp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,$p=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,em=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,tm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,nm=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,im=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,rm=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,sm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,om=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,am=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,lm="gl_FragColor = linearToOutputTexel( gl_FragColor );",cm=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,um=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,fm=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,dm=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,hm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,pm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,mm=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,gm=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,_m=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,vm=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,bm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,wm=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,ym=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,xm=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,Mm=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,Sm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Am=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Em=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Tm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Cm=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Lm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Dm=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Pm=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Rm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Im=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,km=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Om=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Nm=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Fm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,zm=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Um=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Gm=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Bm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Vm=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Hm=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Wm=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,jm=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,qm=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Xm=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Ym=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,Zm=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Km=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Jm=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Qm=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,$m=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,eg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,tg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,ng=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,ig=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,rg=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,sg=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,og=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,ag=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,lg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,cg=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,ug=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,fg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,dg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,hg=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,pg=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,mg=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,gg=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,_g=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,vg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,bg=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,wg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,yg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,xg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,Mg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Sg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Ag=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,Eg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Tg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,Cg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Lg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Dg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Pg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,Rg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Ig=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const kg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Og=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Ng=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Fg=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,zg=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Ug=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Gg=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Bg=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Vg=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Hg=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Wg=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,jg=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,qg=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Xg=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Yg=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Zg=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Kg=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Jg=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Qg=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,$g=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,e_=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,t_=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,n_=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,i_=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,r_=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,s_=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,o_=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,a_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,l_=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,c_=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,u_=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,f_=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,it={alphamap_fragment:Np,alphamap_pars_fragment:Fp,alphatest_fragment:zp,alphatest_pars_fragment:Up,aomap_fragment:Gp,aomap_pars_fragment:Bp,begin_vertex:Vp,beginnormal_vertex:Hp,bsdfs:Wp,iridescence_fragment:jp,bumpmap_pars_fragment:qp,clipping_planes_fragment:Xp,clipping_planes_pars_fragment:Yp,clipping_planes_pars_vertex:Zp,clipping_planes_vertex:Kp,color_fragment:Jp,color_pars_fragment:Qp,color_pars_vertex:$p,color_vertex:em,common:tm,cube_uv_reflection_fragment:nm,defaultnormal_vertex:im,displacementmap_pars_vertex:rm,displacementmap_vertex:sm,emissivemap_fragment:om,emissivemap_pars_fragment:am,encodings_fragment:lm,encodings_pars_fragment:cm,envmap_fragment:um,envmap_common_pars_fragment:fm,envmap_pars_fragment:dm,envmap_pars_vertex:hm,envmap_physical_pars_fragment:Am,envmap_vertex:pm,fog_vertex:mm,fog_pars_vertex:gm,fog_fragment:_m,fog_pars_fragment:vm,gradientmap_pars_fragment:bm,lightmap_fragment:wm,lightmap_pars_fragment:ym,lights_lambert_fragment:xm,lights_lambert_pars_fragment:Mm,lights_pars_begin:Sm,lights_toon_fragment:Em,lights_toon_pars_fragment:Tm,lights_phong_fragment:Cm,lights_phong_pars_fragment:Lm,lights_physical_fragment:Dm,lights_physical_pars_fragment:Pm,lights_fragment_begin:Rm,lights_fragment_maps:Im,lights_fragment_end:km,logdepthbuf_fragment:Om,logdepthbuf_pars_fragment:Nm,logdepthbuf_pars_vertex:Fm,logdepthbuf_vertex:zm,map_fragment:Um,map_pars_fragment:Gm,map_particle_fragment:Bm,map_particle_pars_fragment:Vm,metalnessmap_fragment:Hm,metalnessmap_pars_fragment:Wm,morphcolor_vertex:jm,morphnormal_vertex:qm,morphtarget_pars_vertex:Xm,morphtarget_vertex:Ym,normal_fragment_begin:Zm,normal_fragment_maps:Km,normal_pars_fragment:Jm,normal_pars_vertex:Qm,normal_vertex:$m,normalmap_pars_fragment:eg,clearcoat_normal_fragment_begin:tg,clearcoat_normal_fragment_maps:ng,clearcoat_pars_fragment:ig,iridescence_pars_fragment:rg,output_fragment:sg,packing:og,premultiplied_alpha_fragment:ag,project_vertex:lg,dithering_fragment:cg,dithering_pars_fragment:ug,roughnessmap_fragment:fg,roughnessmap_pars_fragment:dg,shadowmap_pars_fragment:hg,shadowmap_pars_vertex:pg,shadowmap_vertex:mg,shadowmask_pars_fragment:gg,skinbase_vertex:_g,skinning_pars_vertex:vg,skinning_vertex:bg,skinnormal_vertex:wg,specularmap_fragment:yg,specularmap_pars_fragment:xg,tonemapping_fragment:Mg,tonemapping_pars_fragment:Sg,transmission_fragment:Ag,transmission_pars_fragment:Eg,uv_pars_fragment:Tg,uv_pars_vertex:Cg,uv_vertex:Lg,uv2_pars_fragment:Dg,uv2_pars_vertex:Pg,uv2_vertex:Rg,worldpos_vertex:Ig,background_vert:kg,background_frag:Og,cube_vert:Ng,cube_frag:Fg,depth_vert:zg,depth_frag:Ug,distanceRGBA_vert:Gg,distanceRGBA_frag:Bg,equirect_vert:Vg,equirect_frag:Hg,linedashed_vert:Wg,linedashed_frag:jg,meshbasic_vert:qg,meshbasic_frag:Xg,meshlambert_vert:Yg,meshlambert_frag:Zg,meshmatcap_vert:Kg,meshmatcap_frag:Jg,meshnormal_vert:Qg,meshnormal_frag:$g,meshphong_vert:e_,meshphong_frag:t_,meshphysical_vert:n_,meshphysical_frag:i_,meshtoon_vert:r_,meshtoon_frag:s_,points_vert:o_,points_frag:a_,shadow_vert:l_,shadow_frag:c_,sprite_vert:u_,sprite_frag:f_},xe={common:{diffuse:{value:new Ke(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new wn},uv2Transform:{value:new wn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new je(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ke(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ke(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new wn}},sprite:{diffuse:{value:new Ke(16777215)},opacity:{value:1},center:{value:new je(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new wn}}},Fn={basic:{uniforms:Jt([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.fog]),vertexShader:it.meshbasic_vert,fragmentShader:it.meshbasic_frag},lambert:{uniforms:Jt([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new Ke(0)}}]),vertexShader:it.meshlambert_vert,fragmentShader:it.meshlambert_frag},phong:{uniforms:Jt([xe.common,xe.specularmap,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,xe.lights,{emissive:{value:new Ke(0)},specular:{value:new Ke(1118481)},shininess:{value:30}}]),vertexShader:it.meshphong_vert,fragmentShader:it.meshphong_frag},standard:{uniforms:Jt([xe.common,xe.envmap,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.roughnessmap,xe.metalnessmap,xe.fog,xe.lights,{emissive:{value:new Ke(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:it.meshphysical_vert,fragmentShader:it.meshphysical_frag},toon:{uniforms:Jt([xe.common,xe.aomap,xe.lightmap,xe.emissivemap,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.gradientmap,xe.fog,xe.lights,{emissive:{value:new Ke(0)}}]),vertexShader:it.meshtoon_vert,fragmentShader:it.meshtoon_frag},matcap:{uniforms:Jt([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,xe.fog,{matcap:{value:null}}]),vertexShader:it.meshmatcap_vert,fragmentShader:it.meshmatcap_frag},points:{uniforms:Jt([xe.points,xe.fog]),vertexShader:it.points_vert,fragmentShader:it.points_frag},dashed:{uniforms:Jt([xe.common,xe.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:it.linedashed_vert,fragmentShader:it.linedashed_frag},depth:{uniforms:Jt([xe.common,xe.displacementmap]),vertexShader:it.depth_vert,fragmentShader:it.depth_frag},normal:{uniforms:Jt([xe.common,xe.bumpmap,xe.normalmap,xe.displacementmap,{opacity:{value:1}}]),vertexShader:it.meshnormal_vert,fragmentShader:it.meshnormal_frag},sprite:{uniforms:Jt([xe.sprite,xe.fog]),vertexShader:it.sprite_vert,fragmentShader:it.sprite_frag},background:{uniforms:{uvTransform:{value:new wn},t2D:{value:null}},vertexShader:it.background_vert,fragmentShader:it.background_frag},cube:{uniforms:Jt([xe.envmap,{opacity:{value:1}}]),vertexShader:it.cube_vert,fragmentShader:it.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:it.equirect_vert,fragmentShader:it.equirect_frag},distanceRGBA:{uniforms:Jt([xe.common,xe.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:it.distanceRGBA_vert,fragmentShader:it.distanceRGBA_frag},shadow:{uniforms:Jt([xe.lights,xe.fog,{color:{value:new Ke(0)},opacity:{value:1}}]),vertexShader:it.shadow_vert,fragmentShader:it.shadow_frag}};Fn.physical={uniforms:Jt([Fn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new je(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ke(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new je},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ke(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ke(1,1,1)},specularColorMap:{value:null}}]),vertexShader:it.meshphysical_vert,fragmentShader:it.meshphysical_frag};function d_(i,e,t,n,r,s){const o=new Ke(0);let a=r===!0?0:1,l,c,u=null,f=0,d=null;function m(h,p){let _=!1,w=p.isScene===!0?p.background:null;w&&w.isTexture&&(w=e.get(w));const y=i.xr,b=y.getSession&&y.getSession();b&&b.environmentBlendMode==="additive"&&(w=null),w===null?g(o,a):w&&w.isColor&&(g(w,1),_=!0),(i.autoClear||_)&&i.clear(i.autoClearColor,i.autoClearDepth,i.autoClearStencil),w&&(w.isCubeTexture||w.mapping===vo)?(c===void 0&&(c=new yn(new ps(1,1,1),new oi({name:"BackgroundCubeMaterial",uniforms:Or(Fn.cube.uniforms),vertexShader:Fn.cube.vertexShader,fragmentShader:Fn.cube.fragmentShader,side:Mn,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(x,M,L){this.matrixWorld.copyPosition(L.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),c.material.uniforms.envMap.value=w,c.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,(u!==w||f!==w.version||d!==i.toneMapping)&&(c.material.needsUpdate=!0,u=w,f=w.version,d=i.toneMapping),c.layers.enableAll(),h.unshift(c,c.geometry,c.material,0,0,null)):w&&w.isTexture&&(l===void 0&&(l=new yn(new Qa(2,2),new oi({name:"BackgroundMaterial",uniforms:Or(Fn.background.uniforms),vertexShader:Fn.background.vertexShader,fragmentShader:Fn.background.fragmentShader,side:Pr,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=w,w.matrixAutoUpdate===!0&&w.updateMatrix(),l.material.uniforms.uvTransform.value.copy(w.matrix),(u!==w||f!==w.version||d!==i.toneMapping)&&(l.material.needsUpdate=!0,u=w,f=w.version,d=i.toneMapping),l.layers.enableAll(),h.unshift(l,l.geometry,l.material,0,0,null))}function g(h,p){t.buffers.color.setClear(h.r,h.g,h.b,p,s)}return{getClearColor:function(){return o},setClearColor:function(h,p=1){o.set(h),a=p,g(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(h){a=h,g(o,a)},render:m}}function h_(i,e,t,n){const r=i.getParameter(34921),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},l=p(null);let c=l,u=!1;function f(O,k,P,K,Z){let j=!1;if(o){const V=h(K,P,k);c!==V&&(c=V,m(c.object)),j=_(O,K,P,Z),j&&w(O,K,P,Z)}else{const V=k.wireframe===!0;(c.geometry!==K.id||c.program!==P.id||c.wireframe!==V)&&(c.geometry=K.id,c.program=P.id,c.wireframe=V,j=!0)}Z!==null&&t.update(Z,34963),(j||u)&&(u=!1,v(O,k,P,K),Z!==null&&i.bindBuffer(34963,t.get(Z).buffer))}function d(){return n.isWebGL2?i.createVertexArray():s.createVertexArrayOES()}function m(O){return n.isWebGL2?i.bindVertexArray(O):s.bindVertexArrayOES(O)}function g(O){return n.isWebGL2?i.deleteVertexArray(O):s.deleteVertexArrayOES(O)}function h(O,k,P){const K=P.wireframe===!0;let Z=a[O.id];Z===void 0&&(Z={},a[O.id]=Z);let j=Z[k.id];j===void 0&&(j={},Z[k.id]=j);let V=j[K];return V===void 0&&(V=p(d()),j[K]=V),V}function p(O){const k=[],P=[],K=[];for(let Z=0;Z<r;Z++)k[Z]=0,P[Z]=0,K[Z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:k,enabledAttributes:P,attributeDivisors:K,object:O,attributes:{},index:null}}function _(O,k,P,K){const Z=c.attributes,j=k.attributes;let V=0;const X=P.getAttributes();for(const re in X)if(X[re].location>=0){const be=Z[re];let Ae=j[re];if(Ae===void 0&&(re==="instanceMatrix"&&O.instanceMatrix&&(Ae=O.instanceMatrix),re==="instanceColor"&&O.instanceColor&&(Ae=O.instanceColor)),be===void 0||be.attribute!==Ae||Ae&&be.data!==Ae.data)return!0;V++}return c.attributesNum!==V||c.index!==K}function w(O,k,P,K){const Z={},j=k.attributes;let V=0;const X=P.getAttributes();for(const re in X)if(X[re].location>=0){let be=j[re];be===void 0&&(re==="instanceMatrix"&&O.instanceMatrix&&(be=O.instanceMatrix),re==="instanceColor"&&O.instanceColor&&(be=O.instanceColor));const Ae={};Ae.attribute=be,be&&be.data&&(Ae.data=be.data),Z[re]=Ae,V++}c.attributes=Z,c.attributesNum=V,c.index=K}function y(){const O=c.newAttributes;for(let k=0,P=O.length;k<P;k++)O[k]=0}function b(O){x(O,0)}function x(O,k){const P=c.newAttributes,K=c.enabledAttributes,Z=c.attributeDivisors;P[O]=1,K[O]===0&&(i.enableVertexAttribArray(O),K[O]=1),Z[O]!==k&&((n.isWebGL2?i:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](O,k),Z[O]=k)}function M(){const O=c.newAttributes,k=c.enabledAttributes;for(let P=0,K=k.length;P<K;P++)k[P]!==O[P]&&(i.disableVertexAttribArray(P),k[P]=0)}function L(O,k,P,K,Z,j){n.isWebGL2===!0&&(P===5124||P===5125)?i.vertexAttribIPointer(O,k,P,Z,j):i.vertexAttribPointer(O,k,P,K,Z,j)}function v(O,k,P,K){if(n.isWebGL2===!1&&(O.isInstancedMesh||K.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;y();const Z=K.attributes,j=P.getAttributes(),V=k.defaultAttributeValues;for(const X in j){const re=j[X];if(re.location>=0){let ae=Z[X];if(ae===void 0&&(X==="instanceMatrix"&&O.instanceMatrix&&(ae=O.instanceMatrix),X==="instanceColor"&&O.instanceColor&&(ae=O.instanceColor)),ae!==void 0){const be=ae.normalized,Ae=ae.itemSize,H=t.get(ae);if(H===void 0)continue;const me=H.buffer,Le=H.type,pe=H.bytesPerElement;if(ae.isInterleavedBufferAttribute){const ye=ae.data,Xe=ye.stride,Q=ae.offset;if(ye.isInstancedInterleavedBuffer){for(let fe=0;fe<re.locationSize;fe++)x(re.location+fe,ye.meshPerAttribute);O.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=ye.meshPerAttribute*ye.count)}else for(let fe=0;fe<re.locationSize;fe++)b(re.location+fe);i.bindBuffer(34962,me);for(let fe=0;fe<re.locationSize;fe++)L(re.location+fe,Ae/re.locationSize,Le,be,Xe*pe,(Q+Ae/re.locationSize*fe)*pe)}else{if(ae.isInstancedBufferAttribute){for(let ye=0;ye<re.locationSize;ye++)x(re.location+ye,ae.meshPerAttribute);O.isInstancedMesh!==!0&&K._maxInstanceCount===void 0&&(K._maxInstanceCount=ae.meshPerAttribute*ae.count)}else for(let ye=0;ye<re.locationSize;ye++)b(re.location+ye);i.bindBuffer(34962,me);for(let ye=0;ye<re.locationSize;ye++)L(re.location+ye,Ae/re.locationSize,Le,be,Ae*pe,Ae/re.locationSize*ye*pe)}}else if(V!==void 0){const be=V[X];if(be!==void 0)switch(be.length){case 2:i.vertexAttrib2fv(re.location,be);break;case 3:i.vertexAttrib3fv(re.location,be);break;case 4:i.vertexAttrib4fv(re.location,be);break;default:i.vertexAttrib1fv(re.location,be)}}}}M()}function A(){N();for(const O in a){const k=a[O];for(const P in k){const K=k[P];for(const Z in K)g(K[Z].object),delete K[Z];delete k[P]}delete a[O]}}function S(O){if(a[O.id]===void 0)return;const k=a[O.id];for(const P in k){const K=k[P];for(const Z in K)g(K[Z].object),delete K[Z];delete k[P]}delete a[O.id]}function I(O){for(const k in a){const P=a[k];if(P[O.id]===void 0)continue;const K=P[O.id];for(const Z in K)g(K[Z].object),delete K[Z];delete P[O.id]}}function N(){D(),u=!0,c!==l&&(c=l,m(c.object))}function D(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:f,reset:N,resetDefaultState:D,dispose:A,releaseStatesOfGeometry:S,releaseStatesOfProgram:I,initAttributes:y,enableAttribute:b,disableUnusedAttributes:M}}function p_(i,e,t,n){const r=n.isWebGL2;let s;function o(c){s=c}function a(c,u){i.drawArrays(s,c,u),t.update(u,s,1)}function l(c,u,f){if(f===0)return;let d,m;if(r)d=i,m="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[m](s,c,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=l}function m_(i,e,t){let n;function r(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const L=e.get("EXT_texture_filter_anisotropic");n=i.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(L){if(L==="highp"){if(i.getShaderPrecisionFormat(35633,36338).precision>0&&i.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";L="mediump"}return L==="mediump"&&i.getShaderPrecisionFormat(35633,36337).precision>0&&i.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&i instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&i instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=s(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=i.getParameter(34930),d=i.getParameter(35660),m=i.getParameter(3379),g=i.getParameter(34076),h=i.getParameter(34921),p=i.getParameter(36347),_=i.getParameter(36348),w=i.getParameter(36349),y=d>0,b=o||e.has("OES_texture_float"),x=y&&b,M=o?i.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:d,maxTextureSize:m,maxCubemapSize:g,maxAttributes:h,maxVertexUniforms:p,maxVaryings:_,maxFragmentUniforms:w,vertexTextures:y,floatFragmentTextures:b,floatVertexTextures:x,maxSamples:M}}function g_(i){const e=this;let t=null,n=0,r=!1,s=!1;const o=new Vi,a=new wn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,d,m){const g=f.length!==0||d||n!==0||r;return r=d,t=u(f,m,0),n=f.length,g},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,c()},this.setState=function(f,d,m){const g=f.clippingPlanes,h=f.clipIntersection,p=f.clipShadows,_=i.get(f);if(!r||g===null||g.length===0||s&&!p)s?u(null):c();else{const w=s?0:n,y=w*4;let b=_.clippingState||null;l.value=b,b=u(g,d,y,m);for(let x=0;x!==y;++x)b[x]=t[x];_.clippingState=b,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=w}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,d,m,g){const h=f!==null?f.length:0;let p=null;if(h!==0){if(p=l.value,g!==!0||p===null){const _=m+h*4,w=d.matrixWorldInverse;a.getNormalMatrix(w),(p===null||p.length<_)&&(p=new Float32Array(_));for(let y=0,b=m;y!==h;++y,b+=4)o.copy(f[y]).applyMatrix4(w,a),o.normal.toArray(p,b),p[b+3]=o.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=h,e.numIntersection=0,p}}function __(i){let e=new WeakMap;function t(o,a){return a===Ca?o.mapping=Rr:a===La&&(o.mapping=Ir),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===Ca||a===La)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Rp(l.height/2);return c.fromEquirectangularTexture(i,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class $i extends Ja{constructor(e=-1,t=1,n=1,r=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const yr=4,oc=[.125,.215,.35,.446,.526,.582],Wi=20,fa=new $i,ac=new Ke;let da=null;const Hi=(1+Math.sqrt(5))/2,vr=1/Hi,lc=[new B(1,1,1),new B(-1,1,1),new B(1,1,-1),new B(-1,1,-1),new B(0,Hi,vr),new B(0,Hi,-vr),new B(vr,0,Hi),new B(-vr,0,Hi),new B(Hi,vr,0),new B(-Hi,vr,0)];class cc{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){da=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,r,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=dc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=fc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(da),e.scissorTest=!1,Hs(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Rr||e.mapping===Ir?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),da=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:bn,minFilter:bn,generateMipmaps:!1,type:rs,format:Gn,encoding:Li,depthBuffer:!1},r=uc(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=uc(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=v_(s)),this._blurMaterial=b_(s,e,t)}return r}_compileMaterial(e){const t=new yn(this._lodPlanes[0],e);this._renderer.compile(t,fa)}_sceneToCubeUV(e,t,n,r){const a=new Qt(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,d=u.toneMapping;u.getClearColor(ac),u.toneMapping=Bn,u.autoClear=!1;const m=new Ka({name:"PMREM.Background",side:Mn,depthWrite:!1,depthTest:!1}),g=new yn(new ps,m);let h=!1;const p=e.background;p?p.isColor&&(m.color.copy(p),e.background=null,h=!0):(m.color.copy(ac),h=!0);for(let _=0;_<6;_++){const w=_%3;w===0?(a.up.set(0,l[_],0),a.lookAt(c[_],0,0)):w===1?(a.up.set(0,0,l[_]),a.lookAt(0,c[_],0)):(a.up.set(0,l[_],0),a.lookAt(0,0,c[_]));const y=this._cubeSize;Hs(r,w*y,_>2?y:0,y,y),u.setRenderTarget(r),h&&u.render(g,a),u.render(e,a)}g.geometry.dispose(),g.material.dispose(),u.toneMapping=d,u.autoClear=f,e.background=p}_textureToCubeUV(e,t){const n=this._renderer,r=e.mapping===Rr||e.mapping===Ir;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=dc()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=fc());const s=r?this._cubemapMaterial:this._equirectMaterial,o=new yn(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Hs(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(o,fa)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const s=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=lc[(r-1)%lc.length];this._blur(e,r-1,r,s,o)}t.autoClear=n}_blur(e,t,n,r,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,r,"latitudinal",s),this._halfBlur(o,e,n,n,r,"longitudinal",s)}_halfBlur(e,t,n,r,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new yn(this._lodPlanes[r],c),d=c.uniforms,m=this._sizeLods[n]-1,g=isFinite(s)?Math.PI/(2*m):2*Math.PI/(2*Wi-1),h=s/g,p=isFinite(s)?1+Math.floor(u*h):Wi;p>Wi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${Wi}`);const _=[];let w=0;for(let L=0;L<Wi;++L){const v=L/h,A=Math.exp(-v*v/2);_.push(A),L===0?w+=A:L<p&&(w+=2*A)}for(let L=0;L<_.length;L++)_[L]=_[L]/w;d.envMap.value=e.texture,d.samples.value=p,d.weights.value=_,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=g,d.mipInt.value=y-n;const b=this._sizeLods[r],x=3*b*(r>y-yr?r-y+yr:0),M=4*(this._cubeSize-b);Hs(t,x,M,3*b,2*b),l.setRenderTarget(t),l.render(f,fa)}}function v_(i){const e=[],t=[],n=[];let r=i;const s=i-yr+1+oc.length;for(let o=0;o<s;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>i-yr?l=oc[o-i+yr-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,f=1+c,d=[u,u,f,u,f,f,u,u,f,f,u,f],m=6,g=6,h=3,p=2,_=1,w=new Float32Array(h*g*m),y=new Float32Array(p*g*m),b=new Float32Array(_*g*m);for(let M=0;M<m;M++){const L=M%3*2/3-1,v=M>2?0:-1,A=[L,v,0,L+2/3,v,0,L+2/3,v+1,0,L,v,0,L+2/3,v+1,0,L,v+1,0];w.set(A,h*g*M),y.set(d,p*g*M);const S=[M,M,M,M,M,M];b.set(S,_*g*M)}const x=new hn;x.setAttribute("position",new On(w,h)),x.setAttribute("uv",new On(y,p)),x.setAttribute("faceIndex",new On(b,_)),e.push(x),r>yr&&r--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function uc(i,e,t){const n=new Di(i,e,t);return n.texture.mapping=vo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Hs(i,e,t,n,r){i.viewport.set(e,t,n,r),i.scissor.set(e,t,n,r)}function b_(i,e,t){const n=new Float32Array(Wi),r=new B(0,1,0);return new oi({name:"SphericalGaussianBlur",defines:{n:Wi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${i}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:$a(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Ai,depthTest:!1,depthWrite:!1})}function fc(){return new oi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:$a(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Ai,depthTest:!1,depthWrite:!1})}function dc(){return new oi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:$a(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Ai,depthTest:!1,depthWrite:!1})}function $a(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function w_(i){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===Ca||l===La,u=l===Rr||l===Ir;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new cc(i)),f=c?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(c&&f&&f.height>0||u&&f&&r(f)){t===null&&(t=new cc(i));const d=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function y_(i){const e={};function t(n){if(e[n]!==void 0)return e[n];let r;switch(n){case"WEBGL_depth_texture":r=i.getExtension("WEBGL_depth_texture")||i.getExtension("MOZ_WEBGL_depth_texture")||i.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=i.getExtension("EXT_texture_filter_anisotropic")||i.getExtension("MOZ_EXT_texture_filter_anisotropic")||i.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=i.getExtension("WEBGL_compressed_texture_s3tc")||i.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=i.getExtension("WEBGL_compressed_texture_pvrtc")||i.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=i.getExtension(n)}return e[n]=r,r}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const r=t(n);return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),r}}}function x_(i,e,t,n){const r={},s=new WeakMap;function o(f){const d=f.target;d.index!==null&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",o),delete r[d.id];const m=s.get(d);m&&(e.remove(m),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(f,d){return r[d.id]===!0||(d.addEventListener("dispose",o),r[d.id]=!0,t.memory.geometries++),d}function l(f){const d=f.attributes;for(const g in d)e.update(d[g],34962);const m=f.morphAttributes;for(const g in m){const h=m[g];for(let p=0,_=h.length;p<_;p++)e.update(h[p],34962)}}function c(f){const d=[],m=f.index,g=f.attributes.position;let h=0;if(m!==null){const w=m.array;h=m.version;for(let y=0,b=w.length;y<b;y+=3){const x=w[y+0],M=w[y+1],L=w[y+2];d.push(x,M,M,L,L,x)}}else{const w=g.array;h=g.version;for(let y=0,b=w.length/3-1;y<b;y+=3){const x=y+0,M=y+1,L=y+2;d.push(x,M,M,L,L,x)}}const p=new(Xf(d)?$f:Qf)(d,1);p.version=h;const _=s.get(f);_&&e.remove(_),s.set(f,p)}function u(f){const d=s.get(f);if(d){const m=f.index;m!==null&&d.version<m.version&&c(f)}else c(f);return s.get(f)}return{get:a,update:l,getWireframeAttribute:u}}function M_(i,e,t,n){const r=n.isWebGL2;let s;function o(d){s=d}let a,l;function c(d){a=d.type,l=d.bytesPerElement}function u(d,m){i.drawElements(s,m,a,d*l),t.update(m,s,1)}function f(d,m,g){if(g===0)return;let h,p;if(r)h=i,p="drawElementsInstanced";else if(h=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",h===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[p](s,m,a,d*l,g),t.update(m,s,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=f}function S_(i){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(s/3);break;case 1:t.lines+=a*(s/2);break;case 3:t.lines+=a*(s-1);break;case 2:t.lines+=a*s;break;case 0:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:n}}function A_(i,e){return i[0]-e[0]}function E_(i,e){return Math.abs(e[1])-Math.abs(i[1])}function T_(i,e,t){const n={},r=new Float32Array(8),s=new WeakMap,o=new Xt,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,f,d){const m=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,h=g!==void 0?g.length:0;let p=s.get(u);if(p===void 0||p.count!==h){let k=function(){D.dispose(),s.delete(u),u.removeEventListener("dispose",k)};p!==void 0&&p.texture.dispose();const y=u.morphAttributes.position!==void 0,b=u.morphAttributes.normal!==void 0,x=u.morphAttributes.color!==void 0,M=u.morphAttributes.position||[],L=u.morphAttributes.normal||[],v=u.morphAttributes.color||[];let A=0;y===!0&&(A=1),b===!0&&(A=2),x===!0&&(A=3);let S=u.attributes.position.count*A,I=1;S>e.maxTextureSize&&(I=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const N=new Float32Array(S*I*4*h),D=new Jf(N,S,I,h);D.type=qi,D.needsUpdate=!0;const O=A*4;for(let P=0;P<h;P++){const K=M[P],Z=L[P],j=v[P],V=S*I*4*P;for(let X=0;X<K.count;X++){const re=X*O;y===!0&&(o.fromBufferAttribute(K,X),N[V+re+0]=o.x,N[V+re+1]=o.y,N[V+re+2]=o.z,N[V+re+3]=0),b===!0&&(o.fromBufferAttribute(Z,X),N[V+re+4]=o.x,N[V+re+5]=o.y,N[V+re+6]=o.z,N[V+re+7]=0),x===!0&&(o.fromBufferAttribute(j,X),N[V+re+8]=o.x,N[V+re+9]=o.y,N[V+re+10]=o.z,N[V+re+11]=j.itemSize===4?o.w:1)}}p={count:h,texture:D,size:new je(S,I)},s.set(u,p),u.addEventListener("dispose",k)}let _=0;for(let y=0;y<m.length;y++)_+=m[y];const w=u.morphTargetsRelative?1:1-_;d.getUniforms().setValue(i,"morphTargetBaseInfluence",w),d.getUniforms().setValue(i,"morphTargetInfluences",m),d.getUniforms().setValue(i,"morphTargetsTexture",p.texture,t),d.getUniforms().setValue(i,"morphTargetsTextureSize",p.size)}else{const g=m===void 0?0:m.length;let h=n[u.id];if(h===void 0||h.length!==g){h=[];for(let b=0;b<g;b++)h[b]=[b,0];n[u.id]=h}for(let b=0;b<g;b++){const x=h[b];x[0]=b,x[1]=m[b]}h.sort(E_);for(let b=0;b<8;b++)b<g&&h[b][1]?(a[b][0]=h[b][0],a[b][1]=h[b][1]):(a[b][0]=Number.MAX_SAFE_INTEGER,a[b][1]=0);a.sort(A_);const p=u.morphAttributes.position,_=u.morphAttributes.normal;let w=0;for(let b=0;b<8;b++){const x=a[b],M=x[0],L=x[1];M!==Number.MAX_SAFE_INTEGER&&L?(p&&u.getAttribute("morphTarget"+b)!==p[M]&&u.setAttribute("morphTarget"+b,p[M]),_&&u.getAttribute("morphNormal"+b)!==_[M]&&u.setAttribute("morphNormal"+b,_[M]),r[b]=L,w+=L):(p&&u.hasAttribute("morphTarget"+b)===!0&&u.deleteAttribute("morphTarget"+b),_&&u.hasAttribute("morphNormal"+b)===!0&&u.deleteAttribute("morphNormal"+b),r[b]=0)}const y=u.morphTargetsRelative?1:1-w;d.getUniforms().setValue(i,"morphTargetBaseInfluence",y),d.getUniforms().setValue(i,"morphTargetInfluences",r)}}return{update:l}}function C_(i,e,t,n){let r=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,f=e.get(l,u);return r.get(f)!==c&&(e.update(f),r.set(f,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),f}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const id=new An,rd=new Jf,sd=new _p,od=new td,hc=[],pc=[],mc=new Float32Array(16),gc=new Float32Array(9),_c=new Float32Array(4);function Ur(i,e,t){const n=i[0];if(n<=0||n>0)return i;const r=e*t;let s=hc[r];if(s===void 0&&(s=new Float32Array(r),hc[r]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,i[o].toArray(s,a)}return s}function tn(i,e){if(i.length!==e.length)return!1;for(let t=0,n=i.length;t<n;t++)if(i[t]!==e[t])return!1;return!0}function nn(i,e){for(let t=0,n=e.length;t<n;t++)i[t]=e[t]}function xo(i,e){let t=pc[e];t===void 0&&(t=new Int32Array(e),pc[e]=t);for(let n=0;n!==e;++n)t[n]=i.allocateTextureUnit();return t}function L_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1f(this.addr,e),t[0]=e)}function D_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(i.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(tn(t,e))return;i.uniform2fv(this.addr,e),nn(t,e)}}function P_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(i.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(i.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(tn(t,e))return;i.uniform3fv(this.addr,e),nn(t,e)}}function R_(i,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(i.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(tn(t,e))return;i.uniform4fv(this.addr,e),nn(t,e)}}function I_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;i.uniformMatrix2fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;_c.set(n),i.uniformMatrix2fv(this.addr,!1,_c),nn(t,n)}}function k_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;i.uniformMatrix3fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;gc.set(n),i.uniformMatrix3fv(this.addr,!1,gc),nn(t,n)}}function O_(i,e){const t=this.cache,n=e.elements;if(n===void 0){if(tn(t,e))return;i.uniformMatrix4fv(this.addr,!1,e),nn(t,e)}else{if(tn(t,n))return;mc.set(n),i.uniformMatrix4fv(this.addr,!1,mc),nn(t,n)}}function N_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1i(this.addr,e),t[0]=e)}function F_(i,e){const t=this.cache;tn(t,e)||(i.uniform2iv(this.addr,e),nn(t,e))}function z_(i,e){const t=this.cache;tn(t,e)||(i.uniform3iv(this.addr,e),nn(t,e))}function U_(i,e){const t=this.cache;tn(t,e)||(i.uniform4iv(this.addr,e),nn(t,e))}function G_(i,e){const t=this.cache;t[0]!==e&&(i.uniform1ui(this.addr,e),t[0]=e)}function B_(i,e){const t=this.cache;tn(t,e)||(i.uniform2uiv(this.addr,e),nn(t,e))}function V_(i,e){const t=this.cache;tn(t,e)||(i.uniform3uiv(this.addr,e),nn(t,e))}function H_(i,e){const t=this.cache;tn(t,e)||(i.uniform4uiv(this.addr,e),nn(t,e))}function W_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2D(e||id,r)}function j_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture3D(e||sd,r)}function q_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTextureCube(e||od,r)}function X_(i,e,t){const n=this.cache,r=t.allocateTextureUnit();n[0]!==r&&(i.uniform1i(this.addr,r),n[0]=r),t.setTexture2DArray(e||rd,r)}function Y_(i){switch(i){case 5126:return L_;case 35664:return D_;case 35665:return P_;case 35666:return R_;case 35674:return I_;case 35675:return k_;case 35676:return O_;case 5124:case 35670:return N_;case 35667:case 35671:return F_;case 35668:case 35672:return z_;case 35669:case 35673:return U_;case 5125:return G_;case 36294:return B_;case 36295:return V_;case 36296:return H_;case 35678:case 36198:case 36298:case 36306:case 35682:return W_;case 35679:case 36299:case 36307:return j_;case 35680:case 36300:case 36308:case 36293:return q_;case 36289:case 36303:case 36311:case 36292:return X_}}function Z_(i,e){i.uniform1fv(this.addr,e)}function K_(i,e){const t=Ur(e,this.size,2);i.uniform2fv(this.addr,t)}function J_(i,e){const t=Ur(e,this.size,3);i.uniform3fv(this.addr,t)}function Q_(i,e){const t=Ur(e,this.size,4);i.uniform4fv(this.addr,t)}function $_(i,e){const t=Ur(e,this.size,4);i.uniformMatrix2fv(this.addr,!1,t)}function e0(i,e){const t=Ur(e,this.size,9);i.uniformMatrix3fv(this.addr,!1,t)}function t0(i,e){const t=Ur(e,this.size,16);i.uniformMatrix4fv(this.addr,!1,t)}function n0(i,e){i.uniform1iv(this.addr,e)}function i0(i,e){i.uniform2iv(this.addr,e)}function r0(i,e){i.uniform3iv(this.addr,e)}function s0(i,e){i.uniform4iv(this.addr,e)}function o0(i,e){i.uniform1uiv(this.addr,e)}function a0(i,e){i.uniform2uiv(this.addr,e)}function l0(i,e){i.uniform3uiv(this.addr,e)}function c0(i,e){i.uniform4uiv(this.addr,e)}function u0(i,e,t){const n=e.length,r=xo(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||id,r[s])}function f0(i,e,t){const n=e.length,r=xo(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||sd,r[s])}function d0(i,e,t){const n=e.length,r=xo(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||od,r[s])}function h0(i,e,t){const n=e.length,r=xo(t,n);i.uniform1iv(this.addr,r);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||rd,r[s])}function p0(i){switch(i){case 5126:return Z_;case 35664:return K_;case 35665:return J_;case 35666:return Q_;case 35674:return $_;case 35675:return e0;case 35676:return t0;case 5124:case 35670:return n0;case 35667:case 35671:return i0;case 35668:case 35672:return r0;case 35669:case 35673:return s0;case 5125:return o0;case 36294:return a0;case 36295:return l0;case 36296:return c0;case 35678:case 36198:case 36298:case 36306:case 35682:return u0;case 35679:case 36299:case 36307:return f0;case 35680:case 36300:case 36308:case 36293:return d0;case 36289:case 36303:case 36311:case 36292:return h0}}class m0{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=Y_(t.type)}}class g0{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=p0(t.type)}}class _0{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const r=this.seq;for(let s=0,o=r.length;s!==o;++s){const a=r[s];a.setValue(e,t[a.id],n)}}}const ha=/(\w+)(\])?(\[|\.)?/g;function vc(i,e){i.seq.push(e),i.map[e.id]=e}function v0(i,e,t){const n=i.name,r=n.length;for(ha.lastIndex=0;;){const s=ha.exec(n),o=ha.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){vc(t,c===void 0?new m0(a,i,e):new g0(a,i,e));break}else{let f=t.map[a];f===void 0&&(f=new _0(a),vc(t,f)),t=f}}}class Qs{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let r=0;r<n;++r){const s=e.getActiveUniform(t,r),o=e.getUniformLocation(t,s.name);v0(s,o,this)}}setValue(e,t,n,r){const s=this.map[t];s!==void 0&&s.setValue(e,n,r)}setOptional(e,t,n){const r=t[n];r!==void 0&&this.setValue(e,n,r)}static upload(e,t,n,r){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const n=[];for(let r=0,s=e.length;r!==s;++r){const o=e[r];o.id in t&&n.push(o)}return n}}function bc(i,e,t){const n=i.createShader(e);return i.shaderSource(n,t),i.compileShader(n),n}let b0=0;function w0(i,e){const t=i.split(`
`),n=[],r=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=r;o<s;o++){const a=o+1;n.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return n.join(`
`)}function y0(i){switch(i){case Li:return["Linear","( value )"];case Rt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",i),["Linear","( value )"]}}function wc(i,e,t){const n=i.getShaderParameter(e,35713),r=i.getShaderInfoLog(e).trim();if(n&&r==="")return"";const s=/ERROR: 0:(\d+)/.exec(r);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+r+`

`+w0(i.getShaderSource(e),o)}else return r}function x0(i,e){const t=y0(e);return"vec4 "+i+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function M0(i,e){let t;switch(e){case jh:t="Linear";break;case qh:t="Reinhard";break;case Xh:t="OptimizedCineon";break;case Hf:t="ACESFilmic";break;case Yh:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+i+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function S0(i){return[i.extensionDerivatives||!!i.envMapCubeUVHeight||i.bumpMap||i.tangentSpaceNormalMap||i.clearcoatNormalMap||i.flatShading||i.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(i.extensionFragDepth||i.logarithmicDepthBuffer)&&i.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",i.extensionDrawBuffers&&i.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(i.extensionShaderTextureLOD||i.envMap||i.transmission)&&i.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter($r).join(`
`)}function A0(i){const e=[];for(const t in i){const n=i[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function E0(i,e){const t={},n=i.getProgramParameter(e,35721);for(let r=0;r<n;r++){const s=i.getActiveAttrib(e,r),o=s.name;let a=1;s.type===35674&&(a=2),s.type===35675&&(a=3),s.type===35676&&(a=4),t[o]={type:s.type,location:i.getAttribLocation(e,o),locationSize:a}}return t}function $r(i){return i!==""}function yc(i,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return i.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function xc(i,e){return i.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const T0=/^[ \t]*#include +<([\w\d./]+)>/gm;function ka(i){return i.replace(T0,C0)}function C0(i,e){const t=it[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return ka(t)}const L0=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Mc(i){return i.replace(L0,D0)}function D0(i,e,t,n){let r="";for(let s=parseInt(e);s<parseInt(t);s++)r+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return r}function Sc(i){let e="precision "+i.precision+` float;
precision `+i.precision+" int;";return i.precision==="highp"?e+=`
#define HIGH_PRECISION`:i.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:i.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function P0(i){let e="SHADOWMAP_TYPE_BASIC";return i.shadowMapType===Uf?e="SHADOWMAP_TYPE_PCF":i.shadowMapType===Gf?e="SHADOWMAP_TYPE_PCF_SOFT":i.shadowMapType===Qr&&(e="SHADOWMAP_TYPE_VSM"),e}function R0(i){let e="ENVMAP_TYPE_CUBE";if(i.envMap)switch(i.envMapMode){case Rr:case Ir:e="ENVMAP_TYPE_CUBE";break;case vo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function I0(i){let e="ENVMAP_MODE_REFLECTION";if(i.envMap)switch(i.envMapMode){case Ir:e="ENVMAP_MODE_REFRACTION";break}return e}function k0(i){let e="ENVMAP_BLENDING_NONE";if(i.envMap)switch(i.combine){case Xa:e="ENVMAP_BLENDING_MULTIPLY";break;case Hh:e="ENVMAP_BLENDING_MIX";break;case Wh:e="ENVMAP_BLENDING_ADD";break}return e}function O0(i){const e=i.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function N0(i,e,t,n){const r=i.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=P0(t),c=R0(t),u=I0(t),f=k0(t),d=O0(t),m=t.isWebGL2?"":S0(t),g=A0(s),h=r.createProgram();let p,_,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[g].filter($r).join(`
`),p.length>0&&(p+=`
`),_=[m,g].filter($r).join(`
`),_.length>0&&(_+=`
`)):(p=[Sc(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter($r).join(`
`),_=[m,Sc(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Bn?"#define TONE_MAPPING":"",t.toneMapping!==Bn?it.tonemapping_pars_fragment:"",t.toneMapping!==Bn?M0("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",it.encodings_pars_fragment,x0("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter($r).join(`
`)),o=ka(o),o=yc(o,t),o=xc(o,t),a=ka(a),a=yc(a,t),a=xc(a,t),o=Mc(o),a=Mc(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,_=["#define varying in",t.glslVersion===ql?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===ql?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const y=w+p+o,b=w+_+a,x=bc(r,35633,y),M=bc(r,35632,b);if(r.attachShader(h,x),r.attachShader(h,M),t.index0AttributeName!==void 0?r.bindAttribLocation(h,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(h,0,"position"),r.linkProgram(h),i.debug.checkShaderErrors){const A=r.getProgramInfoLog(h).trim(),S=r.getShaderInfoLog(x).trim(),I=r.getShaderInfoLog(M).trim();let N=!0,D=!0;if(r.getProgramParameter(h,35714)===!1){N=!1;const O=wc(r,x,"vertex"),k=wc(r,M,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(h,35715)+`

Program Info Log: `+A+`
`+O+`
`+k)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(S===""||I==="")&&(D=!1);D&&(this.diagnostics={runnable:N,programLog:A,vertexShader:{log:S,prefix:p},fragmentShader:{log:I,prefix:_}})}r.deleteShader(x),r.deleteShader(M);let L;this.getUniforms=function(){return L===void 0&&(L=new Qs(r,h)),L};let v;return this.getAttributes=function(){return v===void 0&&(v=E0(r,h)),v},this.destroy=function(){n.releaseStatesOfProgram(this),r.deleteProgram(h),this.program=void 0},this.name=t.shaderName,this.id=b0++,this.cacheKey=e,this.usedTimes=1,this.program=h,this.vertexShader=x,this.fragmentShader=M,this}let F0=0;class z0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,r=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new U0(e),t.set(e,n)),n}}class U0{constructor(e){this.id=F0++,this.code=e,this.usedTimes=0}}function G0(i,e,t,n,r,s,o){const a=new Za,l=new z0,c=[],u=r.isWebGL2,f=r.logarithmicDepthBuffer,d=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function h(v,A,S,I,N){const D=I.fog,O=N.geometry,k=v.isMeshStandardMaterial?I.environment:null,P=(v.isMeshStandardMaterial?t:e).get(v.envMap||k),K=!!P&&P.mapping===vo?P.image.height:null,Z=g[v.type];v.precision!==null&&(m=r.getMaxPrecision(v.precision),m!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",m,"instead."));const j=O.morphAttributes.position||O.morphAttributes.normal||O.morphAttributes.color,V=j!==void 0?j.length:0;let X=0;O.morphAttributes.position!==void 0&&(X=1),O.morphAttributes.normal!==void 0&&(X=2),O.morphAttributes.color!==void 0&&(X=3);let re,ae,be,Ae;if(Z){const Xe=Fn[Z];re=Xe.vertexShader,ae=Xe.fragmentShader}else re=v.vertexShader,ae=v.fragmentShader,l.update(v),be=l.getVertexShaderID(v),Ae=l.getFragmentShaderID(v);const H=i.getRenderTarget(),me=v.alphaTest>0,Le=v.clearcoat>0,pe=v.iridescence>0;return{isWebGL2:u,shaderID:Z,shaderName:v.type,vertexShader:re,fragmentShader:ae,defines:v.defines,customVertexShaderID:be,customFragmentShaderID:Ae,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:m,instancing:N.isInstancedMesh===!0,instancingColor:N.isInstancedMesh===!0&&N.instanceColor!==null,supportsVertexTextures:d,outputEncoding:H===null?i.outputEncoding:H.isXRRenderTarget===!0?H.texture.encoding:Li,map:!!v.map,matcap:!!v.matcap,envMap:!!P,envMapMode:P&&P.mapping,envMapCubeUVHeight:K,lightMap:!!v.lightMap,aoMap:!!v.aoMap,emissiveMap:!!v.emissiveMap,bumpMap:!!v.bumpMap,normalMap:!!v.normalMap,objectSpaceNormalMap:v.normalMapType===hp,tangentSpaceNormalMap:v.normalMapType===qf,decodeVideoTexture:!!v.map&&v.map.isVideoTexture===!0&&v.map.encoding===Rt,clearcoat:Le,clearcoatMap:Le&&!!v.clearcoatMap,clearcoatRoughnessMap:Le&&!!v.clearcoatRoughnessMap,clearcoatNormalMap:Le&&!!v.clearcoatNormalMap,iridescence:pe,iridescenceMap:pe&&!!v.iridescenceMap,iridescenceThicknessMap:pe&&!!v.iridescenceThicknessMap,displacementMap:!!v.displacementMap,roughnessMap:!!v.roughnessMap,metalnessMap:!!v.metalnessMap,specularMap:!!v.specularMap,specularIntensityMap:!!v.specularIntensityMap,specularColorMap:!!v.specularColorMap,opaque:v.transparent===!1&&v.blending===Sr,alphaMap:!!v.alphaMap,alphaTest:me,gradientMap:!!v.gradientMap,sheen:v.sheen>0,sheenColorMap:!!v.sheenColorMap,sheenRoughnessMap:!!v.sheenRoughnessMap,transmission:v.transmission>0,transmissionMap:!!v.transmissionMap,thicknessMap:!!v.thicknessMap,combine:v.combine,vertexTangents:!!v.normalMap&&!!O.attributes.tangent,vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!O.attributes.color&&O.attributes.color.itemSize===4,vertexUvs:!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatMap||!!v.clearcoatRoughnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||!!v.displacementMap||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||!!v.sheenColorMap||!!v.sheenRoughnessMap,uvsVertexOnly:!(!!v.map||!!v.bumpMap||!!v.normalMap||!!v.specularMap||!!v.alphaMap||!!v.emissiveMap||!!v.roughnessMap||!!v.metalnessMap||!!v.clearcoatNormalMap||!!v.iridescenceMap||!!v.iridescenceThicknessMap||v.transmission>0||!!v.transmissionMap||!!v.thicknessMap||!!v.specularIntensityMap||!!v.specularColorMap||v.sheen>0||!!v.sheenColorMap||!!v.sheenRoughnessMap)&&!!v.displacementMap,fog:!!D,useFog:v.fog===!0,fogExp2:D&&D.isFogExp2,flatShading:!!v.flatShading,sizeAttenuation:v.sizeAttenuation,logarithmicDepthBuffer:f,skinning:N.isSkinnedMesh===!0,morphTargets:O.morphAttributes.position!==void 0,morphNormals:O.morphAttributes.normal!==void 0,morphColors:O.morphAttributes.color!==void 0,morphTargetsCount:V,morphTextureStride:X,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numSpotLightMaps:A.spotLightMap.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numSpotLightShadowsWithMaps:A.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:i.shadowMap.enabled&&S.length>0,shadowMapType:i.shadowMap.type,toneMapping:v.toneMapped?i.toneMapping:Bn,physicallyCorrectLights:i.physicallyCorrectLights,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===Mi,flipSided:v.side===Mn,useDepthPacking:!!v.depthPacking,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionDerivatives:v.extensions&&v.extensions.derivatives,extensionFragDepth:v.extensions&&v.extensions.fragDepth,extensionDrawBuffers:v.extensions&&v.extensions.drawBuffers,extensionShaderTextureLOD:v.extensions&&v.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:v.customProgramCacheKey()}}function p(v){const A=[];if(v.shaderID?A.push(v.shaderID):(A.push(v.customVertexShaderID),A.push(v.customFragmentShaderID)),v.defines!==void 0)for(const S in v.defines)A.push(S),A.push(v.defines[S]);return v.isRawShaderMaterial===!1&&(_(A,v),w(A,v),A.push(i.outputEncoding)),A.push(v.customProgramCacheKey),A.join()}function _(v,A){v.push(A.precision),v.push(A.outputEncoding),v.push(A.envMapMode),v.push(A.envMapCubeUVHeight),v.push(A.combine),v.push(A.vertexUvs),v.push(A.fogExp2),v.push(A.sizeAttenuation),v.push(A.morphTargetsCount),v.push(A.morphAttributeCount),v.push(A.numDirLights),v.push(A.numPointLights),v.push(A.numSpotLights),v.push(A.numSpotLightMaps),v.push(A.numHemiLights),v.push(A.numRectAreaLights),v.push(A.numDirLightShadows),v.push(A.numPointLightShadows),v.push(A.numSpotLightShadows),v.push(A.numSpotLightShadowsWithMaps),v.push(A.shadowMapType),v.push(A.toneMapping),v.push(A.numClippingPlanes),v.push(A.numClipIntersection),v.push(A.depthPacking)}function w(v,A){a.disableAll(),A.isWebGL2&&a.enable(0),A.supportsVertexTextures&&a.enable(1),A.instancing&&a.enable(2),A.instancingColor&&a.enable(3),A.map&&a.enable(4),A.matcap&&a.enable(5),A.envMap&&a.enable(6),A.lightMap&&a.enable(7),A.aoMap&&a.enable(8),A.emissiveMap&&a.enable(9),A.bumpMap&&a.enable(10),A.normalMap&&a.enable(11),A.objectSpaceNormalMap&&a.enable(12),A.tangentSpaceNormalMap&&a.enable(13),A.clearcoat&&a.enable(14),A.clearcoatMap&&a.enable(15),A.clearcoatRoughnessMap&&a.enable(16),A.clearcoatNormalMap&&a.enable(17),A.iridescence&&a.enable(18),A.iridescenceMap&&a.enable(19),A.iridescenceThicknessMap&&a.enable(20),A.displacementMap&&a.enable(21),A.specularMap&&a.enable(22),A.roughnessMap&&a.enable(23),A.metalnessMap&&a.enable(24),A.gradientMap&&a.enable(25),A.alphaMap&&a.enable(26),A.alphaTest&&a.enable(27),A.vertexColors&&a.enable(28),A.vertexAlphas&&a.enable(29),A.vertexUvs&&a.enable(30),A.vertexTangents&&a.enable(31),A.uvsVertexOnly&&a.enable(32),v.push(a.mask),a.disableAll(),A.fog&&a.enable(0),A.useFog&&a.enable(1),A.flatShading&&a.enable(2),A.logarithmicDepthBuffer&&a.enable(3),A.skinning&&a.enable(4),A.morphTargets&&a.enable(5),A.morphNormals&&a.enable(6),A.morphColors&&a.enable(7),A.premultipliedAlpha&&a.enable(8),A.shadowMapEnabled&&a.enable(9),A.physicallyCorrectLights&&a.enable(10),A.doubleSided&&a.enable(11),A.flipSided&&a.enable(12),A.useDepthPacking&&a.enable(13),A.dithering&&a.enable(14),A.specularIntensityMap&&a.enable(15),A.specularColorMap&&a.enable(16),A.transmission&&a.enable(17),A.transmissionMap&&a.enable(18),A.thicknessMap&&a.enable(19),A.sheen&&a.enable(20),A.sheenColorMap&&a.enable(21),A.sheenRoughnessMap&&a.enable(22),A.decodeVideoTexture&&a.enable(23),A.opaque&&a.enable(24),v.push(a.mask)}function y(v){const A=g[v.type];let S;if(A){const I=Fn[A];S=ed.clone(I.uniforms)}else S=v.uniforms;return S}function b(v,A){let S;for(let I=0,N=c.length;I<N;I++){const D=c[I];if(D.cacheKey===A){S=D,++S.usedTimes;break}}return S===void 0&&(S=new N0(i,A,v,s),c.push(S)),S}function x(v){if(--v.usedTimes===0){const A=c.indexOf(v);c[A]=c[c.length-1],c.pop(),v.destroy()}}function M(v){l.remove(v)}function L(){l.dispose()}return{getParameters:h,getProgramCacheKey:p,getUniforms:y,acquireProgram:b,releaseProgram:x,releaseShaderCache:M,programs:c,dispose:L}}function B0(){let i=new WeakMap;function e(s){let o=i.get(s);return o===void 0&&(o={},i.set(s,o)),o}function t(s){i.delete(s)}function n(s,o,a){i.get(s)[o]=a}function r(){i=new WeakMap}return{get:e,remove:t,update:n,dispose:r}}function V0(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.material.id!==e.material.id?i.material.id-e.material.id:i.z!==e.z?i.z-e.z:i.id-e.id}function Ac(i,e){return i.groupOrder!==e.groupOrder?i.groupOrder-e.groupOrder:i.renderOrder!==e.renderOrder?i.renderOrder-e.renderOrder:i.z!==e.z?e.z-i.z:i.id-e.id}function Ec(){const i=[];let e=0;const t=[],n=[],r=[];function s(){e=0,t.length=0,n.length=0,r.length=0}function o(f,d,m,g,h,p){let _=i[e];return _===void 0?(_={id:f.id,object:f,geometry:d,material:m,groupOrder:g,renderOrder:f.renderOrder,z:h,group:p},i[e]=_):(_.id=f.id,_.object=f,_.geometry=d,_.material=m,_.groupOrder=g,_.renderOrder=f.renderOrder,_.z=h,_.group=p),e++,_}function a(f,d,m,g,h,p){const _=o(f,d,m,g,h,p);m.transmission>0?n.push(_):m.transparent===!0?r.push(_):t.push(_)}function l(f,d,m,g,h,p){const _=o(f,d,m,g,h,p);m.transmission>0?n.unshift(_):m.transparent===!0?r.unshift(_):t.unshift(_)}function c(f,d){t.length>1&&t.sort(f||V0),n.length>1&&n.sort(d||Ac),r.length>1&&r.sort(d||Ac)}function u(){for(let f=e,d=i.length;f<d;f++){const m=i[f];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:n,transparent:r,init:s,push:a,unshift:l,finish:u,sort:c}}function H0(){let i=new WeakMap;function e(n,r){const s=i.get(n);let o;return s===void 0?(o=new Ec,i.set(n,[o])):r>=s.length?(o=new Ec,s.push(o)):o=s[r],o}function t(){i=new WeakMap}return{get:e,dispose:t}}function W0(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new Ke};break;case"SpotLight":t={position:new B,direction:new B,color:new Ke,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new Ke,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new Ke,groundColor:new Ke};break;case"RectAreaLight":t={color:new Ke,position:new B,halfWidth:new B,halfHeight:new B};break}return i[e.id]=t,t}}}function j0(){const i={};return{get:function(e){if(i[e.id]!==void 0)return i[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new je};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new je};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new je,shadowCameraNear:1,shadowCameraFar:1e3};break}return i[e.id]=t,t}}}let q0=0;function X0(i,e){return(e.castShadow?2:0)-(i.castShadow?2:0)+(e.map?1:0)-(i.map?1:0)}function Y0(i,e){const t=new W0,n=j0(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let u=0;u<9;u++)r.probe.push(new B);const s=new B,o=new At,a=new At;function l(u,f){let d=0,m=0,g=0;for(let I=0;I<9;I++)r.probe[I].set(0,0,0);let h=0,p=0,_=0,w=0,y=0,b=0,x=0,M=0,L=0,v=0;u.sort(X0);const A=f!==!0?Math.PI:1;for(let I=0,N=u.length;I<N;I++){const D=u[I],O=D.color,k=D.intensity,P=D.distance,K=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)d+=O.r*k*A,m+=O.g*k*A,g+=O.b*k*A;else if(D.isLightProbe)for(let Z=0;Z<9;Z++)r.probe[Z].addScaledVector(D.sh.coefficients[Z],k);else if(D.isDirectionalLight){const Z=t.get(D);if(Z.color.copy(D.color).multiplyScalar(D.intensity*A),D.castShadow){const j=D.shadow,V=n.get(D);V.shadowBias=j.bias,V.shadowNormalBias=j.normalBias,V.shadowRadius=j.radius,V.shadowMapSize=j.mapSize,r.directionalShadow[h]=V,r.directionalShadowMap[h]=K,r.directionalShadowMatrix[h]=D.shadow.matrix,b++}r.directional[h]=Z,h++}else if(D.isSpotLight){const Z=t.get(D);Z.position.setFromMatrixPosition(D.matrixWorld),Z.color.copy(O).multiplyScalar(k*A),Z.distance=P,Z.coneCos=Math.cos(D.angle),Z.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),Z.decay=D.decay,r.spot[_]=Z;const j=D.shadow;if(D.map&&(r.spotLightMap[L]=D.map,L++,j.updateMatrices(D),D.castShadow&&v++),r.spotLightMatrix[_]=j.matrix,D.castShadow){const V=n.get(D);V.shadowBias=j.bias,V.shadowNormalBias=j.normalBias,V.shadowRadius=j.radius,V.shadowMapSize=j.mapSize,r.spotShadow[_]=V,r.spotShadowMap[_]=K,M++}_++}else if(D.isRectAreaLight){const Z=t.get(D);Z.color.copy(O).multiplyScalar(k),Z.halfWidth.set(D.width*.5,0,0),Z.halfHeight.set(0,D.height*.5,0),r.rectArea[w]=Z,w++}else if(D.isPointLight){const Z=t.get(D);if(Z.color.copy(D.color).multiplyScalar(D.intensity*A),Z.distance=D.distance,Z.decay=D.decay,D.castShadow){const j=D.shadow,V=n.get(D);V.shadowBias=j.bias,V.shadowNormalBias=j.normalBias,V.shadowRadius=j.radius,V.shadowMapSize=j.mapSize,V.shadowCameraNear=j.camera.near,V.shadowCameraFar=j.camera.far,r.pointShadow[p]=V,r.pointShadowMap[p]=K,r.pointShadowMatrix[p]=D.shadow.matrix,x++}r.point[p]=Z,p++}else if(D.isHemisphereLight){const Z=t.get(D);Z.skyColor.copy(D.color).multiplyScalar(k*A),Z.groundColor.copy(D.groundColor).multiplyScalar(k*A),r.hemi[y]=Z,y++}}w>0&&(e.isWebGL2||i.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=xe.LTC_FLOAT_1,r.rectAreaLTC2=xe.LTC_FLOAT_2):i.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=xe.LTC_HALF_1,r.rectAreaLTC2=xe.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=d,r.ambient[1]=m,r.ambient[2]=g;const S=r.hash;(S.directionalLength!==h||S.pointLength!==p||S.spotLength!==_||S.rectAreaLength!==w||S.hemiLength!==y||S.numDirectionalShadows!==b||S.numPointShadows!==x||S.numSpotShadows!==M||S.numSpotMaps!==L)&&(r.directional.length=h,r.spot.length=_,r.rectArea.length=w,r.point.length=p,r.hemi.length=y,r.directionalShadow.length=b,r.directionalShadowMap.length=b,r.pointShadow.length=x,r.pointShadowMap.length=x,r.spotShadow.length=M,r.spotShadowMap.length=M,r.directionalShadowMatrix.length=b,r.pointShadowMatrix.length=x,r.spotLightMatrix.length=M+L-v,r.spotLightMap.length=L,r.numSpotLightShadowsWithMaps=v,S.directionalLength=h,S.pointLength=p,S.spotLength=_,S.rectAreaLength=w,S.hemiLength=y,S.numDirectionalShadows=b,S.numPointShadows=x,S.numSpotShadows=M,S.numSpotMaps=L,r.version=q0++)}function c(u,f){let d=0,m=0,g=0,h=0,p=0;const _=f.matrixWorldInverse;for(let w=0,y=u.length;w<y;w++){const b=u[w];if(b.isDirectionalLight){const x=r.directional[d];x.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(_),d++}else if(b.isSpotLight){const x=r.spot[g];x.position.setFromMatrixPosition(b.matrixWorld),x.position.applyMatrix4(_),x.direction.setFromMatrixPosition(b.matrixWorld),s.setFromMatrixPosition(b.target.matrixWorld),x.direction.sub(s),x.direction.transformDirection(_),g++}else if(b.isRectAreaLight){const x=r.rectArea[h];x.position.setFromMatrixPosition(b.matrixWorld),x.position.applyMatrix4(_),a.identity(),o.copy(b.matrixWorld),o.premultiply(_),a.extractRotation(o),x.halfWidth.set(b.width*.5,0,0),x.halfHeight.set(0,b.height*.5,0),x.halfWidth.applyMatrix4(a),x.halfHeight.applyMatrix4(a),h++}else if(b.isPointLight){const x=r.point[m];x.position.setFromMatrixPosition(b.matrixWorld),x.position.applyMatrix4(_),m++}else if(b.isHemisphereLight){const x=r.hemi[p];x.direction.setFromMatrixPosition(b.matrixWorld),x.direction.transformDirection(_),p++}}}return{setup:l,setupView:c,state:r}}function Tc(i,e){const t=new Y0(i,e),n=[],r=[];function s(){n.length=0,r.length=0}function o(f){n.push(f)}function a(f){r.push(f)}function l(f){t.setup(n,f)}function c(f){t.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function Z0(i,e){let t=new WeakMap;function n(s,o=0){const a=t.get(s);let l;return a===void 0?(l=new Tc(i,e),t.set(s,[l])):o>=a.length?(l=new Tc(i,e),a.push(l)):l=a[o],l}function r(){t=new WeakMap}return{get:n,dispose:r}}class K0 extends zr{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=fp,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class J0 extends zr{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new B,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const Q0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,$0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function e1(i,e,t){let n=new yo;const r=new je,s=new je,o=new Xt,a=new K0({depthPacking:dp}),l=new J0,c={},u=t.maxTextureSize,f={0:Mn,1:Pr,2:Mi},d=new oi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new je},radius:{value:4}},vertexShader:Q0,fragmentShader:$0}),m=d.clone();m.defines.HORIZONTAL_PASS=1;const g=new hn;g.setAttribute("position",new On(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const h=new yn(g,d),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Uf,this.render=function(b,x,M){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||b.length===0)return;const L=i.getRenderTarget(),v=i.getActiveCubeFace(),A=i.getActiveMipmapLevel(),S=i.state;S.setBlending(Ai),S.buffers.color.setClear(1,1,1,1),S.buffers.depth.setTest(!0),S.setScissorTest(!1);for(let I=0,N=b.length;I<N;I++){const D=b[I],O=D.shadow;if(O===void 0){console.warn("THREE.WebGLShadowMap:",D,"has no shadow.");continue}if(O.autoUpdate===!1&&O.needsUpdate===!1)continue;r.copy(O.mapSize);const k=O.getFrameExtents();if(r.multiply(k),s.copy(O.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(s.x=Math.floor(u/k.x),r.x=s.x*k.x,O.mapSize.x=s.x),r.y>u&&(s.y=Math.floor(u/k.y),r.y=s.y*k.y,O.mapSize.y=s.y)),O.map===null){const K=this.type!==Qr?{minFilter:an,magFilter:an}:{};O.map=new Di(r.x,r.y,K),O.map.texture.name=D.name+".shadowMap",O.camera.updateProjectionMatrix()}i.setRenderTarget(O.map),i.clear();const P=O.getViewportCount();for(let K=0;K<P;K++){const Z=O.getViewport(K);o.set(s.x*Z.x,s.y*Z.y,s.x*Z.z,s.y*Z.w),S.viewport(o),O.updateMatrices(D,K),n=O.getFrustum(),y(x,M,O.camera,D,this.type)}O.isPointLightShadow!==!0&&this.type===Qr&&_(O,M),O.needsUpdate=!1}p.needsUpdate=!1,i.setRenderTarget(L,v,A)};function _(b,x){const M=e.update(h);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,m.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,m.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new Di(r.x,r.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,i.setRenderTarget(b.mapPass),i.clear(),i.renderBufferDirect(x,null,M,d,h,null),m.uniforms.shadow_pass.value=b.mapPass.texture,m.uniforms.resolution.value=b.mapSize,m.uniforms.radius.value=b.radius,i.setRenderTarget(b.map),i.clear(),i.renderBufferDirect(x,null,M,m,h,null)}function w(b,x,M,L,v,A){let S=null;const I=M.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(I!==void 0?S=I:S=M.isPointLight===!0?l:a,i.localClippingEnabled&&x.clipShadows===!0&&Array.isArray(x.clippingPlanes)&&x.clippingPlanes.length!==0||x.displacementMap&&x.displacementScale!==0||x.alphaMap&&x.alphaTest>0){const N=S.uuid,D=x.uuid;let O=c[N];O===void 0&&(O={},c[N]=O);let k=O[D];k===void 0&&(k=S.clone(),O[D]=k),S=k}return S.visible=x.visible,S.wireframe=x.wireframe,A===Qr?S.side=x.shadowSide!==null?x.shadowSide:x.side:S.side=x.shadowSide!==null?x.shadowSide:f[x.side],S.alphaMap=x.alphaMap,S.alphaTest=x.alphaTest,S.clipShadows=x.clipShadows,S.clippingPlanes=x.clippingPlanes,S.clipIntersection=x.clipIntersection,S.displacementMap=x.displacementMap,S.displacementScale=x.displacementScale,S.displacementBias=x.displacementBias,S.wireframeLinewidth=x.wireframeLinewidth,S.linewidth=x.linewidth,M.isPointLight===!0&&S.isMeshDistanceMaterial===!0&&(S.referencePosition.setFromMatrixPosition(M.matrixWorld),S.nearDistance=L,S.farDistance=v),S}function y(b,x,M,L,v){if(b.visible===!1)return;if(b.layers.test(x.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&v===Qr)&&(!b.frustumCulled||n.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,b.matrixWorld);const I=e.update(b),N=b.material;if(Array.isArray(N)){const D=I.groups;for(let O=0,k=D.length;O<k;O++){const P=D[O],K=N[P.materialIndex];if(K&&K.visible){const Z=w(b,K,L,M.near,M.far,v);i.renderBufferDirect(M,null,I,Z,b,P)}}}else if(N.visible){const D=w(b,N,L,M.near,M.far,v);i.renderBufferDirect(M,null,I,D,b,null)}}const S=b.children;for(let I=0,N=S.length;I<N;I++)y(S[I],x,M,L,v)}}function t1(i,e,t){const n=t.isWebGL2;function r(){let G=!1;const we=new Xt;let te=null;const Pe=new Xt(0,0,0,0);return{setMask:function(Ee){te!==Ee&&!G&&(i.colorMask(Ee,Ee,Ee,Ee),te=Ee)},setLocked:function(Ee){G=Ee},setClear:function(Ee,rt,vt,St,rn){rn===!0&&(Ee*=St,rt*=St,vt*=St),we.set(Ee,rt,vt,St),Pe.equals(we)===!1&&(i.clearColor(Ee,rt,vt,St),Pe.copy(we))},reset:function(){G=!1,te=null,Pe.set(-1,0,0,0)}}}function s(){let G=!1,we=null,te=null,Pe=null;return{setTest:function(Ee){Ee?me(2929):Le(2929)},setMask:function(Ee){we!==Ee&&!G&&(i.depthMask(Ee),we=Ee)},setFunc:function(Ee){if(te!==Ee){if(Ee)switch(Ee){case Nh:i.depthFunc(512);break;case Fh:i.depthFunc(519);break;case zh:i.depthFunc(513);break;case Ta:i.depthFunc(515);break;case Uh:i.depthFunc(514);break;case Gh:i.depthFunc(518);break;case Bh:i.depthFunc(516);break;case Vh:i.depthFunc(517);break;default:i.depthFunc(515)}else i.depthFunc(515);te=Ee}},setLocked:function(Ee){G=Ee},setClear:function(Ee){Pe!==Ee&&(i.clearDepth(Ee),Pe=Ee)},reset:function(){G=!1,we=null,te=null,Pe=null}}}function o(){let G=!1,we=null,te=null,Pe=null,Ee=null,rt=null,vt=null,St=null,rn=null;return{setTest:function(Et){G||(Et?me(2960):Le(2960))},setMask:function(Et){we!==Et&&!G&&(i.stencilMask(Et),we=Et)},setFunc:function(Et,Tn,sn){(te!==Et||Pe!==Tn||Ee!==sn)&&(i.stencilFunc(Et,Tn,sn),te=Et,Pe=Tn,Ee=sn)},setOp:function(Et,Tn,sn){(rt!==Et||vt!==Tn||St!==sn)&&(i.stencilOp(Et,Tn,sn),rt=Et,vt=Tn,St=sn)},setLocked:function(Et){G=Et},setClear:function(Et){rn!==Et&&(i.clearStencil(Et),rn=Et)},reset:function(){G=!1,we=null,te=null,Pe=null,Ee=null,rt=null,vt=null,St=null,rn=null}}}const a=new r,l=new s,c=new o,u=new WeakMap,f=new WeakMap;let d={},m={},g=new WeakMap,h=[],p=null,_=!1,w=null,y=null,b=null,x=null,M=null,L=null,v=null,A=!1,S=null,I=null,N=null,D=null,O=null;const k=i.getParameter(35661);let P=!1,K=0;const Z=i.getParameter(7938);Z.indexOf("WebGL")!==-1?(K=parseFloat(/^WebGL (\d)/.exec(Z)[1]),P=K>=1):Z.indexOf("OpenGL ES")!==-1&&(K=parseFloat(/^OpenGL ES (\d)/.exec(Z)[1]),P=K>=2);let j=null,V={};const X=i.getParameter(3088),re=i.getParameter(2978),ae=new Xt().fromArray(X),be=new Xt().fromArray(re);function Ae(G,we,te){const Pe=new Uint8Array(4),Ee=i.createTexture();i.bindTexture(G,Ee),i.texParameteri(G,10241,9728),i.texParameteri(G,10240,9728);for(let rt=0;rt<te;rt++)i.texImage2D(we+rt,0,6408,1,1,0,6408,5121,Pe);return Ee}const H={};H[3553]=Ae(3553,3553,1),H[34067]=Ae(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),me(2929),l.setFunc(Ta),tt(!1),yt(gl),me(2884),$(Ai);function me(G){d[G]!==!0&&(i.enable(G),d[G]=!0)}function Le(G){d[G]!==!1&&(i.disable(G),d[G]=!1)}function pe(G,we){return m[G]!==we?(i.bindFramebuffer(G,we),m[G]=we,n&&(G===36009&&(m[36160]=we),G===36160&&(m[36009]=we)),!0):!1}function ye(G,we){let te=h,Pe=!1;if(G)if(te=g.get(we),te===void 0&&(te=[],g.set(we,te)),G.isWebGLMultipleRenderTargets){const Ee=G.texture;if(te.length!==Ee.length||te[0]!==36064){for(let rt=0,vt=Ee.length;rt<vt;rt++)te[rt]=36064+rt;te.length=Ee.length,Pe=!0}}else te[0]!==36064&&(te[0]=36064,Pe=!0);else te[0]!==1029&&(te[0]=1029,Pe=!0);Pe&&(t.isWebGL2?i.drawBuffers(te):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(te))}function Xe(G){return p!==G?(i.useProgram(G),p=G,!0):!1}const Q={[wr]:32774,[Ah]:32778,[Eh]:32779};if(n)Q[wl]=32775,Q[yl]=32776;else{const G=e.get("EXT_blend_minmax");G!==null&&(Q[wl]=G.MIN_EXT,Q[yl]=G.MAX_EXT)}const fe={[Th]:0,[Ch]:1,[Lh]:768,[Bf]:770,[Oh]:776,[Ih]:774,[Ph]:772,[Dh]:769,[Vf]:771,[kh]:775,[Rh]:773};function $(G,we,te,Pe,Ee,rt,vt,St){if(G===Ai){_===!0&&(Le(3042),_=!1);return}if(_===!1&&(me(3042),_=!0),G!==Sh){if(G!==w||St!==A){if((y!==wr||M!==wr)&&(i.blendEquation(32774),y=wr,M=wr),St)switch(G){case Sr:i.blendFuncSeparate(1,771,1,771);break;case _l:i.blendFunc(1,1);break;case vl:i.blendFuncSeparate(0,769,0,1);break;case bl:i.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Sr:i.blendFuncSeparate(770,771,1,771);break;case _l:i.blendFunc(770,1);break;case vl:i.blendFuncSeparate(0,769,0,1);break;case bl:i.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}b=null,x=null,L=null,v=null,w=G,A=St}return}Ee=Ee||we,rt=rt||te,vt=vt||Pe,(we!==y||Ee!==M)&&(i.blendEquationSeparate(Q[we],Q[Ee]),y=we,M=Ee),(te!==b||Pe!==x||rt!==L||vt!==v)&&(i.blendFuncSeparate(fe[te],fe[Pe],fe[rt],fe[vt]),b=te,x=Pe,L=rt,v=vt),w=G,A=null}function Ie(G,we){G.side===Mi?Le(2884):me(2884);let te=G.side===Mn;we&&(te=!te),tt(te),G.blending===Sr&&G.transparent===!1?$(Ai):$(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),l.setFunc(G.depthFunc),l.setTest(G.depthTest),l.setMask(G.depthWrite),a.setMask(G.colorWrite);const Pe=G.stencilWrite;c.setTest(Pe),Pe&&(c.setMask(G.stencilWriteMask),c.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),c.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),de(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?me(32926):Le(32926)}function tt(G){S!==G&&(G?i.frontFace(2304):i.frontFace(2305),S=G)}function yt(G){G!==xh?(me(2884),G!==I&&(G===gl?i.cullFace(1029):G===Mh?i.cullFace(1028):i.cullFace(1032))):Le(2884),I=G}function gt(G){G!==N&&(P&&i.lineWidth(G),N=G)}function de(G,we,te){G?(me(32823),(D!==we||O!==te)&&(i.polygonOffset(we,te),D=we,O=te)):Le(32823)}function st(G){G?me(3089):Le(3089)}function Lt(G){G===void 0&&(G=33984+k-1),j!==G&&(i.activeTexture(G),j=G)}function R(G,we){j===null&&Lt();let te=V[j];te===void 0&&(te={type:void 0,texture:void 0},V[j]=te),(te.type!==G||te.texture!==we)&&(i.bindTexture(G,we||H[G]),te.type=G,te.texture=we)}function E(){const G=V[j];G!==void 0&&G.type!==void 0&&(i.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function ee(){try{i.compressedTexImage2D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ce(){try{i.texSubImage2D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ge(){try{i.texSubImage3D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Me(){try{i.compressedTexSubImage2D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ve(){try{i.texStorage2D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function T(){try{i.texStorage3D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function oe(){try{i.texImage2D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function _e(){try{i.texImage3D.apply(i,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Se(G){ae.equals(G)===!1&&(i.scissor(G.x,G.y,G.z,G.w),ae.copy(G))}function z(G){be.equals(G)===!1&&(i.viewport(G.x,G.y,G.z,G.w),be.copy(G))}function ke(G,we){let te=f.get(we);te===void 0&&(te=new WeakMap,f.set(we,te));let Pe=te.get(G);Pe===void 0&&(Pe=i.getUniformBlockIndex(we,G.name),te.set(G,Pe))}function Qe(G,we){const Pe=f.get(we).get(G);u.get(G)!==Pe&&(i.uniformBlockBinding(we,Pe,G.__bindingPointIndex),u.set(G,Pe))}function _t(){i.disable(3042),i.disable(2884),i.disable(2929),i.disable(32823),i.disable(3089),i.disable(2960),i.disable(32926),i.blendEquation(32774),i.blendFunc(1,0),i.blendFuncSeparate(1,0,1,0),i.colorMask(!0,!0,!0,!0),i.clearColor(0,0,0,0),i.depthMask(!0),i.depthFunc(513),i.clearDepth(1),i.stencilMask(4294967295),i.stencilFunc(519,0,4294967295),i.stencilOp(7680,7680,7680),i.clearStencil(0),i.cullFace(1029),i.frontFace(2305),i.polygonOffset(0,0),i.activeTexture(33984),i.bindFramebuffer(36160,null),n===!0&&(i.bindFramebuffer(36009,null),i.bindFramebuffer(36008,null)),i.useProgram(null),i.lineWidth(1),i.scissor(0,0,i.canvas.width,i.canvas.height),i.viewport(0,0,i.canvas.width,i.canvas.height),d={},j=null,V={},m={},g=new WeakMap,h=[],p=null,_=!1,w=null,y=null,b=null,x=null,M=null,L=null,v=null,A=!1,S=null,I=null,N=null,D=null,O=null,ae.set(0,0,i.canvas.width,i.canvas.height),be.set(0,0,i.canvas.width,i.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:me,disable:Le,bindFramebuffer:pe,drawBuffers:ye,useProgram:Xe,setBlending:$,setMaterial:Ie,setFlipSided:tt,setCullFace:yt,setLineWidth:gt,setPolygonOffset:de,setScissorTest:st,activeTexture:Lt,bindTexture:R,unbindTexture:E,compressedTexImage2D:ee,texImage2D:oe,texImage3D:_e,updateUBOMapping:ke,uniformBlockBinding:Qe,texStorage2D:Ve,texStorage3D:T,texSubImage2D:ce,texSubImage3D:ge,compressedTexSubImage2D:Me,scissor:Se,viewport:z,reset:_t}}function n1(i,e,t,n,r,s,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,f=r.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let h;const p=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(R,E){return _?new OffscreenCanvas(R,E):ss("canvas")}function y(R,E,ee,ce){let ge=1;if((R.width>ce||R.height>ce)&&(ge=ce/Math.max(R.width,R.height)),ge<1||E===!0)if(typeof HTMLImageElement<"u"&&R instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&R instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&R instanceof ImageBitmap){const Me=E?Ia:Math.floor,Ve=Me(ge*R.width),T=Me(ge*R.height);h===void 0&&(h=w(Ve,T));const oe=ee?w(Ve,T):h;return oe.width=Ve,oe.height=T,oe.getContext("2d").drawImage(R,0,0,Ve,T),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+R.width+"x"+R.height+") to ("+Ve+"x"+T+")."),oe}else return"data"in R&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+R.width+"x"+R.height+")."),R;return R}function b(R){return Yl(R.width)&&Yl(R.height)}function x(R){return a?!1:R.wrapS!==kn||R.wrapT!==kn||R.minFilter!==an&&R.minFilter!==bn}function M(R,E){return R.generateMipmaps&&E&&R.minFilter!==an&&R.minFilter!==bn}function L(R){i.generateMipmap(R)}function v(R,E,ee,ce,ge=!1){if(a===!1)return E;if(R!==null){if(i[R]!==void 0)return i[R];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+R+"'")}let Me=E;return E===6403&&(ee===5126&&(Me=33326),ee===5131&&(Me=33325),ee===5121&&(Me=33321)),E===33319&&(ee===5126&&(Me=33328),ee===5131&&(Me=33327),ee===5121&&(Me=33323)),E===6408&&(ee===5126&&(Me=34836),ee===5131&&(Me=34842),ee===5121&&(Me=ce===Rt&&ge===!1?35907:32856),ee===32819&&(Me=32854),ee===32820&&(Me=32855)),(Me===33325||Me===33326||Me===33327||Me===33328||Me===34842||Me===34836)&&e.get("EXT_color_buffer_float"),Me}function A(R,E,ee){return M(R,ee)===!0||R.isFramebufferTexture&&R.minFilter!==an&&R.minFilter!==bn?Math.log2(Math.max(E.width,E.height))+1:R.mipmaps!==void 0&&R.mipmaps.length>0?R.mipmaps.length:R.isCompressedTexture&&Array.isArray(R.image)?E.mipmaps.length:1}function S(R){return R===an||R===xl||R===Ml?9728:9729}function I(R){const E=R.target;E.removeEventListener("dispose",I),D(E),E.isVideoTexture&&g.delete(E)}function N(R){const E=R.target;E.removeEventListener("dispose",N),k(E)}function D(R){const E=n.get(R);if(E.__webglInit===void 0)return;const ee=R.source,ce=p.get(ee);if(ce){const ge=ce[E.__cacheKey];ge.usedTimes--,ge.usedTimes===0&&O(R),Object.keys(ce).length===0&&p.delete(ee)}n.remove(R)}function O(R){const E=n.get(R);i.deleteTexture(E.__webglTexture);const ee=R.source,ce=p.get(ee);delete ce[E.__cacheKey],o.memory.textures--}function k(R){const E=R.texture,ee=n.get(R),ce=n.get(E);if(ce.__webglTexture!==void 0&&(i.deleteTexture(ce.__webglTexture),o.memory.textures--),R.depthTexture&&R.depthTexture.dispose(),R.isWebGLCubeRenderTarget)for(let ge=0;ge<6;ge++)i.deleteFramebuffer(ee.__webglFramebuffer[ge]),ee.__webglDepthbuffer&&i.deleteRenderbuffer(ee.__webglDepthbuffer[ge]);else{if(i.deleteFramebuffer(ee.__webglFramebuffer),ee.__webglDepthbuffer&&i.deleteRenderbuffer(ee.__webglDepthbuffer),ee.__webglMultisampledFramebuffer&&i.deleteFramebuffer(ee.__webglMultisampledFramebuffer),ee.__webglColorRenderbuffer)for(let ge=0;ge<ee.__webglColorRenderbuffer.length;ge++)ee.__webglColorRenderbuffer[ge]&&i.deleteRenderbuffer(ee.__webglColorRenderbuffer[ge]);ee.__webglDepthRenderbuffer&&i.deleteRenderbuffer(ee.__webglDepthRenderbuffer)}if(R.isWebGLMultipleRenderTargets)for(let ge=0,Me=E.length;ge<Me;ge++){const Ve=n.get(E[ge]);Ve.__webglTexture&&(i.deleteTexture(Ve.__webglTexture),o.memory.textures--),n.remove(E[ge])}n.remove(E),n.remove(R)}let P=0;function K(){P=0}function Z(){const R=P;return R>=l&&console.warn("THREE.WebGLTextures: Trying to use "+R+" texture units while this GPU supports only "+l),P+=1,R}function j(R){const E=[];return E.push(R.wrapS),E.push(R.wrapT),E.push(R.magFilter),E.push(R.minFilter),E.push(R.anisotropy),E.push(R.internalFormat),E.push(R.format),E.push(R.type),E.push(R.generateMipmaps),E.push(R.premultiplyAlpha),E.push(R.flipY),E.push(R.unpackAlignment),E.push(R.encoding),E.join()}function V(R,E){const ee=n.get(R);if(R.isVideoTexture&&st(R),R.isRenderTargetTexture===!1&&R.version>0&&ee.__version!==R.version){const ce=R.image;if(ce===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ce.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Le(ee,R,E);return}}t.activeTexture(33984+E),t.bindTexture(3553,ee.__webglTexture)}function X(R,E){const ee=n.get(R);if(R.version>0&&ee.__version!==R.version){Le(ee,R,E);return}t.activeTexture(33984+E),t.bindTexture(35866,ee.__webglTexture)}function re(R,E){const ee=n.get(R);if(R.version>0&&ee.__version!==R.version){Le(ee,R,E);return}t.activeTexture(33984+E),t.bindTexture(32879,ee.__webglTexture)}function ae(R,E){const ee=n.get(R);if(R.version>0&&ee.__version!==R.version){pe(ee,R,E);return}t.activeTexture(33984+E),t.bindTexture(34067,ee.__webglTexture)}const be={[Da]:10497,[kn]:33071,[Pa]:33648},Ae={[an]:9728,[xl]:9984,[Ml]:9986,[bn]:9729,[Zh]:9985,[bo]:9987};function H(R,E,ee){if(ee?(i.texParameteri(R,10242,be[E.wrapS]),i.texParameteri(R,10243,be[E.wrapT]),(R===32879||R===35866)&&i.texParameteri(R,32882,be[E.wrapR]),i.texParameteri(R,10240,Ae[E.magFilter]),i.texParameteri(R,10241,Ae[E.minFilter])):(i.texParameteri(R,10242,33071),i.texParameteri(R,10243,33071),(R===32879||R===35866)&&i.texParameteri(R,32882,33071),(E.wrapS!==kn||E.wrapT!==kn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),i.texParameteri(R,10240,S(E.magFilter)),i.texParameteri(R,10241,S(E.minFilter)),E.minFilter!==an&&E.minFilter!==bn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ce=e.get("EXT_texture_filter_anisotropic");if(E.type===qi&&e.has("OES_texture_float_linear")===!1||a===!1&&E.type===rs&&e.has("OES_texture_half_float_linear")===!1)return;(E.anisotropy>1||n.get(E).__currentAnisotropy)&&(i.texParameterf(R,ce.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(E.anisotropy,r.getMaxAnisotropy())),n.get(E).__currentAnisotropy=E.anisotropy)}}function me(R,E){let ee=!1;R.__webglInit===void 0&&(R.__webglInit=!0,E.addEventListener("dispose",I));const ce=E.source;let ge=p.get(ce);ge===void 0&&(ge={},p.set(ce,ge));const Me=j(E);if(Me!==R.__cacheKey){ge[Me]===void 0&&(ge[Me]={texture:i.createTexture(),usedTimes:0},o.memory.textures++,ee=!0),ge[Me].usedTimes++;const Ve=ge[R.__cacheKey];Ve!==void 0&&(ge[R.__cacheKey].usedTimes--,Ve.usedTimes===0&&O(E)),R.__cacheKey=Me,R.__webglTexture=ge[Me].texture}return ee}function Le(R,E,ee){let ce=3553;E.isDataArrayTexture&&(ce=35866),E.isData3DTexture&&(ce=32879);const ge=me(R,E),Me=E.source;if(t.activeTexture(33984+ee),t.bindTexture(ce,R.__webglTexture),Me.version!==Me.__currentVersion||ge===!0){i.pixelStorei(37440,E.flipY),i.pixelStorei(37441,E.premultiplyAlpha),i.pixelStorei(3317,E.unpackAlignment),i.pixelStorei(37443,0);const Ve=x(E)&&b(E.image)===!1;let T=y(E.image,Ve,!1,u);T=Lt(E,T);const oe=b(T)||a,_e=s.convert(E.format,E.encoding);let Se=s.convert(E.type),z=v(E.internalFormat,_e,Se,E.encoding,E.isVideoTexture);H(ce,E,oe);let ke;const Qe=E.mipmaps,_t=a&&E.isVideoTexture!==!0,G=Me.__currentVersion===void 0||ge===!0,we=A(E,T,oe);if(E.isDepthTexture)z=6402,a?E.type===qi?z=36012:E.type===ji?z=33190:E.type===Ar?z=35056:z=33189:E.type===qi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),E.format===Zi&&z===6402&&E.type!==jf&&E.type!==ji&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),E.type=ji,Se=s.convert(E.type)),E.format===kr&&z===6402&&(z=34041,E.type!==Ar&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),E.type=Ar,Se=s.convert(E.type))),G&&(_t?t.texStorage2D(3553,1,z,T.width,T.height):t.texImage2D(3553,0,z,T.width,T.height,0,_e,Se,null));else if(E.isDataTexture)if(Qe.length>0&&oe){_t&&G&&t.texStorage2D(3553,we,z,Qe[0].width,Qe[0].height);for(let te=0,Pe=Qe.length;te<Pe;te++)ke=Qe[te],_t?t.texSubImage2D(3553,te,0,0,ke.width,ke.height,_e,Se,ke.data):t.texImage2D(3553,te,z,ke.width,ke.height,0,_e,Se,ke.data);E.generateMipmaps=!1}else _t?(G&&t.texStorage2D(3553,we,z,T.width,T.height),t.texSubImage2D(3553,0,0,0,T.width,T.height,_e,Se,T.data)):t.texImage2D(3553,0,z,T.width,T.height,0,_e,Se,T.data);else if(E.isCompressedTexture){_t&&G&&t.texStorage2D(3553,we,z,Qe[0].width,Qe[0].height);for(let te=0,Pe=Qe.length;te<Pe;te++)ke=Qe[te],E.format!==Gn?_e!==null?_t?t.compressedTexSubImage2D(3553,te,0,0,ke.width,ke.height,_e,ke.data):t.compressedTexImage2D(3553,te,z,ke.width,ke.height,0,ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_t?t.texSubImage2D(3553,te,0,0,ke.width,ke.height,_e,Se,ke.data):t.texImage2D(3553,te,z,ke.width,ke.height,0,_e,Se,ke.data)}else if(E.isDataArrayTexture)_t?(G&&t.texStorage3D(35866,we,z,T.width,T.height,T.depth),t.texSubImage3D(35866,0,0,0,0,T.width,T.height,T.depth,_e,Se,T.data)):t.texImage3D(35866,0,z,T.width,T.height,T.depth,0,_e,Se,T.data);else if(E.isData3DTexture)_t?(G&&t.texStorage3D(32879,we,z,T.width,T.height,T.depth),t.texSubImage3D(32879,0,0,0,0,T.width,T.height,T.depth,_e,Se,T.data)):t.texImage3D(32879,0,z,T.width,T.height,T.depth,0,_e,Se,T.data);else if(E.isFramebufferTexture){if(G)if(_t)t.texStorage2D(3553,we,z,T.width,T.height);else{let te=T.width,Pe=T.height;for(let Ee=0;Ee<we;Ee++)t.texImage2D(3553,Ee,z,te,Pe,0,_e,Se,null),te>>=1,Pe>>=1}}else if(Qe.length>0&&oe){_t&&G&&t.texStorage2D(3553,we,z,Qe[0].width,Qe[0].height);for(let te=0,Pe=Qe.length;te<Pe;te++)ke=Qe[te],_t?t.texSubImage2D(3553,te,0,0,_e,Se,ke):t.texImage2D(3553,te,z,_e,Se,ke);E.generateMipmaps=!1}else _t?(G&&t.texStorage2D(3553,we,z,T.width,T.height),t.texSubImage2D(3553,0,0,0,_e,Se,T)):t.texImage2D(3553,0,z,_e,Se,T);M(E,oe)&&L(ce),Me.__currentVersion=Me.version,E.onUpdate&&E.onUpdate(E)}R.__version=E.version}function pe(R,E,ee){if(E.image.length!==6)return;const ce=me(R,E),ge=E.source;if(t.activeTexture(33984+ee),t.bindTexture(34067,R.__webglTexture),ge.version!==ge.__currentVersion||ce===!0){i.pixelStorei(37440,E.flipY),i.pixelStorei(37441,E.premultiplyAlpha),i.pixelStorei(3317,E.unpackAlignment),i.pixelStorei(37443,0);const Me=E.isCompressedTexture||E.image[0].isCompressedTexture,Ve=E.image[0]&&E.image[0].isDataTexture,T=[];for(let te=0;te<6;te++)!Me&&!Ve?T[te]=y(E.image[te],!1,!0,c):T[te]=Ve?E.image[te].image:E.image[te],T[te]=Lt(E,T[te]);const oe=T[0],_e=b(oe)||a,Se=s.convert(E.format,E.encoding),z=s.convert(E.type),ke=v(E.internalFormat,Se,z,E.encoding),Qe=a&&E.isVideoTexture!==!0,_t=ge.__currentVersion===void 0||ce===!0;let G=A(E,oe,_e);H(34067,E,_e);let we;if(Me){Qe&&_t&&t.texStorage2D(34067,G,ke,oe.width,oe.height);for(let te=0;te<6;te++){we=T[te].mipmaps;for(let Pe=0;Pe<we.length;Pe++){const Ee=we[Pe];E.format!==Gn?Se!==null?Qe?t.compressedTexSubImage2D(34069+te,Pe,0,0,Ee.width,Ee.height,Se,Ee.data):t.compressedTexImage2D(34069+te,Pe,ke,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Qe?t.texSubImage2D(34069+te,Pe,0,0,Ee.width,Ee.height,Se,z,Ee.data):t.texImage2D(34069+te,Pe,ke,Ee.width,Ee.height,0,Se,z,Ee.data)}}}else{we=E.mipmaps,Qe&&_t&&(we.length>0&&G++,t.texStorage2D(34067,G,ke,T[0].width,T[0].height));for(let te=0;te<6;te++)if(Ve){Qe?t.texSubImage2D(34069+te,0,0,0,T[te].width,T[te].height,Se,z,T[te].data):t.texImage2D(34069+te,0,ke,T[te].width,T[te].height,0,Se,z,T[te].data);for(let Pe=0;Pe<we.length;Pe++){const rt=we[Pe].image[te].image;Qe?t.texSubImage2D(34069+te,Pe+1,0,0,rt.width,rt.height,Se,z,rt.data):t.texImage2D(34069+te,Pe+1,ke,rt.width,rt.height,0,Se,z,rt.data)}}else{Qe?t.texSubImage2D(34069+te,0,0,0,Se,z,T[te]):t.texImage2D(34069+te,0,ke,Se,z,T[te]);for(let Pe=0;Pe<we.length;Pe++){const Ee=we[Pe];Qe?t.texSubImage2D(34069+te,Pe+1,0,0,Se,z,Ee.image[te]):t.texImage2D(34069+te,Pe+1,ke,Se,z,Ee.image[te])}}}M(E,_e)&&L(34067),ge.__currentVersion=ge.version,E.onUpdate&&E.onUpdate(E)}R.__version=E.version}function ye(R,E,ee,ce,ge){const Me=s.convert(ee.format,ee.encoding),Ve=s.convert(ee.type),T=v(ee.internalFormat,Me,Ve,ee.encoding);n.get(E).__hasExternalTextures||(ge===32879||ge===35866?t.texImage3D(ge,0,T,E.width,E.height,E.depth,0,Me,Ve,null):t.texImage2D(ge,0,T,E.width,E.height,0,Me,Ve,null)),t.bindFramebuffer(36160,R),de(E)?d.framebufferTexture2DMultisampleEXT(36160,ce,ge,n.get(ee).__webglTexture,0,gt(E)):i.framebufferTexture2D(36160,ce,ge,n.get(ee).__webglTexture,0),t.bindFramebuffer(36160,null)}function Xe(R,E,ee){if(i.bindRenderbuffer(36161,R),E.depthBuffer&&!E.stencilBuffer){let ce=33189;if(ee||de(E)){const ge=E.depthTexture;ge&&ge.isDepthTexture&&(ge.type===qi?ce=36012:ge.type===ji&&(ce=33190));const Me=gt(E);de(E)?d.renderbufferStorageMultisampleEXT(36161,Me,ce,E.width,E.height):i.renderbufferStorageMultisample(36161,Me,ce,E.width,E.height)}else i.renderbufferStorage(36161,ce,E.width,E.height);i.framebufferRenderbuffer(36160,36096,36161,R)}else if(E.depthBuffer&&E.stencilBuffer){const ce=gt(E);ee&&de(E)===!1?i.renderbufferStorageMultisample(36161,ce,35056,E.width,E.height):de(E)?d.renderbufferStorageMultisampleEXT(36161,ce,35056,E.width,E.height):i.renderbufferStorage(36161,34041,E.width,E.height),i.framebufferRenderbuffer(36160,33306,36161,R)}else{const ce=E.isWebGLMultipleRenderTargets===!0?E.texture:[E.texture];for(let ge=0;ge<ce.length;ge++){const Me=ce[ge],Ve=s.convert(Me.format,Me.encoding),T=s.convert(Me.type),oe=v(Me.internalFormat,Ve,T,Me.encoding),_e=gt(E);ee&&de(E)===!1?i.renderbufferStorageMultisample(36161,_e,oe,E.width,E.height):de(E)?d.renderbufferStorageMultisampleEXT(36161,_e,oe,E.width,E.height):i.renderbufferStorage(36161,oe,E.width,E.height)}}i.bindRenderbuffer(36161,null)}function Q(R,E){if(E&&E.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,R),!(E.depthTexture&&E.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(E.depthTexture).__webglTexture||E.depthTexture.image.width!==E.width||E.depthTexture.image.height!==E.height)&&(E.depthTexture.image.width=E.width,E.depthTexture.image.height=E.height,E.depthTexture.needsUpdate=!0),V(E.depthTexture,0);const ce=n.get(E.depthTexture).__webglTexture,ge=gt(E);if(E.depthTexture.format===Zi)de(E)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,ce,0,ge):i.framebufferTexture2D(36160,36096,3553,ce,0);else if(E.depthTexture.format===kr)de(E)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,ce,0,ge):i.framebufferTexture2D(36160,33306,3553,ce,0);else throw new Error("Unknown depthTexture format")}function fe(R){const E=n.get(R),ee=R.isWebGLCubeRenderTarget===!0;if(R.depthTexture&&!E.__autoAllocateDepthBuffer){if(ee)throw new Error("target.depthTexture not supported in Cube render targets");Q(E.__webglFramebuffer,R)}else if(ee){E.__webglDepthbuffer=[];for(let ce=0;ce<6;ce++)t.bindFramebuffer(36160,E.__webglFramebuffer[ce]),E.__webglDepthbuffer[ce]=i.createRenderbuffer(),Xe(E.__webglDepthbuffer[ce],R,!1)}else t.bindFramebuffer(36160,E.__webglFramebuffer),E.__webglDepthbuffer=i.createRenderbuffer(),Xe(E.__webglDepthbuffer,R,!1);t.bindFramebuffer(36160,null)}function $(R,E,ee){const ce=n.get(R);E!==void 0&&ye(ce.__webglFramebuffer,R,R.texture,36064,3553),ee!==void 0&&fe(R)}function Ie(R){const E=R.texture,ee=n.get(R),ce=n.get(E);R.addEventListener("dispose",N),R.isWebGLMultipleRenderTargets!==!0&&(ce.__webglTexture===void 0&&(ce.__webglTexture=i.createTexture()),ce.__version=E.version,o.memory.textures++);const ge=R.isWebGLCubeRenderTarget===!0,Me=R.isWebGLMultipleRenderTargets===!0,Ve=b(R)||a;if(ge){ee.__webglFramebuffer=[];for(let T=0;T<6;T++)ee.__webglFramebuffer[T]=i.createFramebuffer()}else{if(ee.__webglFramebuffer=i.createFramebuffer(),Me)if(r.drawBuffers){const T=R.texture;for(let oe=0,_e=T.length;oe<_e;oe++){const Se=n.get(T[oe]);Se.__webglTexture===void 0&&(Se.__webglTexture=i.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&R.samples>0&&de(R)===!1){const T=Me?E:[E];ee.__webglMultisampledFramebuffer=i.createFramebuffer(),ee.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,ee.__webglMultisampledFramebuffer);for(let oe=0;oe<T.length;oe++){const _e=T[oe];ee.__webglColorRenderbuffer[oe]=i.createRenderbuffer(),i.bindRenderbuffer(36161,ee.__webglColorRenderbuffer[oe]);const Se=s.convert(_e.format,_e.encoding),z=s.convert(_e.type),ke=v(_e.internalFormat,Se,z,_e.encoding),Qe=gt(R);i.renderbufferStorageMultisample(36161,Qe,ke,R.width,R.height),i.framebufferRenderbuffer(36160,36064+oe,36161,ee.__webglColorRenderbuffer[oe])}i.bindRenderbuffer(36161,null),R.depthBuffer&&(ee.__webglDepthRenderbuffer=i.createRenderbuffer(),Xe(ee.__webglDepthRenderbuffer,R,!0)),t.bindFramebuffer(36160,null)}}if(ge){t.bindTexture(34067,ce.__webglTexture),H(34067,E,Ve);for(let T=0;T<6;T++)ye(ee.__webglFramebuffer[T],R,E,36064,34069+T);M(E,Ve)&&L(34067),t.unbindTexture()}else if(Me){const T=R.texture;for(let oe=0,_e=T.length;oe<_e;oe++){const Se=T[oe],z=n.get(Se);t.bindTexture(3553,z.__webglTexture),H(3553,Se,Ve),ye(ee.__webglFramebuffer,R,Se,36064+oe,3553),M(Se,Ve)&&L(3553)}t.unbindTexture()}else{let T=3553;(R.isWebGL3DRenderTarget||R.isWebGLArrayRenderTarget)&&(a?T=R.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(T,ce.__webglTexture),H(T,E,Ve),ye(ee.__webglFramebuffer,R,E,36064,T),M(E,Ve)&&L(T),t.unbindTexture()}R.depthBuffer&&fe(R)}function tt(R){const E=b(R)||a,ee=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let ce=0,ge=ee.length;ce<ge;ce++){const Me=ee[ce];if(M(Me,E)){const Ve=R.isWebGLCubeRenderTarget?34067:3553,T=n.get(Me).__webglTexture;t.bindTexture(Ve,T),L(Ve),t.unbindTexture()}}}function yt(R){if(a&&R.samples>0&&de(R)===!1){const E=R.isWebGLMultipleRenderTargets?R.texture:[R.texture],ee=R.width,ce=R.height;let ge=16384;const Me=[],Ve=R.stencilBuffer?33306:36096,T=n.get(R),oe=R.isWebGLMultipleRenderTargets===!0;if(oe)for(let _e=0;_e<E.length;_e++)t.bindFramebuffer(36160,T.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+_e,36161,null),t.bindFramebuffer(36160,T.__webglFramebuffer),i.framebufferTexture2D(36009,36064+_e,3553,null,0);t.bindFramebuffer(36008,T.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,T.__webglFramebuffer);for(let _e=0;_e<E.length;_e++){Me.push(36064+_e),R.depthBuffer&&Me.push(Ve);const Se=T.__ignoreDepthValues!==void 0?T.__ignoreDepthValues:!1;if(Se===!1&&(R.depthBuffer&&(ge|=256),R.stencilBuffer&&(ge|=1024)),oe&&i.framebufferRenderbuffer(36008,36064,36161,T.__webglColorRenderbuffer[_e]),Se===!0&&(i.invalidateFramebuffer(36008,[Ve]),i.invalidateFramebuffer(36009,[Ve])),oe){const z=n.get(E[_e]).__webglTexture;i.framebufferTexture2D(36009,36064,3553,z,0)}i.blitFramebuffer(0,0,ee,ce,0,0,ee,ce,ge,9728),m&&i.invalidateFramebuffer(36008,Me)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),oe)for(let _e=0;_e<E.length;_e++){t.bindFramebuffer(36160,T.__webglMultisampledFramebuffer),i.framebufferRenderbuffer(36160,36064+_e,36161,T.__webglColorRenderbuffer[_e]);const Se=n.get(E[_e]).__webglTexture;t.bindFramebuffer(36160,T.__webglFramebuffer),i.framebufferTexture2D(36009,36064+_e,3553,Se,0)}t.bindFramebuffer(36009,T.__webglMultisampledFramebuffer)}}function gt(R){return Math.min(f,R.samples)}function de(R){const E=n.get(R);return a&&R.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&E.__useRenderToTexture!==!1}function st(R){const E=o.render.frame;g.get(R)!==E&&(g.set(R,E),R.update())}function Lt(R,E){const ee=R.encoding,ce=R.format,ge=R.type;return R.isCompressedTexture===!0||R.isVideoTexture===!0||R.format===Ra||ee!==Li&&(ee===Rt?a===!1?e.has("EXT_sRGB")===!0&&ce===Gn?(R.format=Ra,R.minFilter=bn,R.generateMipmaps=!1):E=Zf.sRGBToLinear(E):(ce!==Gn||ge!==Ji)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ee)),E}this.allocateTextureUnit=Z,this.resetTextureUnits=K,this.setTexture2D=V,this.setTexture2DArray=X,this.setTexture3D=re,this.setTextureCube=ae,this.rebindTextures=$,this.setupRenderTarget=Ie,this.updateRenderTargetMipmap=tt,this.updateMultisampleRenderTarget=yt,this.setupDepthRenderbuffer=fe,this.setupFrameBufferTexture=ye,this.useMultisampledRTT=de}function i1(i,e,t){const n=t.isWebGL2;function r(s,o=null){let a;if(s===Ji)return 5121;if(s===$h)return 32819;if(s===ep)return 32820;if(s===Kh)return 5120;if(s===Jh)return 5122;if(s===jf)return 5123;if(s===Qh)return 5124;if(s===ji)return 5125;if(s===qi)return 5126;if(s===rs)return n?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===tp)return 6406;if(s===Gn)return 6408;if(s===ip)return 6409;if(s===rp)return 6410;if(s===Zi)return 6402;if(s===kr)return 34041;if(s===sp)return 6403;if(s===np)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(s===Ra)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===op)return 36244;if(s===ap)return 33319;if(s===lp)return 33320;if(s===cp)return 36249;if(s===Fo||s===zo||s===Uo||s===Go)if(o===Rt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Fo)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===zo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Uo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===Go)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Fo)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===zo)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Uo)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===Go)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Sl||s===Al||s===El||s===Tl)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===Sl)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Al)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===El)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Tl)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===up)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===Cl||s===Ll)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===Cl)return o===Rt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Ll)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===Dl||s===Pl||s===Rl||s===Il||s===kl||s===Ol||s===Nl||s===Fl||s===zl||s===Ul||s===Gl||s===Bl||s===Vl||s===Hl)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===Dl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===Pl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===Rl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Il)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===kl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Ol)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Nl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Fl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===zl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Ul)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Gl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Bl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Vl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Hl)return o===Rt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Wl)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Wl)return o===Rt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return s===Ar?n?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):i[s]!==void 0?i[s]:null}return{convert:r}}class r1 extends Qt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class es extends xt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const s1={type:"move"};class pa{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new es,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new es,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new es,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let r=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const h of e.hand.values()){const p=t.getJointPose(h,n);if(c.joints[h.jointName]===void 0){const w=new es;w.matrixAutoUpdate=!1,w.visible=!1,c.joints[h.jointName]=w,c.add(w)}const _=c.joints[h.jointName];p!==null&&(_.matrix.fromArray(p.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.jointRadius=p.radius),_.visible=p!==null}const u=c.joints["index-finger-tip"],f=c.joints["thumb-tip"],d=u.position.distanceTo(f.position),m=.02,g=.005;c.inputState.pinching&&d>m+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=m-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,n),r===null&&s!==null&&(r=s),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(s1)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}}class o1 extends An{constructor(e,t,n,r,s,o,a,l,c,u){if(u=u!==void 0?u:Zi,u!==Zi&&u!==kr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Zi&&(n=ji),n===void 0&&u===kr&&(n=Ar),super(null,r,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:an,this.minFilter=l!==void 0?l:an,this.flipY=!1,this.generateMipmaps=!1}}class a1 extends Qi{constructor(e,t){super();const n=this;let r=null,s=1,o=null,a="local-floor",l=null,c=null,u=null,f=null,d=null,m=null;const g=t.getContextAttributes();let h=null,p=null;const _=[],w=[],y=new Qt;y.layers.enable(1),y.viewport=new Xt;const b=new Qt;b.layers.enable(2),b.viewport=new Xt;const x=[y,b],M=new r1;M.layers.enable(1),M.layers.enable(2);let L=null,v=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let V=_[j];return V===void 0&&(V=new pa,_[j]=V),V.getTargetRaySpace()},this.getControllerGrip=function(j){let V=_[j];return V===void 0&&(V=new pa,_[j]=V),V.getGripSpace()},this.getHand=function(j){let V=_[j];return V===void 0&&(V=new pa,_[j]=V),V.getHandSpace()};function A(j){const V=w.indexOf(j.inputSource);if(V===-1)return;const X=_[V];X!==void 0&&X.dispatchEvent({type:j.type,data:j.inputSource})}function S(){r.removeEventListener("select",A),r.removeEventListener("selectstart",A),r.removeEventListener("selectend",A),r.removeEventListener("squeeze",A),r.removeEventListener("squeezestart",A),r.removeEventListener("squeezeend",A),r.removeEventListener("end",S),r.removeEventListener("inputsourceschange",I);for(let j=0;j<_.length;j++){const V=w[j];V!==null&&(w[j]=null,_[j].disconnect(V))}L=null,v=null,e.setRenderTarget(h),d=null,f=null,u=null,r=null,p=null,Z.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){a=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(j){l=j},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){if(h=e.getRenderTarget(),r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",S),r.addEventListener("inputsourceschange",I),g.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const V={antialias:r.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};d=new XRWebGLLayer(r,t,V),r.updateRenderState({baseLayer:d}),p=new Di(d.framebufferWidth,d.framebufferHeight,{format:Gn,type:Ji,encoding:e.outputEncoding,stencilBuffer:g.stencil})}else{let V=null,X=null,re=null;g.depth&&(re=g.stencil?35056:33190,V=g.stencil?kr:Zi,X=g.stencil?Ar:ji);const ae={colorFormat:32856,depthFormat:re,scaleFactor:s};u=new XRWebGLBinding(r,t),f=u.createProjectionLayer(ae),r.updateRenderState({layers:[f]}),p=new Di(f.textureWidth,f.textureHeight,{format:Gn,type:Ji,depthTexture:new o1(f.textureWidth,f.textureHeight,X,void 0,void 0,void 0,void 0,void 0,void 0,V),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const be=e.properties.get(p);be.__ignoreDepthValues=f.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(a),Z.setContext(r),Z.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function I(j){for(let V=0;V<j.removed.length;V++){const X=j.removed[V],re=w.indexOf(X);re>=0&&(w[re]=null,_[re].dispatchEvent({type:"disconnected",data:X}))}for(let V=0;V<j.added.length;V++){const X=j.added[V];let re=w.indexOf(X);if(re===-1){for(let be=0;be<_.length;be++)if(be>=w.length){w.push(X),re=be;break}else if(w[be]===null){w[be]=X,re=be;break}if(re===-1)break}const ae=_[re];ae&&ae.dispatchEvent({type:"connected",data:X})}}const N=new B,D=new B;function O(j,V,X){N.setFromMatrixPosition(V.matrixWorld),D.setFromMatrixPosition(X.matrixWorld);const re=N.distanceTo(D),ae=V.projectionMatrix.elements,be=X.projectionMatrix.elements,Ae=ae[14]/(ae[10]-1),H=ae[14]/(ae[10]+1),me=(ae[9]+1)/ae[5],Le=(ae[9]-1)/ae[5],pe=(ae[8]-1)/ae[0],ye=(be[8]+1)/be[0],Xe=Ae*pe,Q=Ae*ye,fe=re/(-pe+ye),$=fe*-pe;V.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX($),j.translateZ(fe),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const Ie=Ae+fe,tt=H+fe,yt=Xe-$,gt=Q+(re-$),de=me*H/tt*Ie,st=Le*H/tt*Ie;j.projectionMatrix.makePerspective(yt,gt,de,st,Ie,tt)}function k(j,V){V===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(V.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;M.near=b.near=y.near=j.near,M.far=b.far=y.far=j.far,(L!==M.near||v!==M.far)&&(r.updateRenderState({depthNear:M.near,depthFar:M.far}),L=M.near,v=M.far);const V=j.parent,X=M.cameras;k(M,V);for(let ae=0;ae<X.length;ae++)k(X[ae],V);M.matrixWorld.decompose(M.position,M.quaternion,M.scale),j.matrix.copy(M.matrix),j.matrix.decompose(j.position,j.quaternion,j.scale);const re=j.children;for(let ae=0,be=re.length;ae<be;ae++)re[ae].updateMatrixWorld(!0);X.length===2?O(M,y,b):M.projectionMatrix.copy(y.projectionMatrix)},this.getCamera=function(){return M},this.getFoveation=function(){if(f!==null)return f.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(j){f!==null&&(f.fixedFoveation=j),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=j)};let P=null;function K(j,V){if(c=V.getViewerPose(l||o),m=V,c!==null){const X=c.views;d!==null&&(e.setRenderTargetFramebuffer(p,d.framebuffer),e.setRenderTarget(p));let re=!1;X.length!==M.cameras.length&&(M.cameras.length=0,re=!0);for(let ae=0;ae<X.length;ae++){const be=X[ae];let Ae=null;if(d!==null)Ae=d.getViewport(be);else{const me=u.getViewSubImage(f,be);Ae=me.viewport,ae===0&&(e.setRenderTargetTextures(p,me.colorTexture,f.ignoreDepthValues?void 0:me.depthStencilTexture),e.setRenderTarget(p))}let H=x[ae];H===void 0&&(H=new Qt,H.layers.enable(ae),H.viewport=new Xt,x[ae]=H),H.matrix.fromArray(be.transform.matrix),H.projectionMatrix.fromArray(be.projectionMatrix),H.viewport.set(Ae.x,Ae.y,Ae.width,Ae.height),ae===0&&M.matrix.copy(H.matrix),re===!0&&M.cameras.push(H)}}for(let X=0;X<_.length;X++){const re=w[X],ae=_[X];re!==null&&ae!==void 0&&ae.update(re,V,l||o)}P&&P(j,V),m=null}const Z=new nd;Z.setAnimationLoop(K),this.setAnimationLoop=function(j){P=j},this.dispose=function(){}}}function l1(i,e){function t(h,p){h.fogColor.value.copy(p.color),p.isFog?(h.fogNear.value=p.near,h.fogFar.value=p.far):p.isFogExp2&&(h.fogDensity.value=p.density)}function n(h,p,_,w,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(h,p):p.isMeshToonMaterial?(r(h,p),u(h,p)):p.isMeshPhongMaterial?(r(h,p),c(h,p)):p.isMeshStandardMaterial?(r(h,p),f(h,p),p.isMeshPhysicalMaterial&&d(h,p,y)):p.isMeshMatcapMaterial?(r(h,p),m(h,p)):p.isMeshDepthMaterial?r(h,p):p.isMeshDistanceMaterial?(r(h,p),g(h,p)):p.isMeshNormalMaterial?r(h,p):p.isLineBasicMaterial?(s(h,p),p.isLineDashedMaterial&&o(h,p)):p.isPointsMaterial?a(h,p,_,w):p.isSpriteMaterial?l(h,p):p.isShadowMaterial?(h.color.value.copy(p.color),h.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(h,p){h.opacity.value=p.opacity,p.color&&h.diffuse.value.copy(p.color),p.emissive&&h.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.bumpMap&&(h.bumpMap.value=p.bumpMap,h.bumpScale.value=p.bumpScale,p.side===Mn&&(h.bumpScale.value*=-1)),p.displacementMap&&(h.displacementMap.value=p.displacementMap,h.displacementScale.value=p.displacementScale,h.displacementBias.value=p.displacementBias),p.emissiveMap&&(h.emissiveMap.value=p.emissiveMap),p.normalMap&&(h.normalMap.value=p.normalMap,h.normalScale.value.copy(p.normalScale),p.side===Mn&&h.normalScale.value.negate()),p.specularMap&&(h.specularMap.value=p.specularMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);const _=e.get(p).envMap;if(_&&(h.envMap.value=_,h.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,h.reflectivity.value=p.reflectivity,h.ior.value=p.ior,h.refractionRatio.value=p.refractionRatio),p.lightMap){h.lightMap.value=p.lightMap;const b=i.physicallyCorrectLights!==!0?Math.PI:1;h.lightMapIntensity.value=p.lightMapIntensity*b}p.aoMap&&(h.aoMap.value=p.aoMap,h.aoMapIntensity.value=p.aoMapIntensity);let w;p.map?w=p.map:p.specularMap?w=p.specularMap:p.displacementMap?w=p.displacementMap:p.normalMap?w=p.normalMap:p.bumpMap?w=p.bumpMap:p.roughnessMap?w=p.roughnessMap:p.metalnessMap?w=p.metalnessMap:p.alphaMap?w=p.alphaMap:p.emissiveMap?w=p.emissiveMap:p.clearcoatMap?w=p.clearcoatMap:p.clearcoatNormalMap?w=p.clearcoatNormalMap:p.clearcoatRoughnessMap?w=p.clearcoatRoughnessMap:p.iridescenceMap?w=p.iridescenceMap:p.iridescenceThicknessMap?w=p.iridescenceThicknessMap:p.specularIntensityMap?w=p.specularIntensityMap:p.specularColorMap?w=p.specularColorMap:p.transmissionMap?w=p.transmissionMap:p.thicknessMap?w=p.thicknessMap:p.sheenColorMap?w=p.sheenColorMap:p.sheenRoughnessMap&&(w=p.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),h.uvTransform.value.copy(w.matrix));let y;p.aoMap?y=p.aoMap:p.lightMap&&(y=p.lightMap),y!==void 0&&(y.isWebGLRenderTarget&&(y=y.texture),y.matrixAutoUpdate===!0&&y.updateMatrix(),h.uv2Transform.value.copy(y.matrix))}function s(h,p){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity}function o(h,p){h.dashSize.value=p.dashSize,h.totalSize.value=p.dashSize+p.gapSize,h.scale.value=p.scale}function a(h,p,_,w){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity,h.size.value=p.size*_,h.scale.value=w*.5,p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);let y;p.map?y=p.map:p.alphaMap&&(y=p.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),h.uvTransform.value.copy(y.matrix))}function l(h,p){h.diffuse.value.copy(p.color),h.opacity.value=p.opacity,h.rotation.value=p.rotation,p.map&&(h.map.value=p.map),p.alphaMap&&(h.alphaMap.value=p.alphaMap),p.alphaTest>0&&(h.alphaTest.value=p.alphaTest);let _;p.map?_=p.map:p.alphaMap&&(_=p.alphaMap),_!==void 0&&(_.matrixAutoUpdate===!0&&_.updateMatrix(),h.uvTransform.value.copy(_.matrix))}function c(h,p){h.specular.value.copy(p.specular),h.shininess.value=Math.max(p.shininess,1e-4)}function u(h,p){p.gradientMap&&(h.gradientMap.value=p.gradientMap)}function f(h,p){h.roughness.value=p.roughness,h.metalness.value=p.metalness,p.roughnessMap&&(h.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(h.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(h.envMapIntensity.value=p.envMapIntensity)}function d(h,p,_){h.ior.value=p.ior,p.sheen>0&&(h.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),h.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(h.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(h.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(h.clearcoat.value=p.clearcoat,h.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(h.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(h.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(h.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),h.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===Mn&&h.clearcoatNormalScale.value.negate())),p.iridescence>0&&(h.iridescence.value=p.iridescence,h.iridescenceIOR.value=p.iridescenceIOR,h.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],h.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(h.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(h.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(h.transmission.value=p.transmission,h.transmissionSamplerMap.value=_.texture,h.transmissionSamplerSize.value.set(_.width,_.height),p.transmissionMap&&(h.transmissionMap.value=p.transmissionMap),h.thickness.value=p.thickness,p.thicknessMap&&(h.thicknessMap.value=p.thicknessMap),h.attenuationDistance.value=p.attenuationDistance,h.attenuationColor.value.copy(p.attenuationColor)),h.specularIntensity.value=p.specularIntensity,h.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(h.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(h.specularColorMap.value=p.specularColorMap)}function m(h,p){p.matcap&&(h.matcap.value=p.matcap)}function g(h,p){h.referencePosition.value.copy(p.referencePosition),h.nearDistance.value=p.nearDistance,h.farDistance.value=p.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function c1(i,e,t,n){let r={},s={},o=[];const a=t.isWebGL2?i.getParameter(35375):0;function l(w,y){const b=y.program;n.uniformBlockBinding(w,b)}function c(w,y){let b=r[w.id];b===void 0&&(g(w),b=u(w),r[w.id]=b,w.addEventListener("dispose",p));const x=y.program;n.updateUBOMapping(w,x);const M=e.render.frame;s[w.id]!==M&&(d(w),s[w.id]=M)}function u(w){const y=f();w.__bindingPointIndex=y;const b=i.createBuffer(),x=w.__size,M=w.usage;return i.bindBuffer(35345,b),i.bufferData(35345,x,M),i.bindBuffer(35345,null),i.bindBufferBase(35345,y,b),b}function f(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(w){const y=r[w.id],b=w.uniforms,x=w.__cache;i.bindBuffer(35345,y);for(let M=0,L=b.length;M<L;M++){const v=b[M];if(m(v,M,x)===!0){const A=v.value,S=v.__offset;typeof A=="number"?(v.__data[0]=A,i.bufferSubData(35345,S,v.__data)):(v.value.isMatrix3?(v.__data[0]=v.value.elements[0],v.__data[1]=v.value.elements[1],v.__data[2]=v.value.elements[2],v.__data[3]=v.value.elements[0],v.__data[4]=v.value.elements[3],v.__data[5]=v.value.elements[4],v.__data[6]=v.value.elements[5],v.__data[7]=v.value.elements[0],v.__data[8]=v.value.elements[6],v.__data[9]=v.value.elements[7],v.__data[10]=v.value.elements[8],v.__data[11]=v.value.elements[0]):A.toArray(v.__data),i.bufferSubData(35345,S,v.__data))}}i.bindBuffer(35345,null)}function m(w,y,b){const x=w.value;if(b[y]===void 0)return typeof x=="number"?b[y]=x:b[y]=x.clone(),!0;if(typeof x=="number"){if(b[y]!==x)return b[y]=x,!0}else{const M=b[y];if(M.equals(x)===!1)return M.copy(x),!0}return!1}function g(w){const y=w.uniforms;let b=0;const x=16;let M=0;for(let L=0,v=y.length;L<v;L++){const A=y[L],S=h(A);if(A.__data=new Float32Array(S.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=b,L>0){M=b%x;const I=x-M;M!==0&&I-S.boundary<0&&(b+=x-M,A.__offset=b)}b+=S.storage}return M=b%x,M>0&&(b+=x-M),w.__size=b,w.__cache={},this}function h(w){const y=w.value,b={boundary:0,storage:0};return typeof y=="number"?(b.boundary=4,b.storage=4):y.isVector2?(b.boundary=8,b.storage=8):y.isVector3||y.isColor?(b.boundary=16,b.storage=12):y.isVector4?(b.boundary=16,b.storage=16):y.isMatrix3?(b.boundary=48,b.storage=48):y.isMatrix4?(b.boundary=64,b.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),b}function p(w){const y=w.target;y.removeEventListener("dispose",p);const b=o.indexOf(y.__bindingPointIndex);o.splice(b,1),i.deleteBuffer(r[y.id]),delete r[y.id],delete s[y.id]}function _(){for(const w in r)i.deleteBuffer(r[w]);o=[],r={},s={}}return{bind:l,update:c,dispose:_}}function u1(){const i=ss("canvas");return i.style.display="block",i}function ad(i={}){this.isWebGLRenderer=!0;const e=i.canvas!==void 0?i.canvas:u1(),t=i.context!==void 0?i.context:null,n=i.depth!==void 0?i.depth:!0,r=i.stencil!==void 0?i.stencil:!0,s=i.antialias!==void 0?i.antialias:!1,o=i.premultipliedAlpha!==void 0?i.premultipliedAlpha:!0,a=i.preserveDrawingBuffer!==void 0?i.preserveDrawingBuffer:!1,l=i.powerPreference!==void 0?i.powerPreference:"default",c=i.failIfMajorPerformanceCaveat!==void 0?i.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=i.alpha!==void 0?i.alpha:!1;let f=null,d=null;const m=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Li,this.physicallyCorrectLights=!1,this.toneMapping=Bn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const h=this;let p=!1,_=0,w=0,y=null,b=-1,x=null;const M=new Xt,L=new Xt;let v=null,A=e.width,S=e.height,I=1,N=null,D=null;const O=new Xt(0,0,A,S),k=new Xt(0,0,A,S);let P=!1;const K=new yo;let Z=!1,j=!1,V=null;const X=new At,re=new je,ae=new B,be={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ae(){return y===null?I:1}let H=t;function me(C,J){for(let ie=0;ie<C.length;ie++){const Y=C[ie],se=e.getContext(Y,J);if(se!==null)return se}return null}try{const C={alpha:!0,depth:n,stencil:r,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${qa}`),e.addEventListener("webglcontextlost",ke,!1),e.addEventListener("webglcontextrestored",Qe,!1),e.addEventListener("webglcontextcreationerror",_t,!1),H===null){const J=["webgl2","webgl","experimental-webgl"];if(h.isWebGL1Renderer===!0&&J.shift(),H=me(J,C),H===null)throw me(J)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}H.getShaderPrecisionFormat===void 0&&(H.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Le,pe,ye,Xe,Q,fe,$,Ie,tt,yt,gt,de,st,Lt,R,E,ee,ce,ge,Me,Ve,T,oe,_e;function Se(){Le=new y_(H),pe=new m_(H,Le,i),Le.init(pe),T=new i1(H,Le,pe),ye=new t1(H,Le,pe),Xe=new S_,Q=new B0,fe=new n1(H,Le,ye,Q,pe,T,Xe),$=new __(h),Ie=new w_(h),tt=new Op(H,pe),oe=new h_(H,Le,tt,pe),yt=new x_(H,tt,Xe,oe),gt=new C_(H,yt,tt,Xe),ge=new T_(H,pe,fe),E=new g_(Q),de=new G0(h,$,Ie,Le,pe,oe,E),st=new l1(h,Q),Lt=new H0,R=new Z0(Le,pe),ce=new d_(h,$,ye,gt,u,o),ee=new e1(h,gt,pe),_e=new c1(H,Xe,pe,ye),Me=new p_(H,Le,Xe,pe),Ve=new M_(H,Le,Xe,pe),Xe.programs=de.programs,h.capabilities=pe,h.extensions=Le,h.properties=Q,h.renderLists=Lt,h.shadowMap=ee,h.state=ye,h.info=Xe}Se();const z=new a1(h,H);this.xr=z,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){const C=Le.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Le.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return I},this.setPixelRatio=function(C){C!==void 0&&(I=C,this.setSize(A,S,!1))},this.getSize=function(C){return C.set(A,S)},this.setSize=function(C,J,ie){if(z.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=C,S=J,e.width=Math.floor(C*I),e.height=Math.floor(J*I),ie!==!1&&(e.style.width=C+"px",e.style.height=J+"px"),this.setViewport(0,0,C,J)},this.getDrawingBufferSize=function(C){return C.set(A*I,S*I).floor()},this.setDrawingBufferSize=function(C,J,ie){A=C,S=J,I=ie,e.width=Math.floor(C*ie),e.height=Math.floor(J*ie),this.setViewport(0,0,C,J)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(O)},this.setViewport=function(C,J,ie,Y){C.isVector4?O.set(C.x,C.y,C.z,C.w):O.set(C,J,ie,Y),ye.viewport(M.copy(O).multiplyScalar(I).floor())},this.getScissor=function(C){return C.copy(k)},this.setScissor=function(C,J,ie,Y){C.isVector4?k.set(C.x,C.y,C.z,C.w):k.set(C,J,ie,Y),ye.scissor(L.copy(k).multiplyScalar(I).floor())},this.getScissorTest=function(){return P},this.setScissorTest=function(C){ye.setScissorTest(P=C)},this.setOpaqueSort=function(C){N=C},this.setTransparentSort=function(C){D=C},this.getClearColor=function(C){return C.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(C=!0,J=!0,ie=!0){let Y=0;C&&(Y|=16384),J&&(Y|=256),ie&&(Y|=1024),H.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ke,!1),e.removeEventListener("webglcontextrestored",Qe,!1),e.removeEventListener("webglcontextcreationerror",_t,!1),Lt.dispose(),R.dispose(),Q.dispose(),$.dispose(),Ie.dispose(),gt.dispose(),oe.dispose(),_e.dispose(),de.dispose(),z.dispose(),z.removeEventListener("sessionstart",rt),z.removeEventListener("sessionend",vt),V&&(V.dispose(),V=null),St.stop()};function ke(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Qe(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const C=Xe.autoReset,J=ee.enabled,ie=ee.autoUpdate,Y=ee.needsUpdate,se=ee.type;Se(),Xe.autoReset=C,ee.enabled=J,ee.autoUpdate=ie,ee.needsUpdate=Y,ee.type=se}function _t(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function G(C){const J=C.target;J.removeEventListener("dispose",G),we(J)}function we(C){te(C),Q.remove(C)}function te(C){const J=Q.get(C).programs;J!==void 0&&(J.forEach(function(ie){de.releaseProgram(ie)}),C.isShaderMaterial&&de.releaseShaderCache(C))}this.renderBufferDirect=function(C,J,ie,Y,se,ze){J===null&&(J=be);const qe=se.isMesh&&se.matrixWorld.determinant()<0,$e=Oo(C,J,ie,Y,se);ye.setMaterial(Y,qe);let Ye=ie.index;const at=ie.attributes.position;if(Ye===null){if(at===void 0||at.count===0)return}else if(Ye.count===0)return;let nt=1;Y.wireframe===!0&&(Ye=yt.getWireframeAttribute(ie),nt=2),oe.setup(se,Y,$e,ie,Ye);let ot,Dt=Me;Ye!==null&&(ot=tt.get(Ye),Dt=Ve,Dt.setIndex(ot));const qn=Ye!==null?Ye.count:at.count,hi=ie.drawRange.start*nt,pi=ie.drawRange.count*nt,pn=ze!==null?ze.start*nt:0,ct=ze!==null?ze.count*nt:1/0,mi=Math.max(hi,pn),It=Math.min(qn,hi+pi,pn+ct)-1,on=Math.max(0,It-mi+1);if(on!==0){if(se.isMesh)Y.wireframe===!0?(ye.setLineWidth(Y.wireframeLinewidth*Ae()),Dt.setMode(1)):Dt.setMode(4);else if(se.isLine){let Nn=Y.linewidth;Nn===void 0&&(Nn=1),ye.setLineWidth(Nn*Ae()),se.isLineSegments?Dt.setMode(1):se.isLineLoop?Dt.setMode(2):Dt.setMode(3)}else se.isPoints?Dt.setMode(0):se.isSprite&&Dt.setMode(4);if(se.isInstancedMesh)Dt.renderInstances(mi,on,se.count);else if(ie.isInstancedBufferGeometry){const Nn=Math.min(ie.instanceCount,ie._maxInstanceCount);Dt.renderInstances(mi,on,Nn)}else Dt.render(mi,on)}},this.compile=function(C,J){function ie(Y,se,ze){Y.transparent===!0&&Y.side===Mi?(Y.side=Mn,Y.needsUpdate=!0,Ni(Y,se,ze),Y.side=Pr,Y.needsUpdate=!0,Ni(Y,se,ze),Y.side=Mi):Ni(Y,se,ze)}d=R.get(C),d.init(),g.push(d),C.traverseVisible(function(Y){Y.isLight&&Y.layers.test(J.layers)&&(d.pushLight(Y),Y.castShadow&&d.pushShadow(Y))}),d.setupLights(h.physicallyCorrectLights),C.traverse(function(Y){const se=Y.material;if(se)if(Array.isArray(se))for(let ze=0;ze<se.length;ze++){const qe=se[ze];ie(qe,C,Y)}else ie(se,C,Y)}),g.pop(),d=null};let Pe=null;function Ee(C){Pe&&Pe(C)}function rt(){St.stop()}function vt(){St.start()}const St=new nd;St.setAnimationLoop(Ee),typeof self<"u"&&St.setContext(self),this.setAnimationLoop=function(C){Pe=C,z.setAnimationLoop(C),C===null?St.stop():St.start()},z.addEventListener("sessionstart",rt),z.addEventListener("sessionend",vt),this.render=function(C,J){if(J!==void 0&&J.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),J.parent===null&&J.matrixWorldAutoUpdate===!0&&J.updateMatrixWorld(),z.enabled===!0&&z.isPresenting===!0&&(z.cameraAutoUpdate===!0&&z.updateCamera(J),J=z.getCamera()),C.isScene===!0&&C.onBeforeRender(h,C,J,y),d=R.get(C,g.length),d.init(),g.push(d),X.multiplyMatrices(J.projectionMatrix,J.matrixWorldInverse),K.setFromProjectionMatrix(X),j=this.localClippingEnabled,Z=E.init(this.clippingPlanes,j,J),f=Lt.get(C,m.length),f.init(),m.push(f),rn(C,J,0,h.sortObjects),f.finish(),h.sortObjects===!0&&f.sort(N,D),Z===!0&&E.beginShadows();const ie=d.state.shadowsArray;if(ee.render(ie,C,J),Z===!0&&E.endShadows(),this.info.autoReset===!0&&this.info.reset(),ce.render(f,C),d.setupLights(h.physicallyCorrectLights),J.isArrayCamera){const Y=J.cameras;for(let se=0,ze=Y.length;se<ze;se++){const qe=Y[se];Et(f,C,qe,qe.viewport)}}else Et(f,C,J);y!==null&&(fe.updateMultisampleRenderTarget(y),fe.updateRenderTargetMipmap(y)),C.isScene===!0&&C.onAfterRender(h,C,J),oe.resetDefaultState(),b=-1,x=null,g.pop(),g.length>0?d=g[g.length-1]:d=null,m.pop(),m.length>0?f=m[m.length-1]:f=null};function rn(C,J,ie,Y){if(C.visible===!1)return;if(C.layers.test(J.layers)){if(C.isGroup)ie=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(J);else if(C.isLight)d.pushLight(C),C.castShadow&&d.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||K.intersectsSprite(C)){Y&&ae.setFromMatrixPosition(C.matrixWorld).applyMatrix4(X);const qe=gt.update(C),$e=C.material;$e.visible&&f.push(C,qe,$e,ie,ae.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==Xe.render.frame&&(C.skeleton.update(),C.skeleton.frame=Xe.render.frame),!C.frustumCulled||K.intersectsObject(C))){Y&&ae.setFromMatrixPosition(C.matrixWorld).applyMatrix4(X);const qe=gt.update(C),$e=C.material;if(Array.isArray($e)){const Ye=qe.groups;for(let at=0,nt=Ye.length;at<nt;at++){const ot=Ye[at],Dt=$e[ot.materialIndex];Dt&&Dt.visible&&f.push(C,qe,Dt,ie,ae.z,ot)}}else $e.visible&&f.push(C,qe,$e,ie,ae.z,null)}}const ze=C.children;for(let qe=0,$e=ze.length;qe<$e;qe++)rn(ze[qe],J,ie,Y)}function Et(C,J,ie,Y){const se=C.opaque,ze=C.transmissive,qe=C.transparent;d.setupLightsView(ie),ze.length>0&&Tn(se,J,ie),Y&&ye.viewport(M.copy(Y)),se.length>0&&sn(se,J,ie),ze.length>0&&sn(ze,J,ie),qe.length>0&&sn(qe,J,ie),ye.buffers.depth.setTest(!0),ye.buffers.depth.setMask(!0),ye.buffers.color.setMask(!0),ye.setPolygonOffset(!1)}function Tn(C,J,ie){const Y=pe.isWebGL2;V===null&&(V=new Di(1,1,{generateMipmaps:!0,type:Le.has("EXT_color_buffer_half_float")?rs:Ji,minFilter:bo,samples:Y&&s===!0?4:0})),h.getDrawingBufferSize(re),Y?V.setSize(re.x,re.y):V.setSize(Ia(re.x),Ia(re.y));const se=h.getRenderTarget();h.setRenderTarget(V),h.clear();const ze=h.toneMapping;h.toneMapping=Bn,sn(C,J,ie),h.toneMapping=ze,fe.updateMultisampleRenderTarget(V),fe.updateRenderTargetMipmap(V),h.setRenderTarget(se)}function sn(C,J,ie){const Y=J.isScene===!0?J.overrideMaterial:null;for(let se=0,ze=C.length;se<ze;se++){const qe=C[se],$e=qe.object,Ye=qe.geometry,at=Y===null?qe.material:Y,nt=qe.group;$e.layers.test(ie.layers)&&$t($e,J,ie,Ye,at,nt)}}function $t(C,J,ie,Y,se,ze){C.onBeforeRender(h,J,ie,Y,se,ze),C.modelViewMatrix.multiplyMatrices(ie.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),se.onBeforeRender(h,J,ie,Y,C,ze),se.transparent===!0&&se.side===Mi?(se.side=Mn,se.needsUpdate=!0,h.renderBufferDirect(ie,J,Y,se,C,ze),se.side=Pr,se.needsUpdate=!0,h.renderBufferDirect(ie,J,Y,se,C,ze),se.side=Mi):h.renderBufferDirect(ie,J,Y,se,C,ze),C.onAfterRender(h,J,ie,Y,se,ze)}function Ni(C,J,ie){J.isScene!==!0&&(J=be);const Y=Q.get(C),se=d.state.lights,ze=d.state.shadowsArray,qe=se.state.version,$e=de.getParameters(C,se.state,ze,J,ie),Ye=de.getProgramCacheKey($e);let at=Y.programs;Y.environment=C.isMeshStandardMaterial?J.environment:null,Y.fog=J.fog,Y.envMap=(C.isMeshStandardMaterial?Ie:$).get(C.envMap||Y.environment),at===void 0&&(C.addEventListener("dispose",G),at=new Map,Y.programs=at);let nt=at.get(Ye);if(nt!==void 0){if(Y.currentProgram===nt&&Y.lightsStateVersion===qe)return bs(C,$e),nt}else $e.uniforms=de.getUniforms(C),C.onBuild(ie,$e,h),C.onBeforeCompile($e,h),nt=de.acquireProgram($e,Ye),at.set(Ye,nt),Y.uniforms=$e.uniforms;const ot=Y.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(ot.clippingPlanes=E.uniform),bs(C,$e),Y.needsLights=ws(C),Y.lightsStateVersion=qe,Y.needsLights&&(ot.ambientLightColor.value=se.state.ambient,ot.lightProbe.value=se.state.probe,ot.directionalLights.value=se.state.directional,ot.directionalLightShadows.value=se.state.directionalShadow,ot.spotLights.value=se.state.spot,ot.spotLightShadows.value=se.state.spotShadow,ot.rectAreaLights.value=se.state.rectArea,ot.ltc_1.value=se.state.rectAreaLTC1,ot.ltc_2.value=se.state.rectAreaLTC2,ot.pointLights.value=se.state.point,ot.pointLightShadows.value=se.state.pointShadow,ot.hemisphereLights.value=se.state.hemi,ot.directionalShadowMap.value=se.state.directionalShadowMap,ot.directionalShadowMatrix.value=se.state.directionalShadowMatrix,ot.spotShadowMap.value=se.state.spotShadowMap,ot.spotLightMatrix.value=se.state.spotLightMatrix,ot.spotLightMap.value=se.state.spotLightMap,ot.pointShadowMap.value=se.state.pointShadowMap,ot.pointShadowMatrix.value=se.state.pointShadowMatrix);const Dt=nt.getUniforms(),qn=Qs.seqWithValue(Dt.seq,ot);return Y.currentProgram=nt,Y.uniformsList=qn,nt}function bs(C,J){const ie=Q.get(C);ie.outputEncoding=J.outputEncoding,ie.instancing=J.instancing,ie.skinning=J.skinning,ie.morphTargets=J.morphTargets,ie.morphNormals=J.morphNormals,ie.morphColors=J.morphColors,ie.morphTargetsCount=J.morphTargetsCount,ie.numClippingPlanes=J.numClippingPlanes,ie.numIntersection=J.numClipIntersection,ie.vertexAlphas=J.vertexAlphas,ie.vertexTangents=J.vertexTangents,ie.toneMapping=J.toneMapping}function Oo(C,J,ie,Y,se){J.isScene!==!0&&(J=be),fe.resetTextureUnits();const ze=J.fog,qe=Y.isMeshStandardMaterial?J.environment:null,$e=y===null?h.outputEncoding:y.isXRRenderTarget===!0?y.texture.encoding:Li,Ye=(Y.isMeshStandardMaterial?Ie:$).get(Y.envMap||qe),at=Y.vertexColors===!0&&!!ie.attributes.color&&ie.attributes.color.itemSize===4,nt=!!Y.normalMap&&!!ie.attributes.tangent,ot=!!ie.morphAttributes.position,Dt=!!ie.morphAttributes.normal,qn=!!ie.morphAttributes.color,hi=Y.toneMapped?h.toneMapping:Bn,pi=ie.morphAttributes.position||ie.morphAttributes.normal||ie.morphAttributes.color,pn=pi!==void 0?pi.length:0,ct=Q.get(Y),mi=d.state.lights;if(Z===!0&&(j===!0||C!==x)){const F=C===x&&Y.id===b;E.setState(Y,C,F)}let It=!1;Y.version===ct.__version?(ct.needsLights&&ct.lightsStateVersion!==mi.state.version||ct.outputEncoding!==$e||se.isInstancedMesh&&ct.instancing===!1||!se.isInstancedMesh&&ct.instancing===!0||se.isSkinnedMesh&&ct.skinning===!1||!se.isSkinnedMesh&&ct.skinning===!0||ct.envMap!==Ye||Y.fog===!0&&ct.fog!==ze||ct.numClippingPlanes!==void 0&&(ct.numClippingPlanes!==E.numPlanes||ct.numIntersection!==E.numIntersection)||ct.vertexAlphas!==at||ct.vertexTangents!==nt||ct.morphTargets!==ot||ct.morphNormals!==Dt||ct.morphColors!==qn||ct.toneMapping!==hi||pe.isWebGL2===!0&&ct.morphTargetsCount!==pn)&&(It=!0):(It=!0,ct.__version=Y.version);let on=ct.currentProgram;It===!0&&(on=Ni(Y,J,se));let Nn=!1,zi=!1,Vr=!1;const Yt=on.getUniforms(),Xn=ct.uniforms;if(ye.useProgram(on.program)&&(Nn=!0,zi=!0,Vr=!0),Y.id!==b&&(b=Y.id,zi=!0),Nn||x!==C){if(Yt.setValue(H,"projectionMatrix",C.projectionMatrix),pe.logarithmicDepthBuffer&&Yt.setValue(H,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),x!==C&&(x=C,zi=!0,Vr=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshStandardMaterial||Y.envMap){const F=Yt.map.cameraPosition;F!==void 0&&F.setValue(H,ae.setFromMatrixPosition(C.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&Yt.setValue(H,"isOrthographic",C.isOrthographicCamera===!0),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.isShadowMaterial||se.isSkinnedMesh)&&Yt.setValue(H,"viewMatrix",C.matrixWorldInverse)}if(se.isSkinnedMesh){Yt.setOptional(H,se,"bindMatrix"),Yt.setOptional(H,se,"bindMatrixInverse");const F=se.skeleton;F&&(pe.floatVertexTextures?(F.boneTexture===null&&F.computeBoneTexture(),Yt.setValue(H,"boneTexture",F.boneTexture,fe),Yt.setValue(H,"boneTextureSize",F.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Hr=ie.morphAttributes;if((Hr.position!==void 0||Hr.normal!==void 0||Hr.color!==void 0&&pe.isWebGL2===!0)&&ge.update(se,ie,Y,on),(zi||ct.receiveShadow!==se.receiveShadow)&&(ct.receiveShadow=se.receiveShadow,Yt.setValue(H,"receiveShadow",se.receiveShadow)),Y.isMeshGouraudMaterial&&Y.envMap!==null&&(Xn.envMap.value=Ye,Xn.flipEnvMap.value=Ye.isCubeTexture&&Ye.isRenderTargetTexture===!1?-1:1),zi&&(Yt.setValue(H,"toneMappingExposure",h.toneMappingExposure),ct.needsLights&&Fi(Xn,Vr),ze&&Y.fog===!0&&st.refreshFogUniforms(Xn,ze),st.refreshMaterialUniforms(Xn,Y,I,S,V),Qs.upload(H,ct.uniformsList,Xn,fe)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Qs.upload(H,ct.uniformsList,Xn,fe),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&Yt.setValue(H,"center",se.center),Yt.setValue(H,"modelViewMatrix",se.modelViewMatrix),Yt.setValue(H,"normalMatrix",se.normalMatrix),Yt.setValue(H,"modelMatrix",se.matrixWorld),Y.isShaderMaterial||Y.isRawShaderMaterial){const F=Y.uniformsGroups;for(let Ne=0,kt=F.length;Ne<kt;Ne++)if(pe.isWebGL2){const Yn=F[Ne];_e.update(Yn,on),_e.bind(Yn,on)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return on}function Fi(C,J){C.ambientLightColor.needsUpdate=J,C.lightProbe.needsUpdate=J,C.directionalLights.needsUpdate=J,C.directionalLightShadows.needsUpdate=J,C.pointLights.needsUpdate=J,C.pointLightShadows.needsUpdate=J,C.spotLights.needsUpdate=J,C.spotLightShadows.needsUpdate=J,C.rectAreaLights.needsUpdate=J,C.hemisphereLights.needsUpdate=J}function ws(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(C,J,ie){Q.get(C.texture).__webglTexture=J,Q.get(C.depthTexture).__webglTexture=ie;const Y=Q.get(C);Y.__hasExternalTextures=!0,Y.__hasExternalTextures&&(Y.__autoAllocateDepthBuffer=ie===void 0,Y.__autoAllocateDepthBuffer||Le.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Y.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,J){const ie=Q.get(C);ie.__webglFramebuffer=J,ie.__useDefaultFramebuffer=J===void 0},this.setRenderTarget=function(C,J=0,ie=0){y=C,_=J,w=ie;let Y=!0;if(C){const Ye=Q.get(C);Ye.__useDefaultFramebuffer!==void 0?(ye.bindFramebuffer(36160,null),Y=!1):Ye.__webglFramebuffer===void 0?fe.setupRenderTarget(C):Ye.__hasExternalTextures&&fe.rebindTextures(C,Q.get(C.texture).__webglTexture,Q.get(C.depthTexture).__webglTexture)}let se=null,ze=!1,qe=!1;if(C){const Ye=C.texture;(Ye.isData3DTexture||Ye.isDataArrayTexture)&&(qe=!0);const at=Q.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(se=at[J],ze=!0):pe.isWebGL2&&C.samples>0&&fe.useMultisampledRTT(C)===!1?se=Q.get(C).__webglMultisampledFramebuffer:se=at,M.copy(C.viewport),L.copy(C.scissor),v=C.scissorTest}else M.copy(O).multiplyScalar(I).floor(),L.copy(k).multiplyScalar(I).floor(),v=P;if(ye.bindFramebuffer(36160,se)&&pe.drawBuffers&&Y&&ye.drawBuffers(C,se),ye.viewport(M),ye.scissor(L),ye.setScissorTest(v),ze){const Ye=Q.get(C.texture);H.framebufferTexture2D(36160,36064,34069+J,Ye.__webglTexture,ie)}else if(qe){const Ye=Q.get(C.texture),at=J||0;H.framebufferTextureLayer(36160,36064,Ye.__webglTexture,ie||0,at)}b=-1},this.readRenderTargetPixels=function(C,J,ie,Y,se,ze,qe){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let $e=Q.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&qe!==void 0&&($e=$e[qe]),$e){ye.bindFramebuffer(36160,$e);try{const Ye=C.texture,at=Ye.format,nt=Ye.type;if(at!==Gn&&T.convert(at)!==H.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ot=nt===rs&&(Le.has("EXT_color_buffer_half_float")||pe.isWebGL2&&Le.has("EXT_color_buffer_float"));if(nt!==Ji&&T.convert(nt)!==H.getParameter(35738)&&!(nt===qi&&(pe.isWebGL2||Le.has("OES_texture_float")||Le.has("WEBGL_color_buffer_float")))&&!ot){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}J>=0&&J<=C.width-Y&&ie>=0&&ie<=C.height-se&&H.readPixels(J,ie,Y,se,T.convert(at),T.convert(nt),ze)}finally{const Ye=y!==null?Q.get(y).__webglFramebuffer:null;ye.bindFramebuffer(36160,Ye)}}},this.copyFramebufferToTexture=function(C,J,ie=0){const Y=Math.pow(2,-ie),se=Math.floor(J.image.width*Y),ze=Math.floor(J.image.height*Y);fe.setTexture2D(J,0),H.copyTexSubImage2D(3553,ie,0,0,C.x,C.y,se,ze),ye.unbindTexture()},this.copyTextureToTexture=function(C,J,ie,Y=0){const se=J.image.width,ze=J.image.height,qe=T.convert(ie.format),$e=T.convert(ie.type);fe.setTexture2D(ie,0),H.pixelStorei(37440,ie.flipY),H.pixelStorei(37441,ie.premultiplyAlpha),H.pixelStorei(3317,ie.unpackAlignment),J.isDataTexture?H.texSubImage2D(3553,Y,C.x,C.y,se,ze,qe,$e,J.image.data):J.isCompressedTexture?H.compressedTexSubImage2D(3553,Y,C.x,C.y,J.mipmaps[0].width,J.mipmaps[0].height,qe,J.mipmaps[0].data):H.texSubImage2D(3553,Y,C.x,C.y,qe,$e,J.image),Y===0&&ie.generateMipmaps&&H.generateMipmap(3553),ye.unbindTexture()},this.copyTextureToTexture3D=function(C,J,ie,Y,se=0){if(h.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ze=C.max.x-C.min.x+1,qe=C.max.y-C.min.y+1,$e=C.max.z-C.min.z+1,Ye=T.convert(Y.format),at=T.convert(Y.type);let nt;if(Y.isData3DTexture)fe.setTexture3D(Y,0),nt=32879;else if(Y.isDataArrayTexture)fe.setTexture2DArray(Y,0),nt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}H.pixelStorei(37440,Y.flipY),H.pixelStorei(37441,Y.premultiplyAlpha),H.pixelStorei(3317,Y.unpackAlignment);const ot=H.getParameter(3314),Dt=H.getParameter(32878),qn=H.getParameter(3316),hi=H.getParameter(3315),pi=H.getParameter(32877),pn=ie.isCompressedTexture?ie.mipmaps[0]:ie.image;H.pixelStorei(3314,pn.width),H.pixelStorei(32878,pn.height),H.pixelStorei(3316,C.min.x),H.pixelStorei(3315,C.min.y),H.pixelStorei(32877,C.min.z),ie.isDataTexture||ie.isData3DTexture?H.texSubImage3D(nt,se,J.x,J.y,J.z,ze,qe,$e,Ye,at,pn.data):ie.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),H.compressedTexSubImage3D(nt,se,J.x,J.y,J.z,ze,qe,$e,Ye,pn.data)):H.texSubImage3D(nt,se,J.x,J.y,J.z,ze,qe,$e,Ye,at,pn),H.pixelStorei(3314,ot),H.pixelStorei(32878,Dt),H.pixelStorei(3316,qn),H.pixelStorei(3315,hi),H.pixelStorei(32877,pi),se===0&&Y.generateMipmaps&&H.generateMipmap(nt),ye.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?fe.setTextureCube(C,0):C.isData3DTexture?fe.setTexture3D(C,0):C.isDataArrayTexture?fe.setTexture2DArray(C,0):fe.setTexture2D(C,0),ye.unbindTexture()},this.resetState=function(){_=0,w=0,y=null,ye.reset(),oe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class f1 extends ad{}f1.prototype.isWebGL1Renderer=!0;class d1 extends xt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Cc extends On{constructor(e,t,n,r=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Lc=new At,Dc=new At,Ws=[],Yr=new yn;class xr extends yn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Cc(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,r=this.count;if(Yr.geometry=this.geometry,Yr.material=this.material,Yr.material!==void 0)for(let s=0;s<r;s++){this.getMatrixAt(s,Lc),Dc.multiplyMatrices(n,Lc),Yr.matrixWorld=Dc,Yr.raycast(e,Ws);for(let o=0,a=Ws.length;o<a;o++){const l=Ws[o];l.instanceId=s,l.object=this,t.push(l)}Ws.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Cc(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class ld extends zr{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ke(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Pc=new B,Rc=new B,Ic=new At,ma=new Ya,js=new wo;class h1 extends xt{constructor(e=new hn,t=new ld){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let r=1,s=t.count;r<s;r++)Pc.fromBufferAttribute(t,r-1),Rc.fromBufferAttribute(t,r),n[r]=n[r-1],n[r]+=Pc.distanceTo(Rc);e.setAttribute("lineDistance",new Bt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,r=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),js.copy(n.boundingSphere),js.applyMatrix4(r),js.radius+=s,e.ray.intersectsSphere(js)===!1)return;Ic.copy(r).invert(),ma.copy(e.ray).applyMatrix4(Ic);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=new B,u=new B,f=new B,d=new B,m=this.isLineSegments?2:1,g=n.index,p=n.attributes.position;if(g!==null){const _=Math.max(0,o.start),w=Math.min(g.count,o.start+o.count);for(let y=_,b=w-1;y<b;y+=m){const x=g.getX(y),M=g.getX(y+1);if(c.fromBufferAttribute(p,x),u.fromBufferAttribute(p,M),ma.distanceSqToSegment(c,u,d,f)>l)continue;d.applyMatrix4(this.matrixWorld);const v=e.ray.origin.distanceTo(d);v<e.near||v>e.far||t.push({distance:v,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),w=Math.min(p.count,o.start+o.count);for(let y=_,b=w-1;y<b;y+=m){if(c.fromBufferAttribute(p,y),u.fromBufferAttribute(p,y+1),ma.distanceSqToSegment(c,u,d,f)>l)continue;d.applyMatrix4(this.matrixWorld);const M=e.ray.origin.distanceTo(d);M<e.near||M>e.far||t.push({distance:M,point:f.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const r=t[n[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=r.length;s<o;s++){const a=r[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}class ms extends hn{constructor(e=1,t=1,n=1,r=8,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),s=Math.floor(s);const u=[],f=[],d=[],m=[];let g=0;const h=[],p=n/2;let _=0;w(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Bt(f,3)),this.setAttribute("normal",new Bt(d,3)),this.setAttribute("uv",new Bt(m,2));function w(){const b=new B,x=new B;let M=0;const L=(t-e)/n;for(let v=0;v<=s;v++){const A=[],S=v/s,I=S*(t-e)+e;for(let N=0;N<=r;N++){const D=N/r,O=D*l+a,k=Math.sin(O),P=Math.cos(O);x.x=I*k,x.y=-S*n+p,x.z=I*P,f.push(x.x,x.y,x.z),b.set(k,L,P).normalize(),d.push(b.x,b.y,b.z),m.push(D,1-S),A.push(g++)}h.push(A)}for(let v=0;v<r;v++)for(let A=0;A<s;A++){const S=h[A][v],I=h[A+1][v],N=h[A+1][v+1],D=h[A][v+1];u.push(S,I,D),u.push(I,N,D),M+=6}c.addGroup(_,M,0),_+=M}function y(b){const x=g,M=new je,L=new B;let v=0;const A=b===!0?e:t,S=b===!0?1:-1;for(let N=1;N<=r;N++)f.push(0,p*S,0),d.push(0,S,0),m.push(.5,.5),g++;const I=g;for(let N=0;N<=r;N++){const O=N/r*l+a,k=Math.cos(O),P=Math.sin(O);L.x=A*P,L.y=p*S,L.z=A*k,f.push(L.x,L.y,L.z),d.push(0,S,0),M.x=k*.5+.5,M.y=P*.5*S+.5,m.push(M.x,M.y),g++}for(let N=0;N<r;N++){const D=x+N,O=I+N;b===!0?u.push(O,O+1,D):u.push(O+1,O,D),v+=3}c.addGroup(_,v,b===!0?1:2),_+=v}}static fromJSON(e){return new ms(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class el extends ms{constructor(e=1,t=1,n=8,r=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,r,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new el(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class tl extends hn{constructor(e=[],t=[],n=1,r=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r};const s=[],o=[];a(r),c(n),u(),this.setAttribute("position",new Bt(s,3)),this.setAttribute("normal",new Bt(s.slice(),3)),this.setAttribute("uv",new Bt(o,2)),r===0?this.computeVertexNormals():this.normalizeNormals();function a(w){const y=new B,b=new B,x=new B;for(let M=0;M<t.length;M+=3)m(t[M+0],y),m(t[M+1],b),m(t[M+2],x),l(y,b,x,w)}function l(w,y,b,x){const M=x+1,L=[];for(let v=0;v<=M;v++){L[v]=[];const A=w.clone().lerp(b,v/M),S=y.clone().lerp(b,v/M),I=M-v;for(let N=0;N<=I;N++)N===0&&v===M?L[v][N]=A:L[v][N]=A.clone().lerp(S,N/I)}for(let v=0;v<M;v++)for(let A=0;A<2*(M-v)-1;A++){const S=Math.floor(A/2);A%2===0?(d(L[v][S+1]),d(L[v+1][S]),d(L[v][S])):(d(L[v][S+1]),d(L[v+1][S+1]),d(L[v+1][S]))}}function c(w){const y=new B;for(let b=0;b<s.length;b+=3)y.x=s[b+0],y.y=s[b+1],y.z=s[b+2],y.normalize().multiplyScalar(w),s[b+0]=y.x,s[b+1]=y.y,s[b+2]=y.z}function u(){const w=new B;for(let y=0;y<s.length;y+=3){w.x=s[y+0],w.y=s[y+1],w.z=s[y+2];const b=p(w)/2/Math.PI+.5,x=_(w)/Math.PI+.5;o.push(b,1-x)}g(),f()}function f(){for(let w=0;w<o.length;w+=6){const y=o[w+0],b=o[w+2],x=o[w+4],M=Math.max(y,b,x),L=Math.min(y,b,x);M>.9&&L<.1&&(y<.2&&(o[w+0]+=1),b<.2&&(o[w+2]+=1),x<.2&&(o[w+4]+=1))}}function d(w){s.push(w.x,w.y,w.z)}function m(w,y){const b=w*3;y.x=e[b+0],y.y=e[b+1],y.z=e[b+2]}function g(){const w=new B,y=new B,b=new B,x=new B,M=new je,L=new je,v=new je;for(let A=0,S=0;A<s.length;A+=9,S+=6){w.set(s[A+0],s[A+1],s[A+2]),y.set(s[A+3],s[A+4],s[A+5]),b.set(s[A+6],s[A+7],s[A+8]),M.set(o[S+0],o[S+1]),L.set(o[S+2],o[S+3]),v.set(o[S+4],o[S+5]),x.copy(w).add(y).add(b).divideScalar(3);const I=p(x);h(M,S+0,w,I),h(L,S+2,y,I),h(v,S+4,b,I)}}function h(w,y,b,x){x<0&&w.x===1&&(o[y]=w.x-1),b.x===0&&b.z===0&&(o[y]=x/2/Math.PI+.5)}function p(w){return Math.atan2(w.z,-w.x)}function _(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}static fromJSON(e){return new tl(e.vertices,e.indices,e.radius,e.details)}}class nl extends tl{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(r,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new nl(e.radius,e.detail)}}class $s extends zr{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Ke(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ke(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=qf,this.normalScale=new je(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Xa,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}const kc={enabled:!1,files:{},add:function(i,e){this.enabled!==!1&&(this.files[i]=e)},get:function(i){if(this.enabled!==!1)return this.files[i]},remove:function(i){delete this.files[i]},clear:function(){this.files={}}};class p1{constructor(e,t,n){const r=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&r.onStart!==void 0&&r.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(s=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,f){return c.push(u,f),this},this.removeHandler=function(u){const f=c.indexOf(u);return f!==-1&&c.splice(f,2),this},this.getHandler=function(u){for(let f=0,d=c.length;f<d;f+=2){const m=c[f],g=c[f+1];if(m.global&&(m.lastIndex=0),m.test(u))return g}return null}}}const m1=new p1;class cd{constructor(e){this.manager=e!==void 0?e:m1,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(r,s){n.load(e,r,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}class g1 extends cd{constructor(e){super(e)}load(e,t,n,r){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=kc.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=ss("img");function l(){u(),kc.add(e,this),t&&t(this),s.manager.itemEnd(e)}function c(f){u(),r&&r(f),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class Oc extends cd{constructor(e){super(e)}load(e,t,n,r){const s=new An,o=new g1(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,r),s}}class ud extends xt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ke(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}const Nc=new At,Fc=new B,zc=new B;class _1{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new je(512,512),this.map=null,this.mapPass=null,this.matrix=new At,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new yo,this._frameExtents=new je(1,1),this._viewportCount=1,this._viewports=[new Xt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Fc.setFromMatrixPosition(e.matrixWorld),t.position.copy(Fc),zc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(zc),t.updateMatrixWorld(),Nc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Nc),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class v1 extends _1{constructor(){super(new $i(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class b1 extends ud{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(xt.DefaultUp),this.updateMatrix(),this.target=new xt,this.shadow=new v1}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class w1 extends ud{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class fd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Uc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Uc();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Uc(){return(typeof performance>"u"?Date:performance).now()}class y1{constructor(e,t,n=0,r=1/0){this.ray=new Ya(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Za,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Oa(e,this,n,t),n.sort(Gc),n}intersectObjects(e,t=!0,n=[]){for(let r=0,s=e.length;r<s;r++)Oa(e[r],this,n,t);return n.sort(Gc),n}}function Gc(i,e){return i.distance-e.distance}function Oa(i,e,t,n){if(i.layers.test(e.layers)&&i.raycast(e,t),n===!0){const r=i.children;for(let s=0,o=r.length;s<o;s++)Oa(r[s],e,t,!0)}}class oo{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ln(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}const Bc=new B;let qs,ga;class x1 extends xt{constructor(e=new B(0,0,1),t=new B(0,0,0),n=1,r=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",qs===void 0&&(qs=new hn,qs.setAttribute("position",new Bt([0,0,0,0,1,0],3)),ga=new ms(0,.5,1,5,1),ga.translate(0,-.5,0)),this.position.copy(t),this.line=new h1(qs,new ld({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new yn(ga,new Ka({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Bc.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Bc,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:qa}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=qa);const Vc={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			gl_FragColor = texture2D( tDiffuse, vUv );
			gl_FragColor.a *= opacity;


		}`};class Mo{constructor(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}}const M1=new $i(-1,1,1,-1,0,1),il=new hn;il.setAttribute("position",new Bt([-1,3,0,-1,-1,0,3,-1,0],3));il.setAttribute("uv",new Bt([0,2,0,0,2,0],2));class S1{constructor(e){this._mesh=new yn(il,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,M1)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}class Hc extends Mo{constructor(e,t){super(),this.textureID=t!==void 0?t:"tDiffuse",e instanceof oi?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=ed.clone(e.uniforms),this.material=new oi({defines:Object.assign({},e.defines),uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.fsQuad=new S1(this.material)}render(e,t,n){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.fsQuad.material=this.material,this.renderToScreen?(e.setRenderTarget(null),this.fsQuad.render(e)):(e.setRenderTarget(t),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),this.fsQuad.render(e))}}class Wc extends Mo{constructor(e,t){super(),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(e,t,n){const r=e.getContext(),s=e.state;s.buffers.color.setMask(!1),s.buffers.depth.setMask(!1),s.buffers.color.setLocked(!0),s.buffers.depth.setLocked(!0);let o,a;this.inverse?(o=0,a=1):(o=1,a=0),s.buffers.stencil.setTest(!0),s.buffers.stencil.setOp(r.REPLACE,r.REPLACE,r.REPLACE),s.buffers.stencil.setFunc(r.ALWAYS,o,4294967295),s.buffers.stencil.setClear(a),s.buffers.stencil.setLocked(!0),e.setRenderTarget(n),this.clear&&e.clear(),e.render(this.scene,this.camera),e.setRenderTarget(t),this.clear&&e.clear(),e.render(this.scene,this.camera),s.buffers.color.setLocked(!1),s.buffers.depth.setLocked(!1),s.buffers.stencil.setLocked(!1),s.buffers.stencil.setFunc(r.EQUAL,1,4294967295),s.buffers.stencil.setOp(r.KEEP,r.KEEP,r.KEEP),s.buffers.stencil.setLocked(!0)}}class A1 extends Mo{constructor(){super(),this.needsSwap=!1}render(e){e.state.buffers.stencil.setLocked(!1),e.state.buffers.stencil.setTest(!1)}}class E1{constructor(e,t){if(this.renderer=e,t===void 0){const n=e.getSize(new je);this._pixelRatio=e.getPixelRatio(),this._width=n.width,this._height=n.height,t=new Di(this._width*this._pixelRatio,this._height*this._pixelRatio),t.texture.name="EffectComposer.rt1"}else this._pixelRatio=1,this._width=t.width,this._height=t.height;this.renderTarget1=t,this.renderTarget2=t.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],Vc===void 0&&console.error("THREE.EffectComposer relies on CopyShader"),Hc===void 0&&console.error("THREE.EffectComposer relies on ShaderPass"),this.copyPass=new Hc(Vc),this.clock=new fd}swapBuffers(){const e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(e,t){this.passes.splice(t,0,e),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(e){const t=this.passes.indexOf(e);t!==-1&&this.passes.splice(t,1)}isLastEnabledPass(e){for(let t=e+1;t<this.passes.length;t++)if(this.passes[t].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());const t=this.renderer.getRenderTarget();let n=!1;for(let r=0,s=this.passes.length;r<s;r++){const o=this.passes[r];if(o.enabled!==!1){if(o.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),o.render(this.renderer,this.writeBuffer,this.readBuffer,e,n),o.needsSwap){if(n){const a=this.renderer.getContext(),l=this.renderer.state.buffers.stencil;l.setFunc(a.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),l.setFunc(a.EQUAL,1,4294967295)}this.swapBuffers()}Wc!==void 0&&(o instanceof Wc?n=!0:o instanceof A1&&(n=!1))}}this.renderer.setRenderTarget(t)}reset(e){if(e===void 0){const t=this.renderer.getSize(new je);this._pixelRatio=this.renderer.getPixelRatio(),this._width=t.width,this._height=t.height,e=this.renderTarget1.clone(),e.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,t){this._width=e,this._height=t;const n=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget1.setSize(n,r),this.renderTarget2.setSize(n,r);for(let s=0;s<this.passes.length;s++)this.passes[s].setSize(n,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}}new $i(-1,1,1,-1,0,1);const dd=new hn;dd.setAttribute("position",new Bt([-1,3,0,-1,-1,0,3,-1,0],3));dd.setAttribute("uv",new Bt([0,2,0,0,2,0],2));class hd extends Mo{constructor(e,t,n,r,s){super(),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=s!==void 0?s:0,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new Ke}render(e,t,n){const r=e.autoClear;e.autoClear=!1;let s,o;this.overrideMaterial!==void 0&&(o=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor&&(e.getClearColor(this._oldClearColor),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),this.clearDepth&&e.clearDepth(),e.setRenderTarget(this.renderToScreen?null:n),this.clear&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),e.render(this.scene,this.camera),this.clearColor&&e.setClearColor(this._oldClearColor,s),this.overrideMaterial!==void 0&&(this.scene.overrideMaterial=o),e.autoClear=r}}const T1=(i,e,t)=>{i.renderer=new ad({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...t}),i.composer=new E1(i.renderer),i.composer.addPass(new hd(i.scene,Si(i.camera)))},jc=(i,e,t)=>{!i.renderer||(e?i.renderer.outputEncoding=Li:i.renderer.outputEncoding=Rt,t?i.renderer.toneMapping=Bn:i.renderer.toneMapping=Hf)},qc=(i,e,t)=>{!i.renderer||!i.composer||(i.renderer.setSize(e.width,e.height),i.renderer.setPixelRatio(t),i.composer.setSize(e.width,e.height),i.composer.setPixelRatio(t))},Xc=(i,e,t)=>{!i.renderer||(i.renderer.shadowMap.enabled=e,i.renderer.shadowMap.type=t)},xn=i=>i.userData,C1=(i,e)=>{i.pointer.update(t=>i.renderer?t.set(e.offsetX/i.renderer.domElement.clientWidth*2-1,-(e.offsetY/i.renderer.domElement.clientHeight)*2+1):t)},pd=(i,e,t,n)=>(i.raycaster.setFromCamera(e,t),i.raycaster.intersectObjects(n,!1)),L1=(i,e)=>i.object.uuid!==e.object.uuid||i.instanceId!==e.instanceId,D1=(i,e,t)=>{let n=Si(i.camera);const r=i.camera.subscribe(c=>n=c);Ot(r);let s=Si(i.pointer);const o=i.pointer.subscribe(c=>s=c);Ot(o);let a;const l=c=>{var d,m;c.preventDefault();const u=c.type;i.pointerOverCanvas.set(!0),t.pointerInvalidated=!0,C1(i,c);const f=P1(e,s,n);if(u==="pointerdown"&&(a=f?{object:f.object,instanceId:f.instanceId}:null),u==="click"){if(!R1(f,a)){a=null;return}a=null}!f||(m=(d=xn(f.object)).eventDispatcher)==null||m.call(d,u,{...f,event:c})};return{onClick:l,onContextMenu:l,onPointerUp:l,onPointerDown:l,onPointerMove:l}};function P1(i,e,t){if(i.interactiveObjects.size===0||i.raycastableObjects.size===0)return null;const n=pd(i,e,t,Array.from(i.raycastableObjects));return n.length===0||!i.interactiveObjects.has(n[0].object)?null:n[0]}function R1(i,e){return!i||!e?!1:i.object.uuid===e.object.uuid&&i.instanceId===e.instanceId}const I1=(i,e)=>{let t=Si(i.pointerOverCanvas);const n=i.pointerOverCanvas.subscribe(c=>t=c);Ot(n);let r=Si(i.camera);const s=i.camera.subscribe(c=>r=c);Ot(s);let o=Si(i.pointer);const a=i.pointer.subscribe(c=>o=c);return Ot(a),{raycast:()=>{var f,d,m,g,h,p,_,w;if(e.interactiveObjects.size===0||e.raycastableObjects.size===0)return;const c=t?pd(e,o,r,Array.from(e.raycastableObjects)):[],u=c.length&&e.interactiveObjects.has(c[0].object)?c[0]:null;u?e.lastIntersection?e.lastIntersection&&L1(e.lastIntersection,u)&&((p=(h=xn(e.lastIntersection.object)).eventDispatcher)==null||p.call(h,"pointerleave",e.lastIntersection),(w=(_=xn(u.object)).eventDispatcher)==null||w.call(_,"pointerenter",u)):(g=(m=xn(u.object)).eventDispatcher)==null||g.call(m,"pointerenter",u):e.lastIntersection&&((d=(f=xn(e.lastIntersection.object)).eventDispatcher)==null||d.call(f,"pointerleave",e.lastIntersection)),e.lastIntersection=u}}},So=typeof window<"u",k1=i=>{if(!So)return;let e;const t=()=>{i(),e=requestAnimationFrame(t)};t(),Ot(()=>{!e||cancelAnimationFrame(e)})},O1=(i,e)=>{if(e.frameHandlers.size===0)return;if(e.debugFrameloop){let r=0;e.frameHandlers.forEach(s=>{s.debugFrameloopMessage?e.invalidations[s.debugFrameloopMessage]=s.debugFrameloopMessage in e.invalidations?e.invalidations[s.debugFrameloopMessage]+1:1:++r}),r>0&&(e.invalidations.onFrame=e.frameHandlers.size)}const t=Array.from(e.frameHandlers).reduce((r,s)=>s.order?!0:r,!1),n=i.clock.getDelta();t?Array.from(e.frameHandlers).sort((r,s)=>{var o,a;return((o=r.order)!=null?o:0)>((a=s.order)!=null?a:0)?1:-1}).forEach(r=>r.fn(i,n)):e.frameHandlers.forEach(r=>r.fn(i,n))},N1=i=>{!i.debugFrameloop||(i.frame+=1,console.log(`frame: ${i.frame}${Object.keys(i.invalidations).length>0?", requested by \u21B4":""}`),Object.keys(i.invalidations).length>0&&console.table(i.invalidations),i.invalidations={})},F1=(i,e,t,n)=>{let r=Si(i.camera);const s=i.camera.subscribe(a=>r=a);Ot(s);const{raycast:o}=I1(i,e);k1(()=>{n.dispose();const a=t.frameloop==="always"||t.frameloop==="demand"&&(t.frameInvalidated||t.frameHandlers.size>0)||t.frameloop==="never"&&t.advance;(a||t.pointerInvalidated)&&(o(),t.pointerInvalidated=!1),a&&(!r||!i.composer||!i.renderer||(O1(i,t),i.composer.passes.length>1?i.composer.render():i.renderer.render(i.scene,r),N1(t),t.frameInvalidated=!1,t.advance=!1))})},z1=()=>{const i=new Qt(75,0,.1,1e3);return xn(i).threlteDefaultCamera=!0,i.position.z=5,i.lookAt(0,0,0),i},U1=i=>{const e=i.size.subscribe(t=>{xn(Si(i.camera)).threlteDefaultCamera&&i.camera.update(n=>{const r=n;return r.aspect=t.width/t.height,r.updateProjectionMatrix(),i.invalidate("Default camera: aspect ratio changed"),r})});Ot(e)},G1=(i,e,t,n,r,s,o)=>{const a={audioListeners:new Map,addAudioListener:(_,w)=>{if(w=w!=null?w:"default",a.audioListeners.has(w)){console.warn(`An AudioListener with the id "${w}" has already been added, aborting.`);return}a.audioListeners.set(w,_)},removeAudioListener:_=>{if(_=_!=null?_:"default",!a.audioListeners.has(_)){console.warn(`No AudioListener with the id "${_}" found, aborting.`);return}a.audioListeners.delete(_)},getAudioListener:_=>{if(_=_!=null?_:"default",!a.audioListeners.has(_)){console.warn(`No AudioListener with the id "${_}" found, aborting.`);return}return a.audioListeners.get(_)}},l={debugFrameloop:s,frameloop:o,frame:0,frameInvalidated:!0,pointerInvalidated:!0,invalidations:{},frameHandlers:new Set,advance:!1},c={size:vn([n,r],([_,w])=>_||w),pointer:lt(new je),pointerOverCanvas:lt(!1),clock:new fd,camera:lt(z1()),scene:new d1,renderer:void 0,composer:void 0,invalidate:_=>{l.frameInvalidated=!0,l.debugFrameloop&&_&&(l.invalidations[_]=l.invalidations[_]?l.invalidations[_]+1:1)},advance:()=>{l.advance=!0}},u={flat:lt(e),linear:lt(i),dpr:lt(t),setCamera:_=>{c.camera.set(_),c.composer&&(c.composer.passes.forEach(w=>{w instanceof hd&&(w.camera=_)}),c.invalidate("Canvas: setting camera"))},raycastableObjects:new Set,interactiveObjects:new Set,raycaster:new y1,lastIntersection:null,addRaycastableObject:_=>{u.raycastableObjects.add(_)},removeRaycastableObject:_=>{u.raycastableObjects.delete(_)},addInteractiveObject:_=>{u.interactiveObjects.add(_)},removeInteractiveObject:_=>{u.interactiveObjects.delete(_)},addPass:_=>{!c.composer||(c.composer.addPass(_),c.invalidate("Canvas: adding pass"))},removePass:_=>{!c.composer||(c.composer.removePass(_),c.invalidate("Canvas: removing pass"))}},f={dispose:async(_=!1)=>{await Dr(),!(!f.shouldDispose&&!_)&&(f.disposableObjects.forEach((w,y)=>{var b;(w===0||_)&&((b=y==null?void 0:y.dispose)==null||b.call(y),f.disposableObjects.delete(y))}),f.shouldDispose=!1)},collectDisposableObjects:(_,w)=>{const y=w!=null?w:[];return _&&((_==null?void 0:_.dispose)&&typeof _.dispose=="function"&&_.type!=="Scene"&&y.push(_),Object.entries(_).forEach(([b,x])=>{if(b==="parent"||b==="children"||typeof x!="object")return;const M=x;M!=null&&M.dispose&&f.collectDisposableObjects(M,y)})),y},addDisposableObjects:_=>{_.forEach(w=>{const y=f.disposableObjects.get(w);y?f.disposableObjects.set(w,y+1):f.disposableObjects.set(w,1)})},removeDisposableObjects:_=>{_.length!==0&&(_.forEach(w=>{const y=f.disposableObjects.get(w);y&&y>0&&f.disposableObjects.set(w,y-1)}),f.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1};return In("threlte",c),In("threlte-root",u),In("threlte-render-context",l),In("threlte-audio-context",a),In("threlte-disposal-context",f),{ctx:c,rootCtx:u,renderCtx:l,audioCtx:a,disposalCtx:f,getCtx:()=>c,getRootCtx:()=>u,getRenderCtx:()=>l,getAudioCtx:()=>a,getDisposalCtx:()=>f}};function Ao(i,e){const t=lt(i);let n=i;const r=t.subscribe(a=>n=a);return Ot(r),{...t,set:a=>{if((a==null?void 0:a.uuid)===(n==null?void 0:n.uuid))return;const l=n;t.set(a),e==null||e(a,l)},update:a=>{const l=a(n);if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const c=n;t.set(l),e==null||e(l,c)}}}const En=()=>Hn("threlte");function B1(i){let e;const t=i[8].default,n=dt(t,i,i[7],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,[s]){n&&n.p&&(!e||s&128)&&pt(n,t,r,r[7],e?ht(t,r[7],s,null):mt(r[7]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}const V1=()=>({onChildMount:Hn("threlte-hierarchical-object-on-mount"),onChildDestroy:Hn("threlte-hierarchical-object-on-destroy")}),md=()=>Hn("threlte-hierarchical-parent-context");function H1(i,e,t){var _;let n,{$$slots:r={},$$scope:s}=e,{object:o=void 0}=e,{children:a=[]}=e,{onChildMount:l=void 0}=e;const c=w=>{a.push(w),t(1,a),l==null||l(w)};let{onChildDestroy:u=void 0}=e;const f=w=>{const y=a.findIndex(b=>b.uuid===w.uuid);y!==-1&&a.splice(y,1),t(1,a),u==null||u(w)},{invalidate:d}=En(),m=md();Fe(i,m,w=>t(6,n=w));let{parent:g=n}=e;const h=V1();o&&((_=h.onChildMount)==null||_.call(h,o),d("HierarchicalObject: object added"));const p=Ao(o,(w,y)=>{var b,x;y&&((b=h.onChildDestroy)==null||b.call(h,y),d("HierarchicalObject: object added")),w&&((x=h.onChildMount)==null||x.call(h,w),d("HierarchicalObject: object removed"))});return Ot(()=>{var w;o&&((w=h.onChildDestroy)==null||w.call(h,o),d("HierarchicalObject: object removed"))}),In("threlte-hierarchical-object-on-mount",c),In("threlte-hierarchical-object-on-destroy",f),In("threlte-hierarchical-parent-context",p),i.$$set=w=>{"object"in w&&t(3,o=w.object),"children"in w&&t(1,a=w.children),"onChildMount"in w&&t(4,l=w.onChildMount),"onChildDestroy"in w&&t(5,u=w.onChildDestroy),"parent"in w&&t(2,g=w.parent),"$$scope"in w&&t(7,s=w.$$scope)},i.$$.update=()=>{i.$$.dirty&64&&t(2,g=n),i.$$.dirty&8&&p.set(o)},[m,a,g,o,l,u,n,s,r]}class W1 extends We{constructor(e){super(),He(this,e,H1,B1,Be,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function j1(i){let e;const t=i[1].default,n=dt(t,i,i[4],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&16)&&pt(n,t,r,r[4],e?ht(t,r[4],s,null):mt(r[4]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function q1(i){let e,t;return e=new W1({props:{object:i[0],onChildMount:i[2],onChildDestroy:i[3],$$slots:{default:[j1]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,[r]){const s={};r&1&&(s.object=n[0]),r&1&&(s.onChildMount=n[2]),r&1&&(s.onChildDestroy=n[3]),r&16&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function X1(i,e,t){let{$$slots:n={},$$scope:r}=e,{object:s}=e;const o=l=>s.add(l),a=l=>s.remove(l);return i.$$set=l=>{"object"in l&&t(0,s=l.object),"$$scope"in l&&t(4,r=l.$$scope)},[s,n,o,a,r]}class Eo extends We{constructor(e){super(),He(this,e,X1,q1,Be,{object:0})}}const Y1=()=>{const i=lt({width:0,height:0});let e={width:0,height:0};const t=i.subscribe(o=>e=o);Ot(t);let n;const r=()=>{const o=e;if(!n||!n.parentElement)return;const{clientWidth:a,clientHeight:l}=n.parentElement;(a!==o.width||l!==o.height)&&i.set({width:a,height:l})},s=o=>{n=o,r(),window.addEventListener("resize",r)};return So?(Ot(()=>{window.removeEventListener("resize",r)}),{parentSizeAction:s,parentSize:i}):{parentSize:i,parentSizeAction:s}};function Yc(i){let e,t;return e=new Eo({props:{object:i[0].scene,$$slots:{default:[Z1]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r[1]&4&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function Z1(i){let e;const t=i[29].default,n=dt(t,i,i[33],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4)&&pt(n,t,r,r[33],e?ht(t,r[33],s,null):mt(r[33]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function K1(i){let e,t,n,r,s=i[2]&&Yc(i);return{c(){e=he("canvas"),s&&s.c(),W(e,"class","svelte-o3oskp")},m(o,a){ue(o,e,a),s&&s.m(e,null),i[30](e),t=!0,n||(r=[Ei(i[3].call(null,e)),Ge(e,"click",i[9]),Ge(e,"contextmenu",i[10]),Ge(e,"pointerup",i[13]),Ge(e,"pointerdown",i[11]),Ge(e,"pointermove",i[12]),Ge(e,"pointerenter",i[31]),Ge(e,"pointerleave",i[32])],n=!0)},p(o,a){o[2]?s?(s.p(o,a),a[0]&4&&U(s,1)):(s=Yc(o),s.c(),U(s,1),s.m(e,null)):s&&(ut(),q(s,1,1,()=>{s=null}),ft())},i(o){t||(U(s),t=!0)},o(o){q(s),t=!1},d(o){o&&le(e),s&&s.d(),i[30](null),n=!1,Nt(r)}}}const Zc=new Set;function J1(i,e,t){let n,r,s,o,{$$slots:a={},$$scope:l}=e,{dpr:c=So?window.devicePixelRatio:1}=e,{flat:u=!1}=e,{linear:f=!1}=e,{frameloop:d="demand"}=e,{debugFrameloop:m=!1}=e,{shadows:g=!0}=e,{shadowMapType:h=Gf}=e,{size:p=void 0}=e,{rendererParameters:_=void 0}=e,w,y=!1;const b=lt(p),{parentSize:x,parentSizeAction:M}=Y1(),L=G1(f,u,c,b,x,m,d),{getCtx:v,renderCtx:A,disposalCtx:S}=L,{ctx:I,rootCtx:N,audioCtx:D}=L;U1(I),Zc.add(I.invalidate),Ot(()=>{Zc.delete(I.invalidate)});const{size:O,scene:k}=I;Fe(i,O,me=>t(26,r=me));const{flat:P,linear:K,dpr:Z}=N;Fe(i,P,me=>t(27,s=me)),Fe(i,K,me=>t(28,o=me)),Fe(i,Z,me=>t(25,n=me)),In("threlte-parent",lt(k)),Fr(()=>{!w||(T1(I,w,_),jc(I,o,s),qc(I,r,n),Xc(I,g,h),t(2,y=!0))}),F1(I,N,A,S);const{onClick:j,onContextMenu:V,onPointerDown:X,onPointerMove:re,onPointerUp:ae}=D1(I,N,A);Ot(()=>{S.dispose(!0)});function be(me){bt[me?"unshift":"push"](()=>{w=me,t(1,w)})}const Ae=()=>v().pointerOverCanvas.set(!0),H=()=>v().pointerOverCanvas.set(!1);return i.$$set=me=>{"dpr"in me&&t(14,c=me.dpr),"flat"in me&&t(15,u=me.flat),"linear"in me&&t(16,f=me.linear),"frameloop"in me&&t(17,d=me.frameloop),"debugFrameloop"in me&&t(18,m=me.debugFrameloop),"shadows"in me&&t(19,g=me.shadows),"shadowMapType"in me&&t(20,h=me.shadowMapType),"size"in me&&t(21,p=me.size),"rendererParameters"in me&&t(22,_=me.rendererParameters),"$$scope"in me&&t(33,l=me.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&2097152&&b.set(p),i.$$.dirty[0]&65536&&en(K,o=f,o),i.$$.dirty[0]&32768&&en(P,s=u,s),i.$$.dirty[0]&16384&&en(Z,n=c,n),i.$$.dirty[0]&402653184&&jc(v(),o,s),i.$$.dirty[0]&100663296&&qc(v(),r,n),i.$$.dirty[0]&1572864&&Xc(v(),g,h)},[I,w,y,M,v,O,P,K,Z,j,V,X,re,ae,c,u,f,d,m,g,h,p,_,N,D,n,r,s,o,a,be,Ae,H,l]}class Q1 extends We{constructor(e){super(),He(this,e,J1,K1,Be,{dpr:14,flat:15,linear:16,frameloop:17,debugFrameloop:18,shadows:19,shadowMapType:20,size:21,rendererParameters:22,ctx:0,rootCtx:23,audioCtx:24},null,[-1,-1])}get ctx(){return this.$$.ctx[0]}get rootCtx(){return this.$$.ctx[23]}get audioCtx(){return this.$$.ctx[24]}}const To=()=>Hn("threlte-root"),$1=()=>Hn("threlte-disposal-context");function ev(i){let e;const t=i[9].default,n=dt(t,i,i[8],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,[s]){n&&n.p&&(!e||s&256)&&pt(n,t,r,r[8],e?ht(t,r[8],s,null):mt(r[8]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}const Kc="threlte-disposable-object-context";function tv(i,e,t){var p;let n,r,{$$slots:s={},$$scope:o}=e;const{collectDisposableObjects:a,addDisposableObjects:l,removeDisposableObjects:c}=$1();let{object:u=void 0}=e,f=u,{dispose:d=void 0}=e;const m=Hn(Kc);Fe(i,m,_=>t(7,r=_));const g=lt((p=d!=null?d:r)!=null?p:!0);Fe(i,g,_=>t(6,n=_)),In(Kc,g);let h=n?a(u):[];return l(h),Ot(()=>{c(h)}),i.$$set=_=>{"object"in _&&t(2,u=_.object),"dispose"in _&&t(3,d=_.dispose),"$$scope"in _&&t(8,o=_.$$scope)},i.$$.update=()=>{var _;i.$$.dirty&136&&g.set((_=d!=null?d:r)!=null?_:!0),i.$$.dirty&116&&u!==f&&(c(h),t(5,h=n?a(u):[]),l(h),t(4,f=u))},[m,g,u,d,f,h,n,r,o,s]}class os extends We{constructor(e){super(),He(this,e,tv,ev,Be,{object:2,dispose:3})}}function nv(i,e,t){let n,r,{object:s}=e;const o=Ao(s);Fe(i,o,c=>t(4,r=c));const a=Hn("threlte-layers");Fe(i,a,c=>t(3,n=c));const{invalidate:l}=En();return i.$$set=c=>{"object"in c&&t(2,s=c.object)},i.$$.update=()=>{if(i.$$.dirty&4&&o.set(s),i.$$.dirty&24){if(n==="all")r.layers.enableAll();else if(n==="none")r.layers.disableAll();else if(Array.isArray(n))for(let c=0;c<32;c+=1){const u=c;n.includes(u)?r.layers.enable(c):r.layers.disable(c)}else n!==void 0&&r.layers.set(n);l("LayerableObject")}},[o,a,s,n,r]}class iv extends We{constructor(e){super(),He(this,e,nv,null,Be,{object:2})}}const er=(i,e)=>{var a;if(!So)return{start:()=>{},stop:()=>{},started:zf(!1)};const t=Hn("threlte-render-context"),n={fn:i,order:e==null?void 0:e.order,debugFrameloopMessage:e==null?void 0:e.debugFrameloopMessage},r=lt(!1),s=()=>{t.frameHandlers.delete(n),r.set(!1)},o=()=>{t.frameHandlers.add(n),r.set(!0)};return((a=e==null?void 0:e.autostart)==null||a)&&o(),Ot(()=>{s()}),{start:o,stop:s,started:{subscribe:r.subscribe}}},gd=()=>{const i=lt(!1);return(async()=>{await Dr(),i.set(!0)})(),i};function rv(i,e,t){let n,r,{object:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e;const u=new B,f=ci(),{invalidate:d}=En(),m=gd();Fe(i,m,y=>t(8,r=y));const g=async()=>{r||await Dr(),f("transform")},h=async()=>{d("TransformableObject: transformed"),await g()};xn(s).onTransform=h;const{start:p,stop:_}=er(async()=>{c&&!l&&c instanceof xt&&(c.getWorldPosition(u),s.lookAt(u),await g())},{autostart:!1,debugFrameloopMessage:"TransformableObject: tracking object"}),w=Ao(s);return Fe(i,w,y=>t(7,n=y)),i.$$set=y=>{"object"in y&&t(2,s=y.object),"position"in y&&t(3,o=y.position),"scale"in y&&t(4,a=y.scale),"rotation"in y&&t(5,l=y.rotation),"lookAt"in y&&t(6,c=y.lookAt)},i.$$.update=()=>{var y,b,x,M,L,v,A,S,I,N,D,O,k;i.$$.dirty&4&&w.set(s),i.$$.dirty&232&&(o&&(n.position.set((y=o.x)!=null?y:0,(b=o.y)!=null?b:0,(x=o.z)!=null?x:0),h()),c&&!l&&(c instanceof xt?p():(_(),n.lookAt((M=c.x)!=null?M:0,(L=c.y)!=null?L:0,(v=c.z)!=null?v:0),h())),c||_()),i.$$.dirty&144&&a&&(typeof a=="number"?n.scale.set(a,a,a):n.scale.set((A=a.x)!=null?A:1,(S=a.y)!=null?S:1,(I=a.z)!=null?I:1),h()),i.$$.dirty&160&&l&&(n.rotation.set((N=l.x)!=null?N:0,(D=l.y)!=null?D:0,(O=l.z)!=null?O:0,(k=l.order)!=null?k:"XYZ"),h())},[m,w,s,o,a,l,c,n]}class Co extends We{constructor(e){super(),He(this,e,rv,null,Be,{object:2,position:3,scale:4,rotation:5,lookAt:6})}}function sv(i,e,t){let n,r,s,{object:o}=e,{viewportAware:a=!1}=e;const l=ci(),{camera:c,invalidate:u}=En();Fe(i,c,M=>t(8,s=M));const f=new yo,d=new At,m=M=>M.type==="Mesh",g=new B,h=()=>s?(d.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse),f.setFromProjectionMatrix(d),m(o)?f.intersectsObject(o):(o.getWorldPosition(g),f.containsPoint(g))):!0,p=gd();Fe(i,p,M=>t(7,r=M));let{inViewport:_=h()}=e;const w=async M=>{M?(r||await Dr(),l("viewportenter",o)):(r||await Dr(),l("viewportleave",o))},{start:y,stop:b,started:x}=er(()=>{const M=h();_===void 0?(t(3,_=h()),w(_)):M!==_&&(w(M),t(3,_=M))},{autostart:a,debugFrameloopMessage:"ViewportAwareObject: tracking viewport visibility"});return Fe(i,x,M=>t(6,n=M)),u("ViewportAwareObject"),i.$$set=M=>{"object"in M&&t(4,o=M.object),"viewportAware"in M&&t(5,a=M.viewportAware),"inViewport"in M&&t(3,_=M.inViewport)},i.$$.update=()=>{i.$$.dirty&96&&(a&&!n?y():!a&&n&&b())},[c,p,x,_,o,a,n]}class ov extends We{constructor(e){super(),He(this,e,sv,null,Be,{object:4,viewportAware:5,inViewport:3})}}function av(i){let e;const t=i[14].default,n=dt(t,i,i[18],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&262144)&&pt(n,t,r,r[18],e?ht(t,r[18],s,null):mt(r[18]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function lv(i){let e,t;return e=new Eo({props:{object:i[1],$$slots:{default:[av]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r&2&&(s.object=n[1]),r&262144&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function cv(i){let e,t,n,r,s,o,a,l,c;e=new iv({props:{object:i[1]}}),n=new Co({props:{object:i[1],position:i[2],rotation:i[4],scale:i[3],lookAt:i[5]}}),s=new os({props:{object:i[1],dispose:i[7],$$slots:{default:[lv]},$$scope:{ctx:i}}});function u(d){i[15](d)}let f={object:i[1],viewportAware:i[6]};return i[0]!==void 0&&(f.inViewport=i[0]),a=new ov({props:f}),bt.push(()=>jt(a,"inViewport",u)),a.$on("viewportenter",i[16]),a.$on("viewportleave",i[17]),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment),r=Oe(),De(s.$$.fragment),o=Oe(),De(a.$$.fragment)},m(d,m){Te(e,d,m),ue(d,t,m),Te(n,d,m),ue(d,r,m),Te(s,d,m),ue(d,o,m),Te(a,d,m),c=!0},p(d,[m]){const g={};m&2&&(g.object=d[1]),e.$set(g);const h={};m&2&&(h.object=d[1]),m&4&&(h.position=d[2]),m&16&&(h.rotation=d[4]),m&8&&(h.scale=d[3]),m&32&&(h.lookAt=d[5]),n.$set(h);const p={};m&2&&(p.object=d[1]),m&128&&(p.dispose=d[7]),m&262146&&(p.$$scope={dirty:m,ctx:d}),s.$set(p);const _={};m&2&&(_.object=d[1]),m&64&&(_.viewportAware=d[6]),!l&&m&1&&(l=!0,_.inViewport=d[0],Wt(()=>l=!1)),a.$set(_)},i(d){c||(U(e.$$.fragment,d),U(n.$$.fragment,d),U(s.$$.fragment,d),U(a.$$.fragment,d),c=!0)},o(d){q(e.$$.fragment,d),q(n.$$.fragment,d),q(s.$$.fragment,d),q(a.$$.fragment,d),c=!1},d(d){Ce(e,d),d&&le(t),Ce(n,d),d&&le(r),Ce(s,d),d&&le(o),Ce(a,d)}}}function uv(i,e,t){let{$$slots:n={},$$scope:r}=e,{object:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{viewportAware:u=!1}=e,{inViewport:f=!1}=e,{castShadow:d=void 0}=e,{receiveShadow:m=void 0}=e,{frustumCulled:g=void 0}=e,{renderOrder:h=void 0}=e,{visible:p=void 0}=e,{dispose:_=void 0}=e,{userData:w=void 0}=e;const{invalidate:y}=En(),b=()=>s;function x(v){f=v,t(0,f)}function M(v){Ze.call(this,i,v)}function L(v){Ze.call(this,i,v)}return i.$$set=v=>{"object"in v&&t(1,s=v.object),"position"in v&&t(2,o=v.position),"scale"in v&&t(3,a=v.scale),"rotation"in v&&t(4,l=v.rotation),"lookAt"in v&&t(5,c=v.lookAt),"viewportAware"in v&&t(6,u=v.viewportAware),"inViewport"in v&&t(0,f=v.inViewport),"castShadow"in v&&t(8,d=v.castShadow),"receiveShadow"in v&&t(9,m=v.receiveShadow),"frustumCulled"in v&&t(10,g=v.frustumCulled),"renderOrder"in v&&t(11,h=v.renderOrder),"visible"in v&&t(12,p=v.visible),"dispose"in v&&t(7,_=v.dispose),"userData"in v&&t(13,w=v.userData),"$$scope"in v&&t(18,r=v.$$scope)},i.$$.update=()=>{i.$$.dirty&16128&&(p!==void 0&&(b().visible=p),d!==void 0&&(b().castShadow=d),m!==void 0&&(b().receiveShadow=m),g!==void 0&&(b().frustumCulled=g),h!==void 0&&(b().renderOrder=h),w!==void 0&&(b().userData={...b().userData,...w}),y("Object3DInstance: props changed"))},[f,s,o,a,l,c,u,_,d,m,g,h,p,w,n,x,M,L,r]}class gs extends We{constructor(e){super(),He(this,e,uv,cv,Be,{object:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:8,receiveShadow:9,frustumCulled:10,renderOrder:11,visible:12,dispose:7,userData:13})}}function fv(i){let e;const t=i[17].default,n=dt(t,i,i[21],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&2097152)&&pt(n,t,r,r[21],e?ht(t,r[21],s,null):mt(r[21]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function dv(i){let e,t,n;function r(o){i[18](o)}let s={object:i[1],lookAt:i[5],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],position:i[2],scale:i[3],rotation:i[4],viewportAware:i[6],visible:i[11],userData:i[12],dispose:i[13],$$slots:{default:[fv]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new gs({props:s}),bt.push(()=>jt(e,"inViewport",r)),e.$on("viewportenter",i[19]),e.$on("viewportleave",i[20]),{c(){De(e.$$.fragment)},m(o,a){Te(e,o,a),n=!0},p(o,[a]){const l={};a&2&&(l.object=o[1]),a&32&&(l.lookAt=o[5]),a&128&&(l.castShadow=o[7]),a&256&&(l.receiveShadow=o[8]),a&512&&(l.frustumCulled=o[9]),a&1024&&(l.renderOrder=o[10]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.viewportAware=o[6]),a&2048&&(l.visible=o[11]),a&4096&&(l.userData=o[12]),a&8192&&(l.dispose=o[13]),a&2097152&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Wt(()=>t=!1)),e.$set(l)},i(o){n||(U(e.$$.fragment,o),n=!0)},o(o){q(e.$$.fragment,o),n=!1},d(o){Ce(e,o)}}}function hv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{camera:o}=e,{position:a=void 0}=e,{scale:l=void 0}=e,{rotation:c=void 0}=e,{lookAt:u=void 0}=e,{viewportAware:f=!1}=e,{inViewport:d=!1}=e,{castShadow:m=void 0}=e,{receiveShadow:g=void 0}=e,{frustumCulled:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:w=void 0}=e,{dispose:y=void 0}=e,{useCamera:b=!1}=e;const x=Ao(o);Fe(i,x,S=>t(16,n=S));const{setCamera:M}=To();function L(S){d=S,t(0,d)}function v(S){Ze.call(this,i,S)}function A(S){Ze.call(this,i,S)}return i.$$set=S=>{"camera"in S&&t(1,o=S.camera),"position"in S&&t(2,a=S.position),"scale"in S&&t(3,l=S.scale),"rotation"in S&&t(4,c=S.rotation),"lookAt"in S&&t(5,u=S.lookAt),"viewportAware"in S&&t(6,f=S.viewportAware),"inViewport"in S&&t(0,d=S.inViewport),"castShadow"in S&&t(7,m=S.castShadow),"receiveShadow"in S&&t(8,g=S.receiveShadow),"frustumCulled"in S&&t(9,h=S.frustumCulled),"renderOrder"in S&&t(10,p=S.renderOrder),"visible"in S&&t(11,_=S.visible),"userData"in S&&t(12,w=S.userData),"dispose"in S&&t(13,y=S.dispose),"useCamera"in S&&t(15,b=S.useCamera),"$$scope"in S&&t(21,s=S.$$scope)},i.$$.update=()=>{i.$$.dirty&2&&x.set(o),i.$$.dirty&98304&&b&&M(n)},[d,o,a,l,c,u,f,m,g,h,p,_,w,y,x,b,n,r,L,v,A,s]}class pv extends We{constructor(e){super(),He(this,e,hv,dv,Be,{camera:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,useCamera:15})}}function mv(i){let e;const t=i[20].default,n=dt(t,i,i[24],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&16777216)&&pt(n,t,r,r[24],e?ht(t,r[24],s,null):mt(r[24]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function gv(i){let e,t,n;function r(o){i[21](o)}let s={camera:i[0],position:i[2],scale:i[3],rotation:i[4],castShadow:i[6],receiveShadow:i[7],frustumCulled:i[8],renderOrder:i[9],visible:i[10],userData:i[11],dispose:i[12],viewportAware:i[13],lookAt:i[5],useCamera:i[14],$$slots:{default:[mv]},$$scope:{ctx:i}};return i[1]!==void 0&&(s.inViewport=i[1]),e=new pv({props:s}),bt.push(()=>jt(e,"inViewport",r)),e.$on("viewportenter",i[22]),e.$on("viewportleave",i[23]),{c(){De(e.$$.fragment)},m(o,a){Te(e,o,a),n=!0},p(o,[a]){const l={};a&1&&(l.camera=o[0]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.castShadow=o[6]),a&128&&(l.receiveShadow=o[7]),a&256&&(l.frustumCulled=o[8]),a&512&&(l.renderOrder=o[9]),a&1024&&(l.visible=o[10]),a&2048&&(l.userData=o[11]),a&4096&&(l.dispose=o[12]),a&8192&&(l.viewportAware=o[13]),a&32&&(l.lookAt=o[5]),a&16384&&(l.useCamera=o[14]),a&16777216&&(l.$$scope={dirty:a,ctx:o}),!t&&a&2&&(t=!0,l.inViewport=o[1],Wt(()=>t=!1)),e.$set(l)},i(o){n||(U(e.$$.fragment,o),n=!0)},o(o){q(e.$$.fragment,o),n=!1},d(o){Ce(e,o)}}}function _v(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{castShadow:u=void 0}=e,{receiveShadow:f=void 0}=e,{frustumCulled:d=void 0}=e,{renderOrder:m=void 0}=e,{visible:g=void 0}=e,{userData:h=void 0}=e,{dispose:p=void 0}=e,{viewportAware:_=!1}=e,{inViewport:w=!1}=e,{useCamera:y=!0}=e,{near:b=void 0}=e,{far:x=void 0}=e,{fov:M=void 0}=e;const{size:L,invalidate:v}=En();Fe(i,L,D=>t(19,n=D));const A=new Qt(M,n.width/n.height,b,x);function S(D){w=D,t(1,w)}function I(D){Ze.call(this,i,D)}function N(D){Ze.call(this,i,D)}return i.$$set=D=>{"position"in D&&t(2,o=D.position),"scale"in D&&t(3,a=D.scale),"rotation"in D&&t(4,l=D.rotation),"lookAt"in D&&t(5,c=D.lookAt),"castShadow"in D&&t(6,u=D.castShadow),"receiveShadow"in D&&t(7,f=D.receiveShadow),"frustumCulled"in D&&t(8,d=D.frustumCulled),"renderOrder"in D&&t(9,m=D.renderOrder),"visible"in D&&t(10,g=D.visible),"userData"in D&&t(11,h=D.userData),"dispose"in D&&t(12,p=D.dispose),"viewportAware"in D&&t(13,_=D.viewportAware),"inViewport"in D&&t(1,w=D.inViewport),"useCamera"in D&&t(14,y=D.useCamera),"near"in D&&t(16,b=D.near),"far"in D&&t(17,x=D.far),"fov"in D&&t(18,M=D.fov),"$$scope"in D&&t(24,s=D.$$scope)},i.$$.update=()=>{i.$$.dirty&524289&&(t(0,A.aspect=n.width/n.height,A),A.updateProjectionMatrix(),v("PerspectiveCamera: aspect changed")),i.$$.dirty&458753&&(b!==void 0&&t(0,A.near=b,A),x!==void 0&&t(0,A.far=x,A),M!==void 0&&t(0,A.fov=M,A),A.updateProjectionMatrix(),v("PerspectiveCamera: props changed"))},[A,w,o,a,l,c,u,f,d,m,g,h,p,_,y,L,b,x,M,n,r,S,I,N,s]}class vv extends We{constructor(e){super(),He(this,e,_v,gv,Be,{position:2,scale:3,rotation:4,lookAt:5,castShadow:6,receiveShadow:7,frustumCulled:8,renderOrder:9,visible:10,userData:11,dispose:12,viewportAware:13,inViewport:1,useCamera:14,near:16,far:17,fov:18,camera:0})}get camera(){return this.$$.ctx[0]}}const Jc=[],bv=(i,e)=>{const t=Jc.find(r=>r instanceof i);if(t)return t;const n=e();return Jc.push(n),n},Qc={type:"change"},_a={type:"start"},$c={type:"end"};class wv extends Qi{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new B,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ir.ROTATE,MIDDLE:ir.DOLLY,RIGHT:ir.PAN},this.touches={ONE:rr.ROTATE,TWO:rr.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return a.phi},this.getAzimuthalAngle=function(){return a.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(T){T.addEventListener("keydown",Lt),this._domElementKeyEvents=T},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(Qc),n.update(),s=r.NONE},this.update=function(){const T=new B,oe=new Pi().setFromUnitVectors(e.up,new B(0,1,0)),_e=oe.clone().invert(),Se=new B,z=new Pi,ke=2*Math.PI;return function(){const _t=n.object.position;T.copy(_t).sub(n.target),T.applyQuaternion(oe),a.setFromVector3(T),n.autoRotate&&s===r.NONE&&A(L()),n.enableDamping?(a.theta+=l.theta*n.dampingFactor,a.phi+=l.phi*n.dampingFactor):(a.theta+=l.theta,a.phi+=l.phi);let G=n.minAzimuthAngle,we=n.maxAzimuthAngle;return isFinite(G)&&isFinite(we)&&(G<-Math.PI?G+=ke:G>Math.PI&&(G-=ke),we<-Math.PI?we+=ke:we>Math.PI&&(we-=ke),G<=we?a.theta=Math.max(G,Math.min(we,a.theta)):a.theta=a.theta>(G+we)/2?Math.max(G,a.theta):Math.min(we,a.theta)),a.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,a.phi)),a.makeSafe(),a.radius*=c,a.radius=Math.max(n.minDistance,Math.min(n.maxDistance,a.radius)),n.enableDamping===!0?n.target.addScaledVector(u,n.dampingFactor):n.target.add(u),T.setFromSpherical(a),T.applyQuaternion(_e),_t.copy(n.target).add(T),n.object.lookAt(n.target),n.enableDamping===!0?(l.theta*=1-n.dampingFactor,l.phi*=1-n.dampingFactor,u.multiplyScalar(1-n.dampingFactor)):(l.set(0,0,0),u.set(0,0,0)),c=1,f||Se.distanceToSquared(n.object.position)>o||8*(1-z.dot(n.object.quaternion))>o?(n.dispatchEvent(Qc),Se.copy(n.object.position),z.copy(n.object.quaternion),f=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",ee),n.domElement.removeEventListener("pointerdown",$),n.domElement.removeEventListener("pointercancel",yt),n.domElement.removeEventListener("wheel",st),n.domElement.removeEventListener("pointermove",Ie),n.domElement.removeEventListener("pointerup",tt),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Lt)};const n=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=r.NONE;const o=1e-6,a=new oo,l=new oo;let c=1;const u=new B;let f=!1;const d=new je,m=new je,g=new je,h=new je,p=new je,_=new je,w=new je,y=new je,b=new je,x=[],M={};function L(){return 2*Math.PI/60/60*n.autoRotateSpeed}function v(){return Math.pow(.95,n.zoomSpeed)}function A(T){l.theta-=T}function S(T){l.phi-=T}const I=function(){const T=new B;return function(_e,Se){T.setFromMatrixColumn(Se,0),T.multiplyScalar(-_e),u.add(T)}}(),N=function(){const T=new B;return function(_e,Se){n.screenSpacePanning===!0?T.setFromMatrixColumn(Se,1):(T.setFromMatrixColumn(Se,0),T.crossVectors(n.object.up,T)),T.multiplyScalar(_e),u.add(T)}}(),D=function(){const T=new B;return function(_e,Se){const z=n.domElement;if(n.object.isPerspectiveCamera){const ke=n.object.position;T.copy(ke).sub(n.target);let Qe=T.length();Qe*=Math.tan(n.object.fov/2*Math.PI/180),I(2*_e*Qe/z.clientHeight,n.object.matrix),N(2*Se*Qe/z.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(I(_e*(n.object.right-n.object.left)/n.object.zoom/z.clientWidth,n.object.matrix),N(Se*(n.object.top-n.object.bottom)/n.object.zoom/z.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function O(T){n.object.isPerspectiveCamera?c/=T:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*T)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(T){n.object.isPerspectiveCamera?c*=T:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/T)),n.object.updateProjectionMatrix(),f=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function P(T){d.set(T.clientX,T.clientY)}function K(T){w.set(T.clientX,T.clientY)}function Z(T){h.set(T.clientX,T.clientY)}function j(T){m.set(T.clientX,T.clientY),g.subVectors(m,d).multiplyScalar(n.rotateSpeed);const oe=n.domElement;A(2*Math.PI*g.x/oe.clientHeight),S(2*Math.PI*g.y/oe.clientHeight),d.copy(m),n.update()}function V(T){y.set(T.clientX,T.clientY),b.subVectors(y,w),b.y>0?O(v()):b.y<0&&k(v()),w.copy(y),n.update()}function X(T){p.set(T.clientX,T.clientY),_.subVectors(p,h).multiplyScalar(n.panSpeed),D(_.x,_.y),h.copy(p),n.update()}function re(T){T.deltaY<0?k(v()):T.deltaY>0&&O(v()),n.update()}function ae(T){let oe=!1;switch(T.code){case n.keys.UP:D(0,n.keyPanSpeed),oe=!0;break;case n.keys.BOTTOM:D(0,-n.keyPanSpeed),oe=!0;break;case n.keys.LEFT:D(n.keyPanSpeed,0),oe=!0;break;case n.keys.RIGHT:D(-n.keyPanSpeed,0),oe=!0;break}oe&&(T.preventDefault(),n.update())}function be(){if(x.length===1)d.set(x[0].pageX,x[0].pageY);else{const T=.5*(x[0].pageX+x[1].pageX),oe=.5*(x[0].pageY+x[1].pageY);d.set(T,oe)}}function Ae(){if(x.length===1)h.set(x[0].pageX,x[0].pageY);else{const T=.5*(x[0].pageX+x[1].pageX),oe=.5*(x[0].pageY+x[1].pageY);h.set(T,oe)}}function H(){const T=x[0].pageX-x[1].pageX,oe=x[0].pageY-x[1].pageY,_e=Math.sqrt(T*T+oe*oe);w.set(0,_e)}function me(){n.enableZoom&&H(),n.enablePan&&Ae()}function Le(){n.enableZoom&&H(),n.enableRotate&&be()}function pe(T){if(x.length==1)m.set(T.pageX,T.pageY);else{const _e=Ve(T),Se=.5*(T.pageX+_e.x),z=.5*(T.pageY+_e.y);m.set(Se,z)}g.subVectors(m,d).multiplyScalar(n.rotateSpeed);const oe=n.domElement;A(2*Math.PI*g.x/oe.clientHeight),S(2*Math.PI*g.y/oe.clientHeight),d.copy(m)}function ye(T){if(x.length===1)p.set(T.pageX,T.pageY);else{const oe=Ve(T),_e=.5*(T.pageX+oe.x),Se=.5*(T.pageY+oe.y);p.set(_e,Se)}_.subVectors(p,h).multiplyScalar(n.panSpeed),D(_.x,_.y),h.copy(p)}function Xe(T){const oe=Ve(T),_e=T.pageX-oe.x,Se=T.pageY-oe.y,z=Math.sqrt(_e*_e+Se*Se);y.set(0,z),b.set(0,Math.pow(y.y/w.y,n.zoomSpeed)),O(b.y),w.copy(y)}function Q(T){n.enableZoom&&Xe(T),n.enablePan&&ye(T)}function fe(T){n.enableZoom&&Xe(T),n.enableRotate&&pe(T)}function $(T){n.enabled!==!1&&(x.length===0&&(n.domElement.setPointerCapture(T.pointerId),n.domElement.addEventListener("pointermove",Ie),n.domElement.addEventListener("pointerup",tt)),ce(T),T.pointerType==="touch"?R(T):gt(T))}function Ie(T){n.enabled!==!1&&(T.pointerType==="touch"?E(T):de(T))}function tt(T){ge(T),x.length===0&&(n.domElement.releasePointerCapture(T.pointerId),n.domElement.removeEventListener("pointermove",Ie),n.domElement.removeEventListener("pointerup",tt)),n.dispatchEvent($c),s=r.NONE}function yt(T){ge(T)}function gt(T){let oe;switch(T.button){case 0:oe=n.mouseButtons.LEFT;break;case 1:oe=n.mouseButtons.MIDDLE;break;case 2:oe=n.mouseButtons.RIGHT;break;default:oe=-1}switch(oe){case ir.DOLLY:if(n.enableZoom===!1)return;K(T),s=r.DOLLY;break;case ir.ROTATE:if(T.ctrlKey||T.metaKey||T.shiftKey){if(n.enablePan===!1)return;Z(T),s=r.PAN}else{if(n.enableRotate===!1)return;P(T),s=r.ROTATE}break;case ir.PAN:if(T.ctrlKey||T.metaKey||T.shiftKey){if(n.enableRotate===!1)return;P(T),s=r.ROTATE}else{if(n.enablePan===!1)return;Z(T),s=r.PAN}break;default:s=r.NONE}s!==r.NONE&&n.dispatchEvent(_a)}function de(T){switch(s){case r.ROTATE:if(n.enableRotate===!1)return;j(T);break;case r.DOLLY:if(n.enableZoom===!1)return;V(T);break;case r.PAN:if(n.enablePan===!1)return;X(T);break}}function st(T){n.enabled===!1||n.enableZoom===!1||s!==r.NONE||(T.preventDefault(),n.dispatchEvent(_a),re(T),n.dispatchEvent($c))}function Lt(T){n.enabled===!1||n.enablePan===!1||ae(T)}function R(T){switch(Me(T),x.length){case 1:switch(n.touches.ONE){case rr.ROTATE:if(n.enableRotate===!1)return;be(),s=r.TOUCH_ROTATE;break;case rr.PAN:if(n.enablePan===!1)return;Ae(),s=r.TOUCH_PAN;break;default:s=r.NONE}break;case 2:switch(n.touches.TWO){case rr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;me(),s=r.TOUCH_DOLLY_PAN;break;case rr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Le(),s=r.TOUCH_DOLLY_ROTATE;break;default:s=r.NONE}break;default:s=r.NONE}s!==r.NONE&&n.dispatchEvent(_a)}function E(T){switch(Me(T),s){case r.TOUCH_ROTATE:if(n.enableRotate===!1)return;pe(T),n.update();break;case r.TOUCH_PAN:if(n.enablePan===!1)return;ye(T),n.update();break;case r.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Q(T),n.update();break;case r.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;fe(T),n.update();break;default:s=r.NONE}}function ee(T){n.enabled!==!1&&T.preventDefault()}function ce(T){x.push(T)}function ge(T){delete M[T.pointerId];for(let oe=0;oe<x.length;oe++)if(x[oe].pointerId==T.pointerId){x.splice(oe,1);return}}function Me(T){let oe=M[T.pointerId];oe===void 0&&(oe=new je,M[T.pointerId]=oe),oe.set(T.pageX,T.pageY)}function Ve(T){const oe=T.pointerId===x[0].pointerId?x[1]:x[0];return M[oe.pointerId]}n.domElement.addEventListener("contextmenu",ee),n.domElement.addEventListener("pointerdown",$),n.domElement.addEventListener("pointercancel",yt),n.domElement.addEventListener("wheel",st,{passive:!1}),this.update()}}function yv(i){let e,t,n,r;return e=new os({props:{dispose:i[2],object:i[0]}}),n=new Co({props:{object:i[4],position:i[1]}}),n.$on("transform",i[5]),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment)},m(s,o){Te(e,s,o),ue(s,t,o),Te(n,s,o),r=!0},p(s,o){const a={};o[0]&4&&(a.dispose=s[2]),o[0]&1&&(a.object=s[0]),e.$set(a);const l={};o[0]&2&&(l.position=s[1]),n.$set(l)},i(s){r||(U(e.$$.fragment,s),U(n.$$.fragment,s),r=!0)},o(s){q(e.$$.fragment,s),q(n.$$.fragment,s),r=!1},d(s){Ce(e,s),s&&le(t),Ce(n,s)}}}function xv(i,e,t){let n,{autoRotate:r=void 0}=e,{autoRotateSpeed:s=void 0}=e,{dampingFactor:o=void 0}=e,{enableDamping:a=void 0}=e,{enabled:l=void 0}=e,{enablePan:c=void 0}=e,{enableRotate:u=void 0}=e,{enableZoom:f=void 0}=e,{keyPanSpeed:d=void 0}=e,{keys:m=void 0}=e,{maxAzimuthAngle:g=void 0}=e,{maxDistance:h=void 0}=e,{maxPolarAngle:p=void 0}=e,{maxZoom:_=void 0}=e,{minAzimuthAngle:w=void 0}=e,{minDistance:y=void 0}=e,{minPolarAngle:b=void 0}=e,{minZoom:x=void 0}=e,{mouseButtons:M=void 0}=e,{panSpeed:L=void 0}=e,{rotateSpeed:v=void 0}=e,{screenSpacePanning:A=void 0}=e,{touches:S=void 0}=e,{zoomSpeed:I=void 0}=e,{target:N=void 0}=e,{dispose:D=void 0}=e;const O=md();Fe(i,O,H=>t(30,n=H));const{renderer:k,invalidate:P}=En();if(!k)throw new Error("Threlte Context missing: Is <OrbitControls> a child of <Canvas>?");if(!(n instanceof Ja))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const K=ci(),Z=()=>{P("Orbitcontrols: change event"),K("change")},j=()=>K("start"),V=()=>K("end"),X=new wv(n,k.domElement);xn(n).orbitControls=X,X.addEventListener("change",Z),X.addEventListener("start",j),X.addEventListener("end",V),Ot(()=>{n&&delete xn(n).orbitControls,X.removeEventListener("change",Z),X.removeEventListener("start",j),X.removeEventListener("end",V)});const{start:re,stop:ae}=er(()=>X.update(),{autostart:!1,debugFrameloopMessage:"OrbitControlts: updating controls"}),be=new xt,Ae=()=>{t(0,X.target=be.position,X),X.update(),P("OrbitControls: target changed")};return i.$$set=H=>{"autoRotate"in H&&t(6,r=H.autoRotate),"autoRotateSpeed"in H&&t(7,s=H.autoRotateSpeed),"dampingFactor"in H&&t(8,o=H.dampingFactor),"enableDamping"in H&&t(9,a=H.enableDamping),"enabled"in H&&t(10,l=H.enabled),"enablePan"in H&&t(11,c=H.enablePan),"enableRotate"in H&&t(12,u=H.enableRotate),"enableZoom"in H&&t(13,f=H.enableZoom),"keyPanSpeed"in H&&t(14,d=H.keyPanSpeed),"keys"in H&&t(15,m=H.keys),"maxAzimuthAngle"in H&&t(16,g=H.maxAzimuthAngle),"maxDistance"in H&&t(17,h=H.maxDistance),"maxPolarAngle"in H&&t(18,p=H.maxPolarAngle),"maxZoom"in H&&t(19,_=H.maxZoom),"minAzimuthAngle"in H&&t(20,w=H.minAzimuthAngle),"minDistance"in H&&t(21,y=H.minDistance),"minPolarAngle"in H&&t(22,b=H.minPolarAngle),"minZoom"in H&&t(23,x=H.minZoom),"mouseButtons"in H&&t(24,M=H.mouseButtons),"panSpeed"in H&&t(25,L=H.panSpeed),"rotateSpeed"in H&&t(26,v=H.rotateSpeed),"screenSpacePanning"in H&&t(27,A=H.screenSpacePanning),"touches"in H&&t(28,S=H.touches),"zoomSpeed"in H&&t(29,I=H.zoomSpeed),"target"in H&&t(1,N=H.target),"dispose"in H&&t(2,D=H.dispose)},i.$$.update=()=>{i.$$.dirty[0]&1073741761&&(r!==void 0&&t(0,X.autoRotate=r,X),s!==void 0&&t(0,X.autoRotateSpeed=s,X),o!==void 0&&t(0,X.dampingFactor=o,X),a!==void 0&&t(0,X.enableDamping=a,X),l!==void 0&&t(0,X.enabled=l,X),c!==void 0&&t(0,X.enablePan=c,X),u!==void 0&&t(0,X.enableRotate=u,X),f!==void 0&&t(0,X.enableZoom=f,X),d!==void 0&&t(0,X.keyPanSpeed=d,X),m!==void 0&&t(0,X.keys=m,X),g!==void 0&&t(0,X.maxAzimuthAngle=g,X),h!==void 0&&t(0,X.maxDistance=h,X),p!==void 0&&t(0,X.maxPolarAngle=p,X),_!==void 0&&t(0,X.maxZoom=_,X),w!==void 0&&t(0,X.minAzimuthAngle=w,X),y!==void 0&&t(0,X.minDistance=y,X),b!==void 0&&t(0,X.minPolarAngle=b,X),x!==void 0&&t(0,X.minZoom=x,X),M!==void 0&&t(0,X.mouseButtons=M,X),L!==void 0&&t(0,X.panSpeed=L,X),v!==void 0&&t(0,X.rotateSpeed=v,X),A!==void 0&&t(0,X.screenSpacePanning=A,X),S!==void 0&&t(0,X.touches=S,X),I!==void 0&&t(0,X.zoomSpeed=I,X),X.update(),P("OrbitControls: props changed")),i.$$.dirty[0]&576&&(r||a?re():ae())},[X,N,D,O,be,Ae,r,s,o,a,l,c,u,f,d,m,g,h,p,_,w,y,b,x,M,L,v,A,S,I]}class Mv extends We{constructor(e){super(),He(this,e,xv,yv,Be,{autoRotate:6,autoRotateSpeed:7,dampingFactor:8,enableDamping:9,enabled:10,enablePan:11,enableRotate:12,enableZoom:13,keyPanSpeed:14,keys:15,maxAzimuthAngle:16,maxDistance:17,maxPolarAngle:18,maxZoom:19,minAzimuthAngle:20,minDistance:21,minPolarAngle:22,minZoom:23,mouseButtons:24,panSpeed:25,rotateSpeed:26,screenSpacePanning:27,touches:28,zoomSpeed:29,target:1,dispose:2,controls:0},null,[-1,-1])}get controls(){return this.$$.ctx[0]}}const Sv=(i,e)=>e?new Ke(i):new Ke().setHex(new Ke(i).getHex()).convertSRGBToLinear();function Av(i){let e;const t=i[18].default,n=dt(t,i,i[22],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&4194304)&&pt(n,t,r,r[22],e?ht(t,r[22],s,null):mt(r[22]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function Ev(i){let e,t,n;function r(o){i[19](o)}let s={object:i[0],lookAt:i[5],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],position:i[2],scale:i[3],rotation:i[4],viewportAware:i[6],visible:i[11],userData:i[12],dispose:i[13],$$slots:{default:[Av]},$$scope:{ctx:i}};return i[1]!==void 0&&(s.inViewport=i[1]),e=new gs({props:s}),bt.push(()=>jt(e,"inViewport",r)),e.$on("viewportenter",i[20]),e.$on("viewportleave",i[21]),{c(){De(e.$$.fragment)},m(o,a){Te(e,o,a),n=!0},p(o,[a]){const l={};a&1&&(l.object=o[0]),a&32&&(l.lookAt=o[5]),a&128&&(l.castShadow=o[7]),a&256&&(l.receiveShadow=o[8]),a&512&&(l.frustumCulled=o[9]),a&1024&&(l.renderOrder=o[10]),a&4&&(l.position=o[2]),a&8&&(l.scale=o[3]),a&16&&(l.rotation=o[4]),a&64&&(l.viewportAware=o[6]),a&2048&&(l.visible=o[11]),a&4096&&(l.userData=o[12]),a&8192&&(l.dispose=o[13]),a&4194304&&(l.$$scope={dirty:a,ctx:o}),!t&&a&2&&(t=!0,l.inViewport=o[1],Wt(()=>t=!1)),e.$set(l)},i(o){n||(U(e.$$.fragment,o),n=!0)},o(o){q(e.$$.fragment,o),n=!1},d(o){Ce(e,o)}}}function Tv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{light:o}=e,{position:a=void 0}=e,{scale:l=void 0}=e,{rotation:c=void 0}=e,{lookAt:u=void 0}=e,{viewportAware:f=!1}=e,{inViewport:d=!1}=e,{castShadow:m=void 0}=e,{receiveShadow:g=void 0}=e,{frustumCulled:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:w=void 0}=e,{dispose:y=void 0}=e,{color:b=void 0}=e,{intensity:x=void 0}=e;const{invalidate:M}=En(),{linear:L}=To();Fe(i,L,I=>t(17,n=I));function v(I){d=I,t(1,d)}function A(I){Ze.call(this,i,I)}function S(I){Ze.call(this,i,I)}return i.$$set=I=>{"light"in I&&t(0,o=I.light),"position"in I&&t(2,a=I.position),"scale"in I&&t(3,l=I.scale),"rotation"in I&&t(4,c=I.rotation),"lookAt"in I&&t(5,u=I.lookAt),"viewportAware"in I&&t(6,f=I.viewportAware),"inViewport"in I&&t(1,d=I.inViewport),"castShadow"in I&&t(7,m=I.castShadow),"receiveShadow"in I&&t(8,g=I.receiveShadow),"frustumCulled"in I&&t(9,h=I.frustumCulled),"renderOrder"in I&&t(10,p=I.renderOrder),"visible"in I&&t(11,_=I.visible),"userData"in I&&t(12,w=I.userData),"dispose"in I&&t(13,y=I.dispose),"color"in I&&t(15,b=I.color),"intensity"in I&&t(16,x=I.intensity),"$$scope"in I&&t(22,s=I.$$scope)},i.$$.update=()=>{i.$$.dirty&229376&&(x!==void 0&&t(0,o.intensity=x,o),b!==void 0&&t(0,o.color=Sv(b,n),o),M("LightInstance: props changed"))},[o,d,a,l,c,u,f,m,g,h,p,_,w,y,L,b,x,n,r,v,A,S,s]}class _d extends We{constructor(e){super(),He(this,e,Tv,Ev,Be,{light:0,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:1,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,color:15,intensity:16})}}function Cv(i){let e;const t=i[16].default,n=dt(t,i,i[20],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&1048576)&&pt(n,t,r,r[20],e?ht(t,r[20],s,null):mt(r[20]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function Lv(i){let e,t,n;function r(o){i[17](o)}let s={light:i[15],lookAt:i[4],position:i[1],scale:i[2],rotation:i[3],castShadow:i[5],receiveShadow:i[6],frustumCulled:i[7],renderOrder:i[8],visible:i[9],userData:i[10],dispose:i[11],viewportAware:i[12],color:i[13],intensity:i[14],$$slots:{default:[Cv]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new _d({props:s}),bt.push(()=>jt(e,"inViewport",r)),e.$on("viewportenter",i[18]),e.$on("viewportleave",i[19]),{c(){De(e.$$.fragment)},m(o,a){Te(e,o,a),n=!0},p(o,[a]){const l={};a&16&&(l.lookAt=o[4]),a&2&&(l.position=o[1]),a&4&&(l.scale=o[2]),a&8&&(l.rotation=o[3]),a&32&&(l.castShadow=o[5]),a&64&&(l.receiveShadow=o[6]),a&128&&(l.frustumCulled=o[7]),a&256&&(l.renderOrder=o[8]),a&512&&(l.visible=o[9]),a&1024&&(l.userData=o[10]),a&2048&&(l.dispose=o[11]),a&4096&&(l.viewportAware=o[12]),a&8192&&(l.color=o[13]),a&16384&&(l.intensity=o[14]),a&1048576&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Wt(()=>t=!1)),e.$set(l)},i(o){n||(U(e.$$.fragment,o),n=!0)},o(o){q(e.$$.fragment,o),n=!1},d(o){Ce(e,o)}}}function Dv(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{castShadow:c=void 0}=e,{receiveShadow:u=void 0}=e,{frustumCulled:f=void 0}=e,{renderOrder:d=void 0}=e,{visible:m=void 0}=e,{userData:g=void 0}=e,{dispose:h=void 0}=e,{viewportAware:p=!1}=e,{inViewport:_=!1}=e,{color:w=void 0}=e,{intensity:y=void 0}=e;const b=new w1(w,y);function x(v){_=v,t(0,_)}function M(v){Ze.call(this,i,v)}function L(v){Ze.call(this,i,v)}return i.$$set=v=>{"position"in v&&t(1,s=v.position),"scale"in v&&t(2,o=v.scale),"rotation"in v&&t(3,a=v.rotation),"lookAt"in v&&t(4,l=v.lookAt),"castShadow"in v&&t(5,c=v.castShadow),"receiveShadow"in v&&t(6,u=v.receiveShadow),"frustumCulled"in v&&t(7,f=v.frustumCulled),"renderOrder"in v&&t(8,d=v.renderOrder),"visible"in v&&t(9,m=v.visible),"userData"in v&&t(10,g=v.userData),"dispose"in v&&t(11,h=v.dispose),"viewportAware"in v&&t(12,p=v.viewportAware),"inViewport"in v&&t(0,_=v.inViewport),"color"in v&&t(13,w=v.color),"intensity"in v&&t(14,y=v.intensity),"$$scope"in v&&t(20,r=v.$$scope)},[_,s,o,a,l,c,u,f,d,m,g,h,p,w,y,b,n,x,M,L,r]}class Pv extends We{constructor(e){super(),He(this,e,Dv,Lv,Be,{position:1,scale:2,rotation:3,lookAt:4,castShadow:5,receiveShadow:6,frustumCulled:7,renderOrder:8,visible:9,userData:10,dispose:11,viewportAware:12,inViewport:0,color:13,intensity:14,light:15})}get light(){return this.$$.ctx[15]}}function eu(i){let e,t,n,r,s,o;return e=new Eo({props:{object:i[16]}}),n=new Co({props:{object:i[16],position:i[15]}}),s=new os({props:{dispose:i[10],object:i[15]}}),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment),r=Oe(),De(s.$$.fragment)},m(a,l){Te(e,a,l),ue(a,t,l),Te(n,a,l),ue(a,r,l),Te(s,a,l),o=!0},p(a,l){const c={};l&32768&&(c.position=a[15]),n.$set(c);const u={};l&1024&&(u.dispose=a[10]),l&32768&&(u.object=a[15]),s.$set(u)},i(a){o||(U(e.$$.fragment,a),U(n.$$.fragment,a),U(s.$$.fragment,a),o=!0)},o(a){q(e.$$.fragment,a),q(n.$$.fragment,a),q(s.$$.fragment,a),o=!1},d(a){Ce(e,a),a&&le(t),Ce(n,a),a&&le(r),Ce(s,a)}}}function Rv(i){let e;const t=i[18].default,n=dt(t,i,i[22],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&4194304)&&pt(n,t,r,r[22],e?ht(t,r[22],s,null):mt(r[22]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function Iv(i){let e,t,n,r,s=i[15]&&!(i[15]instanceof xt)&&eu(i);function o(l){i[19](l)}let a={light:i[1],position:i[2],scale:i[3],rotation:i[4],castShadow:!!i[14],receiveShadow:i[5],frustumCulled:i[6],renderOrder:i[7],visible:i[8],userData:i[9],dispose:i[10],viewportAware:i[11],color:i[12],intensity:i[13],$$slots:{default:[Rv]},$$scope:{ctx:i}};return i[0]!==void 0&&(a.inViewport=i[0]),t=new _d({props:a}),bt.push(()=>jt(t,"inViewport",o)),t.$on("viewportenter",i[20]),t.$on("viewportleave",i[21]),{c(){s&&s.c(),e=Oe(),De(t.$$.fragment)},m(l,c){s&&s.m(l,c),ue(l,e,c),Te(t,l,c),r=!0},p(l,[c]){l[15]&&!(l[15]instanceof xt)?s?(s.p(l,c),c&32768&&U(s,1)):(s=eu(l),s.c(),U(s,1),s.m(e.parentNode,e)):s&&(ut(),q(s,1,1,()=>{s=null}),ft());const u={};c&2&&(u.light=l[1]),c&4&&(u.position=l[2]),c&8&&(u.scale=l[3]),c&16&&(u.rotation=l[4]),c&16384&&(u.castShadow=!!l[14]),c&32&&(u.receiveShadow=l[5]),c&64&&(u.frustumCulled=l[6]),c&128&&(u.renderOrder=l[7]),c&256&&(u.visible=l[8]),c&512&&(u.userData=l[9]),c&1024&&(u.dispose=l[10]),c&2048&&(u.viewportAware=l[11]),c&4096&&(u.color=l[12]),c&8192&&(u.intensity=l[13]),c&4194304&&(u.$$scope={dirty:c,ctx:l}),!n&&c&1&&(n=!0,u.inViewport=l[0],Wt(()=>n=!1)),t.$set(u)},i(l){r||(U(s),U(t.$$.fragment,l),r=!0)},o(l){q(s),q(t.$$.fragment,l),r=!1},d(l){s&&s.d(l),l&&le(e),Ce(t,l)}}}function kv(i,e,t){let n,{$$slots:r={},$$scope:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{receiveShadow:c=void 0}=e,{frustumCulled:u=void 0}=e,{renderOrder:f=void 0}=e,{visible:d=void 0}=e,{userData:m=void 0}=e,{dispose:g=void 0}=e,{viewportAware:h=!1}=e,{inViewport:p=!1}=e,{color:_=void 0}=e,{intensity:w=void 0}=e,{shadow:y=void 0}=e,{target:b=void 0}=e;const x=new b1(_,w),{invalidate:M}=En(),L=x.target,{start:v,stop:A,started:S}=er(()=>{},{autostart:!1,debugFrameloopMessage:"DirectionalLight: tracking target"});Fe(i,S,P=>t(23,n=P));const I=P=>{P&&P instanceof xt&&!n?(t(1,x.target=P,x),v(),M("DirectionalLight: target changed")):(!P||!(P instanceof xt))&&n&&(t(1,x.target=L,x),A(),M("DirectionalLight: target changed"))},N=P=>{if(P){const{mapSize:K=[512,512],camera:{left:Z=-5,bottom:j=-5,right:V=5,top:X=5,near:re=.5,far:ae=500}={},bias:be=0,radius:Ae=1}=P===!0?{}:P;x.shadow.mapSize.set(K[0],K[1]),t(1,x.shadow.camera.left=Z,x),t(1,x.shadow.camera.top=X,x),t(1,x.shadow.camera.right=V,x),t(1,x.shadow.camera.bottom=j,x),t(1,x.shadow.camera.near=re,x),t(1,x.shadow.camera.far=ae,x),t(1,x.shadow.bias=be,x),t(1,x.shadow.radius=Ae,x)}M("DirectionalLight: shadow changed")};function D(P){p=P,t(0,p)}function O(P){Ze.call(this,i,P)}function k(P){Ze.call(this,i,P)}return i.$$set=P=>{"position"in P&&t(2,o=P.position),"scale"in P&&t(3,a=P.scale),"rotation"in P&&t(4,l=P.rotation),"receiveShadow"in P&&t(5,c=P.receiveShadow),"frustumCulled"in P&&t(6,u=P.frustumCulled),"renderOrder"in P&&t(7,f=P.renderOrder),"visible"in P&&t(8,d=P.visible),"userData"in P&&t(9,m=P.userData),"dispose"in P&&t(10,g=P.dispose),"viewportAware"in P&&t(11,h=P.viewportAware),"inViewport"in P&&t(0,p=P.inViewport),"color"in P&&t(12,_=P.color),"intensity"in P&&t(13,w=P.intensity),"shadow"in P&&t(14,y=P.shadow),"target"in P&&t(15,b=P.target),"$$scope"in P&&t(22,s=P.$$scope)},i.$$.update=()=>{i.$$.dirty&32768&&I(b),i.$$.dirty&16384&&N(y)},[p,x,o,a,l,c,u,f,d,m,g,h,_,w,y,b,L,S,r,D,O,k,s]}class Ov extends We{constructor(e){super(),He(this,e,kv,Iv,Be,{position:2,scale:3,rotation:4,receiveShadow:5,frustumCulled:6,renderOrder:7,visible:8,userData:9,dispose:10,viewportAware:11,inViewport:0,color:12,intensity:13,shadow:14,target:15,light:1})}get light(){return this.$$.ctx[1]}}function Nv(i,e,t){let{object:n}=e,r=n,{interactive:s=!1}=e,{ignorePointer:o=!1}=e;const a=ci(),{addInteractiveObject:l,removeInteractiveObject:c,addRaycastableObject:u,removeRaycastableObject:f}=To(),{invalidate:d}=En(),m=h=>{f(h),c(h),delete xn(h).eventDispatcher},g=(h,p,_)=>{xn(h).eventDispatcher=a,p?(f(h),c(h)):(u(h),_?l(h):c(h))};return Ot(()=>{m(n),d("InteractiveObject: object removed")}),i.$$set=h=>{"object"in h&&t(0,n=h.object),"interactive"in h&&t(1,s=h.interactive),"ignorePointer"in h&&t(2,o=h.ignorePointer)},i.$$.update=()=>{i.$$.dirty&15&&(n!==r?(m(r),g(n,o,s),d("InteractiveObject: object changed"),t(3,r=n)):n===r&&(g(n,o,s),d("InteractiveObject: props changed")))},[n,s,o,r]}class Fv extends We{constructor(e){super(),He(this,e,Nv,null,Be,{object:0,interactive:1,ignorePointer:2})}}function zv(i){let e;const t=i[16].default,n=dt(t,i,i[27],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&134217728)&&pt(n,t,r,r[27],e?ht(t,r[27],s,null):mt(r[27]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function Uv(i){let e,t,n,r,s;function o(l){i[17](l)}let a={object:i[1],lookAt:i[5],position:i[2],scale:i[3],rotation:i[4],castShadow:i[7],receiveShadow:i[8],frustumCulled:i[9],renderOrder:i[10],visible:i[11],userData:i[12],dispose:i[13],viewportAware:i[6],$$slots:{default:[zv]},$$scope:{ctx:i}};return i[0]!==void 0&&(a.inViewport=i[0]),e=new gs({props:a}),bt.push(()=>jt(e,"inViewport",o)),e.$on("viewportenter",i[18]),e.$on("viewportleave",i[19]),r=new Fv({props:{object:i[1],interactive:i[14],ignorePointer:i[15]}}),r.$on("click",i[20]),r.$on("contextmenu",i[21]),r.$on("pointerup",i[22]),r.$on("pointerdown",i[23]),r.$on("pointerenter",i[24]),r.$on("pointerleave",i[25]),r.$on("pointermove",i[26]),{c(){De(e.$$.fragment),n=Oe(),De(r.$$.fragment)},m(l,c){Te(e,l,c),ue(l,n,c),Te(r,l,c),s=!0},p(l,[c]){const u={};c&2&&(u.object=l[1]),c&32&&(u.lookAt=l[5]),c&4&&(u.position=l[2]),c&8&&(u.scale=l[3]),c&16&&(u.rotation=l[4]),c&128&&(u.castShadow=l[7]),c&256&&(u.receiveShadow=l[8]),c&512&&(u.frustumCulled=l[9]),c&1024&&(u.renderOrder=l[10]),c&2048&&(u.visible=l[11]),c&4096&&(u.userData=l[12]),c&8192&&(u.dispose=l[13]),c&64&&(u.viewportAware=l[6]),c&134217728&&(u.$$scope={dirty:c,ctx:l}),!t&&c&1&&(t=!0,u.inViewport=l[0],Wt(()=>t=!1)),e.$set(u);const f={};c&2&&(f.object=l[1]),c&16384&&(f.interactive=l[14]),c&32768&&(f.ignorePointer=l[15]),r.$set(f)},i(l){s||(U(e.$$.fragment,l),U(r.$$.fragment,l),s=!0)},o(l){q(e.$$.fragment,l),q(r.$$.fragment,l),s=!1},d(l){Ce(e,l),l&&le(n),Ce(r,l)}}}function Gv(i,e,t){let{$$slots:n={},$$scope:r}=e,{mesh:s}=e,{position:o=void 0}=e,{scale:a=void 0}=e,{rotation:l=void 0}=e,{lookAt:c=void 0}=e,{viewportAware:u=!1}=e,{inViewport:f=!1}=e,{castShadow:d=void 0}=e,{receiveShadow:m=void 0}=e,{frustumCulled:g=void 0}=e,{renderOrder:h=void 0}=e,{visible:p=void 0}=e,{userData:_=void 0}=e,{dispose:w=void 0}=e,{interactive:y=!1}=e,{ignorePointer:b=!1}=e;function x(k){f=k,t(0,f)}function M(k){Ze.call(this,i,k)}function L(k){Ze.call(this,i,k)}function v(k){Ze.call(this,i,k)}function A(k){Ze.call(this,i,k)}function S(k){Ze.call(this,i,k)}function I(k){Ze.call(this,i,k)}function N(k){Ze.call(this,i,k)}function D(k){Ze.call(this,i,k)}function O(k){Ze.call(this,i,k)}return i.$$set=k=>{"mesh"in k&&t(1,s=k.mesh),"position"in k&&t(2,o=k.position),"scale"in k&&t(3,a=k.scale),"rotation"in k&&t(4,l=k.rotation),"lookAt"in k&&t(5,c=k.lookAt),"viewportAware"in k&&t(6,u=k.viewportAware),"inViewport"in k&&t(0,f=k.inViewport),"castShadow"in k&&t(7,d=k.castShadow),"receiveShadow"in k&&t(8,m=k.receiveShadow),"frustumCulled"in k&&t(9,g=k.frustumCulled),"renderOrder"in k&&t(10,h=k.renderOrder),"visible"in k&&t(11,p=k.visible),"userData"in k&&t(12,_=k.userData),"dispose"in k&&t(13,w=k.dispose),"interactive"in k&&t(14,y=k.interactive),"ignorePointer"in k&&t(15,b=k.ignorePointer),"$$scope"in k&&t(27,r=k.$$scope)},[f,s,o,a,l,c,u,d,m,g,h,p,_,w,y,b,n,x,M,L,v,A,S,I,N,D,O,r]}class as extends We{constructor(e){super(),He(this,e,Gv,Uv,Be,{mesh:1,position:2,scale:3,rotation:4,lookAt:5,viewportAware:6,inViewport:0,castShadow:7,receiveShadow:8,frustumCulled:9,renderOrder:10,visible:11,userData:12,dispose:13,interactive:14,ignorePointer:15})}}const Bv=(i,e)=>{let t=i;return{onChange:(r,s)=>{(e&&!e(r,t)||!e&&r!==t)&&(s(r,t),t=r)}}};function tu(i){let e,t,n;function r(o){i[24](o)}let s={mesh:i[17],castShadow:i[5],receiveShadow:i[6],frustumCulled:void 0,renderOrder:i[7],visible:i[8],userData:i[9],dispose:i[10],interactive:i[11],ignorePointer:i[12],viewportAware:i[4]};return i[0]!==void 0&&(s.inViewport=i[0]),e=new as({props:s}),bt.push(()=>jt(e,"inViewport",r)),e.$on("click",i[20]),e.$on("contextmenu",i[20]),e.$on("pointerup",i[20]),e.$on("pointerdown",i[20]),e.$on("pointerenter",i[20]),e.$on("pointerleave",i[20]),e.$on("pointermove",i[20]),e.$on("viewportenter",i[25]),e.$on("viewportleave",i[26]),{c(){De(e.$$.fragment)},m(o,a){Te(e,o,a),n=!0},p(o,a){const l={};a[0]&131072&&(l.mesh=o[17]),a[0]&32&&(l.castShadow=o[5]),a[0]&64&&(l.receiveShadow=o[6]),a[0]&128&&(l.renderOrder=o[7]),a[0]&256&&(l.visible=o[8]),a[0]&512&&(l.userData=o[9]),a[0]&1024&&(l.dispose=o[10]),a[0]&2048&&(l.interactive=o[11]),a[0]&4096&&(l.ignorePointer=o[12]),a[0]&16&&(l.viewportAware=o[4]),!t&&a[0]&1&&(t=!0,l.inViewport=o[0],Wt(()=>t=!1)),e.$set(l)},i(o){n||(U(e.$$.fragment,o),n=!0)},o(o){q(e.$$.fragment,o),n=!1},d(o){Ce(e,o)}}}function Vv(i){let e=i[17].uuid,t,n,r=tu(i);const s=i[23].default,o=dt(s,i,i[27],null);return{c(){r.c(),t=Oe(),o&&o.c()},m(a,l){r.m(a,l),ue(a,t,l),o&&o.m(a,l),n=!0},p(a,l){l[0]&131072&&Be(e,e=a[17].uuid)?(ut(),q(r,1,1,et),ft(),r=tu(a),r.c(),U(r,1),r.m(t.parentNode,t)):r.p(a,l),o&&o.p&&(!n||l[0]&134217728)&&pt(o,s,a,a[27],n?ht(s,a[27],l,null):mt(a[27]),null)},i(a){n||(U(r),U(o,a),n=!0)},o(a){q(r),q(o,a),n=!1},d(a){r.d(a),a&&le(t),o&&o.d(a)}}}function Hv(i){let e,t,n,r,s,o;return e=new os({props:{dispose:i[10],object:i[14]}}),n=new os({props:{dispose:i[10],object:i[15]}}),s=new gs({props:{object:i[18],position:i[1],scale:i[2],rotation:i[3],lookAt:i[13],$$slots:{default:[Vv]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment),r=Oe(),De(s.$$.fragment)},m(a,l){Te(e,a,l),ue(a,t,l),Te(n,a,l),ue(a,r,l),Te(s,a,l),o=!0},p(a,l){const c={};l[0]&1024&&(c.dispose=a[10]),l[0]&16384&&(c.object=a[14]),e.$set(c);const u={};l[0]&1024&&(u.dispose=a[10]),l[0]&32768&&(u.object=a[15]),n.$set(u);const f={};l[0]&2&&(f.position=a[1]),l[0]&4&&(f.scale=a[2]),l[0]&8&&(f.rotation=a[3]),l[0]&8192&&(f.lookAt=a[13]),l[0]&134356977&&(f.$$scope={dirty:l,ctx:a}),s.$set(f)},i(a){o||(U(e.$$.fragment,a),U(n.$$.fragment,a),U(s.$$.fragment,a),o=!0)},o(a){q(e.$$.fragment,a),q(n.$$.fragment,a),q(s.$$.fragment,a),o=!1},d(a){Ce(e,a),a&&le(t),Ce(n,a),a&&le(r),Ce(s,a)}}}const vd=new xt;vd.scale.set(0,0,0);const nu={matrix:vd.matrix,color:null},Wv=new At().fromArray(new Array(16).fill(0)),va=new Ke(16777215),bd="threlte-instanced-mesh-context",jv=i=>Hn(bd+i);function qv(i,e,t){let n,r=et,s=()=>(r(),r=mo(D,Q=>t(17,n=Q)),D),o;i.$$.on_destroy.push(()=>r());let{$$slots:a={},$$scope:l}=e,{position:c=void 0}=e,{scale:u=void 0}=e,{rotation:f=void 0}=e,{viewportAware:d=!1}=e,{inViewport:m=!1}=e,{castShadow:g=void 0}=e,{receiveShadow:h=void 0}=e,{renderOrder:p=void 0}=e,{visible:_=void 0}=e,{userData:w=void 0}=e,{dispose:y=void 0}=e,{interactive:b=!1}=e,{ignorePointer:x=!1}=e,{lookAt:M=void 0}=e,{geometry:L}=e,{material:v}=e,{count:A=void 0}=e,{id:S=""}=e;const{onChange:I}=Bv(v),N=Q=>Q===void 0,D=lt(new xr(L,v,N(A)?0:A));s();const O=new xt,k=[],{invalidate:P}=En(),K=(Q,fe)=>{const $=k.findIndex(Ie=>Ie===Q);if($===-1){console.warn("Instanced Mesh: Instance not found");return}fe($)},{start:Z,stop:j,started:V}=er(()=>{n.dispose(),en(D,n=new xr(L,v,k.length),n),k.forEach((Q,fe)=>{Ae(Q,fe),Q.color?n.setColorAt(fe,Q.color):n.setColorAt(fe,va)}),en(D,n.instanceMatrix.needsUpdate=!0,n),n.instanceColor&&en(D,n.instanceColor.needsUpdate=!0,n),j()},{autostart:!1,debugFrameloopMessage:"Instanced Mesh: auto instance count change queued"});Fe(i,V,Q=>t(29,o=Q));const X=Q=>{if(N(A))k.push(Q),o||Z();else{const fe=k.findIndex($=>$===nu);fe!==-1?k[fe]=Q:k.push(Q),k.length>A&&console.warn("Instanced Mesh: More instances requested than allocated, increase count on <")}ae(Q),P("Instanced Mesh: Instance added")},re=Q=>{if(N(A)){const fe=k.findIndex($=>$===Q);k.splice(fe,1),o||Z()}else{be(Q);const fe=k.findIndex($=>$===Q);fe>=A?k.splice(fe,1):k.splice(fe,1,nu)}P("Instanced Mesh: Instance removed")},ae=Q=>{Q.color||K(Q,fe=>{n.setColorAt(fe,va),n.instanceColor&&en(D,n.instanceColor.needsUpdate=!0,n)})},be=Q=>{K(Q,fe=>{n.setMatrixAt(fe,Wv),en(D,n.instanceMatrix.needsUpdate=!0,n),P("Instanced Mesh: instance matrix resetted")})},Ae=(Q,fe)=>{n.setMatrixAt(fe,Q.matrix),en(D,n.instanceMatrix.needsUpdate=!0,n),P("Instanced Mesh: instance matrix set")},H=Q=>{K(Q,fe=>{Ae(Q,fe)})},me=Q=>{K(Q,fe=>{var $;n.setColorAt(fe,($=Q.color)!=null?$:va),n.instanceColor&&en(D,n.instanceColor.needsUpdate=!0,n),P("Instanced Mesh: instance color set")})};In(bd+S,{registerInstance:X,removeInstance:re,setInstanceMatrix:H,setInstanceColor:me,parentObject:O});const Le=Q=>{if(Q.detail.instanceId===void 0)return;const fe=k[Q.detail.instanceId];fe&&fe.pointerEventDispatcher&&fe.pointerEventDispatcher(Q.type,Q.detail)};function pe(Q){m=Q,t(0,m)}function ye(Q){Ze.call(this,i,Q)}function Xe(Q){Ze.call(this,i,Q)}return i.$$set=Q=>{"position"in Q&&t(1,c=Q.position),"scale"in Q&&t(2,u=Q.scale),"rotation"in Q&&t(3,f=Q.rotation),"viewportAware"in Q&&t(4,d=Q.viewportAware),"inViewport"in Q&&t(0,m=Q.inViewport),"castShadow"in Q&&t(5,g=Q.castShadow),"receiveShadow"in Q&&t(6,h=Q.receiveShadow),"renderOrder"in Q&&t(7,p=Q.renderOrder),"visible"in Q&&t(8,_=Q.visible),"userData"in Q&&t(9,w=Q.userData),"dispose"in Q&&t(10,y=Q.dispose),"interactive"in Q&&t(11,b=Q.interactive),"ignorePointer"in Q&&t(12,x=Q.ignorePointer),"lookAt"in Q&&t(13,M=Q.lookAt),"geometry"in Q&&t(14,L=Q.geometry),"material"in Q&&t(15,v=Q.material),"count"in Q&&t(21,A=Q.count),"id"in Q&&t(22,S=Q.id),"$$scope"in Q&&t(27,l=Q.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&32768&&I(v,Q=>{en(D,n.material=Q,n)})},[m,c,u,f,d,g,h,p,_,w,y,b,x,M,L,v,D,n,O,V,Le,A,S,a,pe,ye,Xe,l]}class wd extends We{constructor(e){super(),He(this,e,qv,Hv,Be,{position:1,scale:2,rotation:3,viewportAware:4,inViewport:0,castShadow:5,receiveShadow:6,renderOrder:7,visible:8,userData:9,dispose:10,interactive:11,ignorePointer:12,lookAt:13,geometry:14,material:15,count:21,id:22,instancedMesh:16},null,[-1,-1])}get instancedMesh(){return this.$$.ctx[16]}}function Xv(i){let e;const t=i[8].default,n=dt(t,i,i[9],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&512)&&pt(n,t,r,r[9],e?ht(t,r[9],s,null):mt(r[9]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function Yv(i){let e,t,n,r;return e=new Eo({props:{object:i[4],$$slots:{default:[Xv]},$$scope:{ctx:i}}}),n=new Co({props:{object:i[4],position:i[0],scale:i[1],rotation:i[2],lookAt:i[3]}}),n.$on("transform",i[5]),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment)},m(s,o){Te(e,s,o),ue(s,t,o),Te(n,s,o),r=!0},p(s,[o]){const a={};o&512&&(a.$$scope={dirty:o,ctx:s}),e.$set(a);const l={};o&1&&(l.position=s[0]),o&2&&(l.scale=s[1]),o&4&&(l.rotation=s[2]),o&8&&(l.lookAt=s[3]),n.$set(l)},i(s){r||(U(e.$$.fragment,s),U(n.$$.fragment,s),r=!0)},o(s){q(e.$$.fragment,s),q(n.$$.fragment,s),r=!1},d(s){Ce(e,s),s&&le(t),Ce(n,s)}}}function Zv(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{color:c=void 0}=e,{id:u=""}=e;const{registerInstance:f,setInstanceMatrix:d,removeInstance:m,setInstanceColor:g,parentObject:h}=jv(u),p=new xt,_=new At,w=ci(),y=()=>{var N;return h.uuid===((N=p.parent)==null?void 0:N.uuid)},b=N=>N!==void 0?N instanceof Ke?N:new Ke(N):null,x={color:b(c),matrix:p.matrix,pointerEventDispatcher:w},M=N=>{x.color=b(N),g(x)},L=()=>{let N=p.parent;const D=[];for(;N&&h&&N.uuid!==h.uuid&&(D.push(N),!!N.parent);)N=N.parent;p.updateMatrix(),_.copy(p.matrix),D.forEach(O=>{O.updateMatrix(),_.premultiply(O.matrix)}),x.matrix=_},v=()=>{p.updateMatrix(),x.matrix=p.matrix},A=()=>{v(),d(x)},{start:S}=er(()=>{L(),d(x)},{autostart:!1,debugFrameloopMessage:"Instance: tracking non-direct child instance"});f(x),Fr(()=>{y()?A():S(),M(c)});const I=()=>{y()&&A()};return Ot(()=>{m(x)}),i.$$set=N=>{"position"in N&&t(0,s=N.position),"scale"in N&&t(1,o=N.scale),"rotation"in N&&t(2,a=N.rotation),"lookAt"in N&&t(3,l=N.lookAt),"color"in N&&t(6,c=N.color),"id"in N&&t(7,u=N.id),"$$scope"in N&&t(9,r=N.$$scope)},i.$$.update=()=>{i.$$.dirty&64&&M(c)},[s,o,a,l,p,I,c,u,n,r]}class Kv extends We{constructor(e){super(),He(this,e,Zv,Yv,Be,{position:0,scale:1,rotation:2,lookAt:3,color:6,id:7})}}function Jv(i){let e;const t=i[14].default,n=dt(t,i,i[18],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s&262144)&&pt(n,t,r,r[18],e?ht(t,r[18],s,null):mt(r[18]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function Qv(i){let e,t,n;function r(o){i[15](o)}let s={object:i[13],position:i[1],scale:i[2],rotation:i[3],lookAt:i[4],frustumCulled:i[8],renderOrder:i[9],visible:i[10],userData:i[11],dispose:i[12],castShadow:i[6],receiveShadow:i[7],viewportAware:i[5],$$slots:{default:[Jv]},$$scope:{ctx:i}};return i[0]!==void 0&&(s.inViewport=i[0]),e=new gs({props:s}),bt.push(()=>jt(e,"inViewport",r)),e.$on("viewportenter",i[16]),e.$on("viewportleave",i[17]),{c(){De(e.$$.fragment)},m(o,a){Te(e,o,a),n=!0},p(o,[a]){const l={};a&2&&(l.position=o[1]),a&4&&(l.scale=o[2]),a&8&&(l.rotation=o[3]),a&16&&(l.lookAt=o[4]),a&256&&(l.frustumCulled=o[8]),a&512&&(l.renderOrder=o[9]),a&1024&&(l.visible=o[10]),a&2048&&(l.userData=o[11]),a&4096&&(l.dispose=o[12]),a&64&&(l.castShadow=o[6]),a&128&&(l.receiveShadow=o[7]),a&32&&(l.viewportAware=o[5]),a&262144&&(l.$$scope={dirty:a,ctx:o}),!t&&a&1&&(t=!0,l.inViewport=o[0],Wt(()=>t=!1)),e.$set(l)},i(o){n||(U(e.$$.fragment,o),n=!0)},o(o){q(e.$$.fragment,o),n=!1},d(o){Ce(e,o)}}}function $v(i,e,t){let{$$slots:n={},$$scope:r}=e,{position:s=void 0}=e,{scale:o=void 0}=e,{rotation:a=void 0}=e,{lookAt:l=void 0}=e,{viewportAware:c=!1}=e,{inViewport:u=!1}=e,{castShadow:f=void 0}=e,{receiveShadow:d=void 0}=e,{frustumCulled:m=void 0}=e,{renderOrder:g=void 0}=e,{visible:h=void 0}=e,{userData:p=void 0}=e,{dispose:_=void 0}=e;const w=new es;function y(M){u=M,t(0,u)}function b(M){Ze.call(this,i,M)}function x(M){Ze.call(this,i,M)}return i.$$set=M=>{"position"in M&&t(1,s=M.position),"scale"in M&&t(2,o=M.scale),"rotation"in M&&t(3,a=M.rotation),"lookAt"in M&&t(4,l=M.lookAt),"viewportAware"in M&&t(5,c=M.viewportAware),"inViewport"in M&&t(0,u=M.inViewport),"castShadow"in M&&t(6,f=M.castShadow),"receiveShadow"in M&&t(7,d=M.receiveShadow),"frustumCulled"in M&&t(8,m=M.frustumCulled),"renderOrder"in M&&t(9,g=M.renderOrder),"visible"in M&&t(10,h=M.visible),"userData"in M&&t(11,p=M.userData),"dispose"in M&&t(12,_=M.dispose),"$$scope"in M&&t(18,r=M.$$scope)},[u,s,o,a,l,c,f,d,m,g,h,p,_,w,n,y,b,x,r]}class eb extends We{constructor(e){super(),He(this,e,$v,Qv,Be,{position:1,scale:2,rotation:3,lookAt:4,viewportAware:5,inViewport:0,castShadow:6,receiveShadow:7,frustumCulled:8,renderOrder:9,visible:10,userData:11,dispose:12,group:13})}get group(){return this.$$.ctx[13]}}bv(Oc,()=>new Oc);function tb(i){const e=i-1;return e*e*e+1}function iu(i){return-.5*(Math.cos(Math.PI*i)-1)}function ru(i){return Object.prototype.toString.call(i)==="[object Date]"}function Na(i,e){if(i===e||i!==i)return()=>i;const t=typeof i;if(t!==typeof e||Array.isArray(i)!==Array.isArray(e))throw new Error("Cannot interpolate values of different type");if(Array.isArray(i)){const n=e.map((r,s)=>Na(i[s],r));return r=>n.map(s=>s(r))}if(t==="object"){if(!i||!e)throw new Error("Object cannot be null");if(ru(i)&&ru(e)){i=i.getTime(),e=e.getTime();const s=e-i;return o=>new Date(i+o*s)}const n=Object.keys(e),r={};return n.forEach(s=>{r[s]=Na(i[s],e[s])}),s=>{const o={};return n.forEach(a=>{o[a]=r[a](s)}),o}}if(t==="number"){const n=e-i;return r=>i+r*n}throw new Error(`Cannot interpolate ${t} values`)}function su(i,e={}){const t=lt(i);let n,r=i;function s(o,a){if(i==null)return t.set(i=o),Promise.resolve();r=o;let l=n,c=!1,{delay:u=0,duration:f=400,easing:d=cs,interpolate:m=Na}=Pt(Pt({},e),a);if(f===0)return l&&(l.abort(),l=null),t.set(i=r),Promise.resolve();const g=go()+u;let h;return n=_o(p=>{if(p<g)return!0;c||(h=m(i,o),typeof f=="function"&&(f=f(i,o)),c=!0),l&&(l.abort(),l=null);const _=p-g;return _>f?(t.set(i=o),!1):(t.set(i=h(d(_/f))),!0)}),n.promise}return{set:s,update:(o,a)=>s(o(r,i),a),subscribe:t.subscribe}}function ou(i,{delay:e=0,duration:t=400,easing:n=cs}={}){const r=+getComputedStyle(i).opacity;return{delay:e,duration:t,easing:n,css:s=>`opacity: ${s*r}`}}function au(i,{delay:e=0,duration:t=400,easing:n=tb,x:r=0,y:s=0,opacity:o=0}={}){const a=getComputedStyle(i),l=+a.opacity,c=a.transform==="none"?"":a.transform,u=l*(1-o);return{delay:e,duration:t,easing:n,css:(f,d)=>`
			transform: ${c} translate(${(1-f)*r}px, ${(1-f)*s}px);
			opacity: ${l-u*d}`}}const nb=()=>{const i=ki();return{hasEventListeners:t=>{const n=i.$$.callbacks;return t in n&&n[t].length>0}}},_s=new B,rl=new B,ib=new B,rb=(i,e,t)=>{const n=_s.setFromMatrixPosition(i.matrixWorld);n.project(e);const r=t.width/2,s=t.height/2;return[n.x*r+r,-(n.y*s)+s]},sb=(i,e)=>{const t=_s.setFromMatrixPosition(i.matrixWorld),n=rl.setFromMatrixPosition(e.matrixWorld),r=t.sub(n),s=e.getWorldDirection(ib);return r.angleTo(s)>Math.PI/2},ob=(i,e,t,n)=>{const r=_s.setFromMatrixPosition(i.matrixWorld),s=r.clone();s.project(e),t.setFromCamera(s,e);const o=t.intersectObjects(n,!0);if(o.length){const a=o[0].distance;return r.distanceTo(t.ray.origin)<a}return!0},ab=(i,e)=>{if(e instanceof $i)return e.zoom;if(e instanceof Qt){const t=_s.setFromMatrixPosition(i.matrixWorld),n=rl.setFromMatrixPosition(e.matrixWorld),r=e.fov*Math.PI/180,s=t.distanceTo(n),o=2*Math.tan(r/2)*s;return 1/o}else return 1},lb=(i,e,t)=>{if(e instanceof Qt||e instanceof $i){const n=_s.setFromMatrixPosition(i.matrixWorld),r=rl.setFromMatrixPosition(e.matrixWorld),s=n.distanceTo(r),o=(t[1]-t[0])/(e.far-e.near),a=t[1]-o*e.far;return Math.round(o*s+a)}},Fa=i=>Math.abs(i)<1e-10?0:i,yd=(i,e,t="")=>{let n="matrix3d(";for(let r=0;r!==16;r++)n+=Fa(e[r]*i.elements[r])+(r!==15?",":")");return t+n},cb=(i=>e=>yd(e,i))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),ub=(i=>(e,t)=>yd(e,i(t),"translate(-50%,-50%)"))(i=>[1/i,1/i,1/i,1,-1/i,-1/i,-1/i,-1,1/i,1/i,1/i,1,1,1,1,1]),fb=i=>i.split(/(?=[A-Z])/).join("-").toLowerCase(),zn=i=>Object.entries(i).filter(([e,t])=>!!t).map(([e,t])=>`${fb(e)}: ${t}`).join("; "),gn=(i,e)=>{i.update(t=>({...t,...e}))},db=i=>({}),lu=i=>({});function hb(i){let e;const t=i[44].threlte,n=dt(t,i,i[53],lu);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&pt(n,t,r,r[53],e?ht(t,r[53],s,db):mt(r[53]),lu)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function pb(i){let e=i[8],t,n,r=i[8]&&ba(i);return{c(){r&&r.c(),t=zt()},m(s,o){r&&r.m(s,o),ue(s,t,o),n=!0},p(s,o){s[8]?e?Be(e,s[8])?(r.d(1),r=ba(s),r.c(),r.m(t.parentNode,t)):r.p(s,o):(r=ba(s),r.c(),r.m(t.parentNode,t)):e&&(r.d(1),r=null),e=s[8]},i(s){n||(U(r),n=!0)},o(s){q(r),n=!1},d(s){s&&le(t),r&&r.d(s)}}}function mb(i){let e=i[8],t,n,r=i[8]&&wa(i);return{c(){r&&r.c(),t=zt()},m(s,o){r&&r.m(s,o),ue(s,t,o),n=!0},p(s,o){s[8]?e?Be(e,s[8])?(r.d(1),r=wa(s),r.c(),r.m(t.parentNode,t)):r.p(s,o):(r=wa(s),r.c(),r.m(t.parentNode,t)):e&&(r.d(1),r=null),e=s[8]},i(s){n||(U(r),n=!0)},o(s){q(r),n=!1},d(s){s&&le(t),r&&r.d(s)}}}function cu(i){let e;const t=i[44].default,n=dt(t,i,i[53],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&pt(n,t,r,r[53],e?ht(t,r[53],s,null):mt(r[53]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function ba(i){let e,t,n,r,s,o,a,l=i[13]&&cu(i),c=[{style:r=zn(i[17])}],u={};for(let f=0;f<c.length;f+=1)u=Pt(u,c[f]);return{c(){e=he(i[8]),t=he("div"),l&&l.c(),W(t,"style",n=zn(i[18])),Ci(e,u)},m(f,d){ue(f,e,d),ne(e,t),l&&l.m(t,null),i[52](e),s=!0,o||(a=[Ei(i[29].call(null,e)),Ei(i[28].call(null,e))],o=!0)},p(f,d){f[13]?l?(l.p(f,d),d[0]&8192&&U(l,1)):(l=cu(f),l.c(),U(l,1),l.m(t,null)):l&&(ut(),q(l,1,1,()=>{l=null}),ft()),(!s||d[0]&262144&&n!==(n=zn(f[18])))&&W(t,"style",n),Ci(e,u=ui(c,[(!s||d[0]&131072&&r!==(r=zn(f[17])))&&{style:r}]))},i(f){s||(U(l),s=!0)},o(f){q(l),s=!1},d(f){f&&le(e),l&&l.d(),i[52](null),o=!1,Nt(a)}}}function uu(i){let e;const t=i[44].default,n=dt(t,i,i[53],null);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[1]&4194304)&&pt(n,t,r,r[53],e?ht(t,r[53],s,null):mt(r[53]),null)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function wa(i){let e,t,n,r,s,o,a,l,c,u=i[13]&&uu(i),f=[{style:o=zn(i[14])}],d={};for(let m=0;m<f.length;m+=1)d=Pt(d,f[m]);return{c(){e=he(i[8]),t=he("div"),n=he("div"),u&&u.c(),W(n,"style",r=zn(i[16])),W(t,"style",s=zn(i[15])),Ci(e,d)},m(m,g){ue(m,e,g),ne(e,t),ne(t,n),u&&u.m(n,null),i[49](n),i[50](t),i[51](e),a=!0,l||(c=Ei(i[29].call(null,e)),l=!0)},p(m,g){m[13]?u?(u.p(m,g),g[0]&8192&&U(u,1)):(u=uu(m),u.c(),U(u,1),u.m(n,null)):u&&(ut(),q(u,1,1,()=>{u=null}),ft()),(!a||g[0]&65536&&r!==(r=zn(m[16])))&&W(n,"style",r),(!a||g[0]&32768&&s!==(s=zn(m[15])))&&W(t,"style",s),Ci(e,d=ui(f,[(!a||g[0]&16384&&o!==(o=zn(m[14])))&&{style:o}]))},i(m){a||(U(u),a=!0)},o(m){q(u),a=!1},d(m){m&&le(e),u&&u.d(),i[49](null),i[50](null),i[51](null),l=!1,c()}}}function gb(i){let e,t,n,r,s,o,a,l;function c(h){i[45](h)}function u(h){i[46](h)}let f={position:i[1],scale:i[2],rotation:i[3],lookAt:i[4],viewportAware:i[5],dispose:i[6],$$slots:{default:[hb]},$$scope:{ctx:i}};i[9]!==void 0&&(f.group=i[9]),i[0]!==void 0&&(f.inViewport=i[0]),e=new eb({props:f}),bt.push(()=>jt(e,"group",c)),bt.push(()=>jt(e,"inViewport",u)),e.$on("viewportenter",i[47]),e.$on("viewportleave",i[48]);const d=[mb,pb],m=[];function g(h,p){return h[7]?0:1}return s=g(i),o=m[s]=d[s](i),{c(){De(e.$$.fragment),r=Oe(),o.c(),a=zt()},m(h,p){Te(e,h,p),ue(h,r,p),m[s].m(h,p),ue(h,a,p),l=!0},p(h,p){const _={};p[0]&2&&(_.position=h[1]),p[0]&4&&(_.scale=h[2]),p[0]&8&&(_.rotation=h[3]),p[0]&16&&(_.lookAt=h[4]),p[0]&32&&(_.viewportAware=h[5]),p[0]&64&&(_.dispose=h[6]),p[1]&4194304&&(_.$$scope={dirty:p,ctx:h}),!t&&p[0]&512&&(t=!0,_.group=h[9],Wt(()=>t=!1)),!n&&p[0]&1&&(n=!0,_.inViewport=h[0],Wt(()=>n=!1)),e.$set(_);let w=s;s=g(h),s===w?m[s].p(h,p):(ut(),q(m[w],1,1,()=>{m[w]=null}),ft(),o=m[s],o?o.p(h,p):(o=m[s]=d[s](h),o.c()),U(o,1),o.m(a.parentNode,a))},i(h){l||(U(e.$$.fragment,h),U(o),l=!0)},o(h){q(e.$$.fragment,h),q(o),l=!1},d(h){Ce(e,h),h&&le(r),m[s].d(h),h&&le(a)}}}function _b(i,e,t){let n,r,s,o,a,l,c,u,f,{$$slots:d={},$$scope:m}=e,{position:g=void 0}=e,{scale:h=void 0}=e,{rotation:p=void 0}=e,{lookAt:_=void 0}=e,{viewportAware:w=!1}=e,{inViewport:y=!1}=e,{dispose:b=!1}=e,{transform:x=!1}=e,{calculatePosition:M=rb}=e,{eps:L=.001}=e,{occlude:v=!1}=e,{zIndexRange:A=[16777271,0]}=e,{sprite:S=!1}=e,{pointerEvents:I="auto"}=e,{center:N=!1}=e,{fullscreen:D=!1}=e,{distanceFactor:O=void 0}=e,{as:k="div"}=e,{portal:P=void 0}=e;const K=ci();let Z;const{renderer:j,camera:V,scene:X,size:re}=En();Fe(i,V,z=>t(57,r=z)),Fe(i,re,z=>t(41,n=z));const ae=()=>{if(!(r instanceof Qt)&&!(r instanceof $i))throw new Error("Only PerspectiveCamera or OrthographicCamera supported for component <HTML>");return r},{raycaster:be}=To();let Ae=[0,0],H=0,{visible:me=!0}=e,Le=document.createElement(k),pe,ye;const{hasEventListeners:Xe}=nb();let Q=typeof v=="boolean"&&v===!0?[X]:Array.isArray(v)?v:void 0;const fe=vn(re,z=>z.width/2);Fe(i,fe,z=>t(43,o=z));const $=vn(re,z=>z.height/2);Fe(i,$,z=>t(42,s=z));let Ie={common:{el:lt({})},transform:{el:lt({position:"absolute",top:"0",left:"0",pointerEvents:"none",overflow:"hidden",display:"block",width:`${n.width}px`,height:`${n.height}px`}),outerRef:lt({position:"absolute",top:"0",left:"0",width:`${n.width}px`,height:`${n.height}px`,transformStyle:"preserve-3d",pointerEvents:"none"}),innerRef:lt({position:"absolute",pointerEvents:I})},noTransform:{el:lt({}),div:lt({position:"absolute",transform:N?"translate3d(-50%,-50%,0)":"none",top:D?`${-s}px`:void 0,left:D?`${-o}px`:void 0,width:D?`${n.width}px`:void 0,height:D?`${n.height}px`:void 0})}};const tt=vn([Ie.transform.el,Ie.common.el],([z,ke])=>({...z,...ke}));Fe(i,tt,z=>t(14,a=z));const yt=vn(Ie.transform.outerRef,z=>z);Fe(i,yt,z=>t(15,l=z));const gt=vn(Ie.transform.innerRef,z=>z);Fe(i,gt,z=>t(16,c=z));const de=vn(Ie.noTransform.el,z=>z);Fe(i,de,z=>t(17,u=z));const st=vn(Ie.noTransform.div,z=>z);Fe(i,st,z=>t(18,f=z));const Lt=()=>{if(!Z)return!0;let z=!0,ke=Z.parent;e:for(;ke;){if("visible"in ke&&!ke.visible){z=!1;break e}ke=ke.parent}return z};let R=Lt();er(async()=>{if(!Z)return;t(13,R=Lt());const z=ae();z.updateMatrixWorld(),Z.updateWorldMatrix(!0,!1);const ke=x?Ae:M(Z,z,n);if(x||Math.abs(H-z.zoom)>L||Math.abs(Ae[0]-ke[0])>L||Math.abs(Ae[1]-ke[1])>L){const Qe=sb(Z,z),_t=me;if(Q){const G=ob(Z,z,be,Q);t(30,me=G&&!Qe)}else t(30,me=!Qe);if(_t!==me&&(Xe("visibilitychange")?K("visibilitychange",me):gn(Ie.common.el,{display:me?"block":"none"})),gn(Ie.common.el,{zIndex:`${lb(Z,z,A)}`}),x){const G=z.projectionMatrix.elements[5]*s,{isOrthographicCamera:we,top:te,left:Pe,bottom:Ee,right:rt}=z;let vt=Z.matrixWorld;if(S&&(vt=z.matrixWorldInverse.clone().transpose().copyPosition(vt).scale(Z.scale),vt.elements[3]=vt.elements[7]=vt.elements[11]=0,vt.elements[15]=1),gn(Ie.transform.el,{perspective:we?"":`${G}px`}),pe&&ye){const St=we?`scale(${G}) translate(${Fa(-(rt+Pe)/2)}px,${Fa((te+Ee)/2)}px)`:`translateZ(${G}px)`,rn=cb(z.matrixWorldInverse);gn(Ie.transform.outerRef,{transform:`${St}${rn}translate(${o}px, ${s}px)`}),gn(Ie.transform.innerRef,{transform:ub(vt,1/((O||10)/400))})}}else{const G=O===void 0?1:ab(Z,z)*O;gn(Ie.noTransform.el,{transform:`translate3d(${ke[0]}px, ${ke[1]}px, 0) scale(${G})`})}Ae=ke,H=z.zoom}},{debugFrameloopMessage:"HTML: tracking parent"});const E=z=>{if(!Z||x)return;X.updateMatrixWorld();const ke=M(Z,r,n);gn(Ie.noTransform.el,{position:"absolute",top:"0",left:"0",transform:`translate3d(${ke[0]}px, ${ke[1]}px, 0)`,transformOrigin:"0 0"})},ee=z=>{if(!j){console.warn("HTML: renderer is undefined. Is this component a child to <Canvas>?");return}const ke=P!=null?P:j.domElement.parentElement;if(!ke){console.warn("HTML: target is undefined.");return}return ke.appendChild(z),{destroy:()=>{!z.parentNode||z.parentNode.removeChild(z)}}};function ce(z){Z=z,t(9,Z)}function ge(z){y=z,t(0,y)}function Me(z){Ze.call(this,i,z)}function Ve(z){Ze.call(this,i,z)}function T(z){bt[z?"unshift":"push"](()=>{ye=z,t(12,ye)})}function oe(z){bt[z?"unshift":"push"](()=>{pe=z,t(11,pe)})}function _e(z){bt[z?"unshift":"push"](()=>{Le=z,t(10,Le)})}function Se(z){bt[z?"unshift":"push"](()=>{Le=z,t(10,Le)})}return i.$$set=z=>{"position"in z&&t(1,g=z.position),"scale"in z&&t(2,h=z.scale),"rotation"in z&&t(3,p=z.rotation),"lookAt"in z&&t(4,_=z.lookAt),"viewportAware"in z&&t(5,w=z.viewportAware),"inViewport"in z&&t(0,y=z.inViewport),"dispose"in z&&t(6,b=z.dispose),"transform"in z&&t(7,x=z.transform),"calculatePosition"in z&&t(31,M=z.calculatePosition),"eps"in z&&t(32,L=z.eps),"occlude"in z&&t(33,v=z.occlude),"zIndexRange"in z&&t(34,A=z.zIndexRange),"sprite"in z&&t(35,S=z.sprite),"pointerEvents"in z&&t(36,I=z.pointerEvents),"center"in z&&t(37,N=z.center),"fullscreen"in z&&t(38,D=z.fullscreen),"distanceFactor"in z&&t(39,O=z.distanceFactor),"as"in z&&t(8,k=z.as),"portal"in z&&t(40,P=z.portal),"visible"in z&&t(30,me=z.visible),"$$scope"in z&&t(53,m=z.$$scope)},i.$$.update=()=>{i.$$.dirty[1]&4&&(Q=typeof v=="boolean"&&v===!0?[X]:Array.isArray(v)?v:void 0),i.$$.dirty[1]&1024&&gn(Ie.transform.el,{width:`${n.width}px`,height:`${n.height}px`}),i.$$.dirty[1]&1024&&gn(Ie.transform.outerRef,{width:`${n.width}px`,height:`${n.height}px`}),i.$$.dirty[1]&32&&gn(Ie.transform.innerRef,{pointerEvents:I}),i.$$.dirty[1]&64&&gn(Ie.noTransform.div,{transform:N?"translate3d(-50%, -50%, 0)":"none"}),i.$$.dirty[1]&7296&&gn(Ie.noTransform.div,{top:D?`${-s}px`:void 0,left:D?`${-o}px`:void 0,width:D?`${n.width}px`:void 0,height:D?`${n.height}px`:void 0})},[y,g,h,p,_,w,b,x,k,Z,Le,pe,ye,R,a,l,c,u,f,V,re,fe,$,tt,yt,gt,de,st,E,ee,me,M,L,v,A,S,I,N,D,O,P,n,s,o,d,ce,ge,Me,Ve,T,oe,_e,Se,m]}class vb extends We{constructor(e){super(),He(this,e,_b,gb,Be,{position:1,scale:2,rotation:3,lookAt:4,viewportAware:5,inViewport:0,dispose:6,transform:7,calculatePosition:31,eps:32,occlude:33,zIndexRange:34,sprite:35,pointerEvents:36,center:37,fullscreen:38,distanceFactor:39,as:8,portal:40,visible:30},null,[-1,-1,-1])}}var sl={exports:{}},Er=typeof Reflect=="object"?Reflect:null,fu=Er&&typeof Er.apply=="function"?Er.apply:function(e,t,n){return Function.prototype.apply.call(e,t,n)},eo;Er&&typeof Er.ownKeys=="function"?eo=Er.ownKeys:Object.getOwnPropertySymbols?eo=function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:eo=function(e){return Object.getOwnPropertyNames(e)};function bb(i){console&&console.warn&&console.warn(i)}var xd=Number.isNaN||function(e){return e!==e};function Mt(){Mt.init.call(this)}sl.exports=Mt;sl.exports.once=Mb;Mt.EventEmitter=Mt;Mt.prototype._events=void 0;Mt.prototype._eventsCount=0;Mt.prototype._maxListeners=void 0;var du=10;function Lo(i){if(typeof i!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof i)}Object.defineProperty(Mt,"defaultMaxListeners",{enumerable:!0,get:function(){return du},set:function(i){if(typeof i!="number"||i<0||xd(i))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+i+".");du=i}});Mt.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0};Mt.prototype.setMaxListeners=function(e){if(typeof e!="number"||e<0||xd(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this};function Md(i){return i._maxListeners===void 0?Mt.defaultMaxListeners:i._maxListeners}Mt.prototype.getMaxListeners=function(){return Md(this)};Mt.prototype.emit=function(e){for(var t=[],n=1;n<arguments.length;n++)t.push(arguments[n]);var r=e==="error",s=this._events;if(s!==void 0)r=r&&s.error===void 0;else if(!r)return!1;if(r){var o;if(t.length>0&&(o=t[0]),o instanceof Error)throw o;var a=new Error("Unhandled error."+(o?" ("+o.message+")":""));throw a.context=o,a}var l=s[e];if(l===void 0)return!1;if(typeof l=="function")fu(l,this,t);else for(var c=l.length,u=Cd(l,c),n=0;n<c;++n)fu(u[n],this,t);return!0};function Sd(i,e,t,n){var r,s,o;if(Lo(t),s=i._events,s===void 0?(s=i._events=Object.create(null),i._eventsCount=0):(s.newListener!==void 0&&(i.emit("newListener",e,t.listener?t.listener:t),s=i._events),o=s[e]),o===void 0)o=s[e]=t,++i._eventsCount;else if(typeof o=="function"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(t):o.push(t),r=Md(i),r>0&&o.length>r&&!o.warned){o.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+o.length+" "+String(e)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=i,a.type=e,a.count=o.length,bb(a)}return i}Mt.prototype.addListener=function(e,t){return Sd(this,e,t,!1)};Mt.prototype.on=Mt.prototype.addListener;Mt.prototype.prependListener=function(e,t){return Sd(this,e,t,!0)};function wb(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function Ad(i,e,t){var n={fired:!1,wrapFn:void 0,target:i,type:e,listener:t},r=wb.bind(n);return r.listener=t,n.wrapFn=r,r}Mt.prototype.once=function(e,t){return Lo(t),this.on(e,Ad(this,e,t)),this};Mt.prototype.prependOnceListener=function(e,t){return Lo(t),this.prependListener(e,Ad(this,e,t)),this};Mt.prototype.removeListener=function(e,t){var n,r,s,o,a;if(Lo(t),r=this._events,r===void 0)return this;if(n=r[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this._events=Object.create(null):(delete r[e],r.removeListener&&this.emit("removeListener",e,n.listener||t));else if(typeof n!="function"){for(s=-1,o=n.length-1;o>=0;o--)if(n[o]===t||n[o].listener===t){a=n[o].listener,s=o;break}if(s<0)return this;s===0?n.shift():yb(n,s),n.length===1&&(r[e]=n[0]),r.removeListener!==void 0&&this.emit("removeListener",e,a||t)}return this};Mt.prototype.off=Mt.prototype.removeListener;Mt.prototype.removeAllListeners=function(e){var t,n,r;if(n=this._events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this._eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.length===0){var s=Object.keys(n),o;for(r=0;r<s.length;++r)o=s[r],o!=="removeListener"&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t=="function")this.removeListener(e,t);else if(t!==void 0)for(r=t.length-1;r>=0;r--)this.removeListener(e,t[r]);return this};function Ed(i,e,t){var n=i._events;if(n===void 0)return[];var r=n[e];return r===void 0?[]:typeof r=="function"?t?[r.listener||r]:[r]:t?xb(r):Cd(r,r.length)}Mt.prototype.listeners=function(e){return Ed(this,e,!0)};Mt.prototype.rawListeners=function(e){return Ed(this,e,!1)};Mt.listenerCount=function(i,e){return typeof i.listenerCount=="function"?i.listenerCount(e):Td.call(i,e)};Mt.prototype.listenerCount=Td;function Td(i){var e=this._events;if(e!==void 0){var t=e[i];if(typeof t=="function")return 1;if(t!==void 0)return t.length}return 0}Mt.prototype.eventNames=function(){return this._eventsCount>0?eo(this._events):[]};function Cd(i,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=i[n];return t}function yb(i,e){for(;e+1<i.length;e++)i[e]=i[e+1];i.pop()}function xb(i){for(var e=new Array(i.length),t=0;t<e.length;++t)e[t]=i[t].listener||i[t];return e}function Mb(i,e){return new Promise(function(t,n){function r(o){i.removeListener(e,s),n(o)}function s(){typeof i.removeListener=="function"&&i.removeListener("error",r),t([].slice.call(arguments))}Ld(i,e,s,{once:!0}),e!=="error"&&Sb(i,r,{once:!0})})}function Sb(i,e,t){typeof i.on=="function"&&Ld(i,"error",e,t)}function Ld(i,e,t,n){if(typeof i.on=="function")n.once?i.once(e,t):i.on(e,t);else if(typeof i.addEventListener=="function")i.addEventListener(e,function r(s){n.once&&i.removeEventListener(e,r),t(s)});else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof i)}function Wn(i){if(typeof i!="function")throw new Error("obliterator/iterator: expecting a function!");this.next=i}typeof Symbol<"u"&&(Wn.prototype[Symbol.iterator]=function(){return this});Wn.of=function(){var i=arguments,e=i.length,t=0;return new Wn(function(){return t>=e?{done:!0}:{done:!1,value:i[t++]}})};Wn.empty=function(){var i=new Wn(function(){return{done:!0}});return i};Wn.fromSequence=function(i){var e=0,t=i.length;return new Wn(function(){return e>=t?{done:!0}:{done:!1,value:i[e++]}})};Wn.is=function(i){return i instanceof Wn?!0:typeof i=="object"&&i!==null&&typeof i.next=="function"};var cn=Wn,ol={};ol.ARRAY_BUFFER_SUPPORT=typeof ArrayBuffer<"u";ol.SYMBOL_SUPPORT=typeof Symbol<"u";var Ab=cn,Dd=ol,Eb=Dd.ARRAY_BUFFER_SUPPORT,Tb=Dd.SYMBOL_SUPPORT;function Cb(i){return typeof i=="string"||Array.isArray(i)||Eb&&ArrayBuffer.isView(i)?Ab.fromSequence(i):typeof i!="object"||i===null?null:Tb&&typeof i[Symbol.iterator]=="function"?i[Symbol.iterator]():typeof i.next=="function"?i:null}var Pd=function(e){var t=Cb(e);if(!t)throw new Error("obliterator: target is not iterable nor a valid iterator.");return t},Lb=Pd,Rd=function(e,t){for(var n=arguments.length>1?t:1/0,r=n!==1/0?new Array(n):[],s,o=0,a=Lb(e);;){if(o===n)return r;if(s=a.next(),s.done)return o!==t&&(r.length=o),r;r[o++]=s.value}},Db=cn,Pb=Pd,ii=function(){var e=arguments,t=null,n=-1;return new Db(function(){var s=null;do{if(t===null){if(n++,n>=e.length)return{done:!0};t=Pb(e[n])}if(s=t.next(),s.done===!0){t=null;continue}break}while(!0);return s})};function Rb(){const i=arguments[0];for(let e=1,t=arguments.length;e<t;e++)if(!!arguments[e])for(const n in arguments[e])i[n]=arguments[e][n];return i}let Gt=Rb;typeof Object.assign=="function"&&(Gt=Object.assign);function Sn(i,e,t,n){const r=i._nodes.get(e);let s=null;return r&&(n==="mixed"?s=r.out&&r.out[t]||r.undirected&&r.undirected[t]:n==="directed"?s=r.out&&r.out[t]:s=r.undirected&&r.undirected[t]),s}function Ib(i){return i!==null&&typeof i=="object"&&typeof i.addUndirectedEdgeWithKey=="function"&&typeof i.dropNode=="function"}function Zt(i){return typeof i=="object"&&i!==null&&i.constructor===Object}function Id(i){let e;for(e in i)return!1;return!0}function _n(i,e,t){Object.defineProperty(i,e,{enumerable:!1,configurable:!1,writable:!0,value:t})}function Rn(i,e,t){const n={enumerable:!0,configurable:!0};typeof t=="function"?n.get=t:(n.value=t,n.writable=!1),Object.defineProperty(i,e,n)}function hu(i){return!(!Zt(i)||i.attributes&&!Array.isArray(i.attributes))}function kb(){let i=Math.floor(Math.random()*256)&255;return()=>i++}class al extends Error{constructor(e){super(),this.name="GraphError",this.message=e}}class Re extends al{constructor(e){super(e),this.name="InvalidArgumentsGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Re.prototype.constructor)}}class ve extends al{constructor(e){super(e),this.name="NotFoundGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ve.prototype.constructor)}}class Ue extends al{constructor(e){super(e),this.name="UsageGraphError",typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ue.prototype.constructor)}}function kd(i,e){this.key=i,this.attributes=e,this.clear()}kd.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.in={},this.out={},this.undirected={}};function Od(i,e){this.key=i,this.attributes=e,this.clear()}Od.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.in={},this.out={}};function Nd(i,e){this.key=i,this.attributes=e,this.clear()}Nd.prototype.clear=function(){this.undirectedDegree=0,this.undirected={}};function Gr(i,e,t,n,r){this.key=e,this.attributes=r,this.undirected=i,this.source=t,this.target=n}Gr.prototype.attach=function(){let i="out",e="in";this.undirected&&(i=e="undirected");const t=this.source.key,n=this.target.key;this.source[i][n]=this,!(this.undirected&&t===n)&&(this.target[e][t]=this)};Gr.prototype.attachMulti=function(){let i="out",e="in";const t=this.source.key,n=this.target.key;this.undirected&&(i=e="undirected");const r=this.source[i],s=r[n];if(typeof s>"u"){r[n]=this,this.undirected&&t===n||(this.target[e][t]=this);return}s.previous=this,this.next=s,r[n]=this,this.target[e][t]=this};Gr.prototype.detach=function(){const i=this.source.key,e=this.target.key;let t="out",n="in";this.undirected&&(t=n="undirected"),delete this.source[t][e],delete this.target[n][i]};Gr.prototype.detachMulti=function(){const i=this.source.key,e=this.target.key;let t="out",n="in";this.undirected&&(t=n="undirected"),this.previous===void 0?this.next===void 0?(delete this.source[t][e],delete this.target[n][i]):(this.next.previous=void 0,this.source[t][e]=this.next,this.target[n][i]=this.next):(this.previous.next=this.next,this.next!==void 0&&(this.next.previous=this.previous))};const Fd=0,zd=1,Ob=2,Ud=3;function fi(i,e,t,n,r,s,o){let a,l,c,u;if(n=""+n,t===Fd){if(a=i._nodes.get(n),!a)throw new ve(`Graph.${e}: could not find the "${n}" node in the graph.`);c=r,u=s}else if(t===Ud){if(r=""+r,l=i._edges.get(r),!l)throw new ve(`Graph.${e}: could not find the "${r}" edge in the graph.`);const f=l.source.key,d=l.target.key;if(n===f)a=l.target;else if(n===d)a=l.source;else throw new ve(`Graph.${e}: the "${n}" node is not attached to the "${r}" edge (${f}, ${d}).`);c=s,u=o}else{if(l=i._edges.get(n),!l)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`);t===zd?a=l.source:a=l.target,c=r,u=s}return[a,c,u]}function Nb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=fi(this,e,t,n,r,s);return o.attributes[a]}}function Fb(i,e,t){i.prototype[e]=function(n,r){const[s]=fi(this,e,t,n,r);return s.attributes}}function zb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=fi(this,e,t,n,r,s);return o.attributes.hasOwnProperty(a)}}function Ub(i,e,t){i.prototype[e]=function(n,r,s,o){const[a,l,c]=fi(this,e,t,n,r,s,o);return a.attributes[l]=c,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:l}),this}}function Gb(i,e,t){i.prototype[e]=function(n,r,s,o){const[a,l,c]=fi(this,e,t,n,r,s,o);if(typeof c!="function")throw new Re(`Graph.${e}: updater should be a function.`);const u=a.attributes,f=c(u[l]);return u[l]=f,this.emit("nodeAttributesUpdated",{key:a.key,type:"set",attributes:a.attributes,name:l}),this}}function Bb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=fi(this,e,t,n,r,s);return delete o.attributes[a],this.emit("nodeAttributesUpdated",{key:o.key,type:"remove",attributes:o.attributes,name:a}),this}}function Vb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=fi(this,e,t,n,r,s);if(!Zt(a))throw new Re(`Graph.${e}: provided attributes are not a plain object.`);return o.attributes=a,this.emit("nodeAttributesUpdated",{key:o.key,type:"replace",attributes:o.attributes}),this}}function Hb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=fi(this,e,t,n,r,s);if(!Zt(a))throw new Re(`Graph.${e}: provided attributes are not a plain object.`);return Gt(o.attributes,a),this.emit("nodeAttributesUpdated",{key:o.key,type:"merge",attributes:o.attributes,data:a}),this}}function Wb(i,e,t){i.prototype[e]=function(n,r,s){const[o,a]=fi(this,e,t,n,r,s);if(typeof a!="function")throw new Re(`Graph.${e}: provided updater is not a function.`);return o.attributes=a(o.attributes),this.emit("nodeAttributesUpdated",{key:o.key,type:"update",attributes:o.attributes}),this}}const jb=[{name:i=>`get${i}Attribute`,attacher:Nb},{name:i=>`get${i}Attributes`,attacher:Fb},{name:i=>`has${i}Attribute`,attacher:zb},{name:i=>`set${i}Attribute`,attacher:Ub},{name:i=>`update${i}Attribute`,attacher:Gb},{name:i=>`remove${i}Attribute`,attacher:Bb},{name:i=>`replace${i}Attributes`,attacher:Vb},{name:i=>`merge${i}Attributes`,attacher:Hb},{name:i=>`update${i}Attributes`,attacher:Wb}];function qb(i){jb.forEach(function({name:e,attacher:t}){t(i,e("Node"),Fd),t(i,e("Source"),zd),t(i,e("Target"),Ob),t(i,e("Opposite"),Ud)})}function Xb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new ve(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return s.attributes[r]}}function Yb(i,e,t){i.prototype[e]=function(n){let r;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>1){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const s=""+n,o=""+arguments[1];if(r=Sn(this,s,o,t),!r)throw new ve(`Graph.${e}: could not find an edge for the given path ("${s}" - "${o}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,r=this._edges.get(n),!r)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return r.attributes}}function Zb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new ve(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return s.attributes.hasOwnProperty(r)}}function Kb(i,e,t){i.prototype[e]=function(n,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+n,l=""+r;if(r=arguments[2],s=arguments[3],o=Sn(this,a,l,t),!o)throw new ve(`Graph.${e}: could not find an edge for the given path ("${a}" - "${l}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,o=this._edges.get(n),!o)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return o.attributes[r]=s,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Jb(i,e,t){i.prototype[e]=function(n,r,s){let o;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>3){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const a=""+n,l=""+r;if(r=arguments[2],s=arguments[3],o=Sn(this,a,l,t),!o)throw new ve(`Graph.${e}: could not find an edge for the given path ("${a}" - "${l}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,o=this._edges.get(n),!o)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(typeof s!="function")throw new Re(`Graph.${e}: updater should be a function.`);return o.attributes[r]=s(o.attributes[r]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}function Qb(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new ve(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}return delete s.attributes[r],this.emit("edgeAttributesUpdated",{key:s.key,type:"remove",attributes:s.attributes,name:r}),this}}function $b(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new ve(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(!Zt(r))throw new Re(`Graph.${e}: provided attributes are not a plain object.`);return s.attributes=r,this.emit("edgeAttributesUpdated",{key:s.key,type:"replace",attributes:s.attributes}),this}}function ew(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new ve(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(!Zt(r))throw new Re(`Graph.${e}: provided attributes are not a plain object.`);return Gt(s.attributes,r),this.emit("edgeAttributesUpdated",{key:s.key,type:"merge",attributes:s.attributes,data:r}),this}}function tw(i,e,t){i.prototype[e]=function(n,r){let s;if(this.type!=="mixed"&&t!=="mixed"&&t!==this.type)throw new Ue(`Graph.${e}: cannot find this type of edges in your ${this.type} graph.`);if(arguments.length>2){if(this.multi)throw new Ue(`Graph.${e}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`);const o=""+n,a=""+r;if(r=arguments[2],s=Sn(this,o,a,t),!s)throw new ve(`Graph.${e}: could not find an edge for the given path ("${o}" - "${a}").`)}else{if(t!=="mixed")throw new Ue(`Graph.${e}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`);if(n=""+n,s=this._edges.get(n),!s)throw new ve(`Graph.${e}: could not find the "${n}" edge in the graph.`)}if(typeof r!="function")throw new Re(`Graph.${e}: provided updater is not a function.`);return s.attributes=r(s.attributes),this.emit("edgeAttributesUpdated",{key:s.key,type:"update",attributes:s.attributes}),this}}const nw=[{name:i=>`get${i}Attribute`,attacher:Xb},{name:i=>`get${i}Attributes`,attacher:Yb},{name:i=>`has${i}Attribute`,attacher:Zb},{name:i=>`set${i}Attribute`,attacher:Kb},{name:i=>`update${i}Attribute`,attacher:Jb},{name:i=>`remove${i}Attribute`,attacher:Qb},{name:i=>`replace${i}Attributes`,attacher:$b},{name:i=>`merge${i}Attributes`,attacher:ew},{name:i=>`update${i}Attributes`,attacher:tw}];function iw(i){nw.forEach(function({name:e,attacher:t}){t(i,e("Edge"),"mixed"),t(i,e("DirectedEdge"),"directed"),t(i,e("UndirectedEdge"),"undirected")})}const rw=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function sw(i,e,t,n){let r=!1;for(const s in e){if(s===n)continue;const o=e[s];if(r=t(o.key,o.attributes,o.source.key,o.target.key,o.source.attributes,o.target.attributes,o.undirected),i&&r)return o.key}}function ow(i,e,t,n){let r,s,o,a=!1;for(const l in e)if(l!==n){r=e[l];do{if(s=r.source,o=r.target,a=t(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected),i&&a)return r.key;r=r.next}while(r!==void 0)}}function ya(i,e){const t=Object.keys(i),n=t.length;let r,s=0;return new cn(function(){do if(r)r=r.next;else{if(s>=n)return{done:!0};const a=t[s++];if(a===e){r=void 0;continue}r=i[a]}while(!r);return{done:!1,value:{edge:r.key,attributes:r.attributes,source:r.source.key,target:r.target.key,sourceAttributes:r.source.attributes,targetAttributes:r.target.attributes,undirected:r.undirected}}})}function aw(i,e,t,n){const r=e[t];if(!r)return;const s=r.source,o=r.target;if(n(r.key,r.attributes,s.key,o.key,s.attributes,o.attributes,r.undirected)&&i)return r.key}function lw(i,e,t,n){let r=e[t];if(!r)return;let s=!1;do{if(s=n(r.key,r.attributes,r.source.key,r.target.key,r.source.attributes,r.target.attributes,r.undirected),i&&s)return r.key;r=r.next}while(r!==void 0)}function xa(i,e){let t=i[e];return t.next!==void 0?new cn(function(){if(!t)return{done:!0};const n={edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected};return t=t.next,{done:!1,value:n}}):cn.of({edge:t.key,attributes:t.attributes,source:t.source.key,target:t.target.key,sourceAttributes:t.source.attributes,targetAttributes:t.target.attributes,undirected:t.undirected})}function cw(i,e){if(i.size===0)return[];if(e==="mixed"||e===i.type)return typeof Array.from=="function"?Array.from(i._edges.keys()):Rd(i._edges.keys(),i._edges.size);const t=e==="undirected"?i.undirectedSize:i.directedSize,n=new Array(t),r=e==="undirected",s=i._edges.values();let o=0,a,l;for(;a=s.next(),a.done!==!0;)l=a.value,l.undirected===r&&(n[o++]=l.key);return n}function Gd(i,e,t,n){if(e.size===0)return;const r=t!=="mixed"&&t!==e.type,s=t==="undirected";let o,a,l=!1;const c=e._edges.values();for(;o=c.next(),o.done!==!0;){if(a=o.value,r&&a.undirected!==s)continue;const{key:u,attributes:f,source:d,target:m}=a;if(l=n(u,f,d.key,m.key,d.attributes,m.attributes,a.undirected),i&&l)return u}}function uw(i,e){if(i.size===0)return cn.empty();const t=e!=="mixed"&&e!==i.type,n=e==="undirected",r=i._edges.values();return new cn(function(){let o,a;for(;;){if(o=r.next(),o.done)return o;if(a=o.value,!(t&&a.undirected!==n))break}return{value:{edge:a.key,attributes:a.attributes,source:a.source.key,target:a.target.key,sourceAttributes:a.source.attributes,targetAttributes:a.target.attributes,undirected:a.undirected},done:!1}})}function ll(i,e,t,n,r,s){const o=e?ow:sw;let a;if(t!=="undirected"&&(n!=="out"&&(a=o(i,r.in,s),i&&a)||n!=="in"&&(a=o(i,r.out,s,n?void 0:r.key),i&&a))||t!=="directed"&&(a=o(i,r.undirected,s),i&&a))return a}function fw(i,e,t,n){const r=[];return ll(!1,i,e,t,n,function(s){r.push(s)}),r}function dw(i,e,t){let n=cn.empty();return i!=="undirected"&&(e!=="out"&&typeof t.in<"u"&&(n=ii(n,ya(t.in))),e!=="in"&&typeof t.out<"u"&&(n=ii(n,ya(t.out,e?void 0:t.key)))),i!=="directed"&&typeof t.undirected<"u"&&(n=ii(n,ya(t.undirected))),n}function cl(i,e,t,n,r,s,o){const a=t?lw:aw;let l;if(e!=="undirected"&&(typeof r.in<"u"&&n!=="out"&&(l=a(i,r.in,s,o),i&&l)||typeof r.out<"u"&&n!=="in"&&(n||r.key!==s)&&(l=a(i,r.out,s,o),i&&l))||e!=="directed"&&typeof r.undirected<"u"&&(l=a(i,r.undirected,s,o),i&&l))return l}function hw(i,e,t,n,r){const s=[];return cl(!1,i,e,t,n,r,function(o){s.push(o)}),s}function pw(i,e,t,n){let r=cn.empty();return i!=="undirected"&&(typeof t.in<"u"&&e!=="out"&&n in t.in&&(r=ii(r,xa(t.in,n))),typeof t.out<"u"&&e!=="in"&&n in t.out&&(e||t.key!==n)&&(r=ii(r,xa(t.out,n)))),i!=="directed"&&typeof t.undirected<"u"&&n in t.undirected&&(r=ii(r,xa(t.undirected,n))),r}function mw(i,e){const{name:t,type:n,direction:r}=e;i.prototype[t]=function(s,o){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return[];if(!arguments.length)return cw(this,n);if(arguments.length===1){s=""+s;const a=this._nodes.get(s);if(typeof a>"u")throw new ve(`Graph.${t}: could not find the "${s}" node in the graph.`);return fw(this.multi,n==="mixed"?this.type:n,r,a)}if(arguments.length===2){s=""+s,o=""+o;const a=this._nodes.get(s);if(!a)throw new ve(`Graph.${t}:  could not find the "${s}" source node in the graph.`);if(!this._nodes.has(o))throw new ve(`Graph.${t}:  could not find the "${o}" target node in the graph.`);return hw(n,this.multi,r,a,o)}throw new Re(`Graph.${t}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function gw(i,e){const{name:t,type:n,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(c,u,f){if(!(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)){if(arguments.length===1)return f=c,Gd(!1,this,n,f);if(arguments.length===2){c=""+c,f=u;const d=this._nodes.get(c);if(typeof d>"u")throw new ve(`Graph.${s}: could not find the "${c}" node in the graph.`);return ll(!1,this.multi,n==="mixed"?this.type:n,r,d,f)}if(arguments.length===3){c=""+c,u=""+u;const d=this._nodes.get(c);if(!d)throw new ve(`Graph.${s}:  could not find the "${c}" source node in the graph.`);if(!this._nodes.has(u))throw new ve(`Graph.${s}:  could not find the "${u}" target node in the graph.`);return cl(!1,n,this.multi,r,d,u,f)}throw new Re(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)}};const o="map"+t[0].toUpperCase()+t.slice(1);i.prototype[o]=function(){const c=Array.prototype.slice.call(arguments),u=c.pop();let f;if(c.length===0){let d=0;n!=="directed"&&(d+=this.undirectedSize),n!=="undirected"&&(d+=this.directedSize),f=new Array(d);let m=0;c.push((g,h,p,_,w,y,b)=>{f[m++]=u(g,h,p,_,w,y,b)})}else f=[],c.push((d,m,g,h,p,_,w)=>{f.push(u(d,m,g,h,p,_,w))});return this[s].apply(this,c),f};const a="filter"+t[0].toUpperCase()+t.slice(1);i.prototype[a]=function(){const c=Array.prototype.slice.call(arguments),u=c.pop(),f=[];return c.push((d,m,g,h,p,_,w)=>{u(d,m,g,h,p,_,w)&&f.push(d)}),this[s].apply(this,c),f};const l="reduce"+t[0].toUpperCase()+t.slice(1);i.prototype[l]=function(){let c=Array.prototype.slice.call(arguments);if(c.length<2||c.length>4)throw new Re(`Graph.${l}: invalid number of arguments (expecting 2, 3 or 4 and got ${c.length}).`);if(typeof c[c.length-1]=="function"&&typeof c[c.length-2]!="function")throw new Re(`Graph.${l}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let u,f;c.length===2?(u=c[0],f=c[1],c=[]):c.length===3?(u=c[1],f=c[2],c=[c[0]]):c.length===4&&(u=c[2],f=c[3],c=[c[0],c[1]]);let d=f;return c.push((m,g,h,p,_,w,y)=>{d=u(d,m,g,h,p,_,w,y)}),this[s].apply(this,c),d}}function _w(i,e){const{name:t,type:n,direction:r}=e,s="find"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(l,c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return!1;if(arguments.length===1)return u=l,Gd(!0,this,n,u);if(arguments.length===2){l=""+l,u=c;const f=this._nodes.get(l);if(typeof f>"u")throw new ve(`Graph.${s}: could not find the "${l}" node in the graph.`);return ll(!0,this.multi,n==="mixed"?this.type:n,r,f,u)}if(arguments.length===3){l=""+l,c=""+c;const f=this._nodes.get(l);if(!f)throw new ve(`Graph.${s}:  could not find the "${l}" source node in the graph.`);if(!this._nodes.has(c))throw new ve(`Graph.${s}:  could not find the "${c}" target node in the graph.`);return cl(!0,n,this.multi,r,f,c,u)}throw new Re(`Graph.${s}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`)};const o="some"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[o]=function(){const l=Array.prototype.slice.call(arguments),c=l.pop();return l.push((f,d,m,g,h,p,_)=>c(f,d,m,g,h,p,_)),!!this[s].apply(this,l)};const a="every"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[a]=function(){const l=Array.prototype.slice.call(arguments),c=l.pop();return l.push((f,d,m,g,h,p,_)=>!c(f,d,m,g,h,p,_)),!this[s].apply(this,l)}}function vw(i,e){const{name:t,type:n,direction:r}=e,s=t.slice(0,-1)+"Entries";i.prototype[s]=function(o,a){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return cn.empty();if(!arguments.length)return uw(this,n);if(arguments.length===1){o=""+o;const l=this._nodes.get(o);if(!l)throw new ve(`Graph.${s}: could not find the "${o}" node in the graph.`);return dw(n,r,l)}if(arguments.length===2){o=""+o,a=""+a;const l=this._nodes.get(o);if(!l)throw new ve(`Graph.${s}:  could not find the "${o}" source node in the graph.`);if(!this._nodes.has(a))throw new ve(`Graph.${s}:  could not find the "${a}" target node in the graph.`);return pw(n,r,l,a)}throw new Re(`Graph.${s}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`)}}function bw(i){rw.forEach(e=>{mw(i,e),gw(i,e),_w(i,e),vw(i,e)})}const ww=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function Do(){this.A=null,this.B=null}Do.prototype.wrap=function(i){this.A===null?this.A=i:this.B===null&&(this.B=i)};Do.prototype.has=function(i){return this.A!==null&&i in this.A||this.B!==null&&i in this.B};function Zr(i,e,t,n,r){for(const s in n){const o=n[s],a=o.source,l=o.target,c=a===t?l:a;if(e&&e.has(c.key))continue;const u=r(c.key,c.attributes);if(i&&u)return c.key}}function ul(i,e,t,n,r){if(e!=="mixed"){if(e==="undirected")return Zr(i,null,n,n.undirected,r);if(typeof t=="string")return Zr(i,null,n,n[t],r)}const s=new Do;let o;if(e!=="undirected"){if(t!=="out"){if(o=Zr(i,null,n,n.in,r),i&&o)return o;s.wrap(n.in)}if(t!=="in"){if(o=Zr(i,s,n,n.out,r),i&&o)return o;s.wrap(n.out)}}if(e!=="directed"&&(o=Zr(i,s,n,n.undirected,r),i&&o))return o}function yw(i,e,t){if(i!=="mixed"){if(i==="undirected")return Object.keys(t.undirected);if(typeof e=="string")return Object.keys(t[e])}const n=[];return ul(!1,i,e,t,function(r){n.push(r)}),n}function Kr(i,e,t){const n=Object.keys(t),r=n.length;let s=0;return new cn(function(){let a=null;do{if(s>=r)return i&&i.wrap(t),{done:!0};const l=t[n[s++]],c=l.source,u=l.target;if(a=c===e?u:c,i&&i.has(a.key)){a=null;continue}}while(a===null);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}})}function xw(i,e,t){if(i!=="mixed"){if(i==="undirected")return Kr(null,t,t.undirected);if(typeof e=="string")return Kr(null,t,t[e])}let n=cn.empty();const r=new Do;return i!=="undirected"&&(e!=="out"&&(n=ii(n,Kr(r,t,t.in))),e!=="in"&&(n=ii(n,Kr(r,t,t.out)))),i!=="directed"&&(n=ii(n,Kr(r,t,t.undirected))),n}function Mw(i,e){const{name:t,type:n,direction:r}=e;i.prototype[t]=function(s){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return[];s=""+s;const o=this._nodes.get(s);if(typeof o>"u")throw new ve(`Graph.${t}: could not find the "${s}" node in the graph.`);return yw(n==="mixed"?this.type:n,r,o)}}function Sw(i,e){const{name:t,type:n,direction:r}=e,s="forEach"+t[0].toUpperCase()+t.slice(1,-1);i.prototype[s]=function(c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return;c=""+c;const f=this._nodes.get(c);if(typeof f>"u")throw new ve(`Graph.${s}: could not find the "${c}" node in the graph.`);ul(!1,n==="mixed"?this.type:n,r,f,u)};const o="map"+t[0].toUpperCase()+t.slice(1);i.prototype[o]=function(c,u){const f=[];return this[s](c,(d,m)=>{f.push(u(d,m))}),f};const a="filter"+t[0].toUpperCase()+t.slice(1);i.prototype[a]=function(c,u){const f=[];return this[s](c,(d,m)=>{u(d,m)&&f.push(d)}),f};const l="reduce"+t[0].toUpperCase()+t.slice(1);i.prototype[l]=function(c,u,f){if(arguments.length<3)throw new Re(`Graph.${l}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`);let d=f;return this[s](c,(m,g)=>{d=u(d,m,g)}),d}}function Aw(i,e){const{name:t,type:n,direction:r}=e,s=t[0].toUpperCase()+t.slice(1,-1),o="find"+s;i.prototype[o]=function(c,u){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return;c=""+c;const f=this._nodes.get(c);if(typeof f>"u")throw new ve(`Graph.${o}: could not find the "${c}" node in the graph.`);return ul(!0,n==="mixed"?this.type:n,r,f,u)};const a="some"+s;i.prototype[a]=function(c,u){return!!this[o](c,u)};const l="every"+s;i.prototype[l]=function(c,u){return!this[o](c,(d,m)=>!u(d,m))}}function Ew(i,e){const{name:t,type:n,direction:r}=e,s=t.slice(0,-1)+"Entries";i.prototype[s]=function(o){if(n!=="mixed"&&this.type!=="mixed"&&n!==this.type)return cn.empty();o=""+o;const a=this._nodes.get(o);if(typeof a>"u")throw new ve(`Graph.${s}: could not find the "${o}" node in the graph.`);return xw(n==="mixed"?this.type:n,r,a)}}function Tw(i){ww.forEach(e=>{Mw(i,e),Sw(i,e),Aw(i,e),Ew(i,e)})}function Xs(i,e,t,n,r){const s=n._nodes.values(),o=n.type;let a,l,c,u,f,d,m;for(;a=s.next(),a.done!==!0;){let g=!1;if(l=a.value,o!=="undirected"){u=l.out;for(c in u){f=u[c];do{if(d=f.target,g=!0,m=r(l.key,d.key,l.attributes,d.attributes,f.key,f.attributes,f.undirected),i&&m)return f;f=f.next}while(f)}}if(o!=="directed"){u=l.undirected;for(c in u)if(!(e&&l.key>c)){f=u[c];do{if(d=f.target,d.key!==c&&(d=f.source),g=!0,m=r(l.key,d.key,l.attributes,d.attributes,f.key,f.attributes,f.undirected),i&&m)return f;f=f.next}while(f)}}if(t&&!g&&(m=r(l.key,null,l.attributes,null,null,null,null),i&&m))return null}}function Cw(i,e){const t={key:i};return Id(e.attributes)||(t.attributes=Gt({},e.attributes)),t}function Lw(i,e){const t={key:i,source:e.source.key,target:e.target.key};return Id(e.attributes)||(t.attributes=Gt({},e.attributes)),e.undirected&&(t.undirected=!0),t}function Dw(i){if(!Zt(i))throw new Re('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if(!("key"in i))throw new Re("Graph.import: serialized node is missing its key.");if("attributes"in i&&(!Zt(i.attributes)||i.attributes===null))throw new Re("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.")}function Pw(i){if(!Zt(i))throw new Re('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if(!("source"in i))throw new Re("Graph.import: serialized edge is missing its source.");if(!("target"in i))throw new Re("Graph.import: serialized edge is missing its target.");if("attributes"in i&&(!Zt(i.attributes)||i.attributes===null))throw new Re("Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.");if("undirected"in i&&typeof i.undirected!="boolean")throw new Re("Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.")}const Rw=kb(),Iw=new Set(["directed","undirected","mixed"]),pu=new Set(["domain","_events","_eventsCount","_maxListeners"]),kw=[{name:i=>`${i}Edge`,generateKey:!0},{name:i=>`${i}DirectedEdge`,generateKey:!0,type:"directed"},{name:i=>`${i}UndirectedEdge`,generateKey:!0,type:"undirected"},{name:i=>`${i}EdgeWithKey`},{name:i=>`${i}DirectedEdgeWithKey`,type:"directed"},{name:i=>`${i}UndirectedEdgeWithKey`,type:"undirected"}],Ow={allowSelfLoops:!0,multi:!1,type:"mixed"};function Nw(i,e,t){if(t&&!Zt(t))throw new Re(`Graph.addNode: invalid attributes. Expecting an object but got "${t}"`);if(e=""+e,t=t||{},i._nodes.has(e))throw new Ue(`Graph.addNode: the "${e}" node already exist in the graph.`);const n=new i.NodeDataClass(e,t);return i._nodes.set(e,n),i.emit("nodeAdded",{key:e,attributes:t}),n}function mu(i,e,t){const n=new i.NodeDataClass(e,t);return i._nodes.set(e,n),i.emit("nodeAdded",{key:e,attributes:t}),n}function Bd(i,e,t,n,r,s,o,a){if(!n&&i.type==="undirected")throw new Ue(`Graph.${e}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`);if(n&&i.type==="directed")throw new Ue(`Graph.${e}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`);if(a&&!Zt(a))throw new Re(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`);if(s=""+s,o=""+o,a=a||{},!i.allowSelfLoops&&s===o)throw new Ue(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);const l=i._nodes.get(s),c=i._nodes.get(o);if(!l)throw new ve(`Graph.${e}: source node "${s}" not found.`);if(!c)throw new ve(`Graph.${e}: target node "${o}" not found.`);const u={key:null,undirected:n,source:s,target:o,attributes:a};if(t)r=i._edgeKeyGenerator();else if(r=""+r,i._edges.has(r))throw new Ue(`Graph.${e}: the "${r}" edge already exists in the graph.`);if(!i.multi&&(n?typeof l.undirected[o]<"u":typeof l.out[o]<"u"))throw new Ue(`Graph.${e}: an edge linking "${s}" to "${o}" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`);const f=new Gr(n,r,l,c,a);i._edges.set(r,f);const d=s===o;return n?(l.undirectedDegree++,c.undirectedDegree++,d&&i._undirectedSelfLoopCount++):(l.outDegree++,c.inDegree++,d&&i._directedSelfLoopCount++),i.multi?f.attachMulti():f.attach(),n?i._undirectedSize++:i._directedSize++,u.key=r,i.emit("edgeAdded",u),r}function Fw(i,e,t,n,r,s,o,a,l){if(!n&&i.type==="undirected")throw new Ue(`Graph.${e}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`);if(n&&i.type==="directed")throw new Ue(`Graph.${e}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`);if(a){if(l){if(typeof a!="function")throw new Re(`Graph.${e}: invalid updater function. Expecting a function but got "${a}"`)}else if(!Zt(a))throw new Re(`Graph.${e}: invalid attributes. Expecting an object but got "${a}"`)}s=""+s,o=""+o;let c;if(l&&(c=a,a=void 0),!i.allowSelfLoops&&s===o)throw new Ue(`Graph.${e}: source & target are the same ("${s}"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`);let u=i._nodes.get(s),f=i._nodes.get(o),d,m;if(!t&&(d=i._edges.get(r),d)){if((d.source.key!==s||d.target.key!==o)&&(!n||d.source.key!==o||d.target.key!==s))throw new Ue(`Graph.${e}: inconsistency detected when attempting to merge the "${r}" edge with "${s}" source & "${o}" target vs. ("${d.source.key}", "${d.target.key}").`);m=d}if(!m&&!i.multi&&u&&(m=n?u.undirected[o]:u.out[o]),m){const w=[m.key,!1,!1,!1];if(l?!c:!a)return w;if(l){const y=m.attributes;m.attributes=c(y),i.emit("edgeAttributesUpdated",{type:"replace",key:m.key,attributes:m.attributes})}else Gt(m.attributes,a),i.emit("edgeAttributesUpdated",{type:"merge",key:m.key,attributes:m.attributes,data:a});return w}a=a||{},l&&c&&(a=c(a));const g={key:null,undirected:n,source:s,target:o,attributes:a};if(t)r=i._edgeKeyGenerator();else if(r=""+r,i._edges.has(r))throw new Ue(`Graph.${e}: the "${r}" edge already exists in the graph.`);let h=!1,p=!1;u||(u=mu(i,s,{}),h=!0,s===o&&(f=u,p=!0)),f||(f=mu(i,o,{}),p=!0),d=new Gr(n,r,u,f,a),i._edges.set(r,d);const _=s===o;return n?(u.undirectedDegree++,f.undirectedDegree++,_&&i._undirectedSelfLoopCount++):(u.outDegree++,f.inDegree++,_&&i._directedSelfLoopCount++),i.multi?d.attachMulti():d.attach(),n?i._undirectedSize++:i._directedSize++,g.key=r,i.emit("edgeAdded",g),[r,!0,h,p]}function br(i,e){i._edges.delete(e.key);const{source:t,target:n,attributes:r}=e,s=e.undirected,o=t===n;s?(t.undirectedDegree--,n.undirectedDegree--,o&&i._undirectedSelfLoopCount--):(t.outDegree--,n.inDegree--,o&&i._directedSelfLoopCount--),i.multi?e.detachMulti():e.detach(),s?i._undirectedSize--:i._directedSize--,i.emit("edgeDropped",{key:e.key,attributes:r,source:t.key,target:n.key,undirected:s})}class Ct extends sl.exports.EventEmitter{constructor(e){if(super(),e=Gt({},Ow,e),typeof e.multi!="boolean")throw new Re(`Graph.constructor: invalid 'multi' option. Expecting a boolean but got "${e.multi}".`);if(!Iw.has(e.type))throw new Re(`Graph.constructor: invalid 'type' option. Should be one of "mixed", "directed" or "undirected" but got "${e.type}".`);if(typeof e.allowSelfLoops!="boolean")throw new Re(`Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got "${e.allowSelfLoops}".`);const t=e.type==="mixed"?kd:e.type==="directed"?Od:Nd;_n(this,"NodeDataClass",t);const n="geid_"+Rw()+"_";let r=0;const s=()=>{let o;do o=n+r++;while(this._edges.has(o));return o};_n(this,"_attributes",{}),_n(this,"_nodes",new Map),_n(this,"_edges",new Map),_n(this,"_directedSize",0),_n(this,"_undirectedSize",0),_n(this,"_directedSelfLoopCount",0),_n(this,"_undirectedSelfLoopCount",0),_n(this,"_edgeKeyGenerator",s),_n(this,"_options",e),pu.forEach(o=>_n(this,o,this[o])),Rn(this,"order",()=>this._nodes.size),Rn(this,"size",()=>this._edges.size),Rn(this,"directedSize",()=>this._directedSize),Rn(this,"undirectedSize",()=>this._undirectedSize),Rn(this,"selfLoopCount",()=>this._directedSelfLoopCount+this._undirectedSelfLoopCount),Rn(this,"directedSelfLoopCount",()=>this._directedSelfLoopCount),Rn(this,"undirectedSelfLoopCount",()=>this._undirectedSelfLoopCount),Rn(this,"multi",this._options.multi),Rn(this,"type",this._options.type),Rn(this,"allowSelfLoops",this._options.allowSelfLoops),Rn(this,"implementation",()=>"graphology")}_resetInstanceCounters(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0}hasNode(e){return this._nodes.has(""+e)}hasDirectedEdge(e,t){if(this.type==="undirected")return!1;if(arguments.length===1){const n=""+e,r=this._edges.get(n);return!!r&&!r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;const r=n.out[t];return r?this.multi?!!r.size:!0:!1}throw new Re(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasUndirectedEdge(e,t){if(this.type==="directed")return!1;if(arguments.length===1){const n=""+e,r=this._edges.get(n);return!!r&&r.undirected}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;const r=n.undirected[t];return r?this.multi?!!r.size:!0:!1}throw new Re(`Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}hasEdge(e,t){if(arguments.length===1){const n=""+e;return this._edges.has(n)}else if(arguments.length===2){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)return!1;let r=typeof n.out<"u"&&n.out[t];return r||(r=typeof n.undirected<"u"&&n.undirected[t]),r?this.multi?!!r.size:!0:!1}throw new Re(`Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`)}directedEdge(e,t){if(this.type==="undirected")return;if(e=""+e,t=""+t,this.multi)throw new Ue("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");const n=this._nodes.get(e);if(!n)throw new ve(`Graph.directedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new ve(`Graph.directedEdge: could not find the "${t}" target node in the graph.`);const r=n.out&&n.out[t]||void 0;if(r)return r.key}undirectedEdge(e,t){if(this.type==="directed")return;if(e=""+e,t=""+t,this.multi)throw new Ue("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");const n=this._nodes.get(e);if(!n)throw new ve(`Graph.undirectedEdge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new ve(`Graph.undirectedEdge: could not find the "${t}" target node in the graph.`);const r=n.undirected&&n.undirected[t]||void 0;if(r)return r.key}edge(e,t){if(this.multi)throw new Ue("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.edge: could not find the "${e}" source node in the graph.`);if(!this._nodes.has(t))throw new ve(`Graph.edge: could not find the "${t}" target node in the graph.`);const r=n.out&&n.out[t]||n.undirected&&n.undirected[t]||void 0;if(r)return r.key}areDirectedNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areDirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.in||t in n.out}areOutNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areOutNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.out}areInNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areInNeighbors: could not find the "${e}" node in the graph.`);return this.type==="undirected"?!1:t in n.in}areUndirectedNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areUndirectedNeighbors: could not find the "${e}" node in the graph.`);return this.type==="directed"?!1:t in n.undirected}areNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&(t in n.in||t in n.out)||this.type!=="directed"&&t in n.undirected}areInboundNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areInboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in n.in||this.type!=="directed"&&t in n.undirected}areOutboundNeighbors(e,t){e=""+e,t=""+t;const n=this._nodes.get(e);if(!n)throw new ve(`Graph.areOutboundNeighbors: could not find the "${e}" node in the graph.`);return this.type!=="undirected"&&t in n.out||this.type!=="directed"&&t in n.undirected}inDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.inDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree}outDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.outDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.outDegree}directedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.directedDegree: could not find the "${e}" node in the graph.`);return this.type==="undirected"?0:t.inDegree+t.outDegree}undirectedDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.undirectedDegree: could not find the "${e}" node in the graph.`);return this.type==="directed"?0:t.undirectedDegree}inboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.inboundDegree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.inDegree),n}outboundDegree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.outboundDegree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.outDegree),n}degree(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.degree: could not find the "${e}" node in the graph.`);let n=0;return this.type!=="directed"&&(n+=t.undirectedDegree),this.type!=="undirected"&&(n+=t.inDegree+t.outDegree),n}inDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.inDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.in[e],r=n?this.multi?n.size:1:0;return t.inDegree-r}outDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.outDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.out[e],r=n?this.multi?n.size:1:0;return t.outDegree-r}directedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.directedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="undirected")return 0;const n=t.out[e],r=n?this.multi?n.size:1:0;return t.inDegree+t.outDegree-r*2}undirectedDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.undirectedDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);if(this.type==="directed")return 0;const n=t.undirected[e],r=n?this.multi?n.size:1:0;return t.undirectedDegree-r*2}inboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.inboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.inDegree,n=t.out[e],s+=n?this.multi?n.size:1:0),r-s}outboundDegreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.outboundDegreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.outDegree,n=t.in[e],s+=n?this.multi?n.size:1:0),r-s}degreeWithoutSelfLoops(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.degreeWithoutSelfLoops: could not find the "${e}" node in the graph.`);let n,r=0,s=0;return this.type!=="directed"&&(r+=t.undirectedDegree,n=t.undirected[e],s+=(n?this.multi?n.size:1:0)*2),this.type!=="undirected"&&(r+=t.inDegree+t.outDegree,n=t.out[e],s+=(n?this.multi?n.size:1:0)*2),r-s}source(e){e=""+e;const t=this._edges.get(e);if(!t)throw new ve(`Graph.source: could not find the "${e}" edge in the graph.`);return t.source.key}target(e){e=""+e;const t=this._edges.get(e);if(!t)throw new ve(`Graph.target: could not find the "${e}" edge in the graph.`);return t.target.key}extremities(e){e=""+e;const t=this._edges.get(e);if(!t)throw new ve(`Graph.extremities: could not find the "${e}" edge in the graph.`);return[t.source.key,t.target.key]}opposite(e,t){e=""+e,t=""+t;const n=this._edges.get(t);if(!n)throw new ve(`Graph.opposite: could not find the "${t}" edge in the graph.`);const r=n.source.key,s=n.target.key;if(e===r)return s;if(e===s)return r;throw new ve(`Graph.opposite: the "${e}" node is not attached to the "${t}" edge (${r}, ${s}).`)}hasExtremity(e,t){e=""+e,t=""+t;const n=this._edges.get(e);if(!n)throw new ve(`Graph.hasExtremity: could not find the "${e}" edge in the graph.`);return n.source.key===t||n.target.key===t}isUndirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new ve(`Graph.isUndirected: could not find the "${e}" edge in the graph.`);return t.undirected}isDirected(e){e=""+e;const t=this._edges.get(e);if(!t)throw new ve(`Graph.isDirected: could not find the "${e}" edge in the graph.`);return!t.undirected}isSelfLoop(e){e=""+e;const t=this._edges.get(e);if(!t)throw new ve(`Graph.isSelfLoop: could not find the "${e}" edge in the graph.`);return t.source===t.target}addNode(e,t){return Nw(this,e,t).key}mergeNode(e,t){if(t&&!Zt(t))throw new Re(`Graph.mergeNode: invalid attributes. Expecting an object but got "${t}"`);e=""+e,t=t||{};let n=this._nodes.get(e);return n?(t&&(Gt(n.attributes,t),this.emit("nodeAttributesUpdated",{type:"merge",key:e,attributes:n.attributes,data:t})),[e,!1]):(n=new this.NodeDataClass(e,t),this._nodes.set(e,n),this.emit("nodeAdded",{key:e,attributes:t}),[e,!0])}updateNode(e,t){if(t&&typeof t!="function")throw new Re(`Graph.updateNode: invalid updater function. Expecting a function but got "${t}"`);e=""+e;let n=this._nodes.get(e);if(n){if(t){const s=n.attributes;n.attributes=t(s),this.emit("nodeAttributesUpdated",{type:"replace",key:e,attributes:n.attributes})}return[e,!1]}const r=t?t({}):{};return n=new this.NodeDataClass(e,r),this._nodes.set(e,n),this.emit("nodeAdded",{key:e,attributes:r}),[e,!0]}dropNode(e){e=""+e;const t=this._nodes.get(e);if(!t)throw new ve(`Graph.dropNode: could not find the "${e}" node in the graph.`);let n;if(this.type!=="undirected"){for(const r in t.out){n=t.out[r];do br(this,n),n=n.next;while(n)}for(const r in t.in){n=t.in[r];do br(this,n),n=n.next;while(n)}}if(this.type!=="directed")for(const r in t.undirected){n=t.undirected[r];do br(this,n),n=n.next;while(n)}this._nodes.delete(e),this.emit("nodeDropped",{key:e,attributes:t.attributes})}dropEdge(e){let t;if(arguments.length>1){const n=""+arguments[0],r=""+arguments[1];if(t=Sn(this,n,r,this.type),!t)throw new ve(`Graph.dropEdge: could not find the "${n}" -> "${r}" edge in the graph.`)}else if(e=""+e,t=this._edges.get(e),!t)throw new ve(`Graph.dropEdge: could not find the "${e}" edge in the graph.`);return br(this,t),this}dropDirectedEdge(e,t){if(arguments.length<2)throw new Ue("Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new Ue("Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");e=""+e,t=""+t;const n=Sn(this,e,t,"directed");if(!n)throw new ve(`Graph.dropDirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return br(this,n),this}dropUndirectedEdge(e,t){if(arguments.length<2)throw new Ue("Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.");if(this.multi)throw new Ue("Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.");const n=Sn(this,e,t,"undirected");if(!n)throw new ve(`Graph.dropUndirectedEdge: could not find a "${e}" -> "${t}" edge in the graph.`);return br(this,n),this}clear(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit("cleared")}clearEdges(){const e=this._nodes.values();let t;for(;t=e.next(),t.done!==!0;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit("edgesCleared")}getAttribute(e){return this._attributes[e]}getAttributes(){return this._attributes}hasAttribute(e){return this._attributes.hasOwnProperty(e)}setAttribute(e,t){return this._attributes[e]=t,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}updateAttribute(e,t){if(typeof t!="function")throw new Re("Graph.updateAttribute: updater should be a function.");const n=this._attributes[e];return this._attributes[e]=t(n),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:e}),this}removeAttribute(e){return delete this._attributes[e],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:e}),this}replaceAttributes(e){if(!Zt(e))throw new Re("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=e,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this}mergeAttributes(e){if(!Zt(e))throw new Re("Graph.mergeAttributes: provided attributes are not a plain object.");return Gt(this._attributes,e),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:e}),this}updateAttributes(e){if(typeof e!="function")throw new Re("Graph.updateAttributes: provided updater is not a function.");return this._attributes=e(this._attributes),this.emit("attributesUpdated",{type:"update",attributes:this._attributes}),this}updateEachNodeAttributes(e,t){if(typeof e!="function")throw new Re("Graph.updateEachNodeAttributes: expecting an updater function.");if(t&&!hu(t))throw new Re("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const n=this._nodes.values();let r,s;for(;r=n.next(),r.done!==!0;)s=r.value,s.attributes=e(s.key,s.attributes);this.emit("eachNodeAttributesUpdated",{hints:t||null})}updateEachEdgeAttributes(e,t){if(typeof e!="function")throw new Re("Graph.updateEachEdgeAttributes: expecting an updater function.");if(t&&!hu(t))throw new Re("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");const n=this._edges.values();let r,s,o,a;for(;r=n.next(),r.done!==!0;)s=r.value,o=s.source,a=s.target,s.attributes=e(s.key,s.attributes,o.key,a.key,o.attributes,a.attributes,s.undirected);this.emit("eachEdgeAttributesUpdated",{hints:t||null})}forEachAdjacencyEntry(e){if(typeof e!="function")throw new Re("Graph.forEachAdjacencyEntry: expecting a callback.");Xs(!1,!1,!1,this,e)}forEachAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new Re("Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.");Xs(!1,!1,!0,this,e)}forEachAssymetricAdjacencyEntry(e){if(typeof e!="function")throw new Re("Graph.forEachAssymetricAdjacencyEntry: expecting a callback.");Xs(!1,!0,!1,this,e)}forEachAssymetricAdjacencyEntryWithOrphans(e){if(typeof e!="function")throw new Re("Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.");Xs(!1,!0,!0,this,e)}nodes(){return typeof Array.from=="function"?Array.from(this._nodes.keys()):Rd(this._nodes.keys(),this._nodes.size)}forEachNode(e){if(typeof e!="function")throw new Re("Graph.forEachNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)r=n.value,e(r.key,r.attributes)}findNode(e){if(typeof e!="function")throw new Re("Graph.findNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,e(r.key,r.attributes))return r.key}mapNodes(e){if(typeof e!="function")throw new Re("Graph.mapNode: expecting a callback.");const t=this._nodes.values();let n,r;const s=new Array(this.order);let o=0;for(;n=t.next(),n.done!==!0;)r=n.value,s[o++]=e(r.key,r.attributes);return s}someNode(e){if(typeof e!="function")throw new Re("Graph.someNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,e(r.key,r.attributes))return!0;return!1}everyNode(e){if(typeof e!="function")throw new Re("Graph.everyNode: expecting a callback.");const t=this._nodes.values();let n,r;for(;n=t.next(),n.done!==!0;)if(r=n.value,!e(r.key,r.attributes))return!1;return!0}filterNodes(e){if(typeof e!="function")throw new Re("Graph.filterNodes: expecting a callback.");const t=this._nodes.values();let n,r;const s=[];for(;n=t.next(),n.done!==!0;)r=n.value,e(r.key,r.attributes)&&s.push(r.key);return s}reduceNodes(e,t){if(typeof e!="function")throw new Re("Graph.reduceNodes: expecting a callback.");if(arguments.length<2)throw new Re("Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.");let n=t;const r=this._nodes.values();let s,o;for(;s=r.next(),s.done!==!0;)o=s.value,n=e(n,o.key,o.attributes);return n}nodeEntries(){const e=this._nodes.values();return new cn(()=>{const t=e.next();if(t.done)return t;const n=t.value;return{value:{node:n.key,attributes:n.attributes},done:!1}})}export(){const e=new Array(this._nodes.size);let t=0;this._nodes.forEach((r,s)=>{e[t++]=Cw(s,r)});const n=new Array(this._edges.size);return t=0,this._edges.forEach((r,s)=>{n[t++]=Lw(s,r)}),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:n}}import(e,t=!1){if(Ib(e))return e.forEachNode((l,c)=>{t?this.mergeNode(l,c):this.addNode(l,c)}),e.forEachEdge((l,c,u,f,d,m,g)=>{t?g?this.mergeUndirectedEdgeWithKey(l,u,f,c):this.mergeDirectedEdgeWithKey(l,u,f,c):g?this.addUndirectedEdgeWithKey(l,u,f,c):this.addDirectedEdgeWithKey(l,u,f,c)}),this;if(!Zt(e))throw new Re("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(e.attributes){if(!Zt(e.attributes))throw new Re("Graph.import: invalid attributes. Expecting a plain object.");t?this.mergeAttributes(e.attributes):this.replaceAttributes(e.attributes)}let n,r,s,o,a;if(e.nodes){if(s=e.nodes,!Array.isArray(s))throw new Re("Graph.import: invalid nodes. Expecting an array.");for(n=0,r=s.length;n<r;n++){o=s[n],Dw(o);const{key:l,attributes:c}=o;t?this.mergeNode(l,c):this.addNode(l,c)}}if(e.edges){if(s=e.edges,!Array.isArray(s))throw new Re("Graph.import: invalid edges. Expecting an array.");for(n=0,r=s.length;n<r;n++){a=s[n],Pw(a);const{source:l,target:c,attributes:u,undirected:f=!1}=a;let d;"key"in a?(d=t?f?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:f?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey,d.call(this,a.key,l,c,u)):(d=t?f?this.mergeUndirectedEdge:this.mergeDirectedEdge:f?this.addUndirectedEdge:this.addDirectedEdge,d.call(this,l,c,u))}}return this}nullCopy(e){const t=new Ct(Gt({},this._options,e));return t.replaceAttributes(Gt({},this.getAttributes())),t}emptyCopy(e){const t=this.nullCopy(e);return this._nodes.forEach((n,r)=>{const s=Gt({},n.attributes);n=new t.NodeDataClass(r,s),t._nodes.set(r,n)}),t}copy(e){if(e=e||{},typeof e.type=="string"&&e.type!==this.type&&e.type!=="mixed")throw new Ue(`Graph.copy: cannot create an incompatible copy from "${this.type}" type to "${e.type}" because this would mean losing information about the current graph.`);if(typeof e.multi=="boolean"&&e.multi!==this.multi&&e.multi!==!0)throw new Ue("Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.");if(typeof e.allowSelfLoops=="boolean"&&e.allowSelfLoops!==this.allowSelfLoops&&e.allowSelfLoops!==!0)throw new Ue("Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.");const t=this.emptyCopy(e),n=this._edges.values();let r,s;for(;r=n.next(),r.done!==!0;)s=r.value,Bd(t,"copy",!1,s.undirected,s.key,s.source.key,s.target.key,Gt({},s.attributes));return t}toJSON(){return this.export()}toString(){return"[object Graph]"}inspect(){const e={};this._nodes.forEach((s,o)=>{e[o]=s.attributes});const t={},n={};this._edges.forEach((s,o)=>{const a=s.undirected?"--":"->";let l="",c=s.source.key,u=s.target.key,f;s.undirected&&c>u&&(f=c,c=u,u=f);const d=`(${c})${a}(${u})`;o.startsWith("geid_")?this.multi&&(typeof n[d]>"u"?n[d]=0:n[d]++,l+=`${n[d]}. `):l+=`[${o}]: `,l+=d,t[l]=s.attributes});const r={};for(const s in this)this.hasOwnProperty(s)&&!pu.has(s)&&typeof this[s]!="function"&&typeof s!="symbol"&&(r[s]=this[s]);return r.attributes=this._attributes,r.nodes=e,r.edges=t,_n(r,"constructor",this.constructor),r}}typeof Symbol<"u"&&(Ct.prototype[Symbol.for("nodejs.util.inspect.custom")]=Ct.prototype.inspect);kw.forEach(i=>{["add","merge","update"].forEach(e=>{const t=i.name(e),n=e==="add"?Bd:Fw;i.generateKey?Ct.prototype[t]=function(r,s,o){return n(this,t,!0,(i.type||this.type)==="undirected",null,r,s,o,e==="update")}:Ct.prototype[t]=function(r,s,o,a){return n(this,t,!1,(i.type||this.type)==="undirected",r,s,o,a,e==="update")}})});qb(Ct);iw(Ct);bw(Ct);Tw(Ct);class Vd extends Ct{constructor(e){const t=Gt({type:"directed"},e);if("multi"in t&&t.multi!==!1)throw new Re("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="directed")throw new Re('DirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Hd extends Ct{constructor(e){const t=Gt({type:"undirected"},e);if("multi"in t&&t.multi!==!1)throw new Re("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if(t.type!=="undirected")throw new Re('UndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class Wd extends Ct{constructor(e){const t=Gt({multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Re("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");super(t)}}class fl extends Ct{constructor(e){const t=Gt({type:"directed",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Re("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="directed")throw new Re('MultiDirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}class jd extends Ct{constructor(e){const t=Gt({type:"undirected",multi:!0},e);if("multi"in t&&t.multi!==!0)throw new Re("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if(t.type!=="undirected")throw new Re('MultiUndirectedGraph.from: inconsistent "'+t.type+'" type in given options!');super(t)}}function Br(i){i.from=function(e,t){const n=Gt({},e.options,t),r=new i(n);return r.import(e),r}}Br(Ct);Br(Vd);Br(Hd);Br(Wd);Br(fl);Br(jd);Ct.Graph=Ct;Ct.DirectedGraph=Vd;Ct.UndirectedGraph=Hd;Ct.MultiGraph=Wd;Ct.MultiDirectedGraph=fl;Ct.MultiUndirectedGraph=jd;Ct.InvalidArgumentsGraphError=Re;Ct.NotFoundGraphError=ve;Ct.UsageGraphError=Ue;function gu(i){var t;let e=new fl;return e.import({attributes:{name:(t=i.id)!=null?t:"name-"+Math.floor(Math.random()*1e9),id:i.name},options:{allowSelfLoops:!0,multi:!0,type:"directed"},nodes:i.nodes.map(n=>({key:n.id,attributes:{...n}})),edges:i.links.map(n=>{let r=typeof n.source=="string"?n.source:n.source.id,s=typeof n.target=="string"?n.target:n.target.id;return{key:n.key,source:r,target:s,undirected:!1,attributes:{...n}}})}),e}function _u(i,e){i.updateEachNodeAttributes((r,s)=>{var o;return{...s,x:s.x*e,y:s.y*e,z:s.z*e,maxAbsFC:(o=s==null?void 0:s.maxAbsFC)!=null?o:0}});const t=new Intl.Collator("en",{numeric:!0,sensitivity:"base"});let n=[];return i.forEachNode(r=>{i.forEachNeighbor(r,s=>{if(n.includes(s))return;let o=0;i.someEdge(r,s,a=>{i.setEdgeAttribute(a,"multiNumber",o),o++}),i.someEdge(r,s,a=>{i.setEdgeAttribute(a,"multiTotal",o)})}),n.push(r)}),i.updateEachEdgeAttributes((r,s,o,a,l,c)=>{const u=t.compare(o,a),f=s.multiTotal,d=s.multiNumber;let m=0,g=0;f>1&&(m=.5,g=d/f*2*Math.PI,u===1&&(g=Math.PI-g)),u===0&&(m=.5);let h=new B(l.x,l.y,l.z),p=new B(c.x,c.y,c.z),_=h.lerp(p,.5),w=p.clone().add(h.clone().multiplyScalar(-1)),y=new oo().setFromVector3(w);const b=new B().subVectors(p,h),x=new x1(b.clone().normalize(),p),M=new B(x.rotation.x,x.rotation.y,x.rotation.z);return{curve:m,curveRotation:g,isFirstLink:d===0,cylLength:2*y.radius,cylPos:_,cylRot:M,dotForwards:p.dot(h),...s}}),i}function zw(i,e){let t=e.data;if(t===void 0)return i.updateEachEdgeAttributes((n,r)=>(r.fc=void 0,r.err=void 0,r)),i;{let n=t.sort((s,o)=>s.site===o.site?0:s.site==="Pan-specific"?-1:1),r=Object.fromEntries(i.mapNodes(s=>[s,0]));return i.updateEachEdgeAttributes((s,o,a,l,c,u)=>{var g;let f=n.slice().find(h=>h.targetid===l),d=n.slice().find(h=>h.targetid===l&&h.site===o.substratePhosphosite);d!==void 0&&(f=d),o.fc=f==null?void 0:f.fc,o.err=f==null?void 0:f.err;let m=Math.abs((g=o==null?void 0:o.fc)!=null?g:0);return m>r[a]&&(r[a]=m),m>r[l]&&(r[l]=m),o}),i.updateEachNodeAttributes((s,o)=>({...o,maxAbsFC:r[s]})),i}}let za=lt(!1),Ua=lt("settings"),Ga=lt(!1),ao=lt(!0),lo=lt(!0),ls=lt(2),Tr=lt(void 0),co=lt(new Set),Uw=lt(100),Ba=lt(void 0),qd=lt(void 0),Ri=vn([qd,Ba,Uw],(i,e)=>{if(!i[0])e(void 0);else{let t=_u(gu(i[0]),i[2]);t.setAttribute("hasFC",!1),t.setAttribute("id",i[0].id),console.log("reload"),console.log("id: ",i[0].id),e(t)}if(i[0]&&i[1]){console.log("setting FC");let t=_u(zw(gu(i[0]),i[1]),100);t.setAttribute("hasFC",!0),t.setAttribute("id",i[0].id+"_"+i[1].id),console.log("reload"),console.log("id-2: ",i[0].id+"_"+i[1].id),e(t)}});function vu(i){let e,t;return e=new vb({props:{transform:!0,sprite:!0,scale:2*i[6],pointerEvents:"none",$$slots:{default:[Gw]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r&64&&(s.scale=2*n[6]),r&33554460&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function Gw(i){let e,t,n,r,s;return{c(){e=he("div"),t=he("h1"),t.textContent=`${i[8].name}`,W(e,"class",r=Tt("base "+(i[2]?"neighbour ":"")+(i[4]?"clicked ":"")+(i[3]?"hovering ":""))+" svelte-1iujuck")},m(o,a){ue(o,e,a),ne(e,t),s=!0},p(o,a){(!s||a&28&&r!==(r=Tt("base "+(o[2]?"neighbour ":"")+(o[4]?"clicked ":"")+(o[3]?"hovering ":""))+" svelte-1iujuck"))&&W(e,"class",r)},i(o){s||(si(()=>{n||(n=ml(t,ou,{},!0)),n.run(1)}),s=!0)},o(o){n||(n=ml(t,ou,{},!1)),n.run(0),s=!1},d(o){o&&le(e),o&&n&&n.end()}}}function Bw(i){let e,t,n=!i[1]&&(i[6]>1||i[2]||i[4])&&vu(i);return{c(){n&&n.c(),e=zt()},m(r,s){n&&n.m(r,s),ue(r,e,s),t=!0},p(r,s){!r[1]&&(r[6]>1||r[2]||r[4])?n?(n.p(r,s),s&86&&U(n,1)):(n=vu(r),n.c(),U(n,1),n.m(e.parentNode,e)):n&&(ut(),q(n,1,1,()=>{n=null}),ft())},i(r){t||(U(n),t=!0)},o(r){q(n),t=!1},d(r){n&&n.d(r),r&&le(e)}}}function Vw(i){let e,t;return e=new Kv({props:{position:{...i[9]},scale:i[6],color:i[1]?new Ke(5263440):i[7],$$slots:{default:[Bw]},$$scope:{ctx:i}}}),e.$on("pointerenter",i[15]),e.$on("pointerleave",i[16]),e.$on("click",i[17]),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,[r]){const s={};r&64&&(s.scale=n[6]),r&130&&(s.color=n[1]?new Ke(5263440):n[7]),r&33554526&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function Hw(i,e,t){var N,D;let n,r,s,o,a;Fe(i,ls,O=>t(13,n=O)),Fe(i,Tr,O=>t(5,r=O)),Fe(i,Ri,O=>t(14,s=O));let{graph:l}=e,{nodeID:c}=e,{greyedOut:u}=e;const f={kinase:"#FF3E00",substrate:"#008080",selected:"#FED000",Kinase:void 0,"Ser/Thr/Tyr Kinase":void 0,"Tyr Kinase":void 0,"Ser/Thr Kinase":void 0,Unclassified:void 0,Transcription:void 0,Regulatory:"#FFC0CB",Structural:void 0,Metabolic:void 0,Phosphatase:void 0,"Adapter/scaffold":void 0,Cytosketetal:void 0},d=l.getNodeAttributes(c),m=l.neighbors(c);let g=!1;const h={x:d.x,y:d.y,z:d.z},p=(N=d.radius)!=null?N:1;let _=!1,w=!1;const y=su(p);Fe(i,y,O=>t(6,o=O));const b=su(0);let x;d.isKinase?x=f.kinase:x=f.substrate;let M=new Ke((D=f[d.type])!=null?D:x),L=new Ke(f.selected);const v=vn(b,O=>new Ke().lerpColors(M,L,O));Fe(i,v,O=>t(7,a=O));const A=()=>{t(3,_=!0),en(Tr,r=c,r)},S=()=>{t(3,_=!1),en(Tr,r=void 0,r)},I=()=>{t(4,w=!w)};return i.$$set=O=>{"graph"in O&&t(12,l=O.graph),"nodeID"in O&&t(0,c=O.nodeID),"greyedOut"in O&&t(1,u=O.greyedOut)},i.$$.update=()=>{if(i.$$.dirty&24613)if(r){let O=s.getAttribute("hasFC");t(2,g=m.includes(r)),O&&g&&t(2,g=s.reduceEdges(r,c,(k,P,K)=>Math.abs(K.fc)>n,!1)||s.reduceEdges(c,r,(k,P,K)=>Math.abs(K.fc)>n,!1))}else t(2,g=!1);i.$$.dirty&30&&(!u&&(_||g||w)?(y.set(p*3,{duration:50,easing:iu}),_&&b.set(1,{duration:0})):(y.set(p,{duration:250,easing:iu}),b.set(0,{duration:250})))},[c,u,g,_,w,r,o,a,d,h,y,v,l,n,s,A,S,I]}class Xd extends We{constructor(e){super(),He(this,e,Hw,Vw,Be,{graph:12,nodeID:0,greyedOut:1})}}function bu(i,e,t){const n=i.slice();return n[7]=e[t],n}function wu(i,e,t){const n=i.slice();return n[7]=e[t],n}function yu(i,e){let t,n,r;return n=new Xd({props:{graph:e[4],nodeID:e[7],greyedOut:!1}}),{key:i,first:null,c(){t=zt(),De(n.$$.fragment),this.first=t},m(s,o){ue(s,t,o),Te(n,s,o),r=!0},p(s,o){e=s;const a={};o&16&&(a.graph=e[4]),o&8&&(a.nodeID=e[7]),n.$set(a)},i(s){r||(U(n.$$.fragment,s),r=!0)},o(s){q(n.$$.fragment,s),r=!1},d(s){s&&le(t),Ce(n,s)}}}function Ww(i){let e=[],t=new Map,n,r,s=i[3][0];const o=a=>a[7]+"_"+String(a[4].getAttribute("id"));for(let a=0;a<s.length;a+=1){let l=wu(i,s,a),c=o(l);t.set(c,e[a]=yu(c,l))}return{c(){for(let a=0;a<e.length;a+=1)e[a].c();n=zt()},m(a,l){for(let c=0;c<e.length;c+=1)e[c].m(a,l);ue(a,n,l),r=!0},p(a,l){l&24&&(s=a[3][0],ut(),e=Ff(e,l,o,1,a,s,t,n.parentNode,Nf,yu,n,wu),ft())},i(a){if(!r){for(let l=0;l<s.length;l+=1)U(e[l]);r=!0}},o(a){for(let l=0;l<e.length;l+=1)q(e[l]);r=!1},d(a){for(let l=0;l<e.length;l+=1)e[l].d(a);a&&le(n)}}}function xu(i){let e,t;return e=new wd({props:{geometry:i[0],material:i[2],ignorePointer:!0,$$slots:{default:[jw]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r&1&&(s.geometry=n[0]),r&4&&(s.material=n[2]),r&4120&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function Mu(i,e){let t,n,r;return n=new Xd({props:{graph:e[4],nodeID:e[7],greyedOut:!0}}),{key:i,first:null,c(){t=zt(),De(n.$$.fragment),this.first=t},m(s,o){ue(s,t,o),Te(n,s,o),r=!0},p(s,o){e=s;const a={};o&16&&(a.graph=e[4]),o&8&&(a.nodeID=e[7]),n.$set(a)},i(s){r||(U(n.$$.fragment,s),r=!0)},o(s){q(n.$$.fragment,s),r=!1},d(s){s&&le(t),Ce(n,s)}}}function jw(i){let e=[],t=new Map,n,r,s=i[3][1];const o=a=>a[7]+"_ghost_"+String(a[4].getAttribute("id"));for(let a=0;a<s.length;a+=1){let l=bu(i,s,a),c=o(l);t.set(c,e[a]=Mu(c,l))}return{c(){for(let a=0;a<e.length;a+=1)e[a].c();n=zt()},m(a,l){for(let c=0;c<e.length;c+=1)e[c].m(a,l);ue(a,n,l),r=!0},p(a,l){l&24&&(s=a[3][1],ut(),e=Ff(e,l,o,1,a,s,t,n.parentNode,Nf,Mu,n,bu),ft())},i(a){if(!r){for(let l=0;l<s.length;l+=1)U(e[l]);r=!0}},o(a){for(let l=0;l<e.length;l+=1)q(e[l]);r=!1},d(a){for(let l=0;l<e.length;l+=1)e[l].d(a);a&&le(n)}}}function qw(i){let e,t,n,r;e=new wd({props:{geometry:i[0],material:i[1],interactive:!0,$$slots:{default:[Ww]},$$scope:{ctx:i}}});let s=i[5]&&xu(i);return{c(){De(e.$$.fragment),t=Oe(),s&&s.c(),n=zt()},m(o,a){Te(e,o,a),ue(o,t,a),s&&s.m(o,a),ue(o,n,a),r=!0},p(o,[a]){const l={};a&1&&(l.geometry=o[0]),a&2&&(l.material=o[1]),a&4120&&(l.$$scope={dirty:a,ctx:o}),e.$set(l),o[5]?s?(s.p(o,a),a&32&&U(s,1)):(s=xu(o),s.c(),U(s,1),s.m(n.parentNode,n)):s&&(ut(),q(s,1,1,()=>{s=null}),ft())},i(o){r||(U(e.$$.fragment,o),U(s),r=!0)},o(o){q(e.$$.fragment,o),q(s),r=!1},d(o){Ce(e,o),o&&le(t),s&&s.d(o),o&&le(n)}}}function Xw(i,e,t){let n=new Set,r=new Set,s=i.getAttribute("hasFC");i.forEachEdge((l,c,u,f,d,m)=>{var g,h;!c.isFirstLink||u===f||(s?t?Math.abs((g=c==null?void 0:c.fc)!=null?g:0)>e?(n.add(u),n.add(f)):(r.add(u),r.add(f)):Math.abs((h=c==null?void 0:c.fc)!=null?h:0)>e?(d.isKinase&&n.add(u),m.isKinase&&n.add(f)):(d.isKinase&&r.add(u),m.isKinase&&r.add(f)):t?(n.add(u),n.add(f)):(d.isKinase&&n.add(u),m.isKinase&&n.add(f)))}),r=new Set([...r].filter(l=>!n.has(l)));let o=Array(...n),a=Array(...r);return[o,a]}function Yw(i,e,t){let n,r,s;Fe(i,Ri,u=>t(4,r=u)),Fe(i,lo,u=>t(5,s=u));let{nodeGeometry:o}=e,{nodeMaterial:a}=e,{transparentMaterial:l}=e,c=vn([Ri,ls,ao],(u,f)=>{f(Xw(u[0],u[1],u[2]))});return Fe(i,c,u=>t(3,n=u)),i.$$set=u=>{"nodeGeometry"in u&&t(0,o=u.nodeGeometry),"nodeMaterial"in u&&t(1,a=u.nodeMaterial),"transparentMaterial"in u&&t(2,l=u.transparentMaterial)},[o,a,l,n,r,s,c]}class Zw extends We{constructor(e){super(),He(this,e,Yw,qw,Be,{nodeGeometry:0,nodeMaterial:1,transparentMaterial:2})}}function Su(i){let e,t,n,r;return e=new as({props:{mesh:i[3],ignorePointer:!0}}),n=new as({props:{mesh:i[1],ignorePointer:!0}}),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment)},m(s,o){Te(e,s,o),ue(s,t,o),Te(n,s,o),r=!0},p(s,o){const a={};o&8&&(a.mesh=s[3]),e.$set(a);const l={};o&2&&(l.mesh=s[1]),n.$set(l)},i(s){r||(U(e.$$.fragment,s),U(n.$$.fragment,s),r=!0)},o(s){q(e.$$.fragment,s),q(n.$$.fragment,s),r=!1},d(s){Ce(e,s),s&&le(t),Ce(n,s)}}}function Kw(i){let e,t,n,r,s,o=i[4]&&Su(i);return t=new as({props:{mesh:i[2],ignorePointer:!0}}),r=new as({props:{mesh:i[0],ignorePointer:!0}}),{c(){o&&o.c(),e=Oe(),De(t.$$.fragment),n=Oe(),De(r.$$.fragment)},m(a,l){o&&o.m(a,l),ue(a,e,l),Te(t,a,l),ue(a,n,l),Te(r,a,l),s=!0},p(a,[l]){a[4]?o?(o.p(a,l),l&16&&U(o,1)):(o=Su(a),o.c(),U(o,1),o.m(e.parentNode,e)):o&&(ut(),q(o,1,1,()=>{o=null}),ft());const c={};l&4&&(c.mesh=a[2]),t.$set(c);const u={};l&1&&(u.mesh=a[0]),r.$set(u)},i(a){s||(U(o),U(t.$$.fragment,a),U(r.$$.fragment,a),s=!0)},o(a){q(o),q(t.$$.fragment,a),q(r.$$.fragment,a),s=!1},d(a){o&&o.d(a),a&&le(e),Ce(t,a),a&&le(n),Ce(r,a)}}}const Ys=10;function Jw(i,e,t){let n,r,s;Fe(i,ls,b=>t(10,n=b)),Fe(i,Tr,b=>t(11,r=b)),Fe(i,lo,b=>t(4,s=b));let{graph:o}=e,{width:a}=e,{showSubstrates:l}=e,{geometry:c}=e,{material:u}=e;const f=new Ke(2781850),d=new Ke(16738573),m=f.clone().lerp(d,.5).offsetHSL(0,-255,0),g=new Ke(16699392);let h,p,_,w,y=new el(1,1,10);return i.$$set=b=>{"graph"in b&&t(5,o=b.graph),"width"in b&&t(6,a=b.width),"showSubstrates"in b&&t(7,l=b.showSubstrates),"geometry"in b&&t(8,c=b.geometry),"material"in b&&t(9,u=b.material)},i.$$.update=()=>{if(i.$$.dirty&4079&&(o||r)){const b=new $s({opacity:.05,transparent:!0,color:m});t(0,h=new xr(c,u,1e4)),t(1,p=new xr(c,b,1e4)),t(2,_=new xr(y,u,1e4)),t(3,w=new xr(y,b,1e4));let x=o.getAttribute("hasFC"),M=0,L=0;o.forEachEdge((v,A,S,I,N,D)=>{var ye,Xe,Q;if(!A.isFirstLink||S===I||!l&&!(N.isKinase&&D.isKinase))return;let O=!1;(r==S||r==I)&&(O=!0);const k=new B(N.x,N.y,N.z),P=new B(D.x,D.y,D.z),K=(ye=N.radius)!=null?ye:1,Z=(Xe=D.radius)!=null?Xe:1,j=new B().subVectors(P,k),V=j.length(),X=k.clone().lerp(P.clone(),K/V),re=k.clone().lerp(P.clone(),1-(Z+Ys+K)/V),ae=k.clone().lerp(P.clone(),1-(Z+Ys/2+K)/V),be=X.clone().lerp(re.clone(),.5),Ae=re.clone().add(X.clone().multiplyScalar(-1)),H=new oo().setFromVector3(Ae);let me=new At,Le=new Pi;Le.setFromUnitVectors(new B(0,1,0),j.normalize()),me.compose(be,Le,new B(a,H.radius,a));let pe=new At;if(pe.compose(ae,Le,new B(1.5,Ys,1.5)),!x)h.setMatrixAt(M,me),h.setColorAt(M,O?g:m),_.setMatrixAt(M,pe),_.setColorAt(M,O?g:m),M++;else{let fe=(Q=A==null?void 0:A.fc)!=null?Q:0,$=Math.min(Math.max(Math.abs(fe),.1)/4,1),Ie=3*a*$;Ie=Math.abs(fe)>n?Ie:.25;let tt=Math.max(1.5*Ie,.2);if(me.compose(be,Le,new B(Ie,H.radius,Ie)),pe.compose(ae,Le,new B(tt,Ys,tt)),Math.abs(fe)>n){let yt=fe>0?d:fe<0?f:m;h.setMatrixAt(M,me),h.setColorAt(M,yt),_.setMatrixAt(M,pe),_.setColorAt(M,yt),M++}else p.setMatrixAt(L,me),w.setMatrixAt(L,pe),L++}})}},[h,p,_,w,s,o,a,l,c,u,n,r]}class Qw extends We{constructor(e){super(),He(this,e,Jw,Kw,Be,{graph:5,width:6,showSubstrates:7,geometry:8,material:9})}}function $w(i){let e,t;return e=new Mv({props:{autoRotate:i[0],enableZoom:!0,enableDamping:!1}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r&1&&(s.autoRotate=n[0]),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function Au(i){let e,t,n,r;return e=new Qw({props:{geometry:i[5],material:i[6],width:ny,graph:i[1],showSubstrates:i[2]}}),n=new Zw({props:{nodeGeometry:i[3],nodeMaterial:i[4],transparentMaterial:i[7]}}),{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment)},m(s,o){Te(e,s,o),ue(s,t,o),Te(n,s,o),r=!0},p(s,o){const a={};o&2&&(a.graph=s[1]),o&4&&(a.showSubstrates=s[2]),e.$set(a)},i(s){r||(U(e.$$.fragment,s),U(n.$$.fragment,s),r=!0)},o(s){q(e.$$.fragment,s),q(n.$$.fragment,s),r=!1},d(s){Ce(e,s),s&&le(t),Ce(n,s)}}}function ey(i){let e,t,n,r,s,o,a,l;e=new vv({props:{fov:50,far:1e10,position:{x:40,y:20,z:40},lookAt:{},$$slots:{default:[$w]},$$scope:{ctx:i}}}),n=new Ov({props:{color:16777215,intensity:.6,position:{x:500,y:500,z:500}}}),s=new Pv({props:{color:10066329}});let c=i[1]&&Au(i);return{c(){De(e.$$.fragment),t=Oe(),De(n.$$.fragment),r=Oe(),De(s.$$.fragment),o=Oe(),c&&c.c(),a=zt()},m(u,f){Te(e,u,f),ue(u,t,f),Te(n,u,f),ue(u,r,f),Te(s,u,f),ue(u,o,f),c&&c.m(u,f),ue(u,a,f),l=!0},p(u,[f]){const d={};f&257&&(d.$$scope={dirty:f,ctx:u}),e.$set(d),u[1]?c?(c.p(u,f),f&2&&U(c,1)):(c=Au(u),c.c(),U(c,1),c.m(a.parentNode,a)):c&&(ut(),q(c,1,1,()=>{c=null}),ft())},i(u){l||(U(e.$$.fragment,u),U(n.$$.fragment,u),U(s.$$.fragment,u),U(c),l=!0)},o(u){q(e.$$.fragment,u),q(n.$$.fragment,u),q(s.$$.fragment,u),q(c),l=!1},d(u){Ce(e,u),u&&le(t),Ce(n,u),u&&le(r),Ce(s,u),u&&le(o),c&&c.d(u),u&&le(a)}}}const ty=2,ny=.5,iy=5;function ry(i,e,t){let n,r,s;Fe(i,Ga,f=>t(0,n=f)),Fe(i,Ri,f=>t(1,r=f)),Fe(i,ao,f=>t(2,s=f));const o=new nl(ty,2),a=new $s({opacity:.8,transparent:!1}),l=new ms(1,1,1,iy,1,!1),c=new $s({opacity:.6,transparent:!0,color:"#9DAABC"}),u=new $s({opacity:.1,transparent:!0,color:"#9DAABC"});return[n,r,s,o,a,l,c,u]}class sy extends We{constructor(e){super(),He(this,e,ry,ey,Be,{})}}function Eu(i){let e,t;return{c(){e=Ht("title"),t=wt(i[0])},m(n,r){ue(n,e,r),ne(e,t)},p(n,r){r&1&&qt(t,n[0])},d(n){n&&le(e)}}}function oy(i){let e,t,n,r=i[0]&&Eu(i);const s=i[3].default,o=dt(s,i,i[2],null);return{c(){e=Ht("svg"),r&&r.c(),t=zt(),o&&o.c(),W(e,"xmlns","http://www.w3.org/2000/svg"),W(e,"viewBox",i[1]),W(e,"class","svelte-c8tyih")},m(a,l){ue(a,e,l),r&&r.m(e,null),ne(e,t),o&&o.m(e,null),n=!0},p(a,[l]){a[0]?r?r.p(a,l):(r=Eu(a),r.c(),r.m(e,t)):r&&(r.d(1),r=null),o&&o.p&&(!n||l&4)&&pt(o,s,a,a[2],n?ht(s,a[2],l,null):mt(a[2]),null),(!n||l&2)&&W(e,"viewBox",a[1])},i(a){n||(U(o,a),n=!0)},o(a){q(o,a),n=!1},d(a){a&&le(e),r&&r.d(),o&&o.d(a)}}}function ay(i,e,t){let{$$slots:n={},$$scope:r}=e,{title:s=null}=e,{viewBox:o}=e;return i.$$set=a=>{"title"in a&&t(0,s=a.title),"viewBox"in a&&t(1,o=a.viewBox),"$$scope"in a&&t(2,r=a.$$scope)},[s,o,r,n]}class Po extends We{constructor(e){super(),He(this,e,ay,oy,Be,{title:0,viewBox:1})}}function ly(i){let e;return{c(){e=Ht("path"),W(e,"d","M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z")},m(t,n){ue(t,e,n)},p:et,d(t){t&&le(e)}}}function cy(i){let e,t;const n=[{viewBox:"0 0 16 16"},i[0]];let r={$$slots:{default:[ly]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=Pt(r,n[s]);return e=new Po({props:r}),{c(){De(e.$$.fragment)},m(s,o){Te(e,s,o),t=!0},p(s,[o]){const a=o&1?ui(n,[n[0],us(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(U(e.$$.fragment,s),t=!0)},o(s){q(e.$$.fragment,s),t=!1},d(s){Ce(e,s)}}}function uy(i,e,t){return i.$$set=n=>{t(0,e=Pt(Pt({},e),Vn(n)))},e=Vn(e),[e]}class fy extends We{constructor(e){super(),He(this,e,uy,cy,Be,{})}}function dy(i){let e;return{c(){e=Ht("path"),W(e,"d","M4 7H3V2h1v5zm-1 7h1v-3H3v3zm5 0h1V8H8v6zm5 0h1v-2h-1v2zm1-12h-1v6h1V2zM9 2H8v2h1V2zM5 8H2c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm5-3H7c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1zm5 4h-3c-.55 0-1 .45-1 1s.45 1 1 1h3c.55 0 1-.45 1-1s-.45-1-1-1z")},m(t,n){ue(t,e,n)},p:et,d(t){t&&le(e)}}}function hy(i){let e,t;const n=[{viewBox:"0 0 16 16"},i[0]];let r={$$slots:{default:[dy]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=Pt(r,n[s]);return e=new Po({props:r}),{c(){De(e.$$.fragment)},m(s,o){Te(e,s,o),t=!0},p(s,[o]){const a=o&1?ui(n,[n[0],us(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(U(e.$$.fragment,s),t=!0)},o(s){q(e.$$.fragment,s),t=!1},d(s){Ce(e,s)}}}function py(i,e,t){return i.$$set=n=>{t(0,e=Pt(Pt({},e),Vn(n)))},e=Vn(e),[e]}class my extends We{constructor(e){super(),He(this,e,py,hy,Be,{})}}function gy(i){let e;return{c(){e=Ht("path"),W(e,"d","M363.6 36.48c-22.2 0-40 17.8-40 40 0 22.23 17.8 40.02 40 40.02s40-17.79 40-40.02c0-22.2-17.8-40-40-40zm-56.7 51.97c-53.2 18.95-108.7 34.95-169 45.25 1.8 4.6 2.8 9.6 2.8 14.8 0 4.8-.8 9.4-2.4 13.6 96.2 12.9 182.8 36 257.8 71.9 1.6-5.9 4.5-11.3 8.3-15.9-71.2-34.3-152.4-57.2-241.5-70.7 53.2-10.6 102.8-25.4 150.4-42.2-3-5.2-5.2-10.79-6.4-16.75zm97.8 28.85c-4.3 4.3-9.2 8-14.6 10.8 15.3 24.8 26 50.6 31.8 77.8 4.3-1.5 9-2.4 13.8-2.4 1.4 0 2.8.1 4.1.2-6.3-30.3-18.2-59.1-35.1-86.4zm-305 8.2c-12.81 0-23 10.2-23 23s10.19 23 23 23c12.8 0 23-10.2 23-23s-10.2-23-23-23zm34.7 44.6c-3.2 5.2-7.5 9.6-12.6 12.9 32.1 32.6 66.1 65.9 120.6 80.4 0-.9-.1-1.9-.1-2.8 0-5.3 1.3-10.3 3.5-14.8-49.5-13.5-80-43.8-111.4-75.7zm-57 12.7c-21.76 67.8-27.12 137.2-32.29 206 2.13-.5 4.34-.7 6.6-.7 3.99 0 7.81.7 11.35 2.1 5.19-68.4 10.57-136 31.29-201.1-6.18-.8-11.94-3-16.95-6.3zm358.3 38.7c-12.8 0-23 10.2-23 23s10.2 23 23 23 23-10.2 23-23-10.2-23-23-23zm-41 22.2c-28.4 5.8-56.6 10.8-86 10.5.4 2.1.6 4.2.6 6.4 0 4-.7 7.9-2.1 11.5 32 .6 62-4.7 91.2-10.8-2.4-5.1-3.7-10.8-3.7-16.8zm-118.9 1.4c-8.7 0-15.5 6.8-15.5 15.5s6.8 15.5 15.5 15.5 15.5-6.8 15.5-15.5-6.8-15.5-15.5-15.5zM399 262.7c-55.6 45.9-106.6 94.4-143.1 150.7 5.9 1.8 11.2 5 15.6 9.1 34.9-53.5 84.2-100.8 138.8-145.9-4.7-3.7-8.6-8.5-11.3-13.9zm-152 15c-47.9 46.4-109.6 83.2-172.85 119.5 4.36 4.2 7.56 9.6 9.05 15.6C146.8 376.4 210 338.9 260 290.1c-5.4-2.9-9.9-7.2-13-12.4zm179.4 6.7c1.3 28.8 6 57.3 14.3 85.2 4.8-3.4 10.7-5.6 17-6-7.6-26-11.9-52.3-13.2-79.1-2.9.7-5.8 1-8.8 1-3.2 0-6.3-.4-9.3-1.1zm33.3 97.1c-8.4 0-15 6.6-15 15s6.6 15 15 15 15-6.6 15-15-6.6-15-15-15zM51.71 406.1c-8.07 0-14.42 6.4-14.42 14.4 0 8.1 6.35 14.5 14.42 14.5s14.42-6.4 14.42-14.5c0-8-6.35-14.4-14.42-14.4zm376.49.3c-44.7 24.5-93.8 32.6-144.9 35.6.9 3.4 1.4 6.9 1.4 10.5 0 2.6-.3 5.1-.7 7.5 53.1-3.1 105.8-11.6 154.3-38.5-4.7-4-8.2-9.2-10.1-15.1zM83.91 416.8c.14 1.2.22 2.4.22 3.7 0 5-1.15 9.7-3.19 14l121.86 20.3c-.1-.8-.1-1.5-.1-2.3 0-5.4 1.1-10.6 3-15.4zm159.79 12.7c-12.8 0-23 10.2-23 23s10.2 23 23 23 23-10.2 23-23-10.2-23-23-23z")},m(t,n){ue(t,e,n)},p:et,d(t){t&&le(e)}}}function _y(i){let e,t;const n=[{viewBox:"0 0 512 512"},i[0]];let r={$$slots:{default:[gy]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=Pt(r,n[s]);return e=new Po({props:r}),{c(){De(e.$$.fragment)},m(s,o){Te(e,s,o),t=!0},p(s,[o]){const a=o&1?ui(n,[n[0],us(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(U(e.$$.fragment,s),t=!0)},o(s){q(e.$$.fragment,s),t=!1},d(s){Ce(e,s)}}}function vy(i,e,t){return i.$$set=n=>{t(0,e=Pt(Pt({},e),Vn(n)))},e=Vn(e),[e]}class by extends We{constructor(e){super(),He(this,e,vy,_y,Be,{})}}const wy="modulepreload",yy=function(i,e){return new URL(i,e).href},Tu={},Ma=function(e,t,n){return!t||t.length===0?e():Promise.all(t.map(r=>{if(r=yy(r,n),r in Tu)return;Tu[r]=!0;const s=r.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${o}`))return;const a=document.createElement("link");if(a.rel=s?"stylesheet":wy,s||(a.as="script",a.crossOrigin=""),a.href=r,document.head.appendChild(a),s)return new Promise((l,c)=>{a.addEventListener("load",l),a.addEventListener("error",()=>c(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e())};function Ro(i){return i.split("-")[0]}function Yd(i){return i.split("-")[1]}function dl(i){return["top","bottom"].includes(Ro(i))?"x":"y"}function xy(i){return i==="y"?"height":"width"}function My(i){return{top:0,right:0,bottom:0,left:0,...i}}function Sy(i){return typeof i!="number"?My(i):{top:i,right:i,bottom:i,left:i}}function Cu(i){return{...i,top:i.y,left:i.x,right:i.x+i.width,bottom:i.y+i.height}}async function Zd(i,e){var t;e===void 0&&(e={});const{x:n,y:r,platform:s,rects:o,elements:a,strategy:l}=i,{boundary:c="clippingAncestors",rootBoundary:u="viewport",elementContext:f="floating",altBoundary:d=!1,padding:m=0}=e,g=Sy(m),p=a[d?f==="floating"?"reference":"floating":f],_=Cu(await s.getClippingRect({element:(t=await(s.isElement==null?void 0:s.isElement(p)))==null||t?p:p.contextElement||await(s.getDocumentElement==null?void 0:s.getDocumentElement(a.floating)),boundary:c,rootBoundary:u,strategy:l})),w=Cu(s.convertOffsetParentRelativeRectToViewportRelativeRect?await s.convertOffsetParentRelativeRectToViewportRelativeRect({rect:f==="floating"?{...o.floating,x:n,y:r}:o.reference,offsetParent:await(s.getOffsetParent==null?void 0:s.getOffsetParent(a.floating)),strategy:l}):o[f]);return{top:_.top-w.top+g.top,bottom:w.bottom-_.bottom+g.bottom,left:_.left-w.left+g.left,right:w.right-_.right+g.right}}const Ay=Math.min,Ey=Math.max;function Lu(i,e,t){return Ey(i,Ay(e,t))}const Ty={left:"right",right:"left",bottom:"top",top:"bottom"};function uo(i){return i.replace(/left|right|bottom|top/g,e=>Ty[e])}function Cy(i,e,t){t===void 0&&(t=!1);const n=Yd(i),r=dl(i),s=xy(r);let o=r==="x"?n===(t?"end":"start")?"right":"left":n==="start"?"bottom":"top";return e.reference[s]>e.floating[s]&&(o=uo(o)),{main:o,cross:uo(o)}}const Ly={start:"end",end:"start"};function Du(i){return i.replace(/start|end/g,e=>Ly[e])}function Dy(i){const e=uo(i);return[Du(i),e,Du(e)]}const Py=function(i){return i===void 0&&(i={}),{name:"flip",options:i,async fn(e){var t;const{placement:n,middlewareData:r,rects:s,initialPlacement:o,platform:a,elements:l}=e,{mainAxis:c=!0,crossAxis:u=!0,fallbackPlacements:f,fallbackStrategy:d="bestFit",flipAlignment:m=!0,...g}=i,h=Ro(n),_=f||(h===o||!m?[uo(o)]:Dy(o)),w=[o,..._],y=await Zd(e,g),b=[];let x=((t=r.flip)==null?void 0:t.overflows)||[];if(c&&b.push(y[h]),u){const{main:A,cross:S}=Cy(n,s,await(a.isRTL==null?void 0:a.isRTL(l.floating)));b.push(y[A],y[S])}if(x=[...x,{placement:n,overflows:b}],!b.every(A=>A<=0)){var M,L;const A=((M=(L=r.flip)==null?void 0:L.index)!=null?M:0)+1,S=w[A];if(S)return{data:{index:A,overflows:x},reset:{placement:S}};let I="bottom";switch(d){case"bestFit":{var v;const N=(v=x.map(D=>[D,D.overflows.filter(O=>O>0).reduce((O,k)=>O+k,0)]).sort((D,O)=>D[1]-O[1])[0])==null?void 0:v[0].placement;N&&(I=N);break}case"initialPlacement":I=o;break}if(n!==I)return{reset:{placement:I}}}return{}}}};async function Ry(i,e){const{placement:t,platform:n,elements:r}=i,s=await(n.isRTL==null?void 0:n.isRTL(r.floating)),o=Ro(t),a=Yd(t),l=dl(t)==="x",c=["left","top"].includes(o)?-1:1,u=s&&l?-1:1,f=typeof e=="function"?e(i):e;let{mainAxis:d,crossAxis:m,alignmentAxis:g}=typeof f=="number"?{mainAxis:f,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...f};return a&&typeof g=="number"&&(m=a==="end"?g*-1:g),l?{x:m*u,y:d*c}:{x:d*c,y:m*u}}const Iy=function(i){return i===void 0&&(i=0),{name:"offset",options:i,async fn(e){const{x:t,y:n}=e,r=await Ry(e,i);return{x:t+r.x,y:n+r.y,data:r}}}};function ky(i){return i==="x"?"y":"x"}const Oy=function(i){return i===void 0&&(i={}),{name:"shift",options:i,async fn(e){const{x:t,y:n,placement:r}=e,{mainAxis:s=!0,crossAxis:o=!1,limiter:a={fn:p=>{let{x:_,y:w}=p;return{x:_,y:w}}},...l}=i,c={x:t,y:n},u=await Zd(e,l),f=dl(Ro(r)),d=ky(f);let m=c[f],g=c[d];if(s){const p=f==="y"?"top":"left",_=f==="y"?"bottom":"right",w=m+u[p],y=m-u[_];m=Lu(w,m,y)}if(o){const p=d==="y"?"top":"left",_=d==="y"?"bottom":"right",w=g+u[p],y=g-u[_];g=Lu(w,g,y)}const h=a.fn({...e,[f]:m,[d]:g});return{...h,data:{x:h.x-t,y:h.y-n}}}}};function Kd(i){return i.split("-")[0]}function Ny(i){return i.split("-")[1]}function Fy(i){return["top","bottom"].includes(Kd(i))?"x":"y"}function zy(i){return i==="y"?"height":"width"}function Pu(i,e,t){let{reference:n,floating:r}=i;const s=n.x+n.width/2-r.width/2,o=n.y+n.height/2-r.height/2,a=Fy(e),l=zy(a),c=n[l]/2-r[l]/2,u=Kd(e),f=a==="x";let d;switch(u){case"top":d={x:s,y:n.y-r.height};break;case"bottom":d={x:s,y:n.y+n.height};break;case"right":d={x:n.x+n.width,y:o};break;case"left":d={x:n.x-r.width,y:o};break;default:d={x:n.x,y:n.y}}switch(Ny(e)){case"start":d[a]-=c*(t&&f?-1:1);break;case"end":d[a]+=c*(t&&f?-1:1);break}return d}const Uy=async(i,e,t)=>{const{placement:n="bottom",strategy:r="absolute",middleware:s=[],platform:o}=t,a=await(o.isRTL==null?void 0:o.isRTL(e));let l=await o.getElementRects({reference:i,floating:e,strategy:r}),{x:c,y:u}=Pu(l,n,a),f=n,d={},m=0;for(let g=0;g<s.length;g++){const{name:h,fn:p}=s[g],{x:_,y:w,data:y,reset:b}=await p({x:c,y:u,initialPlacement:n,placement:f,strategy:r,middlewareData:d,rects:l,platform:o,elements:{reference:i,floating:e}});if(c=_!=null?_:c,u=w!=null?w:u,d={...d,[h]:{...d[h],...y}},b&&m<=50){m++,typeof b=="object"&&(b.placement&&(f=b.placement),b.rects&&(l=b.rects===!0?await o.getElementRects({reference:i,floating:e,strategy:r}):b.rects),{x:c,y:u}=Pu(l,f,a)),g=-1;continue}}return{x:c,y:u,placement:f,strategy:r,middlewareData:d}};function Ru(i){return{...i,top:i.y,left:i.x,right:i.x+i.width,bottom:i.y+i.height}}function Jd(i){return i&&i.document&&i.location&&i.alert&&i.setInterval}function di(i){if(i==null)return window;if(!Jd(i)){const e=i.ownerDocument;return e&&e.defaultView||window}return i}function vs(i){return di(i).getComputedStyle(i)}function ai(i){return Jd(i)?"":i?(i.nodeName||"").toLowerCase():""}function Qd(){const i=navigator.userAgentData;return i!=null&&i.brands?i.brands.map(e=>e.brand+"/"+e.version).join(" "):navigator.userAgent}function jn(i){return i instanceof di(i).HTMLElement}function Ii(i){return i instanceof di(i).Element}function Gy(i){return i instanceof di(i).Node}function hl(i){if(typeof ShadowRoot>"u")return!1;const e=di(i).ShadowRoot;return i instanceof e||i instanceof ShadowRoot}function Io(i){const{overflow:e,overflowX:t,overflowY:n}=vs(i);return/auto|scroll|overlay|hidden/.test(e+n+t)}function By(i){return["table","td","th"].includes(ai(i))}function $d(i){const e=/firefox/i.test(Qd()),t=vs(i);return t.transform!=="none"||t.perspective!=="none"||t.contain==="paint"||["transform","perspective"].includes(t.willChange)||e&&t.willChange==="filter"||e&&(t.filter?t.filter!=="none":!1)}function eh(){return!/^((?!chrome|android).)*safari/i.test(Qd())}const Iu=Math.min,ns=Math.max,fo=Math.round;function li(i,e,t){var n,r,s,o;e===void 0&&(e=!1),t===void 0&&(t=!1);const a=i.getBoundingClientRect();let l=1,c=1;e&&jn(i)&&(l=i.offsetWidth>0&&fo(a.width)/i.offsetWidth||1,c=i.offsetHeight>0&&fo(a.height)/i.offsetHeight||1);const u=Ii(i)?di(i):window,f=!eh()&&t,d=(a.left+(f&&(n=(r=u.visualViewport)==null?void 0:r.offsetLeft)!=null?n:0))/l,m=(a.top+(f&&(s=(o=u.visualViewport)==null?void 0:o.offsetTop)!=null?s:0))/c,g=a.width/l,h=a.height/c;return{width:g,height:h,top:m,right:d+g,bottom:m+h,left:d,x:d,y:m}}function Oi(i){return((Gy(i)?i.ownerDocument:i.document)||window.document).documentElement}function ko(i){return Ii(i)?{scrollLeft:i.scrollLeft,scrollTop:i.scrollTop}:{scrollLeft:i.pageXOffset,scrollTop:i.pageYOffset}}function th(i){return li(Oi(i)).left+ko(i).scrollLeft}function Vy(i){const e=li(i);return fo(e.width)!==i.offsetWidth||fo(e.height)!==i.offsetHeight}function Hy(i,e,t){const n=jn(e),r=Oi(e),s=li(i,n&&Vy(e),t==="fixed");let o={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if(n||!n&&t!=="fixed")if((ai(e)!=="body"||Io(r))&&(o=ko(e)),jn(e)){const l=li(e,!0);a.x=l.x+e.clientLeft,a.y=l.y+e.clientTop}else r&&(a.x=th(r));return{x:s.left+o.scrollLeft-a.x,y:s.top+o.scrollTop-a.y,width:s.width,height:s.height}}function nh(i){return ai(i)==="html"?i:i.assignedSlot||i.parentNode||(hl(i)?i.host:null)||Oi(i)}function ku(i){return!jn(i)||getComputedStyle(i).position==="fixed"?null:i.offsetParent}function Wy(i){let e=nh(i);for(hl(e)&&(e=e.host);jn(e)&&!["html","body"].includes(ai(e));){if($d(e))return e;e=e.parentNode}return null}function Va(i){const e=di(i);let t=ku(i);for(;t&&By(t)&&getComputedStyle(t).position==="static";)t=ku(t);return t&&(ai(t)==="html"||ai(t)==="body"&&getComputedStyle(t).position==="static"&&!$d(t))?e:t||Wy(i)||e}function Ou(i){if(jn(i))return{width:i.offsetWidth,height:i.offsetHeight};const e=li(i);return{width:e.width,height:e.height}}function jy(i){let{rect:e,offsetParent:t,strategy:n}=i;const r=jn(t),s=Oi(t);if(t===s)return e;let o={scrollLeft:0,scrollTop:0};const a={x:0,y:0};if((r||!r&&n!=="fixed")&&((ai(t)!=="body"||Io(s))&&(o=ko(t)),jn(t))){const l=li(t,!0);a.x=l.x+t.clientLeft,a.y=l.y+t.clientTop}return{...e,x:e.x-o.scrollLeft+a.x,y:e.y-o.scrollTop+a.y}}function qy(i,e){const t=di(i),n=Oi(i),r=t.visualViewport;let s=n.clientWidth,o=n.clientHeight,a=0,l=0;if(r){s=r.width,o=r.height;const c=eh();(c||!c&&e==="fixed")&&(a=r.offsetLeft,l=r.offsetTop)}return{width:s,height:o,x:a,y:l}}function Xy(i){var e;const t=Oi(i),n=ko(i),r=(e=i.ownerDocument)==null?void 0:e.body,s=ns(t.scrollWidth,t.clientWidth,r?r.scrollWidth:0,r?r.clientWidth:0),o=ns(t.scrollHeight,t.clientHeight,r?r.scrollHeight:0,r?r.clientHeight:0);let a=-n.scrollLeft+th(i);const l=-n.scrollTop;return vs(r||t).direction==="rtl"&&(a+=ns(t.clientWidth,r?r.clientWidth:0)-s),{width:s,height:o,x:a,y:l}}function ih(i){const e=nh(i);return["html","body","#document"].includes(ai(e))?i.ownerDocument.body:jn(e)&&Io(e)?e:ih(e)}function ho(i,e){var t;e===void 0&&(e=[]);const n=ih(i),r=n===((t=i.ownerDocument)==null?void 0:t.body),s=di(n),o=r?[s].concat(s.visualViewport||[],Io(n)?n:[]):n,a=e.concat(o);return r?a:a.concat(ho(o))}function Yy(i,e){const t=e.getRootNode==null?void 0:e.getRootNode();if(i.contains(e))return!0;if(t&&hl(t)){let n=e;do{if(n&&i===n)return!0;n=n.parentNode||n.host}while(n)}return!1}function Zy(i,e){const t=li(i,!1,e==="fixed"),n=t.top+i.clientTop,r=t.left+i.clientLeft;return{top:n,left:r,x:r,y:n,right:r+i.clientWidth,bottom:n+i.clientHeight,width:i.clientWidth,height:i.clientHeight}}function Nu(i,e,t){return e==="viewport"?Ru(qy(i,t)):Ii(e)?Zy(e,t):Ru(Xy(Oi(i)))}function Ky(i){const e=ho(i),n=["absolute","fixed"].includes(vs(i).position)&&jn(i)?Va(i):i;return Ii(n)?e.filter(r=>Ii(r)&&Yy(r,n)&&ai(r)!=="body"):[]}function Jy(i){let{element:e,boundary:t,rootBoundary:n,strategy:r}=i;const o=[...t==="clippingAncestors"?Ky(e):[].concat(t),n],a=o[0],l=o.reduce((c,u)=>{const f=Nu(e,u,r);return c.top=ns(f.top,c.top),c.right=Iu(f.right,c.right),c.bottom=Iu(f.bottom,c.bottom),c.left=ns(f.left,c.left),c},Nu(e,a,r));return{width:l.right-l.left,height:l.bottom-l.top,x:l.left,y:l.top}}const Qy={getClippingRect:Jy,convertOffsetParentRelativeRectToViewportRelativeRect:jy,isElement:Ii,getDimensions:Ou,getOffsetParent:Va,getDocumentElement:Oi,getElementRects:i=>{let{reference:e,floating:t,strategy:n}=i;return{reference:Hy(e,Va(t),n),floating:{...Ou(t),x:0,y:0}}},getClientRects:i=>Array.from(i.getClientRects()),isRTL:i=>vs(i).direction==="rtl"};function $y(i,e,t,n){n===void 0&&(n={});const{ancestorScroll:r=!0,ancestorResize:s=!0,elementResize:o=!0,animationFrame:a=!1}=n,l=r&&!a,c=s&&!a,u=l||c?[...Ii(i)?ho(i):[],...ho(e)]:[];u.forEach(h=>{l&&h.addEventListener("scroll",t,{passive:!0}),c&&h.addEventListener("resize",t)});let f=null;if(o){let h=!0;f=new ResizeObserver(()=>{h||t(),h=!1}),Ii(i)&&!a&&f.observe(i),f.observe(e)}let d,m=a?li(i):null;a&&g();function g(){const h=li(i);m&&(h.x!==m.x||h.y!==m.y||h.width!==m.width||h.height!==m.height)&&t(),m=h,d=requestAnimationFrame(g)}return t(),()=>{var h;u.forEach(p=>{l&&p.removeEventListener("scroll",t),c&&p.removeEventListener("resize",t)}),(h=f)==null||h.disconnect(),f=null,a&&cancelAnimationFrame(d)}}const ex=(i,e,t)=>Uy(i,e,{platform:Qy,...t});function tx(i){let e,t;const n={autoUpdate:!0};let r=i;const s=c=>({...n,...i||{},...c||{}}),o=c=>{e&&t&&(r=s(c),ex(e,t,r).then(u=>{Object.assign(t.style,{position:u.strategy,left:`${u.x}px`,top:`${u.y}px`}),r!=null&&r.onComputed&&r.onComputed(u)}))};return[c=>{e=c,o()},(c,u)=>{let f;t=c,r=s(u),setTimeout(()=>o(u),0),o(u);const d=()=>{f&&(f(),f=void 0)},m=({autoUpdate:g}=r||{})=>{if(d(),g!==!1)return $y(e,t,()=>o(r),g===!0?{}:g)};return f=m(),{update(g){o(g),f=m(g)},destroy(){d()}}},o]}function nx({loadOptions:i,filterText:e,items:t,multiple:n,value:r,itemId:s,groupBy:o,itemFilter:a,convertStringItemsToObjects:l,filterGroupedItems:c,label:u}){if(t&&i&&e.length>0)return t;if(!t)return[];t&&t.length>0&&typeof t[0]!="object"&&(t=l(t));let f=t.filter(d=>{let m=a(d[u],e,d);return m&&n&&(r==null?void 0:r.length)&&(m=!r.some(g=>g[s]===d[s])),m});return o&&(f=c(f)),f}async function ix({dispatch:i,loadOptions:e,convertStringItemsToObjects:t,filterText:n}){let r=await e(n).catch(s=>{console.warn("svelte-select loadOptions error :>> ",s),i("error",{type:"loadOptions",details:s})});if(r&&!r.cancelled)return r?(r&&r.length>0&&typeof r[0]!="object"&&(r=t(r)),i("loaded",{items:r})):r=[],{filteredItems:r,loading:!1,focused:!0,listOpen:!0}}function rx(i){let e,t;return{c(){e=Ht("svg"),t=Ht("path"),W(t,"fill","currentColor"),W(t,"d",`M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747
          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0
          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502
          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0
          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z`),W(e,"width","100%"),W(e,"height","100%"),W(e,"viewBox","0 0 20 20"),W(e,"focusable","false"),W(e,"aria-hidden","true"),W(e,"class","svelte-qbd276")},m(n,r){ue(n,e,r),ne(e,t)},p:et,i:et,o:et,d(n){n&&le(e)}}}class sx extends We{constructor(e){super(),He(this,e,null,rx,Be,{})}}function ox(i){let e,t;return{c(){e=Ht("svg"),t=Ht("path"),W(t,"fill","currentColor"),W(t,"d",`M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124
    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z`),W(e,"width","100%"),W(e,"height","100%"),W(e,"viewBox","-2 -2 50 50"),W(e,"focusable","false"),W(e,"aria-hidden","true"),W(e,"role","presentation"),W(e,"class","svelte-whdbu1")},m(n,r){ue(n,e,r),ne(e,t)},p:et,i:et,o:et,d(n){n&&le(e)}}}class po extends We{constructor(e){super(),He(this,e,null,ox,Be,{})}}function ax(i){let e,t;return{c(){e=Ht("svg"),t=Ht("circle"),W(t,"class","circle_path svelte-1p3nqvd"),W(t,"cx","50"),W(t,"cy","50"),W(t,"r","20"),W(t,"fill","none"),W(t,"stroke","currentColor"),W(t,"stroke-width","5"),W(t,"stroke-miterlimit","10"),W(e,"class","loading svelte-1p3nqvd"),W(e,"viewBox","25 25 50 50")},m(n,r){ue(n,e,r),ne(e,t)},p:et,i:et,o:et,d(n){n&&le(e)}}}class lx extends We{constructor(e){super(),He(this,e,null,ax,Be,{})}}function Fu(i,e,t){const n=i.slice();return n[115]=e[t],n}const cx=i=>({listOpen:i[0]&64}),zu=i=>({listOpen:i[6]}),ux=i=>({}),Uu=i=>({}),fx=i=>({}),Gu=i=>({}),dx=i=>({selection:i[0]&8}),Bu=i=>({selection:i[3]});function Vu(i,e,t){const n=i.slice();return n[115]=e[t],n[119]=t,n}const hx=i=>({}),Hu=i=>({}),px=i=>({selection:i[0]&8}),Wu=i=>({selection:i[115]}),mx=i=>({}),ju=i=>({}),gx=i=>({}),qu=i=>({});function Xu(i,e,t){const n=i.slice();return n[115]=e[t],n[119]=t,n}const _x=i=>({item:i[0]&4194304}),Yu=i=>({item:i[115],index:i[119]}),vx=i=>({filteredItems:i[0]&4194304}),Zu=i=>({filteredItems:i[22]});function Ku(i){let e,t,n,r,s,o;const a=[yx,wx,bx],l=[];function c(u,f){return u[48].list?0:u[22].length>0?1:u[15]?-1:2}return~(t=c(i))&&(n=l[t]=a[t](i)),{c(){e=he("div"),n&&n.c(),W(e,"class","svelte-select-list svelte-1gwhqva")},m(u,f){ue(u,e,f),~t&&l[t].m(e,null),i[85](e),r=!0,s||(o=[Ei(i[47].call(null,e)),Ge(e,"scroll",i[39]),Ge(e,"pointerdown",Cr(Ti(i[81])))],s=!0)},p(u,f){let d=t;t=c(u),t===d?~t&&l[t].p(u,f):(n&&(ut(),q(l[d],1,1,()=>{l[d]=null}),ft()),~t?(n=l[t],n?n.p(u,f):(n=l[t]=a[t](u),n.c()),U(n,1),n.m(e,null)):n=null)},i(u){r||(U(n),r=!0)},o(u){q(n),r=!1},d(u){u&&le(e),~t&&l[t].d(),i[85](null),s=!1,Nt(o)}}}function bx(i){let e;const t=i[77].empty,n=dt(t,i,i[76],qu),r=n||xx();return{c(){r&&r.c()},m(s,o){r&&r.m(s,o),e=!0},p(s,o){n&&n.p&&(!e||o[2]&16384)&&pt(n,t,s,s[76],e?ht(t,s[76],o,gx):mt(s[76]),qu)},i(s){e||(U(r,s),e=!0)},o(s){q(r,s),e=!1},d(s){r&&r.d(s)}}}function wx(i){let e,t,n=i[22],r=[];for(let o=0;o<n.length;o+=1)r[o]=Ju(Xu(i,n,o));const s=o=>q(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=zt()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);ue(o,e,a),t=!0},p(o,a){if(a[0]&206572552|a[1]&7168|a[2]&16384){n=o[22];let l;for(l=0;l<n.length;l+=1){const c=Xu(o,n,l);r[l]?(r[l].p(c,a),U(r[l],1)):(r[l]=Ju(c),r[l].c(),U(r[l],1),r[l].m(e.parentNode,e))}for(ut(),l=n.length;l<r.length;l+=1)s(l);ft()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)U(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)q(r[a]);t=!1},d(o){Nr(r,o),o&&le(e)}}}function yx(i){let e;const t=i[77].list,n=dt(t,i,i[76],Zu);return{c(){n&&n.c()},m(r,s){n&&n.m(r,s),e=!0},p(r,s){n&&n.p&&(!e||s[0]&4194304|s[2]&16384)&&pt(n,t,r,r[76],e?ht(t,r[76],s,vx):mt(r[76]),Zu)},i(r){e||(U(n,r),e=!0)},o(r){q(n,r),e=!1},d(r){n&&n.d(r)}}}function xx(i){let e;return{c(){e=he("div"),e.textContent="No options",W(e,"class","empty svelte-1gwhqva")},m(t,n){ue(t,e,n)},p:et,d(t){t&&le(e)}}}function Mx(i){var n;let e=((n=i[115])==null?void 0:n[i[10]])+"",t;return{c(){t=wt(e)},m(r,s){ue(r,t,s)},p(r,s){var o;s[0]&4195328&&e!==(e=((o=r[115])==null?void 0:o[r[10]])+"")&&qt(t,e)},d(r){r&&le(t)}}}function Ju(i){let e,t,n,r,s,o,a,l;const c=i[77].item,u=dt(c,i,i[76],Yu),f=u||Mx(i);function d(){return i[82](i[119])}function m(){return i[83](i[119])}function g(){return i[84](i[115],i[119])}return{c(){var h;e=he("div"),t=he("div"),f&&f.c(),s=Oe(),W(t,"class","item svelte-1gwhqva"),Je(t,"list-group-title",i[115].groupHeader),Je(t,"active",i[43](i[115],i[3],i[11])),Je(t,"first",Ix(i[119])),Je(t,"hover",i[20]===i[119]),Je(t,"group-item",i[115].groupItem),Je(t,"not-selectable",((h=i[115])==null?void 0:h.selectable)===!1),W(e,"class","list-item svelte-1gwhqva"),W(e,"tabindex","-1")},m(h,p){ue(h,e,p),ne(e,t),f&&f.m(t,null),ne(e,s),o=!0,a||(l=[Ei(n=i[44].call(null,t,{scroll:i[43](i[115],i[3],i[11]),listMounted:i[27]})),Ei(r=i[45].call(null,t,{scroll:i[26]===i[119],listMounted:i[27]})),Ge(e,"mouseover",d),Ge(e,"focus",m),Ge(e,"click",Cr(g))],a=!0)},p(h,p){var _;i=h,u?u.p&&(!o||p[0]&4194304|p[2]&16384)&&pt(u,c,i,i[76],o?ht(c,i[76],p,_x):mt(i[76]),Yu):f&&f.p&&(!o||p[0]&4195328)&&f.p(i,o?p:[-1,-1,-1,-1]),n&&ri(n.update)&&p[0]&138414088&&n.update.call(null,{scroll:i[43](i[115],i[3],i[11]),listMounted:i[27]}),r&&ri(r.update)&&p[0]&201326592&&r.update.call(null,{scroll:i[26]===i[119],listMounted:i[27]}),(!o||p[0]&4194304)&&Je(t,"list-group-title",i[115].groupHeader),(!o||p[0]&4196360|p[1]&4096)&&Je(t,"active",i[43](i[115],i[3],i[11])),(!o||p[0]&1048576)&&Je(t,"hover",i[20]===i[119]),(!o||p[0]&4194304)&&Je(t,"group-item",i[115].groupItem),(!o||p[0]&4194304)&&Je(t,"not-selectable",((_=i[115])==null?void 0:_.selectable)===!1)},i(h){o||(U(f,h),o=!0)},o(h){q(f,h),o=!1},d(h){h&&le(e),f&&f.d(h),a=!1,Nt(l)}}}function Qu(i){let e,t,n,r,s;return{c(){e=he("span"),t=wt(i[29]),n=Oe(),r=he("span"),s=wt(i[28]),W(e,"id","aria-selection"),W(e,"class","svelte-1gwhqva"),W(r,"id","aria-context"),W(r,"class","svelte-1gwhqva")},m(o,a){ue(o,e,a),ne(e,t),ue(o,n,a),ue(o,r,a),ne(r,s)},p(o,a){a[0]&536870912&&qt(t,o[29]),a[0]&268435456&&qt(s,o[28])},d(o){o&&le(e),o&&le(n),o&&le(r)}}}function $u(i){let e,t,n,r;const s=[Ax,Sx],o=[];function a(l,c){return l[7]?0:1}return e=a(i),t=o[e]=s[e](i),{c(){t.c(),n=zt()},m(l,c){o[e].m(l,c),ue(l,n,c),r=!0},p(l,c){let u=e;e=a(l),e===u?o[e].p(l,c):(ut(),q(o[u],1,1,()=>{o[u]=null}),ft(),t=o[e],t?t.p(l,c):(t=o[e]=s[e](l),t.c()),U(t,1),t.m(n.parentNode,n))},i(l){r||(U(t),r=!0)},o(l){q(t),r=!1},d(l){o[e].d(l),l&&le(n)}}}function Sx(i){let e,t;const n=i[77].selection,r=dt(n,i,i[76],Bu),s=r||Ex(i);return{c(){e=he("div"),s&&s.c(),W(e,"class","selected-item svelte-1gwhqva"),Je(e,"hide-selected-item",i[33])},m(o,a){ue(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r?r.p&&(!t||a[0]&8|a[2]&16384)&&pt(r,n,o,o[76],t?ht(n,o[76],a,dx):mt(o[76]),Bu):s&&s.p&&(!t||a[0]&1032)&&s.p(o,t?a:[-1,-1,-1,-1]),(!t||a[1]&4)&&Je(e,"hide-selected-item",o[33])},i(o){t||(U(s,o),t=!0)},o(o){q(s,o),t=!1},d(o){o&&le(e),s&&s.d(o)}}}function Ax(i){let e,t,n=i[3],r=[];for(let o=0;o<n.length;o+=1)r[o]=tf(Vu(i,n,o));const s=o=>q(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=zt()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);ue(o,e,a),t=!0},p(o,a){if(a[0]&16779016|a[1]&8|a[2]&16384){n=o[3];let l;for(l=0;l<n.length;l+=1){const c=Vu(o,n,l);r[l]?(r[l].p(c,a),U(r[l],1)):(r[l]=tf(c),r[l].c(),U(r[l],1),r[l].m(e.parentNode,e))}for(ut(),l=n.length;l<r.length;l+=1)s(l);ft()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)U(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)q(r[a]);t=!1},d(o){Nr(r,o),o&&le(e)}}}function Ex(i){let e=i[3][i[10]]+"",t;return{c(){t=wt(e)},m(n,r){ue(n,t,r)},p(n,r){r[0]&1032&&e!==(e=n[3][n[10]]+"")&&qt(t,e)},d(n){n&&le(t)}}}function Tx(i){let e=i[115][i[10]]+"",t;return{c(){t=wt(e)},m(n,r){ue(n,t,r)},p(n,r){r[0]&1032&&e!==(e=n[115][n[10]]+"")&&qt(t,e)},d(n){n&&le(t)}}}function ef(i){let e,t,n,r;const s=i[77]["multi-clear-icon"],o=dt(s,i,i[76],Hu),a=o||Cx();function l(){return i[86](i[119])}return{c(){e=he("div"),a&&a.c(),W(e,"class","multi-item-clear svelte-1gwhqva")},m(c,u){ue(c,e,u),a&&a.m(e,null),t=!0,n||(r=[Ge(e,"pointerdown",Cr(Ti(i[80]))),Ge(e,"click",l)],n=!0)},p(c,u){i=c,o&&o.p&&(!t||u[2]&16384)&&pt(o,s,i,i[76],t?ht(s,i[76],u,hx):mt(i[76]),Hu)},i(c){t||(U(a,c),t=!0)},o(c){q(a,c),t=!1},d(c){c&&le(e),a&&a.d(c),n=!1,Nt(r)}}}function Cx(i){let e,t;return e=new po({}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function tf(i){let e,t,n,r,s,o,a;const l=i[77].selection,c=dt(l,i,i[76],Wu),u=c||Tx(i);let f=!i[9]&&!i[8]&&po&&ef(i);function d(){return i[87](i[119])}return{c(){e=he("div"),t=he("span"),u&&u.c(),n=Oe(),f&&f.c(),r=Oe(),W(t,"class","multi-item-text svelte-1gwhqva"),W(e,"class","multi-item svelte-1gwhqva"),Je(e,"active",i[24]===i[119]),Je(e,"disabled",i[9])},m(m,g){ue(m,e,g),ne(e,t),u&&u.m(t,null),ne(e,n),f&&f.m(e,null),ne(e,r),s=!0,o||(a=Ge(e,"click",Ti(d)),o=!0)},p(m,g){i=m,c?c.p&&(!s||g[0]&8|g[2]&16384)&&pt(c,l,i,i[76],s?ht(l,i[76],g,px):mt(i[76]),Wu):u&&u.p&&(!s||g[0]&1032)&&u.p(i,s?g:[-1,-1,-1,-1]),!i[9]&&!i[8]&&po?f?(f.p(i,g),g[0]&768&&U(f,1)):(f=ef(i),f.c(),U(f,1),f.m(e,r)):f&&(ut(),q(f,1,1,()=>{f=null}),ft()),(!s||g[0]&16777216)&&Je(e,"active",i[24]===i[119]),(!s||g[0]&512)&&Je(e,"disabled",i[9])},i(m){s||(U(u,m),U(f),s=!0)},o(m){q(u,m),q(f),s=!1},d(m){m&&le(e),u&&u.d(m),f&&f.d(),o=!1,a()}}}function nf(i){let e,t;const n=i[77]["loading-icon"],r=dt(n,i,i[76],Gu),s=r||Lx();return{c(){e=he("div"),s&&s.c(),W(e,"class","icon loading svelte-1gwhqva"),W(e,"aria-hidden","true")},m(o,a){ue(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r&&r.p&&(!t||a[2]&16384)&&pt(r,n,o,o[76],t?ht(n,o[76],a,fx):mt(o[76]),Gu)},i(o){t||(U(s,o),t=!0)},o(o){q(s,o),t=!1},d(o){o&&le(e),s&&s.d(o)}}}function Lx(i){let e,t;return e=new lx({}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function rf(i){let e,t,n,r;const s=i[77]["clear-icon"],o=dt(s,i,i[76],Uu),a=o||Dx();return{c(){e=he("div"),a&&a.c(),W(e,"class","icon clear-select svelte-1gwhqva"),W(e,"aria-hidden","true")},m(l,c){ue(l,e,c),a&&a.m(e,null),t=!0,n||(r=[Ge(e,"click",Cr(Ti(i[19]))),Ge(e,"pointerdown",Cr(Ti(i[79])))],n=!0)},p(l,c){o&&o.p&&(!t||c[2]&16384)&&pt(o,s,l,l[76],t?ht(s,l[76],c,ux):mt(l[76]),Uu)},i(l){t||(U(a,l),t=!0)},o(l){q(a,l),t=!1},d(l){l&&le(e),a&&a.d(l),n=!1,Nt(r)}}}function Dx(i){let e,t;return e=new po({}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function sf(i){let e,t;const n=i[77]["chevron-icon"],r=dt(n,i,i[76],zu),s=r||Px();return{c(){e=he("div"),s&&s.c(),W(e,"class","icon chevron svelte-1gwhqva"),W(e,"aria-hidden","true")},m(o,a){ue(o,e,a),s&&s.m(e,null),t=!0},p(o,a){r&&r.p&&(!t||a[0]&64|a[2]&16384)&&pt(r,n,o,o[76],t?ht(n,o[76],a,cx):mt(o[76]),zu)},i(o){t||(U(s,o),t=!0)},o(o){q(s,o),t=!1},d(o){o&&le(e),s&&s.d(o)}}}function Px(i){let e,t;return e=new sx({}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function of(i){let e,t,n;return{c(){e=he("input"),W(e,"name",t=i[16].name),W(e,"type","hidden"),e.value=n=i[3]?i[3][i[11]]:null,W(e,"class","svelte-1gwhqva")},m(r,s){ue(r,e,s)},p(r,s){s[0]&65536&&t!==(t=r[16].name)&&W(e,"name",t),s[0]&2056&&n!==(n=r[3]?r[3][r[11]]:null)&&(e.value=n)},d(r){r&&le(e)}}}function af(i){let e,t=i[3],n=[];for(let r=0;r<t.length;r+=1)n[r]=lf(Fu(i,t,r));return{c(){for(let r=0;r<n.length;r+=1)n[r].c();e=zt()},m(r,s){for(let o=0;o<n.length;o+=1)n[o].m(r,s);ue(r,e,s)},p(r,s){if(s[0]&67592){t=r[3];let o;for(o=0;o<t.length;o+=1){const a=Fu(r,t,o);n[o]?n[o].p(a,s):(n[o]=lf(a),n[o].c(),n[o].m(e.parentNode,e))}for(;o<n.length;o+=1)n[o].d(1);n.length=t.length}},d(r){Nr(n,r),r&&le(e)}}}function lf(i){let e,t,n;return{c(){e=he("input"),W(e,"name",t=i[16].name),W(e,"type","hidden"),e.value=n=i[115]?i[115][i[11]]:null,W(e,"class","svelte-1gwhqva")},m(r,s){ue(r,e,s)},p(r,s){s[0]&65536&&t!==(t=r[16].name)&&W(e,"name",t),s[0]&2056&&n!==(n=r[115]?r[115][r[11]]:null)&&(e.value=n)},d(r){r&&le(e)}}}function Rx(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p,_,w,y,b=i[6]&&Ku(i),x=i[2]&&Qu(i);const M=i[77].prepend,L=dt(M,i,i[76],ju);let v=i[23]&&$u(i),A=[{readOnly:c=!i[13]},i[25],{placeholder:i[31]},{style:i[14]},{disabled:i[9]}],S={};for(let P=0;P<A.length;P+=1)S=Pt(S,A[P]);let I=i[5]&&nf(i),N=i[32]&&rf(i),D=i[17]&&sf(i),O=(!i[7]||i[7]&&!i[30])&&of(i),k=i[7]&&i[30]&&af(i);return{c(){e=he("div"),b&&b.c(),t=Oe(),n=he("span"),x&&x.c(),r=Oe(),L&&L.c(),s=Oe(),o=he("div"),v&&v.c(),a=Oe(),l=he("input"),u=Oe(),f=he("div"),I&&I.c(),d=Oe(),N&&N.c(),m=Oe(),D&&D.c(),g=Oe(),O&&O.c(),h=Oe(),k&&k.c(),W(n,"aria-live","polite"),W(n,"aria-atomic","false"),W(n,"aria-relevant","additions text"),W(n,"class","a11y-text svelte-1gwhqva"),Ci(l,S),Je(l,"svelte-1gwhqva",!0),W(o,"class","value-container svelte-1gwhqva"),W(f,"class","indicators svelte-1gwhqva"),W(e,"class",p="svelte-select "+i[18]+" svelte-1gwhqva"),W(e,"style",i[12]),Je(e,"multi",i[7]),Je(e,"disabled",i[9]),Je(e,"focused",i[2]),Je(e,"list-open",i[6]),Je(e,"show-chevron",i[17])},m(P,K){ue(P,e,K),b&&b.m(e,null),ne(e,t),ne(e,n),x&&x.m(n,null),ne(e,r),L&&L.m(e,null),ne(e,s),ne(e,o),v&&v.m(o,null),ne(o,a),ne(o,l),l.autofocus&&l.focus(),i[88](l),Lr(l,i[4]),ne(e,u),ne(e,f),I&&I.m(f,null),ne(f,d),N&&N.m(f,null),ne(f,m),D&&D.m(f,null),ne(e,g),O&&O.m(e,null),ne(e,h),k&&k.m(e,null),i[90](e),_=!0,w||(y=[Ge(window,"click",i[40]),Ge(window,"keydown",i[35]),Ge(l,"keydown",i[35]),Ge(l,"blur",i[37]),Ge(l,"focus",i[36]),Ge(l,"input",i[89]),Ge(e,"pointerdown",Ti(i[38])),Ge(e,"click",Cr(Ti(i[78]))),Ei(i[46].call(null,e))],w=!0)},p(P,K){P[6]?b?(b.p(P,K),K[0]&64&&U(b,1)):(b=Ku(P),b.c(),U(b,1),b.m(e,t)):b&&(ut(),q(b,1,1,()=>{b=null}),ft()),P[2]?x?x.p(P,K):(x=Qu(P),x.c(),x.m(n,null)):x&&(x.d(1),x=null),L&&L.p&&(!_||K[2]&16384)&&pt(L,M,P,P[76],_?ht(M,P[76],K,mx):mt(P[76]),ju),P[23]?v?(v.p(P,K),K[0]&8388608&&U(v,1)):(v=$u(P),v.c(),U(v,1),v.m(o,a)):v&&(ut(),q(v,1,1,()=>{v=null}),ft()),Ci(l,S=ui(A,[(!_||K[0]&8192&&c!==(c=!P[13]))&&{readOnly:c},K[0]&33554432&&P[25],(!_||K[1]&1)&&{placeholder:P[31]},(!_||K[0]&16384)&&{style:P[14]},(!_||K[0]&512)&&{disabled:P[9]}])),K[0]&16&&l.value!==P[4]&&Lr(l,P[4]),Je(l,"svelte-1gwhqva",!0),P[5]?I?(I.p(P,K),K[0]&32&&U(I,1)):(I=nf(P),I.c(),U(I,1),I.m(f,d)):I&&(ut(),q(I,1,1,()=>{I=null}),ft()),P[32]?N?(N.p(P,K),K[1]&2&&U(N,1)):(N=rf(P),N.c(),U(N,1),N.m(f,m)):N&&(ut(),q(N,1,1,()=>{N=null}),ft()),P[17]?D?(D.p(P,K),K[0]&131072&&U(D,1)):(D=sf(P),D.c(),U(D,1),D.m(f,null)):D&&(ut(),q(D,1,1,()=>{D=null}),ft()),!P[7]||P[7]&&!P[30]?O?O.p(P,K):(O=of(P),O.c(),O.m(e,h)):O&&(O.d(1),O=null),P[7]&&P[30]?k?k.p(P,K):(k=af(P),k.c(),k.m(e,null)):k&&(k.d(1),k=null),(!_||K[0]&262144&&p!==(p="svelte-select "+P[18]+" svelte-1gwhqva"))&&W(e,"class",p),(!_||K[0]&4096)&&W(e,"style",P[12]),(!_||K[0]&262272)&&Je(e,"multi",P[7]),(!_||K[0]&262656)&&Je(e,"disabled",P[9]),(!_||K[0]&262148)&&Je(e,"focused",P[2]),(!_||K[0]&262208)&&Je(e,"list-open",P[6]),(!_||K[0]&393216)&&Je(e,"show-chevron",P[17])},i(P){_||(U(b),U(L,P),U(v),U(I),U(N),U(D),_=!0)},o(P){q(b),q(L,P),q(v),q(I),q(N),q(D),_=!1},d(P){P&&le(e),b&&b.d(),x&&x.d(),L&&L.d(P),v&&v.d(),i[88](null),I&&I.d(),N&&N.d(),D&&D.d(),O&&O.d(),k&&k.d(),i[90](null),w=!1,Nt(y)}}}function cf(i){return i.map((e,t)=>({index:t,value:e,label:`${e}`}))}function Ix(i){return i===0}function kx(i){return i.groupHeader&&i.selectable||i.selectable||!i.hasOwnProperty("selectable")}function uf(i){return{update(e){e.scroll&&i.scrollIntoView({behavior:"auto",block:"nearest",inline:"start"})}}}function Ox(i,e,t){let n,r,s,o,a,l,c,u,f,{$$slots:d={},$$scope:m}=e;const g=Tf(d),h=ci();let{justValue:p=null}=e,{filter:_=nx}=e,{getItems:w=ix}=e,{id:y=null}=e,{container:b=void 0}=e,{input:x=void 0}=e,{multiple:M=!1}=e,{multiFullItemClearable:L=!1}=e,{disabled:v=!1}=e,{focused:A=!1}=e,{value:S=null}=e,{filterText:I=""}=e,{placeholder:N="Please select"}=e,{placeholderAlwaysShow:D=!1}=e,{items:O=null}=e,{label:k="label"}=e,{itemFilter:P=(F,Ne)=>`${F}`.toLowerCase().includes(Ne.toLowerCase())}=e,{groupBy:K=void 0}=e,{groupFilter:Z=F=>F}=e,{groupHeaderSelectable:j=!1}=e,{itemId:V="value"}=e,{loadOptions:X=void 0}=e,{containerStyles:re=""}=e,{createGroupHeaderItem:ae=(F,Ne)=>({value:F,label:F})}=e;const be=()=>u;let{searchable:Ae=!0}=e,{inputStyles:H=""}=e,{clearable:me=!0}=e,{loading:Le=!1}=e,{listOpen:pe=!1}=e,ye,{debounce:Xe=(F,Ne=1)=>{clearTimeout(ye),ye=setTimeout(F,Ne)}}=e,{debounceWait:Q=300}=e,{hideEmptyState:fe=!1}=e,{inputAttributes:$={}}=e,{listAutoWidth:Ie=!0}=e,{showChevron:tt=!1}=e,{listOffset:yt=5}=e,{class:gt=""}=e,de,st,Lt,R,E=0;function ee(){if(typeof S=="string"){let F=O.find(Ne=>Ne[V]===S);t(3,S=F||{[V]:S,label:S})}else M&&Array.isArray(S)&&S.length>0&&t(3,S=S.map(F=>typeof F=="string"?{value:F,label:F}:F))}let ce;function ge(){t(25,ce=Object.assign({autocapitalize:"none",autocomplete:"off",autocorrect:"off",spellcheck:!1,tabindex:0,type:"text","aria-autocomplete":"list"},$)),y&&t(25,ce.id=y,ce),Ae||t(25,ce.readonly=!0,ce)}function Me(F){const Ne=[],kt={};F.forEach(tr=>{const Zn=K(tr);Ne.includes(Zn)||(Ne.push(Zn),kt[Zn]=[],Zn&&kt[Zn].push(Object.assign(ae(Zn,tr),{id:Zn,groupHeader:!0,selectable:j}))),kt[Zn].push(Object.assign({groupItem:!!Zn},tr))});const Yn=[];return Z(Ne).forEach(tr=>{kt[tr]&&Yn.push(...kt[tr])}),Yn}function Ve(){if(M){JSON.stringify(S)!==JSON.stringify(st)&&z()&&h("change",S);return}(!st||JSON.stringify(S[V])!==JSON.stringify(st[V]))&&h("change",S)}function T(){S&&(Array.isArray(S)?t(3,S=[...S]):t(3,S=[S]))}function oe(){S&&t(3,S=null)}function _e(){I.length!==0&&(t(2,A=!0),t(6,pe=!0),X?Xe(async function(){t(5,Le=!0);let F=await w({dispatch:h,loadOptions:X,convertStringItemsToObjects:cf,filterText:I});F?(t(5,Le=F.loading),t(2,A=F.focused),t(6,pe=F.listOpen),t(49,O=K?Me(F.filteredItems):F.filteredItems)):(t(5,Le=!1),t(2,A=!0),t(6,pe=!0))},Q):(t(6,pe=!0),M&&t(24,de=void 0)))}_h(async()=>{t(73,st=S),t(74,Lt=I),t(75,R=M)});function Se(){return M?S?S.map(F=>F[V]):null:S&&S[V]}function z(){let F=!0;if(S){const Ne=[],kt=[];S.forEach(Yn=>{Ne.includes(Yn[V])?F=!1:(Ne.push(Yn[V]),kt.push(Yn))}),F||t(3,S=kt)}return F}function ke(F){let Ne=F?F[V]:S[V];return O.find(kt=>kt[V]===Ne)}function Qe(F){!F||F.length===0||F.some(Ne=>typeof Ne!="object")||!S||(M?S.some(Ne=>!Ne||!Ne[V]):!S[V])||(Array.isArray(S)?t(3,S=S.map(Ne=>ke(Ne)||Ne)):t(3,S=ke()||S))}async function _t(F){const Ne=S[F];S.length===1?t(3,S=void 0):t(3,S=S.filter(kt=>kt!==Ne)),h("clear",Ne)}function G(F){if(!!A)switch(F.stopPropagation(),F.key){case"Escape":F.preventDefault(),vt();break;case"Enter":if(F.preventDefault(),pe){if(u.length===0)break;const Ne=u[E];if((Ne==null?void 0:Ne.selectable)===!1)break;if(S&&!M&&S[V]===Ne[V]){vt();break}else t(51,Fi=E),C(u[E])}break;case"ArrowDown":F.preventDefault(),pe?se(1):(t(20,E=0),t(6,pe=!0),t(24,de=void 0));break;case"ArrowUp":F.preventDefault(),pe?se(-1):(t(6,pe=!0),t(24,de=void 0));break;case"Tab":if(pe&&A){if(u.length===0||S&&S[V]===u[E][V])return vt();F.preventDefault(),t(51,Fi=E),C(u[E]),t(6,pe=!1)}break;case"Backspace":if(!M||I.length>0)return;if(M&&S&&S.length>0){if(_t(de!==void 0?de:S.length-1),de===0||de===void 0)break;t(24,de=S.length>de?de-1:void 0)}break;case"ArrowLeft":if(!S||!M||I.length>0)return;de===void 0?t(24,de=S.length-1):S.length>de&&de!==0&&t(24,de-=1);break;case"ArrowRight":if(!S||!M||I.length>0||de===void 0)return;de===S.length-1?t(24,de=void 0):de<S.length-1&&t(24,de+=1);break}}function we(F){F&&h("focus",F),x.focus(),t(2,A=!0)}function te(F){(pe||A)&&(h("blur",F),t(6,pe=!1),t(2,A=!1),t(24,de=void 0),x.blur())}function Pe(){v||(t(20,E=0),t(6,pe=!pe),pe&&!A&&we())}function Ee(){t(3,S=void 0),t(6,pe=!1),h("clear",S),we()}Fr(()=>{pe&&t(2,A=!0),A&&x&&x.focus()});function rt(F){if(F){t(4,I="");const Ne=Object.assign({},F);(!Ne.groupHeader||Ne.selectable)&&(M?t(3,S=S?S.concat([Ne]):[Ne]):t(3,S=Ne),t(3,S),setTimeout(()=>{t(6,pe=!1),t(24,de=void 0),h("select",S)}))}}function vt(){t(4,I=""),t(6,pe=!1)}let{ariaValues:St=F=>`Option ${F}, selected.`}=e,{ariaListOpen:rn=(F,Ne)=>`You are currently focused on option ${F}. There are ${Ne} results available.`}=e,{ariaFocused:Et=()=>"Select is focused, type to refine list, press down to open the menu."}=e;function Tn(F){let Ne;return F&&S.length>0?Ne=S.map(kt=>kt[k]).join(", "):Ne=S[k],St(Ne)}function sn(){if(!u||u.length===0)return"";let F=u[E];if(pe&&F){let Ne=u?u.length:0;return rn(F[k],Ne)}else return Et()}let $t=null,Ni;function bs(){clearTimeout(Ni),Ni=setTimeout(()=>{ws=!1},100)}function Oo(F){b&&!b.contains(F.target)&&!($t!=null&&$t.contains(F.target))&&te()}Ot(()=>{$t==null||$t.remove()});let{activeItemIndex:Fi=0}=e,ws=!1;function C(F){F.isCreator||rt(F)}function J(F){ws||t(20,E=F)}function ie(F){const{item:Ne,i:kt}=F;if((Ne==null?void 0:Ne.selectable)!==!1){if(S&&!M&&S[V]===Ne[V])return vt();kx(Ne)&&(t(51,Fi=kt),t(20,E=kt),C(Ne))}}let Y=0;function se(F){F>0&&E===u.length-1?t(20,E=0):F<0&&E===0?t(20,E=u.length-1):t(20,E=E+F),t(26,Y=E)}function ze(F,Ne,kt){if(!M)return Ne&&Ne[kt]===F[kt]}const qe=uf,$e=uf;function Ye(){const{width:F}=b.getBoundingClientRect();t(21,$t.style.width=Ie?F+"px":"auto",$t)}let{floatingConfig:at={}}=e,nt={strategy:"absolute",placement:"bottom-start",middleware:[Iy(yt),Py(),Oy()]};const[ot,Dt]=tx(nt);function qn(){nt=Object.assign(nt,at)}function hi(F){Ze.call(this,i,F)}function pi(F){Ze.call(this,i,F)}function pn(F){Ze.call(this,i,F)}function ct(F){Ze.call(this,i,F)}const mi=F=>J(F),It=F=>J(F),on=(F,Ne)=>ie({item:F,i:Ne});function Nn(F){bt[F?"unshift":"push"](()=>{$t=F,t(21,$t)})}const zi=F=>_t(F),Vr=F=>L?_t(F):{};function Yt(F){bt[F?"unshift":"push"](()=>{x=F,t(1,x)})}function Xn(){I=this.value,t(4,I),t(6,pe),t(2,A),t(1,x)}function Hr(F){bt[F?"unshift":"push"](()=>{b=F,t(0,b)})}return i.$$set=F=>{"justValue"in F&&t(50,p=F.justValue),"filter"in F&&t(52,_=F.filter),"getItems"in F&&t(53,w=F.getItems),"id"in F&&t(54,y=F.id),"container"in F&&t(0,b=F.container),"input"in F&&t(1,x=F.input),"multiple"in F&&t(7,M=F.multiple),"multiFullItemClearable"in F&&t(8,L=F.multiFullItemClearable),"disabled"in F&&t(9,v=F.disabled),"focused"in F&&t(2,A=F.focused),"value"in F&&t(3,S=F.value),"filterText"in F&&t(4,I=F.filterText),"placeholder"in F&&t(55,N=F.placeholder),"placeholderAlwaysShow"in F&&t(56,D=F.placeholderAlwaysShow),"items"in F&&t(49,O=F.items),"label"in F&&t(10,k=F.label),"itemFilter"in F&&t(57,P=F.itemFilter),"groupBy"in F&&t(58,K=F.groupBy),"groupFilter"in F&&t(59,Z=F.groupFilter),"groupHeaderSelectable"in F&&t(60,j=F.groupHeaderSelectable),"itemId"in F&&t(11,V=F.itemId),"loadOptions"in F&&t(61,X=F.loadOptions),"containerStyles"in F&&t(12,re=F.containerStyles),"createGroupHeaderItem"in F&&t(62,ae=F.createGroupHeaderItem),"searchable"in F&&t(13,Ae=F.searchable),"inputStyles"in F&&t(14,H=F.inputStyles),"clearable"in F&&t(64,me=F.clearable),"loading"in F&&t(5,Le=F.loading),"listOpen"in F&&t(6,pe=F.listOpen),"debounce"in F&&t(65,Xe=F.debounce),"debounceWait"in F&&t(66,Q=F.debounceWait),"hideEmptyState"in F&&t(15,fe=F.hideEmptyState),"inputAttributes"in F&&t(16,$=F.inputAttributes),"listAutoWidth"in F&&t(67,Ie=F.listAutoWidth),"showChevron"in F&&t(17,tt=F.showChevron),"listOffset"in F&&t(68,yt=F.listOffset),"class"in F&&t(18,gt=F.class),"ariaValues"in F&&t(69,St=F.ariaValues),"ariaListOpen"in F&&t(70,rn=F.ariaListOpen),"ariaFocused"in F&&t(71,Et=F.ariaFocused),"activeItemIndex"in F&&t(51,Fi=F.activeItemIndex),"floatingConfig"in F&&t(72,at=F.floatingConfig),"$$scope"in F&&t(76,m=F.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&8|i.$$.dirty[1]&262144&&S&&ee(),i.$$.dirty[0]&73728&&($||!Ae)&&ge(),i.$$.dirty[0]&128&&M&&T(),i.$$.dirty[0]&128|i.$$.dirty[2]&8192&&R&&!M&&oe(),i.$$.dirty[0]&136&&M&&S&&S.length>1&&z(),i.$$.dirty[0]&8&&S&&Ve(),i.$$.dirty[0]&136|i.$$.dirty[2]&2048&&!S&&M&&st&&h("change",S),i.$$.dirty[0]&6&&!A&&x&&t(6,pe=!1),i.$$.dirty[0]&64&&(pe||t(4,I="")),i.$$.dirty[0]&16|i.$$.dirty[2]&4096&&I!==Lt&&_e(),i.$$.dirty[0]&136&&t(23,n=M?S&&S.length>0:S),i.$$.dirty[0]&8388624&&t(33,r=n&&I.length>0),i.$$.dirty[0]&8389152|i.$$.dirty[2]&4&&t(32,s=n&&me&&!v&&!Le),i.$$.dirty[0]&136|i.$$.dirty[1]&50331648&&t(31,o=D&&M?N:S?"":N),i.$$.dirty[0]&136&&t(30,a=M&&S&&S.length>0),i.$$.dirty[0]&136&&t(29,l=S?Tn(M):""),i.$$.dirty[0]&3224|i.$$.dirty[1]&1277427712&&t(22,u=_({loadOptions:X,filterText:I,items:O,multiple:M,value:S,itemId:V,groupBy:K,label:k,itemFilter:P,convertStringItemsToObjects:cf,filterGroupedItems:Me})),i.$$.dirty[0]&4194304&&u&&t(20,E=0),i.$$.dirty[0]&5242948&&t(28,c=sn()),i.$$.dirty[1]&262144&&Qe(O),i.$$.dirty[0]&2184&&t(50,p=Se()),i.$$.dirty[0]&136|i.$$.dirty[2]&2048&&!M&&st&&!S&&h("change",S),i.$$.dirty[0]&2097217&&pe&&b&&$t&&Ye(),i.$$.dirty[2]&1024&&qn(),i.$$.dirty[0]&2097152&&t(27,f=!!$t)},[b,x,A,S,I,Le,pe,M,L,v,k,V,re,Ae,H,fe,$,tt,gt,Ee,E,$t,u,n,de,ce,Y,f,c,l,a,o,s,r,_t,G,we,te,Pe,bs,Oo,J,ie,ze,qe,$e,ot,Dt,g,O,p,Fi,_,w,y,N,D,P,K,Z,j,X,ae,be,me,Xe,Q,Ie,yt,St,rn,Et,at,st,Lt,R,m,d,hi,pi,pn,ct,mi,It,on,Nn,zi,Vr,Yt,Xn,Hr]}class Nx extends We{constructor(e){super(),He(this,e,Ox,Rx,Be,{justValue:50,filter:52,getItems:53,id:54,container:0,input:1,multiple:7,multiFullItemClearable:8,disabled:9,focused:2,value:3,filterText:4,placeholder:55,placeholderAlwaysShow:56,items:49,label:10,itemFilter:57,groupBy:58,groupFilter:59,groupHeaderSelectable:60,itemId:11,loadOptions:61,containerStyles:12,createGroupHeaderItem:62,getFilteredItems:63,searchable:13,inputStyles:14,clearable:64,loading:5,listOpen:6,debounce:65,debounceWait:66,hideEmptyState:15,inputAttributes:16,listAutoWidth:67,showChevron:17,listOffset:68,class:18,handleClear:19,ariaValues:69,ariaListOpen:70,ariaFocused:71,activeItemIndex:51,floatingConfig:72},null,[-1,-1,-1,-1])}get getFilteredItems(){return this.$$.ctx[63]}get handleClear(){return this.$$.ctx[19]}}function Fx(i){let e,t,n,r,s,o,a;return{c(){e=Ht("svg"),t=Ht("g"),n=Ht("path"),r=Ht("g"),s=Ht("path"),W(n,"d",`M372.939,264.641c-6.641,0-12.03,5.39-12.03,12.03v84.212H24.061v-84.212c0-6.641-5.39-12.03-12.03-12.03
        S0,270.031,0,276.671v96.242c0,6.641,5.39,12.03,12.03,12.03h360.909c6.641,0,12.03-5.39,12.03-12.03v-96.242
        C384.97,270.019,379.58,264.641,372.939,264.641z`),W(t,"id","top"),W(t,"class","svelte-192w7ff"),W(s,"d",`M117.067,103.507l63.46-62.558v235.71c0,6.641,5.438,12.03,12.151,12.03c6.713,0,12.151-5.39,12.151-12.03V40.95
        l63.46,62.558c4.74,4.704,12.439,4.704,17.179,0c4.74-4.704,4.752-12.319,0-17.011l-84.2-82.997
        c-4.692-4.656-12.584-4.608-17.191,0L99.888,86.496c-4.752,4.704-4.74,12.319,0,17.011
        C104.628,108.211,112.327,108.211,117.067,103.507z`),W(r,"id","bottom"),W(r,"class",o=Tt(i[0]?"active":"")+" svelte-192w7ff"),W(e,"class",a=Tt(i[0]?"active":"")+" svelte-192w7ff"),W(e,"width","100%"),W(e,"viewBox","0 0 385 385"),W(e,"preserveAspectRatio","xMidYMid meet")},m(l,c){ue(l,e,c),ne(e,t),ne(t,n),ne(e,r),ne(r,s)},p(l,[c]){c&1&&o!==(o=Tt(l[0]?"active":"")+" svelte-192w7ff")&&W(r,"class",o),c&1&&a!==(a=Tt(l[0]?"active":"")+" svelte-192w7ff")&&W(e,"class",a)},i:et,o:et,d(l){l&&le(e)}}}function zx(i,e,t){let{hovered:n}=e;return i.$$set=r=>{"hovered"in r&&t(0,n=r.hovered)},[n]}class Ux extends We{constructor(e){super(),He(this,e,zx,Fx,Be,{hovered:0})}}function Gx(i){let e=i[0][0].name+"",t;return{c(){t=wt(e)},m(n,r){ue(n,t,r)},p(n,r){r&1&&e!==(e=n[0][0].name+"")&&qt(t,e)},i:et,o:et,d(n){n&&le(t)}}}function Bx(i){let e,t,n;return e=new Ux({props:{hovered:i[1]}}),{c(){De(e.$$.fragment),t=wt(" Upload a file")},m(r,s){Te(e,r,s),ue(r,t,s),n=!0},p(r,s){const o={};s&2&&(o.hovered=r[1]),e.$set(o)},i(r){n||(U(e.$$.fragment,r),n=!0)},o(r){q(e.$$.fragment,r),n=!1},d(r){Ce(e,r),r&&le(t)}}}function Vx(i){let e,t,n,r,s,o,a,l,c,u;const f=[Bx,Gx],d=[];function m(g,h){return g[0]===void 0?0:1}return n=m(i),r=d[n]=f[n](i),{c(){e=he("div"),t=he("button"),r.c(),o=Oe(),a=he("input"),W(t,"class",s=Tt(i[1]||i[0]?"active":"")+" svelte-1w8p7ld"),W(a,"type","file"),W(a,"name","fileghost"),W(a,"class","svelte-1w8p7ld"),W(e,"class","upload-btn-wrapper svelte-1w8p7ld")},m(g,h){ue(g,e,h),ne(e,t),d[n].m(t,null),ne(e,o),ne(e,a),l=!0,c||(u=[Ge(a,"mouseenter",i[2]),Ge(a,"mouseleave",i[3]),Ge(a,"change",i[5])],c=!0)},p(g,[h]){let p=n;n=m(g),n===p?d[n].p(g,h):(ut(),q(d[p],1,1,()=>{d[p]=null}),ft(),r=d[n],r?r.p(g,h):(r=d[n]=f[n](g),r.c()),U(r,1),r.m(t,null)),(!l||h&3&&s!==(s=Tt(g[1]||g[0]?"active":"")+" svelte-1w8p7ld"))&&W(t,"class",s)},i(g){l||(U(r),l=!0)},o(g){q(r),l=!1},d(g){g&&le(e),d[n].d(),c=!1,Nt(u)}}}function Hx(i,e,t){let n=!1;function r(){t(1,n=!0)}function s(){t(1,n=!1)}let{value:o=!1}=e,a;function l(){a=this.files,t(0,a)}return i.$$set=c=>{"value"in c&&t(4,o=c.value)},i.$$.update=()=>{if(i.$$.dirty&1)if(a){let c=new FileReader;c.onload=function(u){let f;try{f=JSON.parse(u.target.result)}catch(d){console.error(d),t(0,a=void 0)}console.log(u),Ba.set(f)},c.readAsText(a[0])}else Ba.set(void 0);i.$$.dirty&1&&t(4,o=!!a)},[a,n,r,s,o,l]}class Wx extends We{constructor(e){super(),He(this,e,Hx,Vx,Be,{value:4})}}function jx(i){let e,t,n,r,s,o;return{c(){e=he("label"),t=he("input"),n=Oe(),r=he("span"),W(t,"type","checkbox"),W(t,"class","svelte-1ynonck"),W(r,"class","slider svelte-1ynonck"),W(e,"class","switch svelte-1ynonck")},m(a,l){ue(a,e,l),ne(e,t),t.checked=i[0],ne(e,n),ne(e,r),s||(o=Ge(t,"change",i[1]),s=!0)},p(a,[l]){l&1&&(t.checked=a[0])},i:et,o:et,d(a){a&&le(e),s=!1,o()}}}function qx(i,e,t){let{checked:n=!1}=e;function r(){n=this.checked,t(0,n)}return i.$$set=s=>{"checked"in s&&t(0,n=s.checked)},[n,r]}class Sa extends We{constructor(e){super(),He(this,e,qx,jx,Be,{checked:0})}}function Xx(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g,h,p,_,w,y,b,x,M,L,v,A,S,I,N,D,O,k,P,K,Z,j,V,X,re,ae,be,Ae,H,me,Le;function pe(de){i[9](de)}let ye={items:i[3]};i[1]!==void 0&&(ye.value=i[1]),n=new Nx({props:ye}),bt.push(()=>jt(n,"value",pe));function Xe(de){i[10](de)}let Q={};i[2]!==void 0&&(Q.value=i[2]),l=new Wx({props:Q}),bt.push(()=>jt(l,"value",Xe));function fe(de){i[11](de)}let $={};i[4]!==void 0&&($.checked=i[4]),b=new Sa({props:$}),bt.push(()=>jt(b,"checked",fe));function Ie(de){i[12](de)}let tt={};i[5]!==void 0&&(tt.checked=i[5]),S=new Sa({props:tt}),bt.push(()=>jt(S,"checked",Ie));function yt(de){i[14](de)}let gt={};return i[7]!==void 0&&(gt.checked=i[7]),ae=new Sa({props:gt}),bt.push(()=>jt(ae,"checked",yt)),{c(){e=he("div"),t=wt(`Network Select
	`),De(n.$$.fragment),s=Oe(),o=he("br"),a=wt(`
	Fold-Change Data
	`),De(l.$$.fragment),u=Oe(),f=he("br"),d=Oe(),m=he("hr"),g=Oe(),h=he("br"),p=Oe(),_=he("div"),w=wt(`Auto-rotate
		`),y=he("div"),De(b.$$.fragment),M=Oe(),L=he("div"),v=wt(`Show substrates
		`),A=he("div"),De(S.$$.fragment),N=Oe(),D=he("br"),O=wt(`
	Fold-change selection
	`),k=he("input"),K=Oe(),Z=he("p"),j=Oe(),V=he("div"),X=wt(`Show unselected elements
		`),re=he("div"),De(ae.$$.fragment),W(y,"class","switch svelte-10bbki7"),W(_,"class","switchElement svelte-10bbki7"),W(A,"class","switch svelte-10bbki7"),W(L,"class","switchElement svelte-10bbki7"),k.disabled=P=!i[2],uh(k,"width","100%"),W(k,"type","range"),W(k,"step","0.1"),W(k,"min",-.1),W(k,"max","4"),W(re,"class","switch svelte-10bbki7"),W(V,"class","switchElement svelte-10bbki7"),W(e,"class",Ae=Tt("settings"+(i[0]?"":" inactive"))+" svelte-10bbki7")},m(de,st){ue(de,e,st),ne(e,t),Te(n,e,null),ne(e,s),ne(e,o),ne(e,a),Te(l,e,null),ne(e,u),ne(e,f),ne(e,d),ne(e,m),ne(e,g),ne(e,h),ne(e,p),ne(e,_),ne(_,w),ne(_,y),Te(b,y,null),ne(e,M),ne(e,L),ne(L,v),ne(L,A),Te(S,A,null),ne(e,N),ne(e,D),ne(e,O),ne(e,k),Lr(k,i[6]),ne(e,K),ne(e,Z),ne(e,j),ne(e,V),ne(V,X),ne(V,re),Te(ae,re,null),H=!0,me||(Le=[Ge(k,"change",i[13]),Ge(k,"input",i[13])],me=!0)},p(de,[st]){const Lt={};st&8&&(Lt.items=de[3]),!r&&st&2&&(r=!0,Lt.value=de[1],Wt(()=>r=!1)),n.$set(Lt);const R={};!c&&st&4&&(c=!0,R.value=de[2],Wt(()=>c=!1)),l.$set(R);const E={};!x&&st&16&&(x=!0,E.checked=de[4],Wt(()=>x=!1)),b.$set(E);const ee={};!I&&st&32&&(I=!0,ee.checked=de[5],Wt(()=>I=!1)),S.$set(ee),(!H||st&4&&P!==(P=!de[2]))&&(k.disabled=P),st&64&&Lr(k,de[6]);const ce={};!be&&st&128&&(be=!0,ce.checked=de[7],Wt(()=>be=!1)),ae.$set(ce),(!H||st&1&&Ae!==(Ae=Tt("settings"+(de[0]?"":" inactive"))+" svelte-10bbki7"))&&W(e,"class",Ae)},i(de){H||(U(n.$$.fragment,de),U(l.$$.fragment,de),U(b.$$.fragment,de),U(S.$$.fragment,de),U(ae.$$.fragment,de),H=!0)},o(de){q(n.$$.fragment,de),q(l.$$.fragment,de),q(b.$$.fragment,de),q(S.$$.fragment,de),q(ae.$$.fragment,de),H=!1},d(de){de&&le(e),Ce(n),Ce(l),Ce(b),Ce(S),Ce(ae),me=!1,Nt(Le)}}}function Yx(i,e,t){let n,r,s,o;Fe(i,Ga,w=>t(4,n=w)),Fe(i,ao,w=>t(5,r=w)),Fe(i,ls,w=>t(6,s=w)),Fe(i,lo,w=>t(7,o=w));let{active:a}=e,l;const c=[{value:"../assets/networkTiny.json",label:"Tiny Network",data:void 0},{value:"../assets/kinases.json",label:"All Kinases",data:void 0},{value:"../assets/network.json",label:"Full Network",data:void 0}];let u=c[0],f=!1;Fr(async()=>{t(3,c[0].data=(await Ma(()=>import("./networkTiny.b5278778.js"),[],import.meta.url)).default,c),t(3,c[1].data=(await Ma(()=>import("./kinases.df98d334.js"),[],import.meta.url)).default,c),t(3,c[2].data=(await Ma(()=>import("./network.2e8bad16.js"),[],import.meta.url)).default,c),t(8,f=!0)}),Ot(()=>{t(8,f=!1)});function d(w){u=w,t(1,u)}function m(w){l=w,t(2,l)}function g(w){n=w,Ga.set(n)}function h(w){r=w,ao.set(r)}function p(){s=lh(this.value),ls.set(s)}function _(w){o=w,lo.set(o)}return i.$$set=w=>{"active"in w&&t(0,a=w.active)},i.$$.update=()=>{i.$$.dirty&258&&f&&u&&qd.set(u.data)},[a,u,l,c,n,r,s,o,f,d,m,g,h,p,_]}class Zx extends We{constructor(e){super(),He(this,e,Yx,Xx,Be,{active:0})}}function Kx(i){let e;return{c(){e=he("div"),e.textContent="No nodes selected.",W(e,"class","content")},m(t,n){ue(t,e,n)},p:et,d(t){t&&le(e)}}}function Jx(i){let e,t,n=i[1].name+"",r,s,o,a,l=i[1].type+"",c,u,f,d,m=i[1].id+"",g,h,p,_=i[1].desc+"",w;return{c(){e=he("div"),t=he("h1"),r=wt(n),s=Oe(),o=he("div"),a=he("p"),c=wt(l),u=Oe(),f=he("p"),d=wt("UniprotID: "),g=wt(m),h=Oe(),p=he("p"),w=wt(_),W(e,"class","title"),W(o,"class","content")},m(y,b){ue(y,e,b),ne(e,t),ne(t,r),ue(y,s,b),ue(y,o,b),ne(o,a),ne(a,c),ne(o,u),ne(o,f),ne(f,d),ne(f,g),ne(o,h),ne(o,p),ne(p,w)},p(y,b){b&2&&n!==(n=y[1].name+"")&&qt(r,n),b&2&&l!==(l=y[1].type+"")&&qt(c,l),b&2&&m!==(m=y[1].id+"")&&qt(g,m),b&2&&_!==(_=y[1].desc+"")&&qt(w,_)},d(y){y&&le(e),y&&le(s),y&&le(o)}}}function Qx(i){let e,t;function n(o,a){return o[1]?Jx:Kx}let r=n(i),s=r(i);return{c(){e=he("div"),s.c(),W(e,"class",t=Tt("info"+(i[0]?"":" inactive"))+" svelte-157ag0k")},m(o,a){ue(o,e,a),s.m(e,null)},p(o,[a]){r===(r=n(o))&&s?s.p(o,a):(s.d(1),s=r(o),s&&(s.c(),s.m(e,null))),a&1&&t!==(t=Tt("info"+(o[0]?"":" inactive"))+" svelte-157ag0k")&&W(e,"class",t)},i:et,o:et,d(o){o&&le(e),s.d()}}}function $x(i,e,t){let n,{active:r}=e,s=vn([Ri,Tr],(o,a)=>{!o[1]||a(o[0].getNodeAttributes(o[1]))});return Fe(i,s,o=>t(1,n=o)),i.$$set=o=>{"active"in o&&t(0,r=o.active)},[r,n,s]}class eM extends We{constructor(e){super(),He(this,e,$x,Qx,Be,{active:0})}}var rh={exports:{}};(function(i,e){(function(){var t={};i.exports=t,t.simpleFilter=function(n,r){return r.filter(function(s){return t.test(n,s)})},t.test=function(n,r){return t.match(n,r)!==null},t.match=function(n,r,s){s=s||{};var o=0,a=[],l=r.length,c=0,u=0,f=s.pre||"",d=s.post||"",m=s.caseSensitive&&r||r.toLowerCase(),g;n=s.caseSensitive&&n||n.toLowerCase();for(var h=0;h<l;h++)g=r[h],m[h]===n[o]?(g=f+g+d,o+=1,u+=1+u):u=0,c+=u,a[a.length]=g;return o===n.length?(c=m===n?1/0:c,{rendered:a.join(""),score:c}):null},t.filter=function(n,r,s){return!r||r.length===0?[]:typeof n!="string"?r:(s=s||{},r.reduce(function(o,a,l,c){var u=a;s.extract&&(u=s.extract(a));var f=t.match(n,u,s);return f!=null&&(o[o.length]={string:f.rendered,score:f.score,index:l,original:a}),o},[]).sort(function(o,a){var l=a.score-o.score;return l||o.index-a.index}))}})()})(rh);const tM=rh.exports;const nM=i=>({}),ff=i=>({});function iM(i){let e;return{c(){e=wt(i[2])},m(t,n){ue(t,e,n)},p(t,n){n&4&&qt(e,t[2])},d(t){t&&le(e)}}}function rM(i){let e,t,n,r,s,o,a,l,c,u;const f=i[10].label,d=dt(f,i,i[9],ff),m=d||iM(i);let g=[{name:"search"},{type:"search"},{placeholder:"Search..."},{autocomplete:"off"},{spellcheck:"false"},i[6],{id:i[4]}],h={};for(let p=0;p<g.length;p+=1)h=Pt(h,g[p]);return{c(){e=he("form"),t=he("label"),m&&m.c(),r=Oe(),s=he("input"),W(t,"id",n=i[4]+"-label"),W(t,"for",i[4]),W(t,"class","svelte-5m0wg6"),Je(t,"hide-label",i[3]),Ci(s,h),Je(s,"svelte-5m0wg6",!0),W(e,"data-svelte-search",""),W(e,"role",o=i[5]?null:"search"),W(e,"aria-labelledby",a=i[5]?null:i[4])},m(p,_){ue(p,e,_),ne(e,t),m&&m.m(t,null),ne(e,r),ne(e,s),s.autofocus&&s.focus(),i[17](s),Lr(s,i[0]),l=!0,c||(u=[Ge(s,"input",i[18]),Ge(s,"input",i[12]),Ge(s,"change",i[13]),Ge(s,"focus",i[14]),Ge(s,"blur",i[15]),Ge(s,"keydown",i[16]),Ge(e,"submit",Ti(i[11]))],c=!0)},p(p,[_]){d?d.p&&(!l||_&512)&&pt(d,f,p,p[9],l?ht(f,p[9],_,nM):mt(p[9]),ff):m&&m.p&&(!l||_&4)&&m.p(p,l?_:-1),(!l||_&16&&n!==(n=p[4]+"-label"))&&W(t,"id",n),(!l||_&16)&&W(t,"for",p[4]),(!l||_&8)&&Je(t,"hide-label",p[3]),Ci(s,h=ui(g,[{name:"search"},{type:"search"},{placeholder:"Search..."},{autocomplete:"off"},{spellcheck:"false"},_&64&&p[6],(!l||_&16)&&{id:p[4]}])),_&1&&Lr(s,p[0]),Je(s,"svelte-5m0wg6",!0),(!l||_&32&&o!==(o=p[5]?null:"search"))&&W(e,"role",o),(!l||_&48&&a!==(a=p[5]?null:p[4]))&&W(e,"aria-labelledby",a)},i(p){l||(U(m,p),l=!0)},o(p){q(m,p),l=!1},d(p){p&&le(e),m&&m.d(p),i[17](null),c=!1,Nt(u)}}}function sM(i,e,t){const n=["value","autofocus","debounce","label","hideLabel","id","ref","removeFormAriaAttributes"];let r=to(e,n),{$$slots:s={},$$scope:o}=e,{value:a=""}=e,{autofocus:l=!1}=e,{debounce:c=0}=e,{label:u="Label"}=e,{hideLabel:f=!1}=e,{id:d="search"+Math.random().toString(36)}=e,{ref:m=null}=e,{removeFormAriaAttributes:g=!1}=e;const h=ci();let p=a,_,w=!1;function y(N){w||(w=!0,_=setTimeout(()=>{N(),w=!1},c))}Fr(()=>(l&&window.requestAnimationFrame(()=>m.focus()),()=>clearTimeout(_))),Rf(()=>{a.length>0&&a!==p&&(c>0?y(()=>h("type",a)):h("type",a)),a.length===0&&p.length>0&&h("clear"),p=a});function b(N){Ze.call(this,i,N)}function x(N){Ze.call(this,i,N)}function M(N){Ze.call(this,i,N)}function L(N){Ze.call(this,i,N)}function v(N){Ze.call(this,i,N)}function A(N){Ze.call(this,i,N)}function S(N){bt[N?"unshift":"push"](()=>{m=N,t(1,m)})}function I(){a=this.value,t(0,a)}return i.$$set=N=>{e=Pt(Pt({},e),Vn(N)),t(6,r=to(e,n)),"value"in N&&t(0,a=N.value),"autofocus"in N&&t(7,l=N.autofocus),"debounce"in N&&t(8,c=N.debounce),"label"in N&&t(2,u=N.label),"hideLabel"in N&&t(3,f=N.hideLabel),"id"in N&&t(4,d=N.id),"ref"in N&&t(1,m=N.ref),"removeFormAriaAttributes"in N&&t(5,g=N.removeFormAriaAttributes),"$$scope"in N&&t(9,o=N.$$scope)},[a,m,u,f,d,g,r,l,c,o,s,b,x,M,L,v,A,S,I]}class oM extends We{constructor(e){super(),He(this,e,sM,rM,Be,{value:0,autofocus:7,debounce:8,label:2,hideLabel:3,id:4,ref:1,removeFormAriaAttributes:5})}}const aM=i=>({value:i[0]&1,result:i[0]&2}),df=i=>({value:i[0],result:i[46],index:i[48]});function hf(i,e,t){const n=i.slice();return n[46]=e[t],n[48]=t,n}const lM=i=>({result:i[0]&2,value:i[0]&1}),pf=i=>({result:i[46],index:i[48],value:i[0]});function mf(i){let e,t,n=i[1],r=[];for(let o=0;o<n.length;o+=1)r[o]=gf(hf(i,n,o));const s=o=>q(r[o],1,1,()=>{r[o]=null});return{c(){for(let o=0;o<r.length;o+=1)r[o].c();e=zt()},m(o,a){for(let l=0;l<r.length;l+=1)r[l].m(o,a);ue(o,e,a),t=!0},p(o,a){if(a[0]&33555975){n=o[1];let l;for(l=0;l<n.length;l+=1){const c=hf(o,n,l);r[l]?(r[l].p(c,a),U(r[l],1)):(r[l]=gf(c),r[l].c(),U(r[l],1),r[l].m(e.parentNode,e))}for(ut(),l=n.length;l<r.length;l+=1)s(l);ft()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)U(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)q(r[a]);t=!1},d(o){Nr(r,o),o&&le(e)}}}function cM(i){let e,t=i[46].string+"",n;return{c(){e=new hh(!1),n=zt(),e.a=n},m(r,s){e.m(t,r,s),ue(r,n,s)},p(r,s){s[0]&2&&t!==(t=r[46].string+"")&&e.p(t)},d(r){r&&le(n),r&&e.d()}}}function gf(i){let e,t,n,r,s,o,a;const l=i[26].default,c=dt(l,i,i[25],pf),u=c||cM(i);function f(){return i[39](i[46],i[48])}function d(){return i[40](i[46],i[48])}return{c(){e=he("li"),u&&u.c(),t=Oe(),W(e,"role","option"),W(e,"id",n=i[2]+"-result-"+i[48]),W(e,"aria-selected",r=i[9]===i[48]),W(e,"class","svelte-9wywte"),Je(e,"selected",i[9]===i[48]),Je(e,"disabled",i[46].disabled)},m(m,g){ue(m,e,g),u&&u.m(e,null),ne(e,t),s=!0,o||(a=[Ge(e,"click",f),Ge(e,"mouseenter",d)],o=!0)},p(m,g){i=m,c?c.p&&(!s||g[0]&33554435)&&pt(c,l,i,i[25],s?ht(l,i[25],g,lM):mt(i[25]),pf):u&&u.p&&(!s||g[0]&2)&&u.p(i,s?g:[-1,-1]),(!s||g[0]&4&&n!==(n=i[2]+"-result-"+i[48]))&&W(e,"id",n),(!s||g[0]&512&&r!==(r=i[9]===i[48]))&&W(e,"aria-selected",r),(!s||g[0]&512)&&Je(e,"selected",i[9]===i[48]),(!s||g[0]&2)&&Je(e,"disabled",i[46].disabled)},i(m){s||(U(u,m),s=!0)},o(m){q(u,m),s=!1},d(m){m&&le(e),u&&u.d(m),o=!1,Nt(a)}}}function _f(i){let e,t;const n=i[26]["no-results"],r=dt(n,i,i[25],df);return{c(){e=he("div"),r&&r.c(),W(e,"class","svelte-9wywte"),Je(e,"no-results",!0)},m(s,o){ue(s,e,o),r&&r.m(e,null),t=!0},p(s,o){r&&r.p&&(!t||o[0]&33554435)&&pt(r,n,s,s[25],t?ht(n,s[25],o,aM):mt(s[25]),df)},i(s){t||(U(r,s),t=!0)},o(s){q(r,s),t=!1},d(s){s&&le(e),r&&r.d(s)}}}function uM(i){let e,t,n,r,s,o,a,l,c,u,f,d,m,g;const h=[{id:i[2]},{removeFormAriaAttributes:!0},i[15],{"aria-autocomplete":"list"},{"aria-controls":i[2]+"-listbox"},{"aria-labelledby":i[2]+"-label"},{"aria-activedescendant":i[9]>=0&&!i[4]&&i[1].length>0?`${i[2]}-result-${i[9]}`:null}];function p(x){i[28](x)}function _(x){i[29](x)}let w={};for(let x=0;x<h.length;x+=1)w=Pt(w,h[x]);i[8]!==void 0&&(w.ref=i[8]),i[0]!==void 0&&(w.value=i[0]),t=new oM({props:w}),bt.push(()=>jt(t,"ref",p)),bt.push(()=>jt(t,"value",_)),t.$on("type",i[30]),t.$on("input",i[31]),t.$on("change",i[32]),t.$on("focus",i[33]),t.$on("focus",i[34]),t.$on("clear",i[35]),t.$on("clear",i[12]),t.$on("blur",i[36]),t.$on("keydown",i[37]),t.$on("keydown",i[38]);let y=i[6]&&mf(i),b=i[14]["no-results"]&&!i[4]&&i[0].length>0&&i[1].length===0&&_f(i);return{c(){e=he("div"),De(t.$$.fragment),s=Oe(),o=he("ul"),y&&y.c(),a=Oe(),b&&b.c(),W(o,"role","listbox"),W(o,"aria-labelledby",l=i[2]+"-label"),W(o,"id",c=i[2]+"-listbox"),W(o,"class","svelte-9wywte"),Je(o,"svelte-typeahead-list",!0),W(e,"data-svelte-typeahead",""),W(e,"role","combobox"),W(e,"aria-haspopup","listbox"),W(e,"aria-owns",u=i[2]+"-listbox"),W(e,"aria-expanded",i[6]),W(e,"id",f=i[2]+"-typeahead"),W(e,"class","svelte-9wywte"),Je(e,"dropdown",i[1].length>0)},m(x,M){ue(x,e,M),Te(t,e,null),ne(e,s),ne(e,o),y&&y.m(o,null),ne(o,a),b&&b.m(o,null),i[41](e),d=!0,m||(g=Ge(window,"click",i[27]),m=!0)},p(x,M){const L=M[0]&33302?ui(h,[M[0]&4&&{id:x[2]},h[1],M[0]&32768&&us(x[15]),h[3],M[0]&4&&{"aria-controls":x[2]+"-listbox"},M[0]&4&&{"aria-labelledby":x[2]+"-label"},M[0]&534&&{"aria-activedescendant":x[9]>=0&&!x[4]&&x[1].length>0?`${x[2]}-result-${x[9]}`:null}]):{};!n&&M[0]&256&&(n=!0,L.ref=x[8],Wt(()=>n=!1)),!r&&M[0]&1&&(r=!0,L.value=x[0],Wt(()=>r=!1)),t.$set(L),x[6]?y?(y.p(x,M),M[0]&64&&U(y,1)):(y=mf(x),y.c(),U(y,1),y.m(o,a)):y&&(ut(),q(y,1,1,()=>{y=null}),ft()),x[14]["no-results"]&&!x[4]&&x[0].length>0&&x[1].length===0?b?(b.p(x,M),M[0]&16403&&U(b,1)):(b=_f(x),b.c(),U(b,1),b.m(o,null)):b&&(ut(),q(b,1,1,()=>{b=null}),ft()),(!d||M[0]&4&&l!==(l=x[2]+"-label"))&&W(o,"aria-labelledby",l),(!d||M[0]&4&&c!==(c=x[2]+"-listbox"))&&W(o,"id",c),(!d||M[0]&4&&u!==(u=x[2]+"-listbox"))&&W(e,"aria-owns",u),(!d||M[0]&64)&&W(e,"aria-expanded",x[6]),(!d||M[0]&4&&f!==(f=x[2]+"-typeahead"))&&W(e,"id",f),(!d||M[0]&2)&&Je(e,"dropdown",x[1].length>0)},i(x){d||(U(t.$$.fragment,x),U(y),U(b),d=!0)},o(x){q(t.$$.fragment,x),q(y),q(b),d=!1},d(x){x&&le(e),Ce(t),y&&y.d(),b&&b.d(),i[41](null),m=!1,g()}}}function fM(i,e,t){let n,r,s;const o=["id","value","data","extract","disable","filter","autoselect","inputAfterSelect","results","focusAfterSelect","showDropdownOnFocus","limit"];let a=to(e,o),{$$slots:l={},$$scope:c}=e;const u=Tf(l);let{id:f="typeahead-"+Math.random().toString(36)}=e,{value:d=""}=e,{data:m=[]}=e,{extract:g=$=>$}=e,{disable:h=$=>!1}=e,{filter:p=$=>!1}=e,{autoselect:_=!0}=e,{inputAfterSelect:w="update"}=e,{results:y=[]}=e,{focusAfterSelect:b=!1}=e,{showDropdownOnFocus:x=!1}=e,{limit:M=1/0}=e;const L=ci();let v=null,A=null,S=!1,I=-1,N="",D=!1;Rf(()=>{N!==r&&_&&t(9,I=k()),N!==r&&!u["no-results"]&&t(4,S=y.length===0),N=r});async function O(){const $=y[I];if($.disabled)return;const Ie=g($.original),tt=d;w=="clear"&&t(0,d=""),w=="update"&&t(0,d=Ie),L("select",{selectedIndex:I,searched:tt,selected:Ie,original:$.original,originalIndex:$.index}),await Dr(),b&&A.focus(),Z()}function k(){var tt,yt,gt,de;let $=0,Ie=(yt=(tt=y[$])==null?void 0:tt.disabled)!=null?yt:!1;for(;Ie;)$===y.length?$=0:$+=1,Ie=(de=(gt=y[$])==null?void 0:gt.disabled)!=null?de:!1;return $}function P($){let Ie=$===1&&I===y.length-1?0:I+$;Ie<0&&(Ie=y.length-1);let tt=y[Ie].disabled;for(;tt;)Ie===y.length?Ie=0:Ie+=$,tt=y[Ie].disabled;t(9,I=Ie)}const K=()=>t(4,S=!1),Z=()=>t(4,S=!0),j=({target:$})=>{!S&&!(v!=null&&v.contains($))&&Z()};function V($){A=$,t(8,A)}function X($){d=$,t(0,d)}function re($){Ze.call(this,i,$)}function ae($){Ze.call(this,i,$)}function be($){Ze.call(this,i,$)}function Ae($){Ze.call(this,i,$)}const H=()=>{K(),x&&(t(6,s=!0),t(5,D=!0))};function me($){Ze.call(this,i,$)}function Le($){Ze.call(this,i,$)}function pe($){Ze.call(this,i,$)}const ye=$=>{if(y.length!==0)switch($.key){case"Enter":O();break;case"ArrowDown":$.preventDefault(),P(1);break;case"ArrowUp":$.preventDefault(),P(-1);break;case"Escape":$.preventDefault(),t(0,d=""),A==null||A.focus(),Z();break}},Xe=($,Ie)=>{$.disabled||(t(9,I=Ie),O())},Q=($,Ie)=>{$.disabled||t(9,I=Ie)};function fe($){bt[$?"unshift":"push"](()=>{v=$,t(7,v)})}return i.$$set=$=>{e=Pt(Pt({},e),Vn($)),t(15,a=to(e,o)),"id"in $&&t(2,f=$.id),"value"in $&&t(0,d=$.value),"data"in $&&t(16,m=$.data),"extract"in $&&t(17,g=$.extract),"disable"in $&&t(18,h=$.disable),"filter"in $&&t(19,p=$.filter),"autoselect"in $&&t(20,_=$.autoselect),"inputAfterSelect"in $&&t(21,w=$.inputAfterSelect),"results"in $&&t(1,y=$.results),"focusAfterSelect"in $&&t(22,b=$.focusAfterSelect),"showDropdownOnFocus"in $&&t(3,x=$.showDropdownOnFocus),"limit"in $&&t(23,M=$.limit),"$$scope"in $&&t(25,c=$.$$scope)},i.$$.update=()=>{i.$$.dirty[0]&131072&&t(24,n={pre:"<mark>",post:"</mark>",extract:g}),i.$$.dirty[0]&26017793&&t(1,y=tM.filter(d,m,n).filter(({score:$})=>$>0).slice(0,M).filter($=>!p($.original)).map($=>({...$,disabled:h($.original)}))),i.$$.dirty[0]&131074&&(r=y.map($=>g($.original)).join("")),i.$$.dirty[0]&18&&t(6,s=!S&&y.length>0),i.$$.dirty[0]&104&&x&&t(6,s=s&&D)},[d,y,f,x,S,D,s,v,A,I,O,P,K,Z,u,a,m,g,h,p,_,w,b,M,n,c,l,j,V,X,re,ae,be,Ae,H,me,Le,pe,ye,Xe,Q,fe]}class dM extends We{constructor(e){super(),He(this,e,fM,uM,Be,{id:2,value:0,data:16,extract:17,disable:18,filter:19,autoselect:20,inputAfterSelect:21,results:1,focusAfterSelect:22,showDropdownOnFocus:3,limit:23},null,[-1,-1])}}function hM(i){let e;return{c(){e=Ht("path"),W(e,"d","M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z")},m(t,n){ue(t,e,n)},p:et,d(t){t&&le(e)}}}function pM(i){let e,t;const n=[{viewBox:"0 0 12 16"},i[0]];let r={$$slots:{default:[hM]},$$scope:{ctx:i}};for(let s=0;s<n.length;s+=1)r=Pt(r,n[s]);return e=new Po({props:r}),{c(){De(e.$$.fragment)},m(s,o){Te(e,s,o),t=!0},p(s,[o]){const a=o&1?ui(n,[n[0],us(s[0])]):{};o&2&&(a.$$scope={dirty:o,ctx:s}),e.$set(a)},i(s){t||(U(e.$$.fragment,s),t=!0)},o(s){q(e.$$.fragment,s),t=!1},d(s){Ce(e,s)}}}function mM(i,e,t){return i.$$set=n=>{t(0,e=Pt(Pt({},e),Vn(n)))},e=Vn(e),[e]}class gM extends We{constructor(e){super(),He(this,e,mM,pM,Be,{})}}function _M(i){let e,t,n=i[1].getNodeAttributes(i[0]).name+"",r,s,o,a,l,c,u;return a=new gM({}),{c(){e=he("li"),t=he("div"),r=wt(n),s=Oe(),o=he("button"),De(a.$$.fragment),W(t,"class","svelte-1dvlkel"),W(o,"class","svelte-1dvlkel"),W(e,"class","svelte-1dvlkel")},m(f,d){ue(f,e,d),ne(e,t),ne(t,r),ne(e,s),ne(e,o),Te(a,o,null),l=!0,c||(u=Ge(o,"click",i[3]),c=!0)},p(f,[d]){(!l||d&3)&&n!==(n=f[1].getNodeAttributes(f[0]).name+"")&&qt(r,n)},i(f){l||(U(a.$$.fragment,f),l=!0)},o(f){q(a.$$.fragment,f),l=!1},d(f){f&&le(e),Ce(a),c=!1,u()}}}function vM(i,e,t){let n,r;Fe(i,Ri,a=>t(1,n=a)),Fe(i,co,a=>t(2,r=a));let{nodeID:s}=e;const o=()=>{r.delete(s),co.set(r)};return i.$$set=a=>{"nodeID"in a&&t(0,s=a.nodeID)},[s,n,r,o]}class bM extends We{constructor(e){super(),He(this,e,vM,_M,Be,{nodeID:0})}}function vf(i,e,t){const n=i.slice();return n[7]=e[t],n}function bf(i){let e,t,n,r;e=new dM({props:{hideLabel:!0,placeholder:"Search Nodes",extract:yM,inputAfterSelect:"clear",data:i[2]}}),e.$on("select",i[5]),e.$on("clear",i[6]);let s=i[3].size&&wf(i);return{c(){De(e.$$.fragment),t=Oe(),s&&s.c(),n=zt()},m(o,a){Te(e,o,a),ue(o,t,a),s&&s.m(o,a),ue(o,n,a),r=!0},p(o,a){const l={};a&4&&(l.data=o[2]),e.$set(l),o[3].size?s?(s.p(o,a),a&8&&U(s,1)):(s=wf(o),s.c(),U(s,1),s.m(n.parentNode,n)):s&&(ut(),q(s,1,1,()=>{s=null}),ft())},i(o){r||(U(e.$$.fragment,o),U(s),r=!0)},o(o){q(e.$$.fragment,o),q(s),r=!1},d(o){Ce(e,o),o&&le(t),s&&s.d(o),o&&le(n)}}}function wf(i){let e,t,n=[...i[3]],r=[];for(let o=0;o<n.length;o+=1)r[o]=yf(vf(i,n,o));const s=o=>q(r[o],1,1,()=>{r[o]=null});return{c(){e=he("ul");for(let o=0;o<r.length;o+=1)r[o].c();W(e,"class","svelte-sbbt1")},m(o,a){ue(o,e,a);for(let l=0;l<r.length;l+=1)r[l].m(e,null);t=!0},p(o,a){if(a&8){n=[...o[3]];let l;for(l=0;l<n.length;l+=1){const c=vf(o,n,l);r[l]?(r[l].p(c,a),U(r[l],1)):(r[l]=yf(c),r[l].c(),U(r[l],1),r[l].m(e,null))}for(ut(),l=n.length;l<r.length;l+=1)s(l);ft()}},i(o){if(!t){for(let a=0;a<n.length;a+=1)U(r[a]);t=!0}},o(o){r=r.filter(Boolean);for(let a=0;a<r.length;a+=1)q(r[a]);t=!1},d(o){o&&le(e),Nr(r,o)}}}function yf(i){let e,t;return e=new bM({props:{nodeID:i[7]}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r&8&&(s.nodeID=n[7]),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function wM(i){let e,t,n,r=i[1]&&bf(i);return{c(){e=he("div"),r&&r.c(),W(e,"class",t=Tt("search"+(i[0]?"":" inactive"))+" svelte-sbbt1")},m(s,o){ue(s,e,o),r&&r.m(e,null),n=!0},p(s,[o]){s[1]?r?(r.p(s,o),o&2&&U(r,1)):(r=bf(s),r.c(),U(r,1),r.m(e,null)):r&&(ut(),q(r,1,1,()=>{r=null}),ft()),(!n||o&1&&t!==(t=Tt("search"+(s[0]?"":" inactive"))+" svelte-sbbt1"))&&W(e,"class",t)},i(s){n||(U(r),n=!0)},o(s){q(r),n=!1},d(s){s&&le(e),r&&r.d()}}}const yM=i=>i.selector;function xM(i,e,t){let n,r;Fe(i,co,u=>t(3,n=u)),Fe(i,Ri,u=>t(1,r=u));let{active:s}=e,o;function a(u){u!=="clear"&&(n.add(u.original.key),co.set(n),console.log(n))}const l=({detail:u})=>a(u),c=()=>a("clear");return i.$$set=u=>{"active"in u&&t(0,s=u.active)},i.$$.update=()=>{if(i.$$.dirty&2&&r){let u=r.export();t(2,o=u.nodes.map(f=>({key:f.key,selector:f.key})).concat(u.nodes.map(f=>({key:f.key,selector:f.attributes.name}))))}},[s,r,o,n,a,l,c]}class MM extends We{constructor(e){super(),He(this,e,xM,wM,Be,{active:0})}}function SM(i){let e,t,n,r,s,o,a;const l=i[5].default,c=dt(l,i,i[4],null);return{c(){e=he("div"),t=he("div"),c&&c.c(),W(t,"class",n=Tt("icon"+(i[2]?" hovered":""))+" svelte-n4zm1n"),W(e,"class",r=Tt("tab"+(i[0]===i[3]?" selected":"")+(i[2]?" hovered":""))+" svelte-n4zm1n")},m(u,f){ue(u,e,f),ne(e,t),c&&c.m(t,null),s=!0,o||(a=[Ge(e,"click",i[6]),Ge(e,"mouseenter",i[7]),Ge(e,"mouseleave",i[8])],o=!0)},p(u,[f]){c&&c.p&&(!s||f&16)&&pt(c,l,u,u[4],s?ht(l,u[4],f,null):mt(u[4]),null),(!s||f&4&&n!==(n=Tt("icon"+(u[2]?" hovered":""))+" svelte-n4zm1n"))&&W(t,"class",n),(!s||f&13&&r!==(r=Tt("tab"+(u[0]===u[3]?" selected":"")+(u[2]?" hovered":""))+" svelte-n4zm1n"))&&W(e,"class",r)},i(u){s||(U(c,u),s=!0)},o(u){q(c,u),s=!1},d(u){u&&le(e),c&&c.d(u),o=!1,Nt(a)}}}function AM(i,e,t){let n;Fe(i,Ua,d=>t(3,n=d));let{$$slots:r={},$$scope:s}=e,{id:o}=e,{selectable:a=!0}=e,l=!1;const c=()=>{a&&en(Ua,n=o,n)},u=()=>t(2,l=!0),f=()=>t(2,l=!1);return i.$$set=d=>{"id"in d&&t(0,o=d.id),"selectable"in d&&t(1,a=d.selectable),"$$scope"in d&&t(4,s=d.$$scope)},[o,a,l,n,s,r,c,u,f]}class EM extends We{constructor(e){super(),He(this,e,AM,SM,Be,{id:0,selectable:1})}}function xf(i,e,t){const n=i.slice();return n[3]=e[t],n}function TM(i){let e,t,n;var r=i[3].icon;function s(o){return{}}return r&&(e=new r(s())),{c(){e&&De(e.$$.fragment),t=zt()},m(o,a){e&&Te(e,o,a),ue(o,t,a),n=!0},p(o,a){if(r!==(r=o[3].icon)){if(e){ut();const l=e;q(l.$$.fragment,1,0,()=>{Ce(l,1)}),ft()}r?(e=new r(s()),De(e.$$.fragment),U(e.$$.fragment,1),Te(e,t.parentNode,t)):e=null}},i(o){n||(e&&U(e.$$.fragment,o),n=!0)},o(o){e&&q(e.$$.fragment,o),n=!1},d(o){o&&le(t),e&&Ce(e,o)}}}function CM(i){let e,t,n=i[3].icon&&TM(i);return{c(){n&&n.c(),e=Oe()},m(r,s){n&&n.m(r,s),ue(r,e,s),t=!0},p(r,s){r[3].icon&&n.p(r,s)},i(r){t||(U(n),t=!0)},o(r){q(n),t=!1},d(r){n&&n.d(r),r&&le(e)}}}function Mf(i){let e,t;return e=new EM({props:{id:i[3].id,selectable:i[3].selectable,$$slots:{default:[CM]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},p(n,r){const s={};r&64&&(s.$$scope={dirty:r,ctx:n}),e.$set(s)},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function LM(i){let e,t,n,r,s,o,a=i[1].find(i[2]).title+"",l,c,u,f,d,m,g,h,p=i[1],_=[];for(let y=0;y<p.length;y+=1)_[y]=Mf(xf(i,p,y));const w=y=>q(_[y],1,1,()=>{_[y]=null});return u=new Zx({props:{active:i[0]==="settings"}}),d=new eM({props:{active:i[0]==="info"}}),g=new MM({props:{active:i[0]==="search"}}),{c(){e=he("div"),t=he("nav");for(let y=0;y<_.length;y+=1)_[y].c();n=Oe(),r=he("div"),s=he("div"),o=he("div"),l=wt(a),c=Oe(),De(u.$$.fragment),f=Oe(),De(d.$$.fragment),m=Oe(),De(g.$$.fragment),W(t,"class","svelte-8jei4l"),W(o,"class","title svelte-8jei4l"),W(s,"class","header svelte-8jei4l"),W(r,"class","drawerBody svelte-8jei4l"),W(e,"class","drawer svelte-8jei4l")},m(y,b){ue(y,e,b),ne(e,t);for(let x=0;x<_.length;x+=1)_[x].m(t,null);ne(e,n),ne(e,r),ne(r,s),ne(s,o),ne(o,l),ne(r,c),Te(u,r,null),ne(r,f),Te(d,r,null),ne(r,m),Te(g,r,null),h=!0},p(y,[b]){if(b&2){p=y[1];let v;for(v=0;v<p.length;v+=1){const A=xf(y,p,v);_[v]?(_[v].p(A,b),U(_[v],1)):(_[v]=Mf(A),_[v].c(),U(_[v],1),_[v].m(t,null))}for(ut(),v=p.length;v<_.length;v+=1)w(v);ft()}(!h||b&1)&&a!==(a=y[1].find(y[2]).title+"")&&qt(l,a);const x={};b&1&&(x.active=y[0]==="settings"),u.$set(x);const M={};b&1&&(M.active=y[0]==="info"),d.$set(M);const L={};b&1&&(L.active=y[0]==="search"),g.$set(L)},i(y){if(!h){for(let b=0;b<p.length;b+=1)U(_[b]);U(u.$$.fragment,y),U(d.$$.fragment,y),U(g.$$.fragment,y),h=!0}},o(y){_=_.filter(Boolean);for(let b=0;b<_.length;b+=1)q(_[b]);q(u.$$.fragment,y),q(d.$$.fragment,y),q(g.$$.fragment,y),h=!1},d(y){y&&le(e),Nr(_,y),Ce(u),Ce(d),Ce(g)}}}function DM(i,e,t){let n;return Fe(i,Ua,o=>t(0,n=o)),[n,[{id:"fakeButton",title:"",icon:void 0,selectable:!1},{id:"settings",title:"Network Options",icon:my,selectable:!0},{id:"info",title:"Node Information",icon:by,selectable:!0},{id:"search",title:"Search",icon:fy,selectable:!0}],o=>n===o.id]}class PM extends We{constructor(e){super(),He(this,e,DM,LM,Be,{})}}function RM(i){let e,t,n,r,s,o,a,l,c,u,f,d;return{c(){e=he("div"),t=he("span"),r=Oe(),s=he("span"),a=Oe(),l=he("span"),W(t,"class",n=Tt(i[0]?"active line line-1":"line line-1")+" svelte-vz2dqj"),W(s,"class",o=Tt(i[0]?"active line line-2":"line line-2")+" svelte-vz2dqj"),W(l,"class",c=Tt(i[0]?"active line line-3":"line line-3")+" svelte-vz2dqj"),W(e,"id","menu-icon"),W(e,"class",u=Tt(i[0]?"active":"")+" svelte-vz2dqj"),W(e,"style","--transition-time: 0.2s;")},m(m,g){ue(m,e,g),ne(e,t),ne(e,r),ne(e,s),ne(e,a),ne(e,l),f||(d=Ge(e,"click",i[1]),f=!0)},p(m,[g]){g&1&&n!==(n=Tt(m[0]?"active line line-1":"line line-1")+" svelte-vz2dqj")&&W(t,"class",n),g&1&&o!==(o=Tt(m[0]?"active line line-2":"line line-2")+" svelte-vz2dqj")&&W(s,"class",o),g&1&&c!==(c=Tt(m[0]?"active line line-3":"line line-3")+" svelte-vz2dqj")&&W(l,"class",c),g&1&&u!==(u=Tt(m[0]?"active":"")+" svelte-vz2dqj")&&W(e,"class",u)},i:et,o:et,d(m){m&&le(e),f=!1,d()}}}function IM(i,e,t){let n;return Fe(i,za,s=>t(0,n=s)),[n,()=>en(za,n=!n,n)]}class kM extends We{constructor(e){super(),He(this,e,IM,RM,Be,{})}}function Sf(i){let e,t,n,r=i[0].name+"",s,o,a,l,c=i[0].type+"",u,f,d,m,g=i[0].id+"",h,p,_,w=i[0].desc+"",y,b,x,M,L,v;return{c(){e=he("div"),t=he("div"),n=he("h1"),s=wt(r),o=Oe(),a=he("div"),l=he("p"),u=wt(c),f=Oe(),d=he("p"),m=wt("UniprotID: "),h=wt(g),p=Oe(),_=he("p"),y=wt(w),W(t,"class","title"),W(a,"class","content"),W(e,"class","infobox svelte-1ss1efe")},m(A,S){ue(A,e,S),ne(e,t),ne(t,n),ne(n,s),ne(e,o),ne(e,a),ne(a,l),ne(l,u),ne(a,f),ne(a,d),ne(d,m),ne(d,h),ne(a,p),ne(a,_),ne(_,y),M=!0,L||(v=[Ge(e,"mouseenter",i[4]),Ge(e,"mouseleave",i[5]),Ge(e,"transitionend",function(){ri(i[0]=void 0)&&(i[0]=void 0).apply(this,arguments)})],L=!0)},p(A,S){i=A,(!M||S&1)&&r!==(r=i[0].name+"")&&qt(s,r),(!M||S&1)&&c!==(c=i[0].type+"")&&qt(u,c),(!M||S&1)&&g!==(g=i[0].id+"")&&qt(h,g),(!M||S&1)&&w!==(w=i[0].desc+"")&&qt(y,w)},i(A){M||(si(()=>{x&&x.end(1),b=bh(e,au,{y:200,duration:1e3}),b.start()}),M=!0)},o(A){b&&b.invalidate(),x=wh(e,au,{y:200,duration:1e3,delay:1e3}),M=!1},d(A){A&&le(e),A&&x&&x.end(),L=!1,Nt(v)}}}function OM(i){let e,t,n=i[1]&&Sf(i);return{c(){n&&n.c(),e=zt()},m(r,s){n&&n.m(r,s),ue(r,e,s),t=!0},p(r,[s]){r[1]?n?(n.p(r,s),s&2&&U(n,1)):(n=Sf(r),n.c(),U(n,1),n.m(e.parentNode,e)):n&&(ut(),q(n,1,1,()=>{n=null}),ft())},i(r){t||(U(n),t=!0)},o(r){q(n),t=!1},d(r){n&&n.d(r),r&&le(e)}}}function NM(i,e,t){let n,r;Fe(i,Tr,c=>t(2,n=c)),Fe(i,Ri,c=>t(3,r=c));let s,o=!1;const a=()=>{t(1,o=!0)},l=()=>{t(1,o=!1)};return i.$$.update=()=>{i.$$.dirty&12&&(n?(t(1,o=!0),t(0,s=r.getNodeAttributes(n))):(t(1,o=!1),console.log("unselected")))},[s,o,n,r,a,l]}class FM extends We{constructor(e){super(),He(this,e,NM,OM,Be,{})}}function zM(i){let e,t;return e=new sy({}),{c(){De(e.$$.fragment)},m(n,r){Te(e,n,r),t=!0},i(n){t||(U(e.$$.fragment,n),t=!0)},o(n){q(e.$$.fragment,n),t=!1},d(n){Ce(e,n)}}}function UM(i){let e,t,n,r,s,o,a,l,c,u,f,d,m;return e=new kM({}),s=new PM({}),l=new FM({}),f=new Q1({props:{size:{width:i[0],height:i[1]},$$slots:{default:[zM]},$$scope:{ctx:i}}}),{c(){De(e.$$.fragment),t=Oe(),n=he("div"),r=he("div"),De(s.$$.fragment),a=Oe(),De(l.$$.fragment),c=Oe(),u=he("div"),De(f.$$.fragment),W(r,"class",o="drawerWrapper "+(i[2]?"active":"")+" svelte-a32r8z"),W(u,"class","canvas svelte-a32r8z"),si(()=>i[5].call(u)),W(n,"id","main"),W(n,"class","svelte-a32r8z")},m(g,h){Te(e,g,h),ue(g,t,h),ue(g,n,h),ne(n,r),Te(s,r,null),ne(n,a),Te(l,n,null),ne(n,c),ne(n,u),Te(f,u,null),d=dh(u,i[5].bind(u)),m=!0},p(g,[h]){(!m||h&4&&o!==(o="drawerWrapper "+(g[2]?"active":"")+" svelte-a32r8z"))&&W(r,"class",o);const p={};h&3&&(p.size={width:g[0],height:g[1]}),h&2048&&(p.$$scope={dirty:h,ctx:g}),f.$set(p)},i(g){m||(U(e.$$.fragment,g),U(s.$$.fragment,g),U(l.$$.fragment,g),U(f.$$.fragment,g),m=!0)},o(g){q(e.$$.fragment,g),q(s.$$.fragment,g),q(l.$$.fragment,g),q(f.$$.fragment,g),m=!1},d(g){Ce(e,g),g&&le(t),g&&le(n),Ce(s),Ce(l),Ce(f),d()}}}function GM(i,e,t){let n;Fe(i,za,g=>t(2,n=g));let r,s,o,a,l=!1,c,u,f;function d(){u=document.getElementsByClassName("drawerWrapper")[0],c=document.getElementsByClassName("canvas")[0];let g=c.getBoundingClientRect();o=g.width,a=g.height,c.setAttribute("style","width:100px"),t(4,f=requestAnimationFrame(d))}Fr(async()=>{u=document.getElementsByClassName("drawerWrapper")[0],c=document.getElementsByClassName("canvas")[0],u.addEventListener("transitionstart",g=>t(3,l=!0)),u.addEventListener("transitionend",g=>t(3,l=!1)),t(0,r=o),t(1,s=a)});function m(){r=this.clientWidth,s=this.clientHeight,t(0,r),t(1,s)}return i.$$.update=()=>{i.$$.dirty&24&&(l?d():f&&cancelAnimationFrame(f))},[r,s,n,l,f,m]}class BM extends We{constructor(e){super(),He(this,e,GM,UM,Be,{})}}new BM({target:document.getElementById("app")});
